package com.b2international.snomed.etl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.etl.services.EtlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEtlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOUBLE_SQUARE_OPEN", "RULE_DOUBLE_SQUARE_CLOSE", "RULE_TILDE", "RULE_AT", "RULE_ID", "RULE_SCG", "RULE_TOK", "RULE_STR", "RULE_INT", "RULE_DEC", "RULE_EQUIVALENT_TO", "RULE_SUBTYPE_OF", "RULE_STRING", "RULE_WS", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_SLOTNAME_STRING", "RULE_HISTORY_KEYWORD", "RULE_CASE_SIGNIFICANCE_ID_KEYWORD", "RULE_DEFINITION_STATUS_ID_KEYWORD", "RULE_DEFINITION_STATUS_TOKEN_KEYWORD", "RULE_LANGUAGE_REFSET_ID_KEYWORD", "RULE_EFFECTIVE_TIME_KEYWORD", "RULE_ACCEPTABLE_IN_KEYWORD", "RULE_PREFERRED_IN_KEYWORD", "RULE_SEMANTIC_TAG_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_MODULEID_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ACTIVE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_EXCLUSION_KEYWORD", "RULE_EXACT_KEYWORD", "RULE_FALSE_KEYWORD", "RULE_MATCH_KEYWORD", "RULE_REGEX_KEYWORD", "RULE_TERM_KEYWORD", "RULE_TRUE_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_WILD_KEYWORD", "RULE_MIN_KEYWORD", "RULE_MOD_KEYWORD", "RULE_MAX_KEYWORD", "RULE_CONJUNCTION_KEYWORD", "RULE_DISJUNCTION_KEYWORD", "RULE_ID_KEYWORD", "RULE_REVERSED", "RULE_MEMBER_SHORT_KEYWORD", "RULE_DESCRIPTION_SHORT_KEYWORD", "RULE_CONCEPT_SHORT_KEYWORD", "RULE_ALPHA", "RULE_KEYWORD", "RULE_DBL_LT_EM", "RULE_DBL_GT_EM", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_PIPE_DELIMITED_STRING", "RULE_TO", "RULE_COMMA", "RULE_DIGIT", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_UNDERSCORE", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_HASH", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIALECT_KEYWORD=33;
    public static final int RULE_LANGUAGE_KEYWORD=31;
    public static final int RULE_CURLY_OPEN=72;
    public static final int RULE_DBL_GT=60;
    public static final int RULE_TO=68;
    public static final int RULE_ROUND_CLOSE=75;
    public static final int RULE_GT=85;
    public static final int RULE_ACTIVE_KEYWORD=34;
    public static final int RULE_CONCEPT_SHORT_KEYWORD=54;
    public static final int RULE_SLOTNAME_STRING=20;
    public static final int RULE_SCG=9;
    public static final int RULE_MODULEID_KEYWORD=32;
    public static final int RULE_GTE=63;
    public static final int RULE_DOUBLE_SQUARE_OPEN=4;
    public static final int RULE_DISJUNCTION_KEYWORD=49;
    public static final int RULE_EQUIVALENT_TO=14;
    public static final int RULE_ROUND_OPEN=74;
    public static final int RULE_UNDERSCORE=78;
    public static final int RULE_DBL_LT=59;
    public static final int RULE_TYPEID_KEYWORD=35;
    public static final int RULE_MATCH_KEYWORD=39;
    public static final int RULE_NOT_EQUAL=83;
    public static final int RULE_SQUARE_CLOSE=19;
    public static final int RULE_SEMANTIC_TAG_KEYWORD=29;
    public static final int RULE_ID=8;
    public static final int RULE_SQUARE_OPEN=18;
    public static final int RULE_EQUAL=82;
    public static final int RULE_DEC=13;
    public static final int RULE_CASE_SIGNIFICANCE_ID_KEYWORD=22;
    public static final int RULE_EXCLUSION_KEYWORD=36;
    public static final int RULE_DESCRIPTION_SHORT_KEYWORD=53;
    public static final int RULE_LT_EM=61;
    public static final int RULE_COMMA=69;
    public static final int RULE_CURLY_CLOSE=73;
    public static final int RULE_DBL_GT_EM=58;
    public static final int RULE_DIGIT=70;
    public static final int RULE_HISTORY_KEYWORD=21;
    public static final int RULE_COLON=71;
    public static final int RULE_MOD_KEYWORD=46;
    public static final int RULE_TILDE=6;
    public static final int RULE_LT=84;
    public static final int RULE_DOUBLE_CURLY_CLOSE=66;
    public static final int RULE_LANGUAGE_REFSET_ID_KEYWORD=25;
    public static final int RULE_INT=12;
    public static final int RULE_EXACT_KEYWORD=37;
    public static final int RULE_ML_COMMENT=87;
    public static final int RULE_DOUBLE_SQUARE_CLOSE=5;
    public static final int RULE_PREFERRED_IN_KEYWORD=28;
    public static final int RULE_PIPE_DELIMITED_STRING=67;
    public static final int RULE_ALPHA=55;
    public static final int RULE_LTE=64;
    public static final int RULE_TYPE_KEYWORD=43;
    public static final int RULE_ID_KEYWORD=50;
    public static final int RULE_STRING=16;
    public static final int RULE_AT=7;
    public static final int RULE_FALSE_KEYWORD=38;
    public static final int RULE_REVERSED=51;
    public static final int RULE_SL_COMMENT=88;
    public static final int RULE_HASH=86;
    public static final int RULE_TOK=10;
    public static final int RULE_DASH=77;
    public static final int RULE_PLUS=76;
    public static final int RULE_DOT=80;
    public static final int EOF=-1;
    public static final int RULE_DIALECTID_KEYWORD=30;
    public static final int RULE_KEYWORD=56;
    public static final int RULE_DEFINITION_STATUS_ID_KEYWORD=23;
    public static final int RULE_DEFINITION_STATUS_TOKEN_KEYWORD=24;
    public static final int RULE_ACCEPTABLE_IN_KEYWORD=27;
    public static final int RULE_SUBTYPE_OF=15;
    public static final int RULE_WS=17;
    public static final int RULE_TERM_KEYWORD=41;
    public static final int RULE_MAX_KEYWORD=47;
    public static final int RULE_MEMBER_SHORT_KEYWORD=52;
    public static final int RULE_GT_EM=62;
    public static final int RULE_REGEX_KEYWORD=40;
    public static final int RULE_TRUE_KEYWORD=42;
    public static final int RULE_CARET=79;
    public static final int RULE_DOUBLE_CURLY_OPEN=65;
    public static final int RULE_WILD_KEYWORD=44;
    public static final int RULE_MIN_KEYWORD=45;
    public static final int RULE_CONJUNCTION_KEYWORD=48;
    public static final int RULE_STR=11;
    public static final int RULE_WILDCARD=81;
    public static final int RULE_EFFECTIVE_TIME_KEYWORD=26;
    public static final int RULE_DBL_LT_EM=57;

    // delegates
    // delegators


        public InternalEtlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEtlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEtlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEtlParser.g"; }


    	private EtlGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    	}

    	public void setGrammarAccess(EtlGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleExpressionTemplate"
    // InternalEtlParser.g:68:1: entryRuleExpressionTemplate : ruleExpressionTemplate EOF ;
    public final void entryRuleExpressionTemplate() throws RecognitionException {
        try {
            // InternalEtlParser.g:69:1: ( ruleExpressionTemplate EOF )
            // InternalEtlParser.g:70:1: ruleExpressionTemplate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionTemplate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionTemplate"


    // $ANTLR start "ruleExpressionTemplate"
    // InternalEtlParser.g:77:1: ruleExpressionTemplate : ( ( rule__ExpressionTemplate__Group__0 ) ) ;
    public final void ruleExpressionTemplate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:81:2: ( ( ( rule__ExpressionTemplate__Group__0 ) ) )
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            {
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            // InternalEtlParser.g:83:3: ( rule__ExpressionTemplate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }
            // InternalEtlParser.g:84:3: ( rule__ExpressionTemplate__Group__0 )
            // InternalEtlParser.g:84:4: rule__ExpressionTemplate__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionTemplate"


    // $ANTLR start "entryRuleSubExpression"
    // InternalEtlParser.g:93:1: entryRuleSubExpression : ruleSubExpression EOF ;
    public final void entryRuleSubExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:94:1: ( ruleSubExpression EOF )
            // InternalEtlParser.g:95:1: ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalEtlParser.g:102:1: ruleSubExpression : ( ( rule__SubExpression__Group__0 ) ) ;
    public final void ruleSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:106:2: ( ( ( rule__SubExpression__Group__0 ) ) )
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            {
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            // InternalEtlParser.g:108:3: ( rule__SubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:109:3: ( rule__SubExpression__Group__0 )
            // InternalEtlParser.g:109:4: rule__SubExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleFocusConcept"
    // InternalEtlParser.g:118:1: entryRuleFocusConcept : ruleFocusConcept EOF ;
    public final void entryRuleFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:119:1: ( ruleFocusConcept EOF )
            // InternalEtlParser.g:120:1: ruleFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFocusConcept"


    // $ANTLR start "ruleFocusConcept"
    // InternalEtlParser.g:127:1: ruleFocusConcept : ( ( rule__FocusConcept__Group__0 ) ) ;
    public final void ruleFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:131:2: ( ( ( rule__FocusConcept__Group__0 ) ) )
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            {
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            // InternalEtlParser.g:133:3: ( rule__FocusConcept__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getGroup()); 
            }
            // InternalEtlParser.g:134:3: ( rule__FocusConcept__Group__0 )
            // InternalEtlParser.g:134:4: rule__FocusConcept__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFocusConcept"


    // $ANTLR start "entryRuleRefinement"
    // InternalEtlParser.g:143:1: entryRuleRefinement : ruleRefinement EOF ;
    public final void entryRuleRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:144:1: ( ruleRefinement EOF )
            // InternalEtlParser.g:145:1: ruleRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinement"


    // $ANTLR start "ruleRefinement"
    // InternalEtlParser.g:152:1: ruleRefinement : ( ( rule__Refinement__Group__0 ) ) ;
    public final void ruleRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:156:2: ( ( ( rule__Refinement__Group__0 ) ) )
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            {
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            // InternalEtlParser.g:158:3: ( rule__Refinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:159:3: ( rule__Refinement__Group__0 )
            // InternalEtlParser.g:159:4: rule__Refinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinement"


    // $ANTLR start "entryRuleAttributeGroup"
    // InternalEtlParser.g:168:1: entryRuleAttributeGroup : ruleAttributeGroup EOF ;
    public final void entryRuleAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:169:1: ( ruleAttributeGroup EOF )
            // InternalEtlParser.g:170:1: ruleAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeGroup"


    // $ANTLR start "ruleAttributeGroup"
    // InternalEtlParser.g:177:1: ruleAttributeGroup : ( ( rule__AttributeGroup__Group__0 ) ) ;
    public final void ruleAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:181:2: ( ( ( rule__AttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            // InternalEtlParser.g:183:3: ( rule__AttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:184:3: ( rule__AttributeGroup__Group__0 )
            // InternalEtlParser.g:184:4: rule__AttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeGroup"


    // $ANTLR start "entryRuleAttribute"
    // InternalEtlParser.g:193:1: entryRuleAttribute : ruleAttribute EOF ;
    public final void entryRuleAttribute() throws RecognitionException {
        try {
            // InternalEtlParser.g:194:1: ( ruleAttribute EOF )
            // InternalEtlParser.g:195:1: ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalEtlParser.g:202:1: ruleAttribute : ( ( rule__Attribute__Group__0 ) ) ;
    public final void ruleAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:206:2: ( ( ( rule__Attribute__Group__0 ) ) )
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            {
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            // InternalEtlParser.g:208:3: ( rule__Attribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getGroup()); 
            }
            // InternalEtlParser.g:209:3: ( rule__Attribute__Group__0 )
            // InternalEtlParser.g:209:4: rule__Attribute__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleAttributeValue"
    // InternalEtlParser.g:218:1: entryRuleAttributeValue : ruleAttributeValue EOF ;
    public final void entryRuleAttributeValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:219:1: ( ruleAttributeValue EOF )
            // InternalEtlParser.g:220:1: ruleAttributeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValue"


    // $ANTLR start "ruleAttributeValue"
    // InternalEtlParser.g:227:1: ruleAttributeValue : ( ( rule__AttributeValue__Alternatives ) ) ;
    public final void ruleAttributeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:231:2: ( ( ( rule__AttributeValue__Alternatives ) ) )
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            {
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            // InternalEtlParser.g:233:3: ( rule__AttributeValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:234:3: ( rule__AttributeValue__Alternatives )
            // InternalEtlParser.g:234:4: rule__AttributeValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValue"


    // $ANTLR start "entryRuleConceptIdReplacementSlot"
    // InternalEtlParser.g:243:1: entryRuleConceptIdReplacementSlot : ruleConceptIdReplacementSlot EOF ;
    public final void entryRuleConceptIdReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:244:1: ( ruleConceptIdReplacementSlot EOF )
            // InternalEtlParser.g:245:1: ruleConceptIdReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptIdReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptIdReplacementSlot"


    // $ANTLR start "ruleConceptIdReplacementSlot"
    // InternalEtlParser.g:252:1: ruleConceptIdReplacementSlot : ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) ;
    public final void ruleConceptIdReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:256:2: ( ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:258:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:259:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            // InternalEtlParser.g:259:4: rule__ConceptIdReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptIdReplacementSlot"


    // $ANTLR start "entryRuleExpressionReplacementSlot"
    // InternalEtlParser.g:268:1: entryRuleExpressionReplacementSlot : ruleExpressionReplacementSlot EOF ;
    public final void entryRuleExpressionReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:269:1: ( ruleExpressionReplacementSlot EOF )
            // InternalEtlParser.g:270:1: ruleExpressionReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionReplacementSlot"


    // $ANTLR start "ruleExpressionReplacementSlot"
    // InternalEtlParser.g:277:1: ruleExpressionReplacementSlot : ( ( rule__ExpressionReplacementSlot__Group__0 ) ) ;
    public final void ruleExpressionReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:281:2: ( ( ( rule__ExpressionReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:283:3: ( rule__ExpressionReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:284:3: ( rule__ExpressionReplacementSlot__Group__0 )
            // InternalEtlParser.g:284:4: rule__ExpressionReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionReplacementSlot"


    // $ANTLR start "entryRuleTokenReplacementSlot"
    // InternalEtlParser.g:293:1: entryRuleTokenReplacementSlot : ruleTokenReplacementSlot EOF ;
    public final void entryRuleTokenReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:294:1: ( ruleTokenReplacementSlot EOF )
            // InternalEtlParser.g:295:1: ruleTokenReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTokenReplacementSlot"


    // $ANTLR start "ruleTokenReplacementSlot"
    // InternalEtlParser.g:302:1: ruleTokenReplacementSlot : ( ( rule__TokenReplacementSlot__Group__0 ) ) ;
    public final void ruleTokenReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:306:2: ( ( ( rule__TokenReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:308:3: ( rule__TokenReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:309:3: ( rule__TokenReplacementSlot__Group__0 )
            // InternalEtlParser.g:309:4: rule__TokenReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTokenReplacementSlot"


    // $ANTLR start "entryRuleTemplateInformationSlot"
    // InternalEtlParser.g:318:1: entryRuleTemplateInformationSlot : ruleTemplateInformationSlot EOF ;
    public final void entryRuleTemplateInformationSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:319:1: ( ruleTemplateInformationSlot EOF )
            // InternalEtlParser.g:320:1: ruleTemplateInformationSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateInformationSlot"


    // $ANTLR start "ruleTemplateInformationSlot"
    // InternalEtlParser.g:327:1: ruleTemplateInformationSlot : ( ( rule__TemplateInformationSlot__Group__0 ) ) ;
    public final void ruleTemplateInformationSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:331:2: ( ( ( rule__TemplateInformationSlot__Group__0 ) ) )
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            {
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            // InternalEtlParser.g:333:3: ( rule__TemplateInformationSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:334:3: ( rule__TemplateInformationSlot__Group__0 )
            // InternalEtlParser.g:334:4: rule__TemplateInformationSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateInformationSlot"


    // $ANTLR start "entryRuleConcreteValueReplacementSlot"
    // InternalEtlParser.g:343:1: entryRuleConcreteValueReplacementSlot : ruleConcreteValueReplacementSlot EOF ;
    public final void entryRuleConcreteValueReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:344:1: ( ruleConcreteValueReplacementSlot EOF )
            // InternalEtlParser.g:345:1: ruleConcreteValueReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConcreteValueReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConcreteValueReplacementSlot"


    // $ANTLR start "ruleConcreteValueReplacementSlot"
    // InternalEtlParser.g:352:1: ruleConcreteValueReplacementSlot : ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) ;
    public final void ruleConcreteValueReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:356:2: ( ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:358:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:359:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            // InternalEtlParser.g:359:4: rule__ConcreteValueReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConcreteValueReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConcreteValueReplacementSlot"


    // $ANTLR start "entryRuleStringReplacementSlot"
    // InternalEtlParser.g:368:1: entryRuleStringReplacementSlot : ruleStringReplacementSlot EOF ;
    public final void entryRuleStringReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:369:1: ( ruleStringReplacementSlot EOF )
            // InternalEtlParser.g:370:1: ruleStringReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringReplacementSlot"


    // $ANTLR start "ruleStringReplacementSlot"
    // InternalEtlParser.g:377:1: ruleStringReplacementSlot : ( ( rule__StringReplacementSlot__Group__0 ) ) ;
    public final void ruleStringReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:381:2: ( ( ( rule__StringReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:383:3: ( rule__StringReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:384:3: ( rule__StringReplacementSlot__Group__0 )
            // InternalEtlParser.g:384:4: rule__StringReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringReplacementSlot"


    // $ANTLR start "entryRuleIntegerReplacementSlot"
    // InternalEtlParser.g:393:1: entryRuleIntegerReplacementSlot : ruleIntegerReplacementSlot EOF ;
    public final void entryRuleIntegerReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:394:1: ( ruleIntegerReplacementSlot EOF )
            // InternalEtlParser.g:395:1: ruleIntegerReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerReplacementSlot"


    // $ANTLR start "ruleIntegerReplacementSlot"
    // InternalEtlParser.g:402:1: ruleIntegerReplacementSlot : ( ( rule__IntegerReplacementSlot__Group__0 ) ) ;
    public final void ruleIntegerReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:406:2: ( ( ( rule__IntegerReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:408:3: ( rule__IntegerReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:409:3: ( rule__IntegerReplacementSlot__Group__0 )
            // InternalEtlParser.g:409:4: rule__IntegerReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerReplacementSlot"


    // $ANTLR start "entryRuleDecimalReplacementSlot"
    // InternalEtlParser.g:418:1: entryRuleDecimalReplacementSlot : ruleDecimalReplacementSlot EOF ;
    public final void entryRuleDecimalReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:419:1: ( ruleDecimalReplacementSlot EOF )
            // InternalEtlParser.g:420:1: ruleDecimalReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalReplacementSlot"


    // $ANTLR start "ruleDecimalReplacementSlot"
    // InternalEtlParser.g:427:1: ruleDecimalReplacementSlot : ( ( rule__DecimalReplacementSlot__Group__0 ) ) ;
    public final void ruleDecimalReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:431:2: ( ( ( rule__DecimalReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:433:3: ( rule__DecimalReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:434:3: ( rule__DecimalReplacementSlot__Group__0 )
            // InternalEtlParser.g:434:4: rule__DecimalReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalReplacementSlot"


    // $ANTLR start "entryRuleEtlCardinality"
    // InternalEtlParser.g:443:1: entryRuleEtlCardinality : ruleEtlCardinality EOF ;
    public final void entryRuleEtlCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:444:1: ( ruleEtlCardinality EOF )
            // InternalEtlParser.g:445:1: ruleEtlCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEtlCardinality"


    // $ANTLR start "ruleEtlCardinality"
    // InternalEtlParser.g:452:1: ruleEtlCardinality : ( ( rule__EtlCardinality__Group__0 ) ) ;
    public final void ruleEtlCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:456:2: ( ( ( rule__EtlCardinality__Group__0 ) ) )
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            {
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            // InternalEtlParser.g:458:3: ( rule__EtlCardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:459:3: ( rule__EtlCardinality__Group__0 )
            // InternalEtlParser.g:459:4: rule__EtlCardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEtlCardinality"


    // $ANTLR start "entryRuleConceptReplacementSlot"
    // InternalEtlParser.g:468:1: entryRuleConceptReplacementSlot : ruleConceptReplacementSlot EOF ;
    public final void entryRuleConceptReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:469:1: ( ruleConceptReplacementSlot EOF )
            // InternalEtlParser.g:470:1: ruleConceptReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReplacementSlot"


    // $ANTLR start "ruleConceptReplacementSlot"
    // InternalEtlParser.g:477:1: ruleConceptReplacementSlot : ( ( rule__ConceptReplacementSlot__Alternatives ) ) ;
    public final void ruleConceptReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:481:2: ( ( ( rule__ConceptReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:483:3: ( rule__ConceptReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:484:3: ( rule__ConceptReplacementSlot__Alternatives )
            // InternalEtlParser.g:484:4: rule__ConceptReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReplacementSlot"


    // $ANTLR start "entryRuleConceptReference"
    // InternalEtlParser.g:493:1: entryRuleConceptReference : ruleConceptReference EOF ;
    public final void entryRuleConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:494:1: ( ruleConceptReference EOF )
            // InternalEtlParser.g:495:1: ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalEtlParser.g:502:1: ruleConceptReference : ( ( rule__ConceptReference__Alternatives ) ) ;
    public final void ruleConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:506:2: ( ( ( rule__ConceptReference__Alternatives ) ) )
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            {
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            // InternalEtlParser.g:508:3: ( rule__ConceptReference__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:509:3: ( rule__ConceptReference__Alternatives )
            // InternalEtlParser.g:509:4: rule__ConceptReference__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleSlotToken"
    // InternalEtlParser.g:518:1: entryRuleSlotToken : ruleSlotToken EOF ;
    public final void entryRuleSlotToken() throws RecognitionException {
        try {
            // InternalEtlParser.g:519:1: ( ruleSlotToken EOF )
            // InternalEtlParser.g:520:1: ruleSlotToken EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotToken"


    // $ANTLR start "ruleSlotToken"
    // InternalEtlParser.g:527:1: ruleSlotToken : ( ( rule__SlotToken__Alternatives ) ) ;
    public final void ruleSlotToken() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:531:2: ( ( ( rule__SlotToken__Alternatives ) ) )
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            {
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            // InternalEtlParser.g:533:3: ( rule__SlotToken__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:534:3: ( rule__SlotToken__Alternatives )
            // InternalEtlParser.g:534:4: rule__SlotToken__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotToken__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotToken"


    // $ANTLR start "entryRuleStringValue"
    // InternalEtlParser.g:543:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:544:1: ( ruleStringValue EOF )
            // InternalEtlParser.g:545:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalEtlParser.g:552:1: ruleStringValue : ( ( rule__StringValue__ValueAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:556:2: ( ( ( rule__StringValue__ValueAssignment ) ) )
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            {
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            // InternalEtlParser.g:558:3: ( rule__StringValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }
            // InternalEtlParser.g:559:3: ( rule__StringValue__ValueAssignment )
            // InternalEtlParser.g:559:4: rule__StringValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalEtlParser.g:568:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:569:1: ( ruleIntegerValue EOF )
            // InternalEtlParser.g:570:1: ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalEtlParser.g:577:1: ruleIntegerValue : ( ( rule__IntegerValue__Group__0 ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:581:2: ( ( ( rule__IntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            // InternalEtlParser.g:583:3: ( rule__IntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:584:3: ( rule__IntegerValue__Group__0 )
            // InternalEtlParser.g:584:4: rule__IntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleDecimalValue"
    // InternalEtlParser.g:593:1: entryRuleDecimalValue : ruleDecimalValue EOF ;
    public final void entryRuleDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:594:1: ( ruleDecimalValue EOF )
            // InternalEtlParser.g:595:1: ruleDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValue"


    // $ANTLR start "ruleDecimalValue"
    // InternalEtlParser.g:602:1: ruleDecimalValue : ( ( rule__DecimalValue__Group__0 ) ) ;
    public final void ruleDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:606:2: ( ( ( rule__DecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            // InternalEtlParser.g:608:3: ( rule__DecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:609:3: ( rule__DecimalValue__Group__0 )
            // InternalEtlParser.g:609:4: rule__DecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValue"


    // $ANTLR start "entryRuleSlotInteger"
    // InternalEtlParser.g:618:1: entryRuleSlotInteger : ruleSlotInteger EOF ;
    public final void entryRuleSlotInteger() throws RecognitionException {
        try {
            // InternalEtlParser.g:619:1: ( ruleSlotInteger EOF )
            // InternalEtlParser.g:620:1: ruleSlotInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotInteger"


    // $ANTLR start "ruleSlotInteger"
    // InternalEtlParser.g:627:1: ruleSlotInteger : ( ( rule__SlotInteger__Alternatives ) ) ;
    public final void ruleSlotInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:631:2: ( ( ( rule__SlotInteger__Alternatives ) ) )
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            {
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            // InternalEtlParser.g:633:3: ( rule__SlotInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:634:3: ( rule__SlotInteger__Alternatives )
            // InternalEtlParser.g:634:4: rule__SlotInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotInteger"


    // $ANTLR start "entryRuleSlotIntegerValue"
    // InternalEtlParser.g:643:1: entryRuleSlotIntegerValue : ruleSlotIntegerValue EOF ;
    public final void entryRuleSlotIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:644:1: ( ruleSlotIntegerValue EOF )
            // InternalEtlParser.g:645:1: ruleSlotIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerValue"


    // $ANTLR start "ruleSlotIntegerValue"
    // InternalEtlParser.g:652:1: ruleSlotIntegerValue : ( ( rule__SlotIntegerValue__Group__0 ) ) ;
    public final void ruleSlotIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:656:2: ( ( ( rule__SlotIntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            // InternalEtlParser.g:658:3: ( rule__SlotIntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:659:3: ( rule__SlotIntegerValue__Group__0 )
            // InternalEtlParser.g:659:4: rule__SlotIntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerValue"


    // $ANTLR start "entryRuleSlotIntegerRange"
    // InternalEtlParser.g:668:1: entryRuleSlotIntegerRange : ruleSlotIntegerRange EOF ;
    public final void entryRuleSlotIntegerRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:669:1: ( ruleSlotIntegerRange EOF )
            // InternalEtlParser.g:670:1: ruleSlotIntegerRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerRange"


    // $ANTLR start "ruleSlotIntegerRange"
    // InternalEtlParser.g:677:1: ruleSlotIntegerRange : ( ( rule__SlotIntegerRange__Alternatives ) ) ;
    public final void ruleSlotIntegerRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:681:2: ( ( ( rule__SlotIntegerRange__Alternatives ) ) )
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            {
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            // InternalEtlParser.g:683:3: ( rule__SlotIntegerRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:684:3: ( rule__SlotIntegerRange__Alternatives )
            // InternalEtlParser.g:684:4: rule__SlotIntegerRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerRange"


    // $ANTLR start "entryRuleSlotIntegerMinimumValue"
    // InternalEtlParser.g:693:1: entryRuleSlotIntegerMinimumValue : ruleSlotIntegerMinimumValue EOF ;
    public final void entryRuleSlotIntegerMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:694:1: ( ruleSlotIntegerMinimumValue EOF )
            // InternalEtlParser.g:695:1: ruleSlotIntegerMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMinimumValue"


    // $ANTLR start "ruleSlotIntegerMinimumValue"
    // InternalEtlParser.g:702:1: ruleSlotIntegerMinimumValue : ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:706:2: ( ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            // InternalEtlParser.g:708:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:709:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            // InternalEtlParser.g:709:4: rule__SlotIntegerMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMinimumValue"


    // $ANTLR start "entryRuleSlotIntegerMaximumValue"
    // InternalEtlParser.g:718:1: entryRuleSlotIntegerMaximumValue : ruleSlotIntegerMaximumValue EOF ;
    public final void entryRuleSlotIntegerMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:719:1: ( ruleSlotIntegerMaximumValue EOF )
            // InternalEtlParser.g:720:1: ruleSlotIntegerMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMaximumValue"


    // $ANTLR start "ruleSlotIntegerMaximumValue"
    // InternalEtlParser.g:727:1: ruleSlotIntegerMaximumValue : ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:731:2: ( ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            // InternalEtlParser.g:733:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:734:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            // InternalEtlParser.g:734:4: rule__SlotIntegerMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMaximumValue"


    // $ANTLR start "entryRuleSlotDecimal"
    // InternalEtlParser.g:743:1: entryRuleSlotDecimal : ruleSlotDecimal EOF ;
    public final void entryRuleSlotDecimal() throws RecognitionException {
        try {
            // InternalEtlParser.g:744:1: ( ruleSlotDecimal EOF )
            // InternalEtlParser.g:745:1: ruleSlotDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimal"


    // $ANTLR start "ruleSlotDecimal"
    // InternalEtlParser.g:752:1: ruleSlotDecimal : ( ( rule__SlotDecimal__Alternatives ) ) ;
    public final void ruleSlotDecimal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:756:2: ( ( ( rule__SlotDecimal__Alternatives ) ) )
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            {
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            // InternalEtlParser.g:758:3: ( rule__SlotDecimal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:759:3: ( rule__SlotDecimal__Alternatives )
            // InternalEtlParser.g:759:4: rule__SlotDecimal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimal"


    // $ANTLR start "entryRuleSlotDecimalValue"
    // InternalEtlParser.g:768:1: entryRuleSlotDecimalValue : ruleSlotDecimalValue EOF ;
    public final void entryRuleSlotDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:769:1: ( ruleSlotDecimalValue EOF )
            // InternalEtlParser.g:770:1: ruleSlotDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalValue"


    // $ANTLR start "ruleSlotDecimalValue"
    // InternalEtlParser.g:777:1: ruleSlotDecimalValue : ( ( rule__SlotDecimalValue__Group__0 ) ) ;
    public final void ruleSlotDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:781:2: ( ( ( rule__SlotDecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            // InternalEtlParser.g:783:3: ( rule__SlotDecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:784:3: ( rule__SlotDecimalValue__Group__0 )
            // InternalEtlParser.g:784:4: rule__SlotDecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalValue"


    // $ANTLR start "entryRuleSlotDecimalRange"
    // InternalEtlParser.g:793:1: entryRuleSlotDecimalRange : ruleSlotDecimalRange EOF ;
    public final void entryRuleSlotDecimalRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:794:1: ( ruleSlotDecimalRange EOF )
            // InternalEtlParser.g:795:1: ruleSlotDecimalRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalRange"


    // $ANTLR start "ruleSlotDecimalRange"
    // InternalEtlParser.g:802:1: ruleSlotDecimalRange : ( ( rule__SlotDecimalRange__Alternatives ) ) ;
    public final void ruleSlotDecimalRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:806:2: ( ( ( rule__SlotDecimalRange__Alternatives ) ) )
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            {
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            // InternalEtlParser.g:808:3: ( rule__SlotDecimalRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:809:3: ( rule__SlotDecimalRange__Alternatives )
            // InternalEtlParser.g:809:4: rule__SlotDecimalRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalRange"


    // $ANTLR start "entryRuleSlotDecimalMinimumValue"
    // InternalEtlParser.g:818:1: entryRuleSlotDecimalMinimumValue : ruleSlotDecimalMinimumValue EOF ;
    public final void entryRuleSlotDecimalMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:819:1: ( ruleSlotDecimalMinimumValue EOF )
            // InternalEtlParser.g:820:1: ruleSlotDecimalMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMinimumValue"


    // $ANTLR start "ruleSlotDecimalMinimumValue"
    // InternalEtlParser.g:827:1: ruleSlotDecimalMinimumValue : ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:831:2: ( ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            // InternalEtlParser.g:833:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:834:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            // InternalEtlParser.g:834:4: rule__SlotDecimalMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMinimumValue"


    // $ANTLR start "entryRuleSlotDecimalMaximumValue"
    // InternalEtlParser.g:843:1: entryRuleSlotDecimalMaximumValue : ruleSlotDecimalMaximumValue EOF ;
    public final void entryRuleSlotDecimalMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:844:1: ( ruleSlotDecimalMaximumValue EOF )
            // InternalEtlParser.g:845:1: ruleSlotDecimalMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMaximumValue"


    // $ANTLR start "ruleSlotDecimalMaximumValue"
    // InternalEtlParser.g:852:1: ruleSlotDecimalMaximumValue : ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:856:2: ( ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            // InternalEtlParser.g:858:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:859:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            // InternalEtlParser.g:859:4: rule__SlotDecimalMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMaximumValue"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEtlParser.g:868:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:869:1: ( ruleExpressionConstraint EOF )
            // InternalEtlParser.g:870:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEtlParser.g:877:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:881:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            {
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            // InternalEtlParser.g:883:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEtlParser.g:893:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:894:1: ( ruleOrExpressionConstraint EOF )
            // InternalEtlParser.g:895:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEtlParser.g:902:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:906:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:908:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:909:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEtlParser.g:909:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEtlParser.g:918:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:919:1: ( ruleAndExpressionConstraint EOF )
            // InternalEtlParser.g:920:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEtlParser.g:927:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:931:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:933:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:934:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEtlParser.g:934:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEtlParser.g:943:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:944:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEtlParser.g:945:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEtlParser.g:952:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:956:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:958:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:959:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEtlParser.g:959:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEtlParser.g:968:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:969:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEtlParser.g:970:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEtlParser.g:977:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:981:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:983:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:984:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:984:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEtlParser.g:993:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:994:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEtlParser.g:995:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEtlParser.g:1002:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1006:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1008:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1009:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1009:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleSupplementExpressionConstraint"
    // InternalEtlParser.g:1018:1: entryRuleSupplementExpressionConstraint : ruleSupplementExpressionConstraint EOF ;
    public final void entryRuleSupplementExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1019:1: ( ruleSupplementExpressionConstraint EOF )
            // InternalEtlParser.g:1020:1: ruleSupplementExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSupplementExpressionConstraint"


    // $ANTLR start "ruleSupplementExpressionConstraint"
    // InternalEtlParser.g:1027:1: ruleSupplementExpressionConstraint : ( ( rule__SupplementExpressionConstraint__Group__0 ) ) ;
    public final void ruleSupplementExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1031:2: ( ( ( rule__SupplementExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1032:2: ( ( rule__SupplementExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1032:2: ( ( rule__SupplementExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1033:3: ( rule__SupplementExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1034:3: ( rule__SupplementExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1034:4: rule__SupplementExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSupplementExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEtlParser.g:1043:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1044:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEtlParser.g:1045:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEtlParser.g:1052:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1056:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1057:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1057:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1058:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1059:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1059:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEtlParser.g:1068:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1069:1: ( ruleSubExpressionConstraint EOF )
            // InternalEtlParser.g:1070:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEtlParser.g:1077:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1081:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEtlParser.g:1082:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEtlParser.g:1082:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEtlParser.g:1083:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1084:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEtlParser.g:1084:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEtlParser.g:1093:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:1094:1: ( ruleEclFocusConcept EOF )
            // InternalEtlParser.g:1095:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEtlParser.g:1102:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1106:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEtlParser.g:1107:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEtlParser.g:1107:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEtlParser.g:1108:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1109:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEtlParser.g:1109:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEtlParser.g:1118:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1119:1: ( ruleChildOf EOF )
            // InternalEtlParser.g:1120:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEtlParser.g:1127:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1131:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEtlParser.g:1133:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1134:3: ( rule__ChildOf__Group__0 )
            // InternalEtlParser.g:1134:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEtlParser.g:1143:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1144:1: ( ruleChildOrSelfOf EOF )
            // InternalEtlParser.g:1145:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEtlParser.g:1152:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1156:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1157:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1157:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1158:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1159:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEtlParser.g:1159:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEtlParser.g:1168:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1169:1: ( ruleDescendantOf EOF )
            // InternalEtlParser.g:1170:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEtlParser.g:1177:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1181:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEtlParser.g:1183:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1184:3: ( rule__DescendantOf__Group__0 )
            // InternalEtlParser.g:1184:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEtlParser.g:1193:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1194:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEtlParser.g:1195:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEtlParser.g:1202:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1206:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1207:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1207:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1208:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1209:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEtlParser.g:1209:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEtlParser.g:1218:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1219:1: ( ruleParentOf EOF )
            // InternalEtlParser.g:1220:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEtlParser.g:1227:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1231:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEtlParser.g:1233:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1234:3: ( rule__ParentOf__Group__0 )
            // InternalEtlParser.g:1234:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEtlParser.g:1243:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1244:1: ( ruleParentOrSelfOf EOF )
            // InternalEtlParser.g:1245:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEtlParser.g:1252:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1256:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1257:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1257:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1258:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1259:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEtlParser.g:1259:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEtlParser.g:1268:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1269:1: ( ruleAncestorOf EOF )
            // InternalEtlParser.g:1270:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEtlParser.g:1277:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1281:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEtlParser.g:1283:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1284:3: ( rule__AncestorOf__Group__0 )
            // InternalEtlParser.g:1284:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEtlParser.g:1293:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1294:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEtlParser.g:1295:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEtlParser.g:1302:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1306:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1307:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1307:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1308:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1309:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEtlParser.g:1309:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEtlParser.g:1318:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1319:1: ( ruleMemberOf EOF )
            // InternalEtlParser.g:1320:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEtlParser.g:1327:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1331:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEtlParser.g:1332:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEtlParser.g:1332:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEtlParser.g:1333:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1334:3: ( rule__MemberOf__Group__0 )
            // InternalEtlParser.g:1334:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEtlParser.g:1343:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:1344:1: ( ruleEclConceptReference EOF )
            // InternalEtlParser.g:1345:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEtlParser.g:1352:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1356:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEtlParser.g:1358:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEtlParser.g:1359:3: ( rule__EclConceptReference__Group__0 )
            // InternalEtlParser.g:1359:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEtlParser.g:1368:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1369:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEtlParser.g:1370:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEtlParser.g:1377:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1381:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEtlParser.g:1382:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEtlParser.g:1382:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEtlParser.g:1383:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1384:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEtlParser.g:1384:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEtlParser.g:1393:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEtlParser.g:1394:1: ( ruleAny EOF )
            // InternalEtlParser.g:1395:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEtlParser.g:1402:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1406:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEtlParser.g:1407:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEtlParser.g:1407:2: ( ( rule__Any__Group__0 ) )
            // InternalEtlParser.g:1408:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEtlParser.g:1409:3: ( rule__Any__Group__0 )
            // InternalEtlParser.g:1409:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEtlParser.g:1418:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1419:1: ( ruleEclRefinement EOF )
            // InternalEtlParser.g:1420:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEtlParser.g:1427:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1431:2: ( ( ruleOrRefinement ) )
            // InternalEtlParser.g:1432:2: ( ruleOrRefinement )
            {
            // InternalEtlParser.g:1432:2: ( ruleOrRefinement )
            // InternalEtlParser.g:1433:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEtlParser.g:1443:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1444:1: ( ruleOrRefinement EOF )
            // InternalEtlParser.g:1445:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEtlParser.g:1452:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1456:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1457:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1457:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEtlParser.g:1458:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1459:3: ( rule__OrRefinement__Group__0 )
            // InternalEtlParser.g:1459:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEtlParser.g:1468:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1469:1: ( ruleAndRefinement EOF )
            // InternalEtlParser.g:1470:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEtlParser.g:1477:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1481:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1482:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1482:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEtlParser.g:1483:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1484:3: ( rule__AndRefinement__Group__0 )
            // InternalEtlParser.g:1484:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEtlParser.g:1493:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1494:1: ( ruleSubRefinement EOF )
            // InternalEtlParser.g:1495:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEtlParser.g:1502:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1506:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEtlParser.g:1507:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEtlParser.g:1507:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEtlParser.g:1508:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1509:3: ( rule__SubRefinement__Alternatives )
            // InternalEtlParser.g:1509:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEtlParser.g:1518:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1519:1: ( ruleNestedRefinement EOF )
            // InternalEtlParser.g:1520:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEtlParser.g:1527:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1531:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1532:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1532:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEtlParser.g:1533:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1534:3: ( rule__NestedRefinement__Group__0 )
            // InternalEtlParser.g:1534:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEtlParser.g:1543:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:1544:1: ( ruleEclAttributeGroup EOF )
            // InternalEtlParser.g:1545:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEtlParser.g:1552:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1556:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:1557:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:1557:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEtlParser.g:1558:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:1559:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEtlParser.g:1559:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEtlParser.g:1568:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1569:1: ( ruleEclAttributeSet EOF )
            // InternalEtlParser.g:1570:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEtlParser.g:1577:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1581:2: ( ( ruleOrAttributeSet ) )
            // InternalEtlParser.g:1582:2: ( ruleOrAttributeSet )
            {
            // InternalEtlParser.g:1582:2: ( ruleOrAttributeSet )
            // InternalEtlParser.g:1583:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEtlParser.g:1593:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1594:1: ( ruleOrAttributeSet EOF )
            // InternalEtlParser.g:1595:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEtlParser.g:1602:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1606:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1607:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1607:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1608:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1609:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEtlParser.g:1609:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEtlParser.g:1618:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1619:1: ( ruleAndAttributeSet EOF )
            // InternalEtlParser.g:1620:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEtlParser.g:1627:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1631:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1632:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1632:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1633:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1634:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEtlParser.g:1634:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEtlParser.g:1643:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1644:1: ( ruleSubAttributeSet EOF )
            // InternalEtlParser.g:1645:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEtlParser.g:1652:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1656:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEtlParser.g:1657:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEtlParser.g:1657:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEtlParser.g:1658:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1659:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEtlParser.g:1659:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEtlParser.g:1668:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1669:1: ( ruleNestedAttributeSet EOF )
            // InternalEtlParser.g:1670:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEtlParser.g:1677:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1681:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1682:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1682:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1683:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1684:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEtlParser.g:1684:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEtlParser.g:1693:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1694:1: ( ruleAttributeConstraint EOF )
            // InternalEtlParser.g:1695:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEtlParser.g:1702:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1706:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1707:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1707:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEtlParser.g:1708:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1709:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEtlParser.g:1709:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEtlParser.g:1718:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:1719:1: ( ruleCardinality EOF )
            // InternalEtlParser.g:1720:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEtlParser.g:1727:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1731:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEtlParser.g:1732:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEtlParser.g:1732:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEtlParser.g:1733:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:1734:3: ( rule__Cardinality__Group__0 )
            // InternalEtlParser.g:1734:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEtlParser.g:1743:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1744:1: ( ruleComparison EOF )
            // InternalEtlParser.g:1745:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEtlParser.g:1752:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1756:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEtlParser.g:1757:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEtlParser.g:1757:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEtlParser.g:1758:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1759:3: ( rule__Comparison__Alternatives )
            // InternalEtlParser.g:1759:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEtlParser.g:1768:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1769:1: ( ruleAttributeComparison EOF )
            // InternalEtlParser.g:1770:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEtlParser.g:1777:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1781:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEtlParser.g:1782:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1782:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEtlParser.g:1783:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1784:3: ( rule__AttributeComparison__Group__0 )
            // InternalEtlParser.g:1784:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEtlParser.g:1793:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1794:1: ( ruleDataTypeComparison EOF )
            // InternalEtlParser.g:1795:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEtlParser.g:1802:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1806:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEtlParser.g:1807:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEtlParser.g:1807:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEtlParser.g:1808:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1809:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEtlParser.g:1809:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEtlParser.g:1818:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1819:1: ( ruleBooleanValueComparison EOF )
            // InternalEtlParser.g:1820:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEtlParser.g:1827:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1831:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1832:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1832:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEtlParser.g:1833:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1834:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEtlParser.g:1834:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEtlParser.g:1843:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1844:1: ( ruleStringValueComparison EOF )
            // InternalEtlParser.g:1845:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEtlParser.g:1852:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1856:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1857:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1857:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEtlParser.g:1858:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1859:3: ( rule__StringValueComparison__Group__0 )
            // InternalEtlParser.g:1859:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEtlParser.g:1868:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1869:1: ( ruleIntegerValueComparison EOF )
            // InternalEtlParser.g:1870:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEtlParser.g:1877:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1881:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1882:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1882:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEtlParser.g:1883:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1884:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEtlParser.g:1884:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEtlParser.g:1893:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1894:1: ( ruleDecimalValueComparison EOF )
            // InternalEtlParser.g:1895:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEtlParser.g:1902:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1906:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1907:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1907:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEtlParser.g:1908:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1909:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEtlParser.g:1909:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEtlParser.g:1918:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:1919:1: ( ruleNestedExpression EOF )
            // InternalEtlParser.g:1920:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEtlParser.g:1927:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1931:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEtlParser.g:1932:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEtlParser.g:1932:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEtlParser.g:1933:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:1934:3: ( rule__NestedExpression__Group__0 )
            // InternalEtlParser.g:1934:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEtlParser.g:1943:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1944:1: ( ruleFilterConstraint EOF )
            // InternalEtlParser.g:1945:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEtlParser.g:1952:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1956:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1957:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1957:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEtlParser.g:1958:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1959:3: ( rule__FilterConstraint__Group__0 )
            // InternalEtlParser.g:1959:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEtlParser.g:1968:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1969:1: ( ruleFilter EOF )
            // InternalEtlParser.g:1970:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEtlParser.g:1977:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1981:2: ( ( ruleDisjunctionFilter ) )
            // InternalEtlParser.g:1982:2: ( ruleDisjunctionFilter )
            {
            // InternalEtlParser.g:1982:2: ( ruleDisjunctionFilter )
            // InternalEtlParser.g:1983:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEtlParser.g:1993:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1994:1: ( ruleDisjunctionFilter EOF )
            // InternalEtlParser.g:1995:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEtlParser.g:2002:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2006:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:2007:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2007:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:2008:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2009:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEtlParser.g:2009:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEtlParser.g:2018:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2019:1: ( ruleConjunctionFilter EOF )
            // InternalEtlParser.g:2020:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEtlParser.g:2027:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2031:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:2032:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2032:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:2033:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2034:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEtlParser.g:2034:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEtlParser.g:2043:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2044:1: ( ruleNestedFilter EOF )
            // InternalEtlParser.g:2045:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEtlParser.g:2052:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2056:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEtlParser.g:2057:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2057:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEtlParser.g:2058:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2059:3: ( rule__NestedFilter__Group__0 )
            // InternalEtlParser.g:2059:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEtlParser.g:2068:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2069:1: ( rulePropertyFilter EOF )
            // InternalEtlParser.g:2070:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEtlParser.g:2077:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2081:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEtlParser.g:2082:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2082:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEtlParser.g:2083:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2084:3: ( rule__PropertyFilter__Alternatives )
            // InternalEtlParser.g:2084:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleMemberFieldFilter"
    // InternalEtlParser.g:2093:1: entryRuleMemberFieldFilter : ruleMemberFieldFilter EOF ;
    public final void entryRuleMemberFieldFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2094:1: ( ruleMemberFieldFilter EOF )
            // InternalEtlParser.g:2095:1: ruleMemberFieldFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberFieldFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberFieldFilter"


    // $ANTLR start "ruleMemberFieldFilter"
    // InternalEtlParser.g:2102:1: ruleMemberFieldFilter : ( ( rule__MemberFieldFilter__Group__0 ) ) ;
    public final void ruleMemberFieldFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2106:2: ( ( ( rule__MemberFieldFilter__Group__0 ) ) )
            // InternalEtlParser.g:2107:2: ( ( rule__MemberFieldFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2107:2: ( ( rule__MemberFieldFilter__Group__0 ) )
            // InternalEtlParser.g:2108:3: ( rule__MemberFieldFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2109:3: ( rule__MemberFieldFilter__Group__0 )
            // InternalEtlParser.g:2109:4: rule__MemberFieldFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberFieldFilter"


    // $ANTLR start "entryRuleIdFilter"
    // InternalEtlParser.g:2118:1: entryRuleIdFilter : ruleIdFilter EOF ;
    public final void entryRuleIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2119:1: ( ruleIdFilter EOF )
            // InternalEtlParser.g:2120:1: ruleIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdFilter"


    // $ANTLR start "ruleIdFilter"
    // InternalEtlParser.g:2127:1: ruleIdFilter : ( ( rule__IdFilter__Group__0 ) ) ;
    public final void ruleIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2131:2: ( ( ( rule__IdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2132:2: ( ( rule__IdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2132:2: ( ( rule__IdFilter__Group__0 ) )
            // InternalEtlParser.g:2133:3: ( rule__IdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2134:3: ( rule__IdFilter__Group__0 )
            // InternalEtlParser.g:2134:4: rule__IdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIdFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEtlParser.g:2143:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2144:1: ( ruleTermFilter EOF )
            // InternalEtlParser.g:2145:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEtlParser.g:2152:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2156:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEtlParser.g:2157:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2157:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEtlParser.g:2158:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2159:3: ( rule__TermFilter__Group__0 )
            // InternalEtlParser.g:2159:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleSearchTerm"
    // InternalEtlParser.g:2168:1: entryRuleSearchTerm : ruleSearchTerm EOF ;
    public final void entryRuleSearchTerm() throws RecognitionException {
        try {
            // InternalEtlParser.g:2169:1: ( ruleSearchTerm EOF )
            // InternalEtlParser.g:2170:1: ruleSearchTerm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSearchTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSearchTermRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSearchTerm"


    // $ANTLR start "ruleSearchTerm"
    // InternalEtlParser.g:2177:1: ruleSearchTerm : ( ( rule__SearchTerm__Alternatives ) ) ;
    public final void ruleSearchTerm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2181:2: ( ( ( rule__SearchTerm__Alternatives ) ) )
            // InternalEtlParser.g:2182:2: ( ( rule__SearchTerm__Alternatives ) )
            {
            // InternalEtlParser.g:2182:2: ( ( rule__SearchTerm__Alternatives ) )
            // InternalEtlParser.g:2183:3: ( rule__SearchTerm__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSearchTermAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2184:3: ( rule__SearchTerm__Alternatives )
            // InternalEtlParser.g:2184:4: rule__SearchTerm__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SearchTerm__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSearchTermAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSearchTerm"


    // $ANTLR start "entryRuleTypedSearchTerm"
    // InternalEtlParser.g:2193:1: entryRuleTypedSearchTerm : ruleTypedSearchTerm EOF ;
    public final void entryRuleTypedSearchTerm() throws RecognitionException {
        try {
            // InternalEtlParser.g:2194:1: ( ruleTypedSearchTerm EOF )
            // InternalEtlParser.g:2195:1: ruleTypedSearchTerm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTerm"


    // $ANTLR start "ruleTypedSearchTerm"
    // InternalEtlParser.g:2202:1: ruleTypedSearchTerm : ( ( rule__TypedSearchTerm__ClauseAssignment ) ) ;
    public final void ruleTypedSearchTerm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2206:2: ( ( ( rule__TypedSearchTerm__ClauseAssignment ) ) )
            // InternalEtlParser.g:2207:2: ( ( rule__TypedSearchTerm__ClauseAssignment ) )
            {
            // InternalEtlParser.g:2207:2: ( ( rule__TypedSearchTerm__ClauseAssignment ) )
            // InternalEtlParser.g:2208:3: ( rule__TypedSearchTerm__ClauseAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermAccess().getClauseAssignment()); 
            }
            // InternalEtlParser.g:2209:3: ( rule__TypedSearchTerm__ClauseAssignment )
            // InternalEtlParser.g:2209:4: rule__TypedSearchTerm__ClauseAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTerm__ClauseAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermAccess().getClauseAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTerm"


    // $ANTLR start "entryRuleTypedSearchTermSet"
    // InternalEtlParser.g:2218:1: entryRuleTypedSearchTermSet : ruleTypedSearchTermSet EOF ;
    public final void entryRuleTypedSearchTermSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2219:1: ( ruleTypedSearchTermSet EOF )
            // InternalEtlParser.g:2220:1: ruleTypedSearchTermSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTermSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTermSet"


    // $ANTLR start "ruleTypedSearchTermSet"
    // InternalEtlParser.g:2227:1: ruleTypedSearchTermSet : ( ( rule__TypedSearchTermSet__Group__0 ) ) ;
    public final void ruleTypedSearchTermSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2231:2: ( ( ( rule__TypedSearchTermSet__Group__0 ) ) )
            // InternalEtlParser.g:2232:2: ( ( rule__TypedSearchTermSet__Group__0 ) )
            {
            // InternalEtlParser.g:2232:2: ( ( rule__TypedSearchTermSet__Group__0 ) )
            // InternalEtlParser.g:2233:3: ( rule__TypedSearchTermSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:2234:3: ( rule__TypedSearchTermSet__Group__0 )
            // InternalEtlParser.g:2234:4: rule__TypedSearchTermSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTermSet"


    // $ANTLR start "entryRuleTypedSearchTermClause"
    // InternalEtlParser.g:2243:1: entryRuleTypedSearchTermClause : ruleTypedSearchTermClause EOF ;
    public final void entryRuleTypedSearchTermClause() throws RecognitionException {
        try {
            // InternalEtlParser.g:2244:1: ( ruleTypedSearchTermClause EOF )
            // InternalEtlParser.g:2245:1: ruleTypedSearchTermClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTermClause"


    // $ANTLR start "ruleTypedSearchTermClause"
    // InternalEtlParser.g:2252:1: ruleTypedSearchTermClause : ( ( rule__TypedSearchTermClause__Alternatives ) ) ;
    public final void ruleTypedSearchTermClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2256:2: ( ( ( rule__TypedSearchTermClause__Alternatives ) ) )
            // InternalEtlParser.g:2257:2: ( ( rule__TypedSearchTermClause__Alternatives ) )
            {
            // InternalEtlParser.g:2257:2: ( ( rule__TypedSearchTermClause__Alternatives ) )
            // InternalEtlParser.g:2258:3: ( rule__TypedSearchTermClause__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2259:3: ( rule__TypedSearchTermClause__Alternatives )
            // InternalEtlParser.g:2259:4: rule__TypedSearchTermClause__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTermClause"


    // $ANTLR start "entryRuleRegularExpression"
    // InternalEtlParser.g:2268:1: entryRuleRegularExpression : ruleRegularExpression EOF ;
    public final void entryRuleRegularExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:2269:1: ( ruleRegularExpression EOF )
            // InternalEtlParser.g:2270:1: ruleRegularExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRegularExpression"


    // $ANTLR start "ruleRegularExpression"
    // InternalEtlParser.g:2277:1: ruleRegularExpression : ( RULE_STRING ) ;
    public final void ruleRegularExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2281:2: ( ( RULE_STRING ) )
            // InternalEtlParser.g:2282:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:2282:2: ( RULE_STRING )
            // InternalEtlParser.g:2283:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRegularExpression"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEtlParser.g:2293:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2294:1: ( ruleLanguageFilter EOF )
            // InternalEtlParser.g:2295:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEtlParser.g:2302:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2306:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEtlParser.g:2307:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2307:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEtlParser.g:2308:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2309:3: ( rule__LanguageFilter__Group__0 )
            // InternalEtlParser.g:2309:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEtlParser.g:2318:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2319:1: ( ruleTypeFilter EOF )
            // InternalEtlParser.g:2320:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEtlParser.g:2327:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2331:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEtlParser.g:2332:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2332:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEtlParser.g:2333:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2334:3: ( rule__TypeFilter__Alternatives )
            // InternalEtlParser.g:2334:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEtlParser.g:2343:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2344:1: ( ruleTypeIdFilter EOF )
            // InternalEtlParser.g:2345:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEtlParser.g:2352:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2356:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2357:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2357:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEtlParser.g:2358:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2359:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEtlParser.g:2359:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEtlParser.g:2368:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2369:1: ( ruleTypeTokenFilter EOF )
            // InternalEtlParser.g:2370:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEtlParser.g:2377:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2381:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEtlParser.g:2382:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2382:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEtlParser.g:2383:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2384:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEtlParser.g:2384:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEtlParser.g:2393:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2394:1: ( ruleDialectFilter EOF )
            // InternalEtlParser.g:2395:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEtlParser.g:2402:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2406:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEtlParser.g:2407:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2407:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEtlParser.g:2408:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2409:3: ( rule__DialectFilter__Alternatives )
            // InternalEtlParser.g:2409:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEtlParser.g:2418:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2419:1: ( ruleDialectIdFilter EOF )
            // InternalEtlParser.g:2420:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEtlParser.g:2427:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2431:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2432:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2432:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEtlParser.g:2433:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2434:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEtlParser.g:2434:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEtlParser.g:2443:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2444:1: ( ruleDialectAliasFilter EOF )
            // InternalEtlParser.g:2445:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEtlParser.g:2452:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2456:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEtlParser.g:2457:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2457:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEtlParser.g:2458:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2459:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEtlParser.g:2459:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEtlParser.g:2468:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEtlParser.g:2469:1: ( ruleDialect EOF )
            // InternalEtlParser.g:2470:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEtlParser.g:2477:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2481:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEtlParser.g:2482:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEtlParser.g:2482:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEtlParser.g:2483:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEtlParser.g:2484:3: ( rule__Dialect__Group__0 )
            // InternalEtlParser.g:2484:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEtlParser.g:2493:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
        try {
            // InternalEtlParser.g:2494:1: ( ruleDialectAlias EOF )
            // InternalEtlParser.g:2495:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEtlParser.g:2502:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2506:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEtlParser.g:2507:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEtlParser.g:2507:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEtlParser.g:2508:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEtlParser.g:2509:3: ( rule__DialectAlias__Group__0 )
            // InternalEtlParser.g:2509:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEtlParser.g:2518:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEtlParser.g:2519:1: ( ruleAcceptability EOF )
            // InternalEtlParser.g:2520:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEtlParser.g:2527:1: ruleAcceptability : ( ( rule__Acceptability__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2531:2: ( ( ( rule__Acceptability__AcceptabilitiesAssignment ) ) )
            // InternalEtlParser.g:2532:2: ( ( rule__Acceptability__AcceptabilitiesAssignment ) )
            {
            // InternalEtlParser.g:2532:2: ( ( rule__Acceptability__AcceptabilitiesAssignment ) )
            // InternalEtlParser.g:2533:3: ( rule__Acceptability__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEtlParser.g:2534:3: ( rule__Acceptability__AcceptabilitiesAssignment )
            // InternalEtlParser.g:2534:4: rule__Acceptability__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleDefinitionStatusFilter"
    // InternalEtlParser.g:2543:1: entryRuleDefinitionStatusFilter : ruleDefinitionStatusFilter EOF ;
    public final void entryRuleDefinitionStatusFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2544:1: ( ruleDefinitionStatusFilter EOF )
            // InternalEtlParser.g:2545:1: ruleDefinitionStatusFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusFilter"


    // $ANTLR start "ruleDefinitionStatusFilter"
    // InternalEtlParser.g:2552:1: ruleDefinitionStatusFilter : ( ( rule__DefinitionStatusFilter__Alternatives ) ) ;
    public final void ruleDefinitionStatusFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2556:2: ( ( ( rule__DefinitionStatusFilter__Alternatives ) ) )
            // InternalEtlParser.g:2557:2: ( ( rule__DefinitionStatusFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2557:2: ( ( rule__DefinitionStatusFilter__Alternatives ) )
            // InternalEtlParser.g:2558:3: ( rule__DefinitionStatusFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2559:3: ( rule__DefinitionStatusFilter__Alternatives )
            // InternalEtlParser.g:2559:4: rule__DefinitionStatusFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusFilter"


    // $ANTLR start "entryRuleDefinitionStatusIdFilter"
    // InternalEtlParser.g:2568:1: entryRuleDefinitionStatusIdFilter : ruleDefinitionStatusIdFilter EOF ;
    public final void entryRuleDefinitionStatusIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2569:1: ( ruleDefinitionStatusIdFilter EOF )
            // InternalEtlParser.g:2570:1: ruleDefinitionStatusIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusIdFilter"


    // $ANTLR start "ruleDefinitionStatusIdFilter"
    // InternalEtlParser.g:2577:1: ruleDefinitionStatusIdFilter : ( ( rule__DefinitionStatusIdFilter__Group__0 ) ) ;
    public final void ruleDefinitionStatusIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2581:2: ( ( ( rule__DefinitionStatusIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2582:2: ( ( rule__DefinitionStatusIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2582:2: ( ( rule__DefinitionStatusIdFilter__Group__0 ) )
            // InternalEtlParser.g:2583:3: ( rule__DefinitionStatusIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2584:3: ( rule__DefinitionStatusIdFilter__Group__0 )
            // InternalEtlParser.g:2584:4: rule__DefinitionStatusIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusIdFilter"


    // $ANTLR start "entryRuleDefinitionStatusTokenFilter"
    // InternalEtlParser.g:2593:1: entryRuleDefinitionStatusTokenFilter : ruleDefinitionStatusTokenFilter EOF ;
    public final void entryRuleDefinitionStatusTokenFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2594:1: ( ruleDefinitionStatusTokenFilter EOF )
            // InternalEtlParser.g:2595:1: ruleDefinitionStatusTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusTokenFilter"


    // $ANTLR start "ruleDefinitionStatusTokenFilter"
    // InternalEtlParser.g:2602:1: ruleDefinitionStatusTokenFilter : ( ( rule__DefinitionStatusTokenFilter__Group__0 ) ) ;
    public final void ruleDefinitionStatusTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2606:2: ( ( ( rule__DefinitionStatusTokenFilter__Group__0 ) ) )
            // InternalEtlParser.g:2607:2: ( ( rule__DefinitionStatusTokenFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2607:2: ( ( rule__DefinitionStatusTokenFilter__Group__0 ) )
            // InternalEtlParser.g:2608:3: ( rule__DefinitionStatusTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2609:3: ( rule__DefinitionStatusTokenFilter__Group__0 )
            // InternalEtlParser.g:2609:4: rule__DefinitionStatusTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusTokenFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEtlParser.g:2618:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2619:1: ( ruleModuleFilter EOF )
            // InternalEtlParser.g:2620:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEtlParser.g:2627:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2631:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEtlParser.g:2632:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2632:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEtlParser.g:2633:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2634:3: ( rule__ModuleFilter__Group__0 )
            // InternalEtlParser.g:2634:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEtlParser.g:2643:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2644:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEtlParser.g:2645:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEtlParser.g:2652:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2656:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEtlParser.g:2657:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2657:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEtlParser.g:2658:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2659:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEtlParser.g:2659:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEtlParser.g:2668:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2669:1: ( ruleActiveFilter EOF )
            // InternalEtlParser.g:2670:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEtlParser.g:2677:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2681:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEtlParser.g:2682:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2682:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEtlParser.g:2683:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2684:3: ( rule__ActiveFilter__Group__0 )
            // InternalEtlParser.g:2684:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEtlParser.g:2693:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2694:1: ( ruleSemanticTagFilter EOF )
            // InternalEtlParser.g:2695:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEtlParser.g:2702:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2706:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEtlParser.g:2707:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2707:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEtlParser.g:2708:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2709:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEtlParser.g:2709:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEtlParser.g:2718:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2719:1: ( rulePreferredInFilter EOF )
            // InternalEtlParser.g:2720:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEtlParser.g:2727:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2731:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2732:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2732:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEtlParser.g:2733:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2734:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEtlParser.g:2734:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEtlParser.g:2743:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2744:1: ( ruleAcceptableInFilter EOF )
            // InternalEtlParser.g:2745:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEtlParser.g:2752:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2756:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2757:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2757:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEtlParser.g:2758:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2759:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEtlParser.g:2759:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEtlParser.g:2768:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2769:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEtlParser.g:2770:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEtlParser.g:2777:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2781:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEtlParser.g:2782:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2782:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEtlParser.g:2783:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2784:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEtlParser.g:2784:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEtlParser.g:2793:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2794:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEtlParser.g:2795:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEtlParser.g:2802:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2806:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEtlParser.g:2807:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2807:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEtlParser.g:2808:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2809:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEtlParser.g:2809:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleFilterValue"
    // InternalEtlParser.g:2818:1: entryRuleFilterValue : ruleFilterValue EOF ;
    public final void entryRuleFilterValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:2819:1: ( ruleFilterValue EOF )
            // InternalEtlParser.g:2820:1: ruleFilterValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterValue"


    // $ANTLR start "ruleFilterValue"
    // InternalEtlParser.g:2827:1: ruleFilterValue : ( ( rule__FilterValue__Alternatives ) ) ;
    public final void ruleFilterValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2831:2: ( ( ( rule__FilterValue__Alternatives ) ) )
            // InternalEtlParser.g:2832:2: ( ( rule__FilterValue__Alternatives ) )
            {
            // InternalEtlParser.g:2832:2: ( ( rule__FilterValue__Alternatives ) )
            // InternalEtlParser.g:2833:3: ( rule__FilterValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2834:3: ( rule__FilterValue__Alternatives )
            // InternalEtlParser.g:2834:4: rule__FilterValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterValue"


    // $ANTLR start "entryRuleSupplement"
    // InternalEtlParser.g:2843:1: entryRuleSupplement : ruleSupplement EOF ;
    public final void entryRuleSupplement() throws RecognitionException {
        try {
            // InternalEtlParser.g:2844:1: ( ruleSupplement EOF )
            // InternalEtlParser.g:2845:1: ruleSupplement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSupplement"


    // $ANTLR start "ruleSupplement"
    // InternalEtlParser.g:2852:1: ruleSupplement : ( ruleHistorySupplement ) ;
    public final void ruleSupplement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2856:2: ( ( ruleHistorySupplement ) )
            // InternalEtlParser.g:2857:2: ( ruleHistorySupplement )
            {
            // InternalEtlParser.g:2857:2: ( ruleHistorySupplement )
            // InternalEtlParser.g:2858:3: ruleHistorySupplement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementAccess().getHistorySupplementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleHistorySupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementAccess().getHistorySupplementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSupplement"


    // $ANTLR start "entryRuleHistorySupplement"
    // InternalEtlParser.g:2868:1: entryRuleHistorySupplement : ruleHistorySupplement EOF ;
    public final void entryRuleHistorySupplement() throws RecognitionException {
        try {
            // InternalEtlParser.g:2869:1: ( ruleHistorySupplement EOF )
            // InternalEtlParser.g:2870:1: ruleHistorySupplement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHistorySupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHistorySupplement"


    // $ANTLR start "ruleHistorySupplement"
    // InternalEtlParser.g:2877:1: ruleHistorySupplement : ( ( rule__HistorySupplement__Group__0 ) ) ;
    public final void ruleHistorySupplement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2881:2: ( ( ( rule__HistorySupplement__Group__0 ) ) )
            // InternalEtlParser.g:2882:2: ( ( rule__HistorySupplement__Group__0 ) )
            {
            // InternalEtlParser.g:2882:2: ( ( rule__HistorySupplement__Group__0 ) )
            // InternalEtlParser.g:2883:3: ( rule__HistorySupplement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getGroup()); 
            }
            // InternalEtlParser.g:2884:3: ( rule__HistorySupplement__Group__0 )
            // InternalEtlParser.g:2884:4: rule__HistorySupplement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHistorySupplement"


    // $ANTLR start "entryRuleHistoryProfile"
    // InternalEtlParser.g:2893:1: entryRuleHistoryProfile : ruleHistoryProfile EOF ;
    public final void entryRuleHistoryProfile() throws RecognitionException {
        try {
            // InternalEtlParser.g:2894:1: ( ruleHistoryProfile EOF )
            // InternalEtlParser.g:2895:1: ruleHistoryProfile EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHistoryProfile();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHistoryProfile"


    // $ANTLR start "ruleHistoryProfile"
    // InternalEtlParser.g:2902:1: ruleHistoryProfile : ( ( rule__HistoryProfile__Group__0 ) ) ;
    public final void ruleHistoryProfile() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2906:2: ( ( ( rule__HistoryProfile__Group__0 ) ) )
            // InternalEtlParser.g:2907:2: ( ( rule__HistoryProfile__Group__0 ) )
            {
            // InternalEtlParser.g:2907:2: ( ( rule__HistoryProfile__Group__0 ) )
            // InternalEtlParser.g:2908:3: ( rule__HistoryProfile__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getGroup()); 
            }
            // InternalEtlParser.g:2909:3: ( rule__HistoryProfile__Group__0 )
            // InternalEtlParser.g:2909:4: rule__HistoryProfile__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHistoryProfile"


    // $ANTLR start "entryRuleIdentifier"
    // InternalEtlParser.g:2918:1: entryRuleIdentifier : ruleIdentifier EOF ;
    public final void entryRuleIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2922:1: ( ruleIdentifier EOF )
            // InternalEtlParser.g:2923:1: ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalEtlParser.g:2933:1: ruleIdentifier : ( ( rule__Identifier__Group__0 ) ) ;
    public final void ruleIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2938:2: ( ( ( rule__Identifier__Group__0 ) ) )
            // InternalEtlParser.g:2939:2: ( ( rule__Identifier__Group__0 ) )
            {
            // InternalEtlParser.g:2939:2: ( ( rule__Identifier__Group__0 ) )
            // InternalEtlParser.g:2940:3: ( rule__Identifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getGroup()); 
            }
            // InternalEtlParser.g:2941:3: ( rule__Identifier__Group__0 )
            // InternalEtlParser.g:2941:4: rule__Identifier__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEtlParser.g:2951:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2955:1: ( ruleNonNegativeInteger EOF )
            // InternalEtlParser.g:2956:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEtlParser.g:2966:1: ruleNonNegativeInteger : ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2971:2: ( ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) ) )
            // InternalEtlParser.g:2972:2: ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) )
            {
            // InternalEtlParser.g:2972:2: ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) )
            // InternalEtlParser.g:2973:3: ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* )
            {
            // InternalEtlParser.g:2973:3: ( ( RULE_DIGIT ) )
            // InternalEtlParser.g:2974:4: ( RULE_DIGIT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }
            // InternalEtlParser.g:2975:4: ( RULE_DIGIT )
            // InternalEtlParser.g:2975:5: RULE_DIGIT
            {
            match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }

            }

            // InternalEtlParser.g:2978:3: ( ( RULE_DIGIT )* )
            // InternalEtlParser.g:2979:4: ( RULE_DIGIT )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }
            // InternalEtlParser.g:2980:4: ( RULE_DIGIT )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalEtlParser.g:2980:5: RULE_DIGIT
            	    {
            	    match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEtlParser.g:2991:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2995:1: ( ruleNonNegativeDecimal EOF )
            // InternalEtlParser.g:2996:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEtlParser.g:3006:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3011:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEtlParser.g:3012:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEtlParser.g:3012:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEtlParser.g:3013:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:3014:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEtlParser.g:3014:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEtlParser.g:3024:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:3025:1: ( ruleMaxValue EOF )
            // InternalEtlParser.g:3026:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEtlParser.g:3033:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3037:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEtlParser.g:3038:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEtlParser.g:3038:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEtlParser.g:3039:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3040:3: ( rule__MaxValue__Alternatives )
            // InternalEtlParser.g:3040:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEtlParser.g:3049:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:3053:1: ( ruleInteger EOF )
            // InternalEtlParser.g:3054:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEtlParser.g:3064:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3069:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEtlParser.g:3070:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEtlParser.g:3070:2: ( ( rule__Integer__Group__0 ) )
            // InternalEtlParser.g:3071:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEtlParser.g:3072:3: ( rule__Integer__Group__0 )
            // InternalEtlParser.g:3072:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEtlParser.g:3082:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:3086:1: ( ruleDecimal EOF )
            // InternalEtlParser.g:3087:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEtlParser.g:3097:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3102:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEtlParser.g:3103:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEtlParser.g:3103:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEtlParser.g:3104:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:3105:3: ( rule__Decimal__Group__0 )
            // InternalEtlParser.g:3105:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEtlParser.g:3115:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
        try {
            // InternalEtlParser.g:3116:1: ( ruleBoolean EOF )
            // InternalEtlParser.g:3117:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEtlParser.g:3124:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3128:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEtlParser.g:3129:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEtlParser.g:3129:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEtlParser.g:3130:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3131:3: ( rule__Boolean__Alternatives )
            // InternalEtlParser.g:3131:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleActiveBoolean"
    // InternalEtlParser.g:3140:1: entryRuleActiveBoolean : ruleActiveBoolean EOF ;
    public final void entryRuleActiveBoolean() throws RecognitionException {
        try {
            // InternalEtlParser.g:3141:1: ( ruleActiveBoolean EOF )
            // InternalEtlParser.g:3142:1: ruleActiveBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveBoolean"


    // $ANTLR start "ruleActiveBoolean"
    // InternalEtlParser.g:3149:1: ruleActiveBoolean : ( ( rule__ActiveBoolean__Alternatives ) ) ;
    public final void ruleActiveBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3153:2: ( ( ( rule__ActiveBoolean__Alternatives ) ) )
            // InternalEtlParser.g:3154:2: ( ( rule__ActiveBoolean__Alternatives ) )
            {
            // InternalEtlParser.g:3154:2: ( ( rule__ActiveBoolean__Alternatives ) )
            // InternalEtlParser.g:3155:3: ( rule__ActiveBoolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveBooleanAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3156:3: ( rule__ActiveBoolean__Alternatives )
            // InternalEtlParser.g:3156:4: rule__ActiveBoolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveBoolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveBoolean"


    // $ANTLR start "entryRuleUnquotedString"
    // InternalEtlParser.g:3165:1: entryRuleUnquotedString : ruleUnquotedString EOF ;
    public final void entryRuleUnquotedString() throws RecognitionException {
        try {
            // InternalEtlParser.g:3166:1: ( ruleUnquotedString EOF )
            // InternalEtlParser.g:3167:1: ruleUnquotedString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnquotedString"


    // $ANTLR start "ruleUnquotedString"
    // InternalEtlParser.g:3174:1: ruleUnquotedString : ( ( rule__UnquotedString__Alternatives ) ) ;
    public final void ruleUnquotedString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3178:2: ( ( ( rule__UnquotedString__Alternatives ) ) )
            // InternalEtlParser.g:3179:2: ( ( rule__UnquotedString__Alternatives ) )
            {
            // InternalEtlParser.g:3179:2: ( ( rule__UnquotedString__Alternatives ) )
            // InternalEtlParser.g:3180:3: ( rule__UnquotedString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3181:3: ( rule__UnquotedString__Alternatives )
            // InternalEtlParser.g:3181:4: rule__UnquotedString__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnquotedString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnquotedString"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEtlParser.g:3190:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:3194:1: ( ruleDialectAliasValue EOF )
            // InternalEtlParser.g:3195:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEtlParser.g:3205:1: ruleDialectAliasValue : ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3210:2: ( ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) )
            // InternalEtlParser.g:3211:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            {
            // InternalEtlParser.g:3211:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            // InternalEtlParser.g:3212:3: ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* )
            {
            // InternalEtlParser.g:3212:3: ( ( rule__DialectAliasValue__Alternatives ) )
            // InternalEtlParser.g:3213:4: ( rule__DialectAliasValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3214:4: ( rule__DialectAliasValue__Alternatives )
            // InternalEtlParser.g:3214:5: rule__DialectAliasValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:3217:3: ( ( rule__DialectAliasValue__Alternatives )* )
            // InternalEtlParser.g:3218:4: ( rule__DialectAliasValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3219:4: ( rule__DialectAliasValue__Alternatives )*
            loop2:
            do {
                int alt2=2;
                switch ( input.LA(1) ) {
                case RULE_DASH:
                    {
                    int LA2_2 = input.LA(2);

                    if ( (synpred2_InternalEtlParser()) ) {
                        alt2=1;
                    }


                    }
                    break;
                case RULE_KEYWORD:
                    {
                    int LA2_3 = input.LA(2);

                    if ( (synpred2_InternalEtlParser()) ) {
                        alt2=1;
                    }


                    }
                    break;
                case RULE_DIGIT:
                    {
                    int LA2_4 = input.LA(2);

                    if ( (synpred2_InternalEtlParser()) ) {
                        alt2=1;
                    }


                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // InternalEtlParser.g:3219:5: rule__DialectAliasValue__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:3230:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEtlParser.g:3231:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEtlParser.g:3232:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:3239:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3243:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEtlParser.g:3244:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEtlParser.g:3244:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEtlParser.g:3245:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3246:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEtlParser.g:3246:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleHISTORY_PROFILE_TYPE"
    // InternalEtlParser.g:3255:1: entryRuleHISTORY_PROFILE_TYPE : ruleHISTORY_PROFILE_TYPE EOF ;
    public final void entryRuleHISTORY_PROFILE_TYPE() throws RecognitionException {
        try {
            // InternalEtlParser.g:3256:1: ( ruleHISTORY_PROFILE_TYPE EOF )
            // InternalEtlParser.g:3257:1: ruleHISTORY_PROFILE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHISTORY_PROFILE_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHISTORY_PROFILE_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHISTORY_PROFILE_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHISTORY_PROFILE_TYPE"


    // $ANTLR start "ruleHISTORY_PROFILE_TYPE"
    // InternalEtlParser.g:3264:1: ruleHISTORY_PROFILE_TYPE : ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) ) ;
    public final void ruleHISTORY_PROFILE_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3268:2: ( ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) ) )
            // InternalEtlParser.g:3269:2: ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) )
            {
            // InternalEtlParser.g:3269:2: ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) )
            // InternalEtlParser.g:3270:3: ( rule__HISTORY_PROFILE_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3271:3: ( rule__HISTORY_PROFILE_TYPE__Alternatives )
            // InternalEtlParser.g:3271:4: rule__HISTORY_PROFILE_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HISTORY_PROFILE_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHISTORY_PROFILE_TYPE"


    // $ANTLR start "entryRuleSHORT_DOMAIN"
    // InternalEtlParser.g:3280:1: entryRuleSHORT_DOMAIN : ruleSHORT_DOMAIN EOF ;
    public final void entryRuleSHORT_DOMAIN() throws RecognitionException {
        try {
            // InternalEtlParser.g:3281:1: ( ruleSHORT_DOMAIN EOF )
            // InternalEtlParser.g:3282:1: ruleSHORT_DOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSHORT_DOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSHORT_DOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSHORT_DOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSHORT_DOMAIN"


    // $ANTLR start "ruleSHORT_DOMAIN"
    // InternalEtlParser.g:3289:1: ruleSHORT_DOMAIN : ( ( rule__SHORT_DOMAIN__Alternatives ) ) ;
    public final void ruleSHORT_DOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3293:2: ( ( ( rule__SHORT_DOMAIN__Alternatives ) ) )
            // InternalEtlParser.g:3294:2: ( ( rule__SHORT_DOMAIN__Alternatives ) )
            {
            // InternalEtlParser.g:3294:2: ( ( rule__SHORT_DOMAIN__Alternatives ) )
            // InternalEtlParser.g:3295:3: ( rule__SHORT_DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSHORT_DOMAINAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3296:3: ( rule__SHORT_DOMAIN__Alternatives )
            // InternalEtlParser.g:3296:4: rule__SHORT_DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SHORT_DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSHORT_DOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSHORT_DOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3305:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3306:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3307:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3314:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3318:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3319:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3319:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3320:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3321:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3321:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3330:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3331:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3332:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3339:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3343:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3344:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3344:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3345:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3346:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3346:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0"
    // InternalEtlParser.g:3354:1: rule__ExpressionTemplate__Alternatives_1_0 : ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3358:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_EQUIVALENT_TO && LA3_0<=RULE_SUBTYPE_OF)) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalEtlParser.g:3359:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    {
                    // InternalEtlParser.g:3359:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    // InternalEtlParser.g:3360:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }
                    // InternalEtlParser.g:3361:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    // InternalEtlParser.g:3361:4: rule__ExpressionTemplate__Alternatives_1_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3365:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    {
                    // InternalEtlParser.g:3365:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    // InternalEtlParser.g:3366:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }
                    // InternalEtlParser.g:3367:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    // InternalEtlParser.g:3367:4: rule__ExpressionTemplate__SlotAssignment_1_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__SlotAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0_0"
    // InternalEtlParser.g:3375:1: rule__ExpressionTemplate__Alternatives_1_0_0 : ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3379:1: ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_SUBTYPE_OF) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_EQUIVALENT_TO) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalEtlParser.g:3380:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    {
                    // InternalEtlParser.g:3380:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    // InternalEtlParser.g:3381:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }
                    // InternalEtlParser.g:3382:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    // InternalEtlParser.g:3382:4: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3386:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3386:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3387:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0_0"


    // $ANTLR start "rule__Refinement__Alternatives_0"
    // InternalEtlParser.g:3396:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );
    public final void rule__Refinement__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3400:1: ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) )
            int alt5=2;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalEtlParser.g:3401:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    {
                    // InternalEtlParser.g:3401:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    // InternalEtlParser.g:3402:3: ( rule__Refinement__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }
                    // InternalEtlParser.g:3403:3: ( rule__Refinement__Group_0_0__0 )
                    // InternalEtlParser.g:3403:4: rule__Refinement__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3407:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    {
                    // InternalEtlParser.g:3407:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    // InternalEtlParser.g:3408:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }
                    // InternalEtlParser.g:3409:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    // InternalEtlParser.g:3409:4: rule__Refinement__GroupsAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__GroupsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Alternatives_0"


    // $ANTLR start "rule__AttributeValue__Alternatives"
    // InternalEtlParser.g:3417:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );
    public final void rule__AttributeValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3421:1: ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) )
            int alt6=6;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalEtlParser.g:3422:2: ( ruleConceptReference )
                    {
                    // InternalEtlParser.g:3422:2: ( ruleConceptReference )
                    // InternalEtlParser.g:3423:3: ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3428:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3428:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    // InternalEtlParser.g:3429:3: ( rule__AttributeValue__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3430:3: ( rule__AttributeValue__Group_1__0 )
                    // InternalEtlParser.g:3430:4: rule__AttributeValue__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeValue__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3434:2: ( ruleStringValue )
                    {
                    // InternalEtlParser.g:3434:2: ( ruleStringValue )
                    // InternalEtlParser.g:3435:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3440:2: ( ruleIntegerValue )
                    {
                    // InternalEtlParser.g:3440:2: ( ruleIntegerValue )
                    // InternalEtlParser.g:3441:3: ruleIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3446:2: ( ruleDecimalValue )
                    {
                    // InternalEtlParser.g:3446:2: ( ruleDecimalValue )
                    // InternalEtlParser.g:3447:3: ruleDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3452:2: ( ruleConcreteValueReplacementSlot )
                    {
                    // InternalEtlParser.g:3452:2: ( ruleConcreteValueReplacementSlot )
                    // InternalEtlParser.g:3453:3: ruleConcreteValueReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConcreteValueReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Alternatives"


    // $ANTLR start "rule__ConcreteValueReplacementSlot__Alternatives"
    // InternalEtlParser.g:3462:1: rule__ConcreteValueReplacementSlot__Alternatives : ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) );
    public final void rule__ConcreteValueReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3466:1: ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) )
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==RULE_PLUS) ) {
                    switch ( input.LA(3) ) {
                    case RULE_STR:
                        {
                        alt7=1;
                        }
                        break;
                    case RULE_DEC:
                        {
                        alt7=3;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt7=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalEtlParser.g:3467:2: ( ruleStringReplacementSlot )
                    {
                    // InternalEtlParser.g:3467:2: ( ruleStringReplacementSlot )
                    // InternalEtlParser.g:3468:3: ruleStringReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3473:2: ( ruleIntegerReplacementSlot )
                    {
                    // InternalEtlParser.g:3473:2: ( ruleIntegerReplacementSlot )
                    // InternalEtlParser.g:3474:3: ruleIntegerReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3479:2: ( ruleDecimalReplacementSlot )
                    {
                    // InternalEtlParser.g:3479:2: ( ruleDecimalReplacementSlot )
                    // InternalEtlParser.g:3480:3: ruleDecimalReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConcreteValueReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReplacementSlot__Alternatives"
    // InternalEtlParser.g:3489:1: rule__ConceptReplacementSlot__Alternatives : ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) );
    public final void rule__ConceptReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3493:1: ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RULE_PLUS) ) {
                    int LA8_2 = input.LA(3);

                    if ( (LA8_2==RULE_ID) ) {
                        alt8=1;
                    }
                    else if ( (LA8_2==RULE_DOUBLE_SQUARE_CLOSE||LA8_2==RULE_SCG||LA8_2==RULE_SLOTNAME_STRING||LA8_2==RULE_ROUND_OPEN) ) {
                        alt8=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEtlParser.g:3494:2: ( ruleConceptIdReplacementSlot )
                    {
                    // InternalEtlParser.g:3494:2: ( ruleConceptIdReplacementSlot )
                    // InternalEtlParser.g:3495:3: ruleConceptIdReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptIdReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3500:2: ( ruleExpressionReplacementSlot )
                    {
                    // InternalEtlParser.g:3500:2: ( ruleExpressionReplacementSlot )
                    // InternalEtlParser.g:3501:3: ruleExpressionReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpressionReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReference__Alternatives"
    // InternalEtlParser.g:3510:1: rule__ConceptReference__Alternatives : ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) );
    public final void rule__ConceptReference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3514:1: ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt9=1;
            }
            else if ( ((LA9_0>=RULE_ID_KEYWORD && LA9_0<=RULE_KEYWORD)||LA9_0==RULE_DIGIT) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalEtlParser.g:3515:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    {
                    // InternalEtlParser.g:3515:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    // InternalEtlParser.g:3516:3: ( rule__ConceptReference__SlotAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }
                    // InternalEtlParser.g:3517:3: ( rule__ConceptReference__SlotAssignment_0 )
                    // InternalEtlParser.g:3517:4: rule__ConceptReference__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3521:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3521:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    // InternalEtlParser.g:3522:3: ( rule__ConceptReference__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3523:3: ( rule__ConceptReference__Group_1__0 )
                    // InternalEtlParser.g:3523:4: rule__ConceptReference__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Alternatives"


    // $ANTLR start "rule__SlotToken__Alternatives"
    // InternalEtlParser.g:3531:1: rule__SlotToken__Alternatives : ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__SlotToken__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3535:1: ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt10=18;
            switch ( input.LA(1) ) {
            case RULE_EQUIVALENT_TO:
                {
                alt10=1;
                }
                break;
            case RULE_SUBTYPE_OF:
                {
                alt10=2;
                }
                break;
            case RULE_COMMA:
                {
                alt10=3;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt10=4;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt10=5;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt10=6;
                }
                break;
            case RULE_REVERSED:
                {
                alt10=7;
                }
                break;
            case RULE_CARET:
                {
                alt10=8;
                }
                break;
            case RULE_LT:
                {
                alt10=9;
                }
                break;
            case RULE_LTE:
                {
                alt10=10;
                }
                break;
            case RULE_DBL_LT:
                {
                alt10=11;
                }
                break;
            case RULE_LT_EM:
                {
                alt10=12;
                }
                break;
            case RULE_GT:
                {
                alt10=13;
                }
                break;
            case RULE_GTE:
                {
                alt10=14;
                }
                break;
            case RULE_DBL_GT:
                {
                alt10=15;
                }
                break;
            case RULE_GT_EM:
                {
                alt10=16;
                }
                break;
            case RULE_EQUAL:
                {
                alt10=17;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt10=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalEtlParser.g:3536:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3536:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3537:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3542:2: ( RULE_SUBTYPE_OF )
                    {
                    // InternalEtlParser.g:3542:2: ( RULE_SUBTYPE_OF )
                    // InternalEtlParser.g:3543:3: RULE_SUBTYPE_OF
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3548:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3548:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3549:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3554:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3554:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3555:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3560:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3560:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3561:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3566:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:3566:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:3567:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3572:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:3572:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:3573:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3578:2: ( RULE_CARET )
                    {
                    // InternalEtlParser.g:3578:2: ( RULE_CARET )
                    // InternalEtlParser.g:3579:3: RULE_CARET
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }
                    match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3584:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:3584:2: ( RULE_LT )
                    // InternalEtlParser.g:3585:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3590:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:3590:2: ( RULE_LTE )
                    // InternalEtlParser.g:3591:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3596:2: ( RULE_DBL_LT )
                    {
                    // InternalEtlParser.g:3596:2: ( RULE_DBL_LT )
                    // InternalEtlParser.g:3597:3: RULE_DBL_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }
                    match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3602:2: ( RULE_LT_EM )
                    {
                    // InternalEtlParser.g:3602:2: ( RULE_LT_EM )
                    // InternalEtlParser.g:3603:3: RULE_LT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }
                    match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3608:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:3608:2: ( RULE_GT )
                    // InternalEtlParser.g:3609:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:3614:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:3614:2: ( RULE_GTE )
                    // InternalEtlParser.g:3615:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:3620:2: ( RULE_DBL_GT )
                    {
                    // InternalEtlParser.g:3620:2: ( RULE_DBL_GT )
                    // InternalEtlParser.g:3621:3: RULE_DBL_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }
                    match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:3626:2: ( RULE_GT_EM )
                    {
                    // InternalEtlParser.g:3626:2: ( RULE_GT_EM )
                    // InternalEtlParser.g:3627:3: RULE_GT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }
                    match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:3632:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:3632:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:3633:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:3638:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:3638:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:3639:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotToken__Alternatives"


    // $ANTLR start "rule__SlotInteger__Alternatives"
    // InternalEtlParser.g:3648:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );
    public final void rule__SlotInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3652:1: ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) )
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalEtlParser.g:3653:2: ( ruleSlotIntegerRange )
                    {
                    // InternalEtlParser.g:3653:2: ( ruleSlotIntegerRange )
                    // InternalEtlParser.g:3654:3: ruleSlotIntegerRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3659:2: ( ruleSlotIntegerValue )
                    {
                    // InternalEtlParser.g:3659:2: ( ruleSlotIntegerValue )
                    // InternalEtlParser.g:3660:3: ruleSlotIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotInteger__Alternatives"


    // $ANTLR start "rule__SlotIntegerRange__Alternatives"
    // InternalEtlParser.g:3669:1: rule__SlotIntegerRange__Alternatives : ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) );
    public final void rule__SlotIntegerRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3673:1: ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_GT && LA12_0<=RULE_HASH)) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_TO) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalEtlParser.g:3674:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3674:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    // InternalEtlParser.g:3675:3: ( rule__SlotIntegerRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3676:3: ( rule__SlotIntegerRange__Group_0__0 )
                    // InternalEtlParser.g:3676:4: rule__SlotIntegerRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3680:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3680:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    // InternalEtlParser.g:3681:3: ( rule__SlotIntegerRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3682:3: ( rule__SlotIntegerRange__Group_1__0 )
                    // InternalEtlParser.g:3682:4: rule__SlotIntegerRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Alternatives"


    // $ANTLR start "rule__SlotDecimal__Alternatives"
    // InternalEtlParser.g:3690:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );
    public final void rule__SlotDecimal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3694:1: ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) )
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalEtlParser.g:3695:2: ( ruleSlotDecimalRange )
                    {
                    // InternalEtlParser.g:3695:2: ( ruleSlotDecimalRange )
                    // InternalEtlParser.g:3696:3: ruleSlotDecimalRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3701:2: ( ruleSlotDecimalValue )
                    {
                    // InternalEtlParser.g:3701:2: ( ruleSlotDecimalValue )
                    // InternalEtlParser.g:3702:3: ruleSlotDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimal__Alternatives"


    // $ANTLR start "rule__SlotDecimalRange__Alternatives"
    // InternalEtlParser.g:3711:1: rule__SlotDecimalRange__Alternatives : ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) );
    public final void rule__SlotDecimalRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3715:1: ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_GT && LA14_0<=RULE_HASH)) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_TO) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalEtlParser.g:3716:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3716:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    // InternalEtlParser.g:3717:3: ( rule__SlotDecimalRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3718:3: ( rule__SlotDecimalRange__Group_0__0 )
                    // InternalEtlParser.g:3718:4: rule__SlotDecimalRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3722:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3722:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    // InternalEtlParser.g:3723:3: ( rule__SlotDecimalRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3724:3: ( rule__SlotDecimalRange__Group_1__0 )
                    // InternalEtlParser.g:3724:4: rule__SlotDecimalRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Alternatives"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEtlParser.g:3732:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3736:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_COMMA) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEtlParser.g:3737:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3737:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3738:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3743:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3743:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3744:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEtlParser.g:3753:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3757:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt16=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt16=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt16=2;
                }
                break;
            case RULE_LT:
                {
                alt16=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt16=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt16=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt16=6;
                }
                break;
            case RULE_GT:
                {
                alt16=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt16=8;
                }
                break;
            case RULE_ID_KEYWORD:
            case RULE_REVERSED:
            case RULE_MEMBER_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_ALPHA:
            case RULE_KEYWORD:
            case RULE_DIGIT:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt16=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalEtlParser.g:3758:2: ( ruleChildOf )
                    {
                    // InternalEtlParser.g:3758:2: ( ruleChildOf )
                    // InternalEtlParser.g:3759:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3764:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEtlParser.g:3764:2: ( ruleChildOrSelfOf )
                    // InternalEtlParser.g:3765:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3770:2: ( ruleDescendantOf )
                    {
                    // InternalEtlParser.g:3770:2: ( ruleDescendantOf )
                    // InternalEtlParser.g:3771:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3776:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEtlParser.g:3776:2: ( ruleDescendantOrSelfOf )
                    // InternalEtlParser.g:3777:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3782:2: ( ruleParentOf )
                    {
                    // InternalEtlParser.g:3782:2: ( ruleParentOf )
                    // InternalEtlParser.g:3783:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3788:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEtlParser.g:3788:2: ( ruleParentOrSelfOf )
                    // InternalEtlParser.g:3789:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3794:2: ( ruleAncestorOf )
                    {
                    // InternalEtlParser.g:3794:2: ( ruleAncestorOf )
                    // InternalEtlParser.g:3795:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3800:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEtlParser.g:3800:2: ( ruleAncestorOrSelfOf )
                    // InternalEtlParser.g:3801:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3806:2: ( ruleEclFocusConcept )
                    {
                    // InternalEtlParser.g:3806:2: ( ruleEclFocusConcept )
                    // InternalEtlParser.g:3807:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEtlParser.g:3816:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3820:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt17=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt17=1;
                }
                break;
            case RULE_ID_KEYWORD:
            case RULE_REVERSED:
            case RULE_MEMBER_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_ALPHA:
            case RULE_KEYWORD:
            case RULE_DIGIT:
                {
                alt17=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt17=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt17=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalEtlParser.g:3821:2: ( ruleMemberOf )
                    {
                    // InternalEtlParser.g:3821:2: ( ruleMemberOf )
                    // InternalEtlParser.g:3822:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3827:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3827:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3828:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3833:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3833:2: ( ruleAny )
                    // InternalEtlParser.g:3834:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3839:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3839:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3840:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_2_0"
    // InternalEtlParser.g:3849:1: rule__MemberOf__ConstraintAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3853:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case RULE_ID_KEYWORD:
            case RULE_REVERSED:
            case RULE_MEMBER_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_ALPHA:
            case RULE_KEYWORD:
            case RULE_DIGIT:
                {
                alt18=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt18=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEtlParser.g:3854:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3854:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3855:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3860:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3860:2: ( ruleAny )
                    // InternalEtlParser.g:3861:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3866:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3866:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3867:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_2_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_2_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_2_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEtlParser.g:3876:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3880:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_COMMA) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEtlParser.g:3881:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3881:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3882:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3887:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3887:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3888:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEtlParser.g:3897:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3901:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt20=3;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalEtlParser.g:3902:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3902:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3903:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3908:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEtlParser.g:3908:2: ( ruleEclAttributeGroup )
                    // InternalEtlParser.g:3909:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3914:2: ( ruleNestedRefinement )
                    {
                    // InternalEtlParser.g:3914:2: ( ruleNestedRefinement )
                    // InternalEtlParser.g:3915:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEtlParser.g:3924:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3928:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_COMMA) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEtlParser.g:3929:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3929:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3930:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3935:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3935:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3936:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEtlParser.g:3945:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3949:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt22=2;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalEtlParser.g:3950:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3950:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3951:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3956:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEtlParser.g:3956:2: ( ruleNestedAttributeSet )
                    // InternalEtlParser.g:3957:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEtlParser.g:3966:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3970:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt23=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                switch ( input.LA(2) ) {
                case RULE_STRING:
                case RULE_EXACT_KEYWORD:
                case RULE_FALSE_KEYWORD:
                case RULE_MATCH_KEYWORD:
                case RULE_REGEX_KEYWORD:
                case RULE_TRUE_KEYWORD:
                case RULE_WILD_KEYWORD:
                case RULE_HASH:
                    {
                    alt23=2;
                    }
                    break;
                case RULE_ID_KEYWORD:
                case RULE_REVERSED:
                case RULE_MEMBER_SHORT_KEYWORD:
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                case RULE_CONCEPT_SHORT_KEYWORD:
                case RULE_ALPHA:
                case RULE_KEYWORD:
                case RULE_DBL_LT_EM:
                case RULE_DBL_GT_EM:
                case RULE_DBL_LT:
                case RULE_DBL_GT:
                case RULE_LT_EM:
                case RULE_GT_EM:
                case RULE_DIGIT:
                case RULE_CARET:
                case RULE_WILDCARD:
                case RULE_LT:
                case RULE_GT:
                    {
                    alt23=1;
                    }
                    break;
                case RULE_ROUND_OPEN:
                    {
                    int LA23_5 = input.LA(3);

                    if ( (LA23_5==RULE_STRING||LA23_5==RULE_EXACT_KEYWORD||(LA23_5>=RULE_MATCH_KEYWORD && LA23_5<=RULE_REGEX_KEYWORD)||LA23_5==RULE_WILD_KEYWORD) ) {
                        alt23=2;
                    }
                    else if ( ((LA23_5>=RULE_ID_KEYWORD && LA23_5<=RULE_GT_EM)||LA23_5==RULE_DIGIT||LA23_5==RULE_ROUND_OPEN||LA23_5==RULE_CARET||LA23_5==RULE_WILDCARD||(LA23_5>=RULE_LT && LA23_5<=RULE_GT)) ) {
                        alt23=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 23, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 1, input);

                    throw nvae;
                }

                }
                break;
            case RULE_NOT_EQUAL:
                {
                switch ( input.LA(2) ) {
                case RULE_STRING:
                case RULE_EXACT_KEYWORD:
                case RULE_FALSE_KEYWORD:
                case RULE_MATCH_KEYWORD:
                case RULE_REGEX_KEYWORD:
                case RULE_TRUE_KEYWORD:
                case RULE_WILD_KEYWORD:
                case RULE_HASH:
                    {
                    alt23=2;
                    }
                    break;
                case RULE_ID_KEYWORD:
                case RULE_REVERSED:
                case RULE_MEMBER_SHORT_KEYWORD:
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                case RULE_CONCEPT_SHORT_KEYWORD:
                case RULE_ALPHA:
                case RULE_KEYWORD:
                case RULE_DBL_LT_EM:
                case RULE_DBL_GT_EM:
                case RULE_DBL_LT:
                case RULE_DBL_GT:
                case RULE_LT_EM:
                case RULE_GT_EM:
                case RULE_DIGIT:
                case RULE_CARET:
                case RULE_WILDCARD:
                case RULE_LT:
                case RULE_GT:
                    {
                    alt23=1;
                    }
                    break;
                case RULE_ROUND_OPEN:
                    {
                    int LA23_5 = input.LA(3);

                    if ( (LA23_5==RULE_STRING||LA23_5==RULE_EXACT_KEYWORD||(LA23_5>=RULE_MATCH_KEYWORD && LA23_5<=RULE_REGEX_KEYWORD)||LA23_5==RULE_WILD_KEYWORD) ) {
                        alt23=2;
                    }
                    else if ( ((LA23_5>=RULE_ID_KEYWORD && LA23_5<=RULE_GT_EM)||LA23_5==RULE_DIGIT||LA23_5==RULE_ROUND_OPEN||LA23_5==RULE_CARET||LA23_5==RULE_WILDCARD||(LA23_5>=RULE_LT && LA23_5<=RULE_GT)) ) {
                        alt23=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 23, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_GTE:
            case RULE_LTE:
            case RULE_LT:
            case RULE_GT:
                {
                alt23=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalEtlParser.g:3971:2: ( ruleAttributeComparison )
                    {
                    // InternalEtlParser.g:3971:2: ( ruleAttributeComparison )
                    // InternalEtlParser.g:3972:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3977:2: ( ruleDataTypeComparison )
                    {
                    // InternalEtlParser.g:3977:2: ( ruleDataTypeComparison )
                    // InternalEtlParser.g:3978:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEtlParser.g:3987:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3991:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt24=4;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalEtlParser.g:3992:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEtlParser.g:3992:2: ( ruleBooleanValueComparison )
                    // InternalEtlParser.g:3993:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3998:2: ( ruleStringValueComparison )
                    {
                    // InternalEtlParser.g:3998:2: ( ruleStringValueComparison )
                    // InternalEtlParser.g:3999:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4004:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEtlParser.g:4004:2: ( ruleIntegerValueComparison )
                    // InternalEtlParser.g:4005:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4010:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEtlParser.g:4010:2: ( ruleDecimalValueComparison )
                    // InternalEtlParser.g:4011:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEtlParser.g:4020:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4024:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_COMMA) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEtlParser.g:4025:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4025:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4026:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4031:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:4031:2: ( RULE_COMMA )
                    // InternalEtlParser.g:4032:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEtlParser.g:4041:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleIdFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4045:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleIdFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) )
            int alt26=16;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalEtlParser.g:4046:2: ( ruleTermFilter )
                    {
                    // InternalEtlParser.g:4046:2: ( ruleTermFilter )
                    // InternalEtlParser.g:4047:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4052:2: ( ruleLanguageFilter )
                    {
                    // InternalEtlParser.g:4052:2: ( ruleLanguageFilter )
                    // InternalEtlParser.g:4053:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4058:2: ( ruleTypeFilter )
                    {
                    // InternalEtlParser.g:4058:2: ( ruleTypeFilter )
                    // InternalEtlParser.g:4059:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4064:2: ( ruleDialectFilter )
                    {
                    // InternalEtlParser.g:4064:2: ( ruleDialectFilter )
                    // InternalEtlParser.g:4065:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4070:2: ( ruleIdFilter )
                    {
                    // InternalEtlParser.g:4070:2: ( ruleIdFilter )
                    // InternalEtlParser.g:4071:3: ruleIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getIdFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getIdFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4076:2: ( ruleDefinitionStatusFilter )
                    {
                    // InternalEtlParser.g:4076:2: ( ruleDefinitionStatusFilter )
                    // InternalEtlParser.g:4077:3: ruleDefinitionStatusFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4082:2: ( ruleModuleFilter )
                    {
                    // InternalEtlParser.g:4082:2: ( ruleModuleFilter )
                    // InternalEtlParser.g:4083:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4088:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEtlParser.g:4088:2: ( ruleEffectiveTimeFilter )
                    // InternalEtlParser.g:4089:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:4094:2: ( ruleActiveFilter )
                    {
                    // InternalEtlParser.g:4094:2: ( ruleActiveFilter )
                    // InternalEtlParser.g:4095:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:4100:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEtlParser.g:4100:2: ( ruleSemanticTagFilter )
                    // InternalEtlParser.g:4101:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:4106:2: ( rulePreferredInFilter )
                    {
                    // InternalEtlParser.g:4106:2: ( rulePreferredInFilter )
                    // InternalEtlParser.g:4107:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:4112:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEtlParser.g:4112:2: ( ruleAcceptableInFilter )
                    // InternalEtlParser.g:4113:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:4118:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEtlParser.g:4118:2: ( ruleLanguageRefSetFilter )
                    // InternalEtlParser.g:4119:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:4124:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEtlParser.g:4124:2: ( ruleCaseSignificanceFilter )
                    // InternalEtlParser.g:4125:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_13()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:4130:2: ( ruleMemberFieldFilter )
                    {
                    // InternalEtlParser.g:4130:2: ( ruleMemberFieldFilter )
                    // InternalEtlParser.g:4131:3: ruleMemberFieldFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_14()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberFieldFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:4136:2: ( ruleNestedFilter )
                    {
                    // InternalEtlParser.g:4136:2: ( ruleNestedFilter )
                    // InternalEtlParser.g:4137:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_15()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_15()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__IdFilter__Alternatives_2"
    // InternalEtlParser.g:4146:1: rule__IdFilter__Alternatives_2 : ( ( ( rule__IdFilter__IdsAssignment_2_0 ) ) | ( ( rule__IdFilter__Group_2_1__0 ) ) );
    public final void rule__IdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4150:1: ( ( ( rule__IdFilter__IdsAssignment_2_0 ) ) | ( ( rule__IdFilter__Group_2_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_ID_KEYWORD && LA27_0<=RULE_KEYWORD)||LA27_0==RULE_DIGIT) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_ROUND_OPEN) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEtlParser.g:4151:2: ( ( rule__IdFilter__IdsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4151:2: ( ( rule__IdFilter__IdsAssignment_2_0 ) )
                    // InternalEtlParser.g:4152:3: ( rule__IdFilter__IdsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdFilterAccess().getIdsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4153:3: ( rule__IdFilter__IdsAssignment_2_0 )
                    // InternalEtlParser.g:4153:4: rule__IdFilter__IdsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IdFilter__IdsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdFilterAccess().getIdsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4157:2: ( ( rule__IdFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4157:2: ( ( rule__IdFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4158:3: ( rule__IdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4159:3: ( rule__IdFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4159:4: rule__IdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Alternatives_2"


    // $ANTLR start "rule__SearchTerm__Alternatives"
    // InternalEtlParser.g:4167:1: rule__SearchTerm__Alternatives : ( ( ruleTypedSearchTerm ) | ( ruleTypedSearchTermSet ) );
    public final void rule__SearchTerm__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4171:1: ( ( ruleTypedSearchTerm ) | ( ruleTypedSearchTermSet ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_STRING||LA28_0==RULE_EXACT_KEYWORD||(LA28_0>=RULE_MATCH_KEYWORD && LA28_0<=RULE_REGEX_KEYWORD)||LA28_0==RULE_WILD_KEYWORD) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ROUND_OPEN) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEtlParser.g:4172:2: ( ruleTypedSearchTerm )
                    {
                    // InternalEtlParser.g:4172:2: ( ruleTypedSearchTerm )
                    // InternalEtlParser.g:4173:3: ruleTypedSearchTerm
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSearchTermAccess().getTypedSearchTermParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedSearchTerm();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSearchTermAccess().getTypedSearchTermParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4178:2: ( ruleTypedSearchTermSet )
                    {
                    // InternalEtlParser.g:4178:2: ( ruleTypedSearchTermSet )
                    // InternalEtlParser.g:4179:3: ruleTypedSearchTermSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSearchTermAccess().getTypedSearchTermSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedSearchTermSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSearchTermAccess().getTypedSearchTermSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SearchTerm__Alternatives"


    // $ANTLR start "rule__TypedSearchTermClause__Alternatives"
    // InternalEtlParser.g:4188:1: rule__TypedSearchTermClause__Alternatives : ( ( ( rule__TypedSearchTermClause__Group_0__0 ) ) | ( ( rule__TypedSearchTermClause__Group_1__0 ) ) );
    public final void rule__TypedSearchTermClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4192:1: ( ( ( rule__TypedSearchTermClause__Group_0__0 ) ) | ( ( rule__TypedSearchTermClause__Group_1__0 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING||LA29_0==RULE_EXACT_KEYWORD||LA29_0==RULE_MATCH_KEYWORD||LA29_0==RULE_WILD_KEYWORD) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_REGEX_KEYWORD) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEtlParser.g:4193:2: ( ( rule__TypedSearchTermClause__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:4193:2: ( ( rule__TypedSearchTermClause__Group_0__0 ) )
                    // InternalEtlParser.g:4194:3: ( rule__TypedSearchTermClause__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:4195:3: ( rule__TypedSearchTermClause__Group_0__0 )
                    // InternalEtlParser.g:4195:4: rule__TypedSearchTermClause__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4199:2: ( ( rule__TypedSearchTermClause__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:4199:2: ( ( rule__TypedSearchTermClause__Group_1__0 ) )
                    // InternalEtlParser.g:4200:3: ( rule__TypedSearchTermClause__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:4201:3: ( rule__TypedSearchTermClause__Group_1__0 )
                    // InternalEtlParser.g:4201:4: rule__TypedSearchTermClause__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Alternatives"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEtlParser.g:4209:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4213:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=RULE_HISTORY_KEYWORD && LA30_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA30_0==RULE_KEYWORD||LA30_0==RULE_WILDCARD) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ROUND_OPEN) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEtlParser.g:4214:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4214:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEtlParser.g:4215:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4216:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEtlParser.g:4216:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4220:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4220:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4221:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4222:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4222:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEtlParser.g:4230:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4234:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_TYPEID_KEYWORD) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_TYPE_KEYWORD) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEtlParser.g:4235:2: ( ruleTypeIdFilter )
                    {
                    // InternalEtlParser.g:4235:2: ( ruleTypeIdFilter )
                    // InternalEtlParser.g:4236:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4241:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEtlParser.g:4241:2: ( ruleTypeTokenFilter )
                    // InternalEtlParser.g:4242:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEtlParser.g:4251:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4255:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=RULE_HISTORY_KEYWORD && LA32_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA32_0==RULE_KEYWORD||LA32_0==RULE_WILDCARD) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_ROUND_OPEN) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEtlParser.g:4256:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4256:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEtlParser.g:4257:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4258:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEtlParser.g:4258:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4262:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4262:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4263:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4264:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4264:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEtlParser.g:4272:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4276:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_DIALECTID_KEYWORD) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_DIALECT_KEYWORD) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEtlParser.g:4277:2: ( ruleDialectIdFilter )
                    {
                    // InternalEtlParser.g:4277:2: ( ruleDialectIdFilter )
                    // InternalEtlParser.g:4278:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4283:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEtlParser.g:4283:2: ( ruleDialectAliasFilter )
                    // InternalEtlParser.g:4284:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEtlParser.g:4293:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4297:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt34=2;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // InternalEtlParser.g:4298:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4298:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:4299:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4300:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:4300:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4304:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4304:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4305:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4306:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4306:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEtlParser.g:4314:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4318:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_KEYWORD||LA35_0==RULE_DIGIT||LA35_0==RULE_DASH) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_ROUND_OPEN) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEtlParser.g:4319:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4319:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:4320:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4321:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:4321:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4325:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4325:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4326:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4327:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4327:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__DefinitionStatusFilter__Alternatives"
    // InternalEtlParser.g:4335:1: rule__DefinitionStatusFilter__Alternatives : ( ( ruleDefinitionStatusIdFilter ) | ( ruleDefinitionStatusTokenFilter ) );
    public final void rule__DefinitionStatusFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4339:1: ( ( ruleDefinitionStatusIdFilter ) | ( ruleDefinitionStatusTokenFilter ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_DEFINITION_STATUS_ID_KEYWORD) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_DEFINITION_STATUS_TOKEN_KEYWORD) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEtlParser.g:4340:2: ( ruleDefinitionStatusIdFilter )
                    {
                    // InternalEtlParser.g:4340:2: ( ruleDefinitionStatusIdFilter )
                    // InternalEtlParser.g:4341:3: ruleDefinitionStatusIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4346:2: ( ruleDefinitionStatusTokenFilter )
                    {
                    // InternalEtlParser.g:4346:2: ( ruleDefinitionStatusTokenFilter )
                    // InternalEtlParser.g:4347:3: ruleDefinitionStatusTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusFilter__Alternatives"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Alternatives_2"
    // InternalEtlParser.g:4356:1: rule__DefinitionStatusTokenFilter__Alternatives_2 : ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) ) | ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) ) );
    public final void rule__DefinitionStatusTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4360:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) ) | ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=RULE_HISTORY_KEYWORD && LA37_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA37_0==RULE_KEYWORD||LA37_0==RULE_WILDCARD) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_ROUND_OPEN) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalEtlParser.g:4361:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4361:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) )
                    // InternalEtlParser.g:4362:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4363:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 )
                    // InternalEtlParser.g:4363:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4367:2: ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4367:2: ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4368:3: ( rule__DefinitionStatusTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4369:3: ( rule__DefinitionStatusTokenFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4369:4: rule__DefinitionStatusTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DefinitionStatusTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Alternatives_2"


    // $ANTLR start "rule__FilterValue__Alternatives"
    // InternalEtlParser.g:4377:1: rule__FilterValue__Alternatives : ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__FilterValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4381:1: ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) )
            int alt38=2;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalEtlParser.g:4382:2: ( ruleFilteredExpressionConstraint )
                    {
                    // InternalEtlParser.g:4382:2: ( ruleFilteredExpressionConstraint )
                    // InternalEtlParser.g:4383:3: ruleFilteredExpressionConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFilteredExpressionConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4388:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEtlParser.g:4388:2: ( ruleEclConceptReferenceSet )
                    // InternalEtlParser.g:4389:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilterValueAccess().getEclConceptReferenceSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilterValueAccess().getEclConceptReferenceSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterValue__Alternatives"


    // $ANTLR start "rule__HistorySupplement__HistoryAlternatives_4_0"
    // InternalEtlParser.g:4398:1: rule__HistorySupplement__HistoryAlternatives_4_0 : ( ( ruleHistoryProfile ) | ( ruleNestedExpression ) );
    public final void rule__HistorySupplement__HistoryAlternatives_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4402:1: ( ( ruleHistoryProfile ) | ( ruleNestedExpression ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=RULE_DASH && LA39_0<=RULE_UNDERSCORE)) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_ROUND_OPEN) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalEtlParser.g:4403:2: ( ruleHistoryProfile )
                    {
                    // InternalEtlParser.g:4403:2: ( ruleHistoryProfile )
                    // InternalEtlParser.g:4404:3: ruleHistoryProfile
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistorySupplementAccess().getHistoryHistoryProfileParserRuleCall_4_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleHistoryProfile();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistorySupplementAccess().getHistoryHistoryProfileParserRuleCall_4_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4409:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:4409:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:4410:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistorySupplementAccess().getHistoryNestedExpressionParserRuleCall_4_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistorySupplementAccess().getHistoryNestedExpressionParserRuleCall_4_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__HistoryAlternatives_4_0"


    // $ANTLR start "rule__HistoryProfile__Alternatives_0"
    // InternalEtlParser.g:4419:1: rule__HistoryProfile__Alternatives_0 : ( ( RULE_DASH ) | ( RULE_UNDERSCORE ) );
    public final void rule__HistoryProfile__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4423:1: ( ( RULE_DASH ) | ( RULE_UNDERSCORE ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_DASH) ) {
                alt40=1;
            }
            else if ( (LA40_0==RULE_UNDERSCORE) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalEtlParser.g:4424:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4424:2: ( RULE_DASH )
                    // InternalEtlParser.g:4425:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistoryProfileAccess().getDASHTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistoryProfileAccess().getDASHTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4430:2: ( RULE_UNDERSCORE )
                    {
                    // InternalEtlParser.g:4430:2: ( RULE_UNDERSCORE )
                    // InternalEtlParser.g:4431:3: RULE_UNDERSCORE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistoryProfileAccess().getUNDERSCORETerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_UNDERSCORE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistoryProfileAccess().getUNDERSCORETerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Alternatives_0"


    // $ANTLR start "rule__Identifier__Alternatives_0"
    // InternalEtlParser.g:4440:1: rule__Identifier__Alternatives_0 : ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_ID_KEYWORD ) | ( RULE_KEYWORD ) );
    public final void rule__Identifier__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4444:1: ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_ID_KEYWORD ) | ( RULE_KEYWORD ) )
            int alt41=8;
            switch ( input.LA(1) ) {
            case RULE_DIGIT:
                {
                alt41=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt41=2;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt41=3;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt41=4;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt41=5;
                }
                break;
            case RULE_REVERSED:
                {
                alt41=6;
                }
                break;
            case RULE_ID_KEYWORD:
                {
                alt41=7;
                }
                break;
            case RULE_KEYWORD:
                {
                alt41=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalEtlParser.g:4445:2: ( RULE_DIGIT )
                    {
                    // InternalEtlParser.g:4445:2: ( RULE_DIGIT )
                    // InternalEtlParser.g:4446:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4451:2: ( RULE_ALPHA )
                    {
                    // InternalEtlParser.g:4451:2: ( RULE_ALPHA )
                    // InternalEtlParser.g:4452:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4457:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4457:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEtlParser.g:4458:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0_2()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4463:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4463:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEtlParser.g:4464:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_0_3()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4469:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4469:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEtlParser.g:4470:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_0_4()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4475:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:4475:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:4476:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_0_5()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4481:2: ( RULE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4481:2: ( RULE_ID_KEYWORD )
                    // InternalEtlParser.g:4482:3: RULE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getID_KEYWORDTerminalRuleCall_0_6()); 
                    }
                    match(input,RULE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getID_KEYWORDTerminalRuleCall_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4487:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4487:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4488:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_0_7()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Alternatives_0"


    // $ANTLR start "rule__Identifier__Alternatives_1"
    // InternalEtlParser.g:4497:1: rule__Identifier__Alternatives_1 : ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_ID_KEYWORD ) | ( RULE_KEYWORD ) | ( RULE_DASH ) | ( RULE_UNDERSCORE ) );
    public final void rule__Identifier__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4501:1: ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_ID_KEYWORD ) | ( RULE_KEYWORD ) | ( RULE_DASH ) | ( RULE_UNDERSCORE ) )
            int alt42=10;
            switch ( input.LA(1) ) {
            case RULE_DIGIT:
                {
                alt42=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt42=2;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt42=3;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt42=4;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt42=5;
                }
                break;
            case RULE_REVERSED:
                {
                alt42=6;
                }
                break;
            case RULE_ID_KEYWORD:
                {
                alt42=7;
                }
                break;
            case RULE_KEYWORD:
                {
                alt42=8;
                }
                break;
            case RULE_DASH:
                {
                alt42=9;
                }
                break;
            case RULE_UNDERSCORE:
                {
                alt42=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalEtlParser.g:4502:2: ( RULE_DIGIT )
                    {
                    // InternalEtlParser.g:4502:2: ( RULE_DIGIT )
                    // InternalEtlParser.g:4503:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4508:2: ( RULE_ALPHA )
                    {
                    // InternalEtlParser.g:4508:2: ( RULE_ALPHA )
                    // InternalEtlParser.g:4509:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4514:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4514:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEtlParser.g:4515:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4520:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4520:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEtlParser.g:4521:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1_3()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4526:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4526:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEtlParser.g:4527:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_1_4()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4532:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:4532:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:4533:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_1_5()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_1_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4538:2: ( RULE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4538:2: ( RULE_ID_KEYWORD )
                    // InternalEtlParser.g:4539:3: RULE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getID_KEYWORDTerminalRuleCall_1_6()); 
                    }
                    match(input,RULE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getID_KEYWORDTerminalRuleCall_1_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4544:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4544:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4545:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_1_7()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_1_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:4550:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4550:2: ( RULE_DASH )
                    // InternalEtlParser.g:4551:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_1_8()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_1_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:4556:2: ( RULE_UNDERSCORE )
                    {
                    // InternalEtlParser.g:4556:2: ( RULE_UNDERSCORE )
                    // InternalEtlParser.g:4557:3: RULE_UNDERSCORE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_9()); 
                    }
                    match(input,RULE_UNDERSCORE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Alternatives_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEtlParser.g:4566:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4570:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_DIGIT) ) {
                alt43=1;
            }
            else if ( (LA43_0==RULE_WILDCARD) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalEtlParser.g:4571:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEtlParser.g:4571:2: ( ruleNonNegativeInteger )
                    // InternalEtlParser.g:4572:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4577:2: ( RULE_WILDCARD )
                    {
                    // InternalEtlParser.g:4577:2: ( RULE_WILDCARD )
                    // InternalEtlParser.g:4578:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEtlParser.g:4587:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4591:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_PLUS) ) {
                alt44=1;
            }
            else if ( (LA44_0==RULE_DASH) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalEtlParser.g:4592:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4592:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4593:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4598:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4598:2: ( RULE_DASH )
                    // InternalEtlParser.g:4599:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEtlParser.g:4608:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4612:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_PLUS) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_DASH) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalEtlParser.g:4613:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4613:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4614:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4619:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4619:2: ( RULE_DASH )
                    // InternalEtlParser.g:4620:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEtlParser.g:4629:1: rule__Boolean__Alternatives : ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4633:1: ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_TRUE_KEYWORD) ) {
                alt46=1;
            }
            else if ( (LA46_0==RULE_FALSE_KEYWORD) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalEtlParser.g:4634:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4634:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4635:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4640:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4640:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4641:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__ActiveBoolean__Alternatives"
    // InternalEtlParser.g:4650:1: rule__ActiveBoolean__Alternatives : ( ( ruleNonNegativeInteger ) | ( ruleBoolean ) );
    public final void rule__ActiveBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4654:1: ( ( ruleNonNegativeInteger ) | ( ruleBoolean ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_DIGIT) ) {
                alt47=1;
            }
            else if ( (LA47_0==RULE_FALSE_KEYWORD||LA47_0==RULE_TRUE_KEYWORD) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalEtlParser.g:4655:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEtlParser.g:4655:2: ( ruleNonNegativeInteger )
                    // InternalEtlParser.g:4656:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActiveBooleanAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActiveBooleanAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4661:2: ( ruleBoolean )
                    {
                    // InternalEtlParser.g:4661:2: ( ruleBoolean )
                    // InternalEtlParser.g:4662:3: ruleBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActiveBooleanAccess().getBooleanParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActiveBooleanAccess().getBooleanParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveBoolean__Alternatives"


    // $ANTLR start "rule__UnquotedString__Alternatives"
    // InternalEtlParser.g:4671:1: rule__UnquotedString__Alternatives : ( ( RULE_HISTORY_KEYWORD ) | ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_ID_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_WILDCARD ) | ( RULE_KEYWORD ) );
    public final void rule__UnquotedString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4675:1: ( ( RULE_HISTORY_KEYWORD ) | ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_ID_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_WILDCARD ) | ( RULE_KEYWORD ) )
            int alt48=36;
            switch ( input.LA(1) ) {
            case RULE_HISTORY_KEYWORD:
                {
                alt48=1;
                }
                break;
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
                {
                alt48=2;
                }
                break;
            case RULE_DEFINITION_STATUS_ID_KEYWORD:
                {
                alt48=3;
                }
                break;
            case RULE_DEFINITION_STATUS_TOKEN_KEYWORD:
                {
                alt48=4;
                }
                break;
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
                {
                alt48=5;
                }
                break;
            case RULE_EFFECTIVE_TIME_KEYWORD:
                {
                alt48=6;
                }
                break;
            case RULE_ACCEPTABLE_IN_KEYWORD:
                {
                alt48=7;
                }
                break;
            case RULE_PREFERRED_IN_KEYWORD:
                {
                alt48=8;
                }
                break;
            case RULE_SEMANTIC_TAG_KEYWORD:
                {
                alt48=9;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
                {
                alt48=10;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt48=11;
                }
                break;
            case RULE_MODULEID_KEYWORD:
                {
                alt48=12;
                }
                break;
            case RULE_DIALECT_KEYWORD:
                {
                alt48=13;
                }
                break;
            case RULE_ACTIVE_KEYWORD:
                {
                alt48=14;
                }
                break;
            case RULE_TYPEID_KEYWORD:
                {
                alt48=15;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt48=16;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt48=17;
                }
                break;
            case RULE_FALSE_KEYWORD:
                {
                alt48=18;
                }
                break;
            case RULE_MATCH_KEYWORD:
                {
                alt48=19;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt48=20;
                }
                break;
            case RULE_TERM_KEYWORD:
                {
                alt48=21;
                }
                break;
            case RULE_TRUE_KEYWORD:
                {
                alt48=22;
                }
                break;
            case RULE_TYPE_KEYWORD:
                {
                alt48=23;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt48=24;
                }
                break;
            case RULE_MIN_KEYWORD:
                {
                alt48=25;
                }
                break;
            case RULE_MOD_KEYWORD:
                {
                alt48=26;
                }
                break;
            case RULE_MAX_KEYWORD:
                {
                alt48=27;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt48=28;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt48=29;
                }
                break;
            case RULE_ID_KEYWORD:
                {
                alt48=30;
                }
                break;
            case RULE_REVERSED:
                {
                alt48=31;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt48=32;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt48=33;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt48=34;
                }
                break;
            case RULE_WILDCARD:
                {
                alt48=35;
                }
                break;
            case RULE_KEYWORD:
                {
                alt48=36;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalEtlParser.g:4676:2: ( RULE_HISTORY_KEYWORD )
                    {
                    // InternalEtlParser.g:4676:2: ( RULE_HISTORY_KEYWORD )
                    // InternalEtlParser.g:4677:3: RULE_HISTORY_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getHISTORY_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_HISTORY_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getHISTORY_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4682:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4682:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    // InternalEtlParser.g:4683:3: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4688:2: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4688:2: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
                    // InternalEtlParser.g:4689:3: RULE_DEFINITION_STATUS_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DEFINITION_STATUS_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4694:2: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
                    {
                    // InternalEtlParser.g:4694:2: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
                    // InternalEtlParser.g:4695:3: RULE_DEFINITION_STATUS_TOKEN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_DEFINITION_STATUS_TOKEN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4700:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4700:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    // InternalEtlParser.g:4701:3: RULE_LANGUAGE_REFSET_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4706:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    {
                    // InternalEtlParser.g:4706:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    // InternalEtlParser.g:4707:3: RULE_EFFECTIVE_TIME_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4712:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4712:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    // InternalEtlParser.g:4713:3: RULE_ACCEPTABLE_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4718:2: ( RULE_PREFERRED_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4718:2: ( RULE_PREFERRED_IN_KEYWORD )
                    // InternalEtlParser.g:4719:3: RULE_PREFERRED_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_7()); 
                    }
                    match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:4724:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    {
                    // InternalEtlParser.g:4724:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    // InternalEtlParser.g:4725:3: RULE_SEMANTIC_TAG_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_8()); 
                    }
                    match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:4730:2: ( RULE_DIALECTID_KEYWORD )
                    {
                    // InternalEtlParser.g:4730:2: ( RULE_DIALECTID_KEYWORD )
                    // InternalEtlParser.g:4731:3: RULE_DIALECTID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_9()); 
                    }
                    match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:4736:2: ( RULE_LANGUAGE_KEYWORD )
                    {
                    // InternalEtlParser.g:4736:2: ( RULE_LANGUAGE_KEYWORD )
                    // InternalEtlParser.g:4737:3: RULE_LANGUAGE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_10()); 
                    }
                    match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:4742:2: ( RULE_MODULEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4742:2: ( RULE_MODULEID_KEYWORD )
                    // InternalEtlParser.g:4743:3: RULE_MODULEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_11()); 
                    }
                    match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:4748:2: ( RULE_DIALECT_KEYWORD )
                    {
                    // InternalEtlParser.g:4748:2: ( RULE_DIALECT_KEYWORD )
                    // InternalEtlParser.g:4749:3: RULE_DIALECT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_12()); 
                    }
                    match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:4754:2: ( RULE_ACTIVE_KEYWORD )
                    {
                    // InternalEtlParser.g:4754:2: ( RULE_ACTIVE_KEYWORD )
                    // InternalEtlParser.g:4755:3: RULE_ACTIVE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_13()); 
                    }
                    match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:4760:2: ( RULE_TYPEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4760:2: ( RULE_TYPEID_KEYWORD )
                    // InternalEtlParser.g:4761:3: RULE_TYPEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_14()); 
                    }
                    match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:4766:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:4766:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:4767:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_15()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:4772:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4772:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4773:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:4778:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4778:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4779:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_17()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalEtlParser.g:4784:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4784:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4785:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_18()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalEtlParser.g:4790:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEtlParser.g:4790:2: ( RULE_REGEX_KEYWORD )
                    // InternalEtlParser.g:4791:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_19()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalEtlParser.g:4796:2: ( RULE_TERM_KEYWORD )
                    {
                    // InternalEtlParser.g:4796:2: ( RULE_TERM_KEYWORD )
                    // InternalEtlParser.g:4797:3: RULE_TERM_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_20()); 
                    }
                    match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalEtlParser.g:4802:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4802:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4803:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_21()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalEtlParser.g:4808:2: ( RULE_TYPE_KEYWORD )
                    {
                    // InternalEtlParser.g:4808:2: ( RULE_TYPE_KEYWORD )
                    // InternalEtlParser.g:4809:3: RULE_TYPE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_22()); 
                    }
                    match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_22()); 
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalEtlParser.g:4814:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4814:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4815:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_23()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_23()); 
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalEtlParser.g:4820:2: ( RULE_MIN_KEYWORD )
                    {
                    // InternalEtlParser.g:4820:2: ( RULE_MIN_KEYWORD )
                    // InternalEtlParser.g:4821:3: RULE_MIN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMIN_KEYWORDTerminalRuleCall_24()); 
                    }
                    match(input,RULE_MIN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMIN_KEYWORDTerminalRuleCall_24()); 
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalEtlParser.g:4826:2: ( RULE_MOD_KEYWORD )
                    {
                    // InternalEtlParser.g:4826:2: ( RULE_MOD_KEYWORD )
                    // InternalEtlParser.g:4827:3: RULE_MOD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMOD_KEYWORDTerminalRuleCall_25()); 
                    }
                    match(input,RULE_MOD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMOD_KEYWORDTerminalRuleCall_25()); 
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalEtlParser.g:4832:2: ( RULE_MAX_KEYWORD )
                    {
                    // InternalEtlParser.g:4832:2: ( RULE_MAX_KEYWORD )
                    // InternalEtlParser.g:4833:3: RULE_MAX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMAX_KEYWORDTerminalRuleCall_26()); 
                    }
                    match(input,RULE_MAX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMAX_KEYWORDTerminalRuleCall_26()); 
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalEtlParser.g:4838:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4838:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4839:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_27()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_27()); 
                    }

                    }


                    }
                    break;
                case 29 :
                    // InternalEtlParser.g:4844:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4844:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4845:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_28()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_28()); 
                    }

                    }


                    }
                    break;
                case 30 :
                    // InternalEtlParser.g:4850:2: ( RULE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4850:2: ( RULE_ID_KEYWORD )
                    // InternalEtlParser.g:4851:3: RULE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getID_KEYWORDTerminalRuleCall_29()); 
                    }
                    match(input,RULE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getID_KEYWORDTerminalRuleCall_29()); 
                    }

                    }


                    }
                    break;
                case 31 :
                    // InternalEtlParser.g:4856:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:4856:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:4857:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_30()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_30()); 
                    }

                    }


                    }
                    break;
                case 32 :
                    // InternalEtlParser.g:4862:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4862:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEtlParser.g:4863:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_31()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_31()); 
                    }

                    }


                    }
                    break;
                case 33 :
                    // InternalEtlParser.g:4868:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4868:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEtlParser.g:4869:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_32()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_32()); 
                    }

                    }


                    }
                    break;
                case 34 :
                    // InternalEtlParser.g:4874:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4874:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEtlParser.g:4875:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_33()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_33()); 
                    }

                    }


                    }
                    break;
                case 35 :
                    // InternalEtlParser.g:4880:2: ( RULE_WILDCARD )
                    {
                    // InternalEtlParser.g:4880:2: ( RULE_WILDCARD )
                    // InternalEtlParser.g:4881:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILDCARDTerminalRuleCall_34()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILDCARDTerminalRuleCall_34()); 
                    }

                    }


                    }
                    break;
                case 36 :
                    // InternalEtlParser.g:4886:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4886:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4887:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_35()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_35()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnquotedString__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives"
    // InternalEtlParser.g:4896:1: rule__DialectAliasValue__Alternatives : ( ( RULE_DASH ) | ( RULE_KEYWORD ) | ( RULE_DIGIT ) );
    public final void rule__DialectAliasValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4900:1: ( ( RULE_DASH ) | ( RULE_KEYWORD ) | ( RULE_DIGIT ) )
            int alt49=3;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt49=1;
                }
                break;
            case RULE_KEYWORD:
                {
                alt49=2;
                }
                break;
            case RULE_DIGIT:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalEtlParser.g:4901:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4901:2: ( RULE_DASH )
                    // InternalEtlParser.g:4902:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4907:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4907:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4908:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getKEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getKEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4913:2: ( RULE_DIGIT )
                    {
                    // InternalEtlParser.g:4913:2: ( RULE_DIGIT )
                    // InternalEtlParser.g:4914:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGITTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGITTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEtlParser.g:4923:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4927:1: ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) )
            int alt50=3;
            switch ( input.LA(1) ) {
            case RULE_MATCH_KEYWORD:
                {
                alt50=1;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt50=2;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt50=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalEtlParser.g:4928:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4928:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4929:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4934:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4934:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4935:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4940:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4940:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4941:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__HISTORY_PROFILE_TYPE__Alternatives"
    // InternalEtlParser.g:4950:1: rule__HISTORY_PROFILE_TYPE__Alternatives : ( ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) );
    public final void rule__HISTORY_PROFILE_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4954:1: ( ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) )
            int alt51=3;
            switch ( input.LA(1) ) {
            case RULE_MIN_KEYWORD:
                {
                alt51=1;
                }
                break;
            case RULE_MOD_KEYWORD:
                {
                alt51=2;
                }
                break;
            case RULE_MAX_KEYWORD:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalEtlParser.g:4955:2: ( RULE_MIN_KEYWORD )
                    {
                    // InternalEtlParser.g:4955:2: ( RULE_MIN_KEYWORD )
                    // InternalEtlParser.g:4956:3: RULE_MIN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMIN_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MIN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMIN_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4961:2: ( RULE_MOD_KEYWORD )
                    {
                    // InternalEtlParser.g:4961:2: ( RULE_MOD_KEYWORD )
                    // InternalEtlParser.g:4962:3: RULE_MOD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMOD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_MOD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMOD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4967:2: ( RULE_MAX_KEYWORD )
                    {
                    // InternalEtlParser.g:4967:2: ( RULE_MAX_KEYWORD )
                    // InternalEtlParser.g:4968:3: RULE_MAX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMAX_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_MAX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMAX_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HISTORY_PROFILE_TYPE__Alternatives"


    // $ANTLR start "rule__SHORT_DOMAIN__Alternatives"
    // InternalEtlParser.g:4977:1: rule__SHORT_DOMAIN__Alternatives : ( ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) );
    public final void rule__SHORT_DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4981:1: ( ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt52=1;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt52=2;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalEtlParser.g:4982:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4982:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEtlParser.g:4983:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4988:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4988:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEtlParser.g:4989:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4994:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEtlParser.g:4994:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEtlParser.g:4995:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SHORT_DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:5004:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5008:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_EQUAL) ) {
                alt53=1;
            }
            else if ( (LA53_0==RULE_NOT_EQUAL) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalEtlParser.g:5009:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:5009:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:5010:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:5015:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:5015:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:5016:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:5025:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5029:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt54=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt54=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt54=2;
                }
                break;
            case RULE_GT:
                {
                alt54=3;
                }
                break;
            case RULE_LT:
                {
                alt54=4;
                }
                break;
            case RULE_GTE:
                {
                alt54=5;
                }
                break;
            case RULE_LTE:
                {
                alt54=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalEtlParser.g:5030:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:5030:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:5031:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:5036:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:5036:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:5037:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:5042:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:5042:2: ( RULE_GT )
                    // InternalEtlParser.g:5043:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:5048:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:5048:2: ( RULE_LT )
                    // InternalEtlParser.g:5049:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:5054:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:5054:2: ( RULE_GTE )
                    // InternalEtlParser.g:5055:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:5060:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:5060:2: ( RULE_LTE )
                    // InternalEtlParser.g:5061:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__ExpressionTemplate__Group__0"
    // InternalEtlParser.g:5070:1: rule__ExpressionTemplate__Group__0 : rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 ;
    public final void rule__ExpressionTemplate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5074:1: ( rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 )
            // InternalEtlParser.g:5075:2: rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0"


    // $ANTLR start "rule__ExpressionTemplate__Group__0__Impl"
    // InternalEtlParser.g:5082:1: rule__ExpressionTemplate__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionTemplate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5086:1: ( ( () ) )
            // InternalEtlParser.g:5087:1: ( () )
            {
            // InternalEtlParser.g:5087:1: ( () )
            // InternalEtlParser.g:5088:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }
            // InternalEtlParser.g:5089:2: ()
            // InternalEtlParser.g:5089:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group__1"
    // InternalEtlParser.g:5097:1: rule__ExpressionTemplate__Group__1 : rule__ExpressionTemplate__Group__1__Impl ;
    public final void rule__ExpressionTemplate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5101:1: ( rule__ExpressionTemplate__Group__1__Impl )
            // InternalEtlParser.g:5102:2: rule__ExpressionTemplate__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1"


    // $ANTLR start "rule__ExpressionTemplate__Group__1__Impl"
    // InternalEtlParser.g:5108:1: rule__ExpressionTemplate__Group__1__Impl : ( ( rule__ExpressionTemplate__Group_1__0 )? ) ;
    public final void rule__ExpressionTemplate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5112:1: ( ( ( rule__ExpressionTemplate__Group_1__0 )? ) )
            // InternalEtlParser.g:5113:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            {
            // InternalEtlParser.g:5113:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            // InternalEtlParser.g:5114:2: ( rule__ExpressionTemplate__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:5115:2: ( rule__ExpressionTemplate__Group_1__0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_DOUBLE_SQUARE_OPEN||(LA55_0>=RULE_EQUIVALENT_TO && LA55_0<=RULE_SUBTYPE_OF)||(LA55_0>=RULE_ID_KEYWORD && LA55_0<=RULE_KEYWORD)||LA55_0==RULE_DIGIT) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalEtlParser.g:5115:3: rule__ExpressionTemplate__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0"
    // InternalEtlParser.g:5124:1: rule__ExpressionTemplate__Group_1__0 : rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 ;
    public final void rule__ExpressionTemplate__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5128:1: ( rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 )
            // InternalEtlParser.g:5129:2: rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0__Impl"
    // InternalEtlParser.g:5136:1: rule__ExpressionTemplate__Group_1__0__Impl : ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) ;
    public final void rule__ExpressionTemplate__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5140:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) )
            // InternalEtlParser.g:5141:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            {
            // InternalEtlParser.g:5141:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            // InternalEtlParser.g:5142:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }
            // InternalEtlParser.g:5143:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0>=RULE_EQUIVALENT_TO && LA56_0<=RULE_SUBTYPE_OF)) ) {
                alt56=1;
            }
            else if ( (LA56_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA56_2 = input.LA(2);

                if ( (LA56_2==RULE_PLUS) ) {
                    int LA56_4 = input.LA(3);

                    if ( (LA56_4==RULE_TOK) ) {
                        alt56=1;
                    }
                }
            }
            switch (alt56) {
                case 1 :
                    // InternalEtlParser.g:5143:3: rule__ExpressionTemplate__Alternatives_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1"
    // InternalEtlParser.g:5151:1: rule__ExpressionTemplate__Group_1__1 : rule__ExpressionTemplate__Group_1__1__Impl ;
    public final void rule__ExpressionTemplate__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5155:1: ( rule__ExpressionTemplate__Group_1__1__Impl )
            // InternalEtlParser.g:5156:2: rule__ExpressionTemplate__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1__Impl"
    // InternalEtlParser.g:5162:1: rule__ExpressionTemplate__Group_1__1__Impl : ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) ;
    public final void rule__ExpressionTemplate__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5166:1: ( ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) )
            // InternalEtlParser.g:5167:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            {
            // InternalEtlParser.g:5167:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            // InternalEtlParser.g:5168:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }
            // InternalEtlParser.g:5169:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            // InternalEtlParser.g:5169:3: rule__ExpressionTemplate__ExpressionAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__ExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__0"
    // InternalEtlParser.g:5178:1: rule__SubExpression__Group__0 : rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 ;
    public final void rule__SubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5182:1: ( rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 )
            // InternalEtlParser.g:5183:2: rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0"


    // $ANTLR start "rule__SubExpression__Group__0__Impl"
    // InternalEtlParser.g:5190:1: rule__SubExpression__Group__0__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) ;
    public final void rule__SubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5194:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) )
            // InternalEtlParser.g:5195:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            {
            // InternalEtlParser.g:5195:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            // InternalEtlParser.g:5196:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }
            // InternalEtlParser.g:5197:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            // InternalEtlParser.g:5197:3: rule__SubExpression__FocusConceptsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0__Impl"


    // $ANTLR start "rule__SubExpression__Group__1"
    // InternalEtlParser.g:5205:1: rule__SubExpression__Group__1 : rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 ;
    public final void rule__SubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5209:1: ( rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 )
            // InternalEtlParser.g:5210:2: rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1"


    // $ANTLR start "rule__SubExpression__Group__1__Impl"
    // InternalEtlParser.g:5217:1: rule__SubExpression__Group__1__Impl : ( ( rule__SubExpression__Group_1__0 )* ) ;
    public final void rule__SubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5221:1: ( ( ( rule__SubExpression__Group_1__0 )* ) )
            // InternalEtlParser.g:5222:1: ( ( rule__SubExpression__Group_1__0 )* )
            {
            // InternalEtlParser.g:5222:1: ( ( rule__SubExpression__Group_1__0 )* )
            // InternalEtlParser.g:5223:2: ( rule__SubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:5224:2: ( rule__SubExpression__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_PLUS) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalEtlParser.g:5224:3: rule__SubExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__SubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__2"
    // InternalEtlParser.g:5232:1: rule__SubExpression__Group__2 : rule__SubExpression__Group__2__Impl ;
    public final void rule__SubExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5236:1: ( rule__SubExpression__Group__2__Impl )
            // InternalEtlParser.g:5237:2: rule__SubExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2"


    // $ANTLR start "rule__SubExpression__Group__2__Impl"
    // InternalEtlParser.g:5243:1: rule__SubExpression__Group__2__Impl : ( ( rule__SubExpression__Group_2__0 )? ) ;
    public final void rule__SubExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5247:1: ( ( ( rule__SubExpression__Group_2__0 )? ) )
            // InternalEtlParser.g:5248:1: ( ( rule__SubExpression__Group_2__0 )? )
            {
            // InternalEtlParser.g:5248:1: ( ( rule__SubExpression__Group_2__0 )? )
            // InternalEtlParser.g:5249:2: ( rule__SubExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }
            // InternalEtlParser.g:5250:2: ( rule__SubExpression__Group_2__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_COLON) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEtlParser.g:5250:3: rule__SubExpression__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__0"
    // InternalEtlParser.g:5259:1: rule__SubExpression__Group_1__0 : rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 ;
    public final void rule__SubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5263:1: ( rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 )
            // InternalEtlParser.g:5264:2: rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__SubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0"


    // $ANTLR start "rule__SubExpression__Group_1__0__Impl"
    // InternalEtlParser.g:5271:1: rule__SubExpression__Group_1__0__Impl : ( RULE_PLUS ) ;
    public final void rule__SubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5275:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5276:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5276:1: ( RULE_PLUS )
            // InternalEtlParser.g:5277:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__1"
    // InternalEtlParser.g:5286:1: rule__SubExpression__Group_1__1 : rule__SubExpression__Group_1__1__Impl ;
    public final void rule__SubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5290:1: ( rule__SubExpression__Group_1__1__Impl )
            // InternalEtlParser.g:5291:2: rule__SubExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1"


    // $ANTLR start "rule__SubExpression__Group_1__1__Impl"
    // InternalEtlParser.g:5297:1: rule__SubExpression__Group_1__1__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) ;
    public final void rule__SubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5301:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) )
            // InternalEtlParser.g:5302:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:5302:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            // InternalEtlParser.g:5303:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }
            // InternalEtlParser.g:5304:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            // InternalEtlParser.g:5304:3: rule__SubExpression__FocusConceptsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__0"
    // InternalEtlParser.g:5313:1: rule__SubExpression__Group_2__0 : rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 ;
    public final void rule__SubExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5317:1: ( rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 )
            // InternalEtlParser.g:5318:2: rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SubExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0"


    // $ANTLR start "rule__SubExpression__Group_2__0__Impl"
    // InternalEtlParser.g:5325:1: rule__SubExpression__Group_2__0__Impl : ( RULE_COLON ) ;
    public final void rule__SubExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5329:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:5330:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:5330:1: ( RULE_COLON )
            // InternalEtlParser.g:5331:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__1"
    // InternalEtlParser.g:5340:1: rule__SubExpression__Group_2__1 : rule__SubExpression__Group_2__1__Impl ;
    public final void rule__SubExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5344:1: ( rule__SubExpression__Group_2__1__Impl )
            // InternalEtlParser.g:5345:2: rule__SubExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1"


    // $ANTLR start "rule__SubExpression__Group_2__1__Impl"
    // InternalEtlParser.g:5351:1: rule__SubExpression__Group_2__1__Impl : ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) ;
    public final void rule__SubExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5355:1: ( ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) )
            // InternalEtlParser.g:5356:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            {
            // InternalEtlParser.g:5356:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            // InternalEtlParser.g:5357:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }
            // InternalEtlParser.g:5358:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            // InternalEtlParser.g:5358:3: rule__SubExpression__RefinementAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__RefinementAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1__Impl"


    // $ANTLR start "rule__FocusConcept__Group__0"
    // InternalEtlParser.g:5367:1: rule__FocusConcept__Group__0 : rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 ;
    public final void rule__FocusConcept__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5371:1: ( rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 )
            // InternalEtlParser.g:5372:2: rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__FocusConcept__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0"


    // $ANTLR start "rule__FocusConcept__Group__0__Impl"
    // InternalEtlParser.g:5379:1: rule__FocusConcept__Group__0__Impl : ( ( rule__FocusConcept__SlotAssignment_0 )? ) ;
    public final void rule__FocusConcept__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5383:1: ( ( ( rule__FocusConcept__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5384:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5384:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            // InternalEtlParser.g:5385:2: ( rule__FocusConcept__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5386:2: ( rule__FocusConcept__SlotAssignment_0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA59_1 = input.LA(2);

                if ( ((LA59_1>=RULE_DOUBLE_SQUARE_CLOSE && LA59_1<=RULE_TILDE)||LA59_1==RULE_SLOTNAME_STRING||LA59_1==RULE_DIGIT) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalEtlParser.g:5386:3: rule__FocusConcept__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FocusConcept__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0__Impl"


    // $ANTLR start "rule__FocusConcept__Group__1"
    // InternalEtlParser.g:5394:1: rule__FocusConcept__Group__1 : rule__FocusConcept__Group__1__Impl ;
    public final void rule__FocusConcept__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5398:1: ( rule__FocusConcept__Group__1__Impl )
            // InternalEtlParser.g:5399:2: rule__FocusConcept__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1"


    // $ANTLR start "rule__FocusConcept__Group__1__Impl"
    // InternalEtlParser.g:5405:1: rule__FocusConcept__Group__1__Impl : ( ( rule__FocusConcept__ConceptAssignment_1 ) ) ;
    public final void rule__FocusConcept__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5409:1: ( ( ( rule__FocusConcept__ConceptAssignment_1 ) ) )
            // InternalEtlParser.g:5410:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            {
            // InternalEtlParser.g:5410:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            // InternalEtlParser.g:5411:2: ( rule__FocusConcept__ConceptAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }
            // InternalEtlParser.g:5412:2: ( rule__FocusConcept__ConceptAssignment_1 )
            // InternalEtlParser.g:5412:3: rule__FocusConcept__ConceptAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__ConceptAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group__0"
    // InternalEtlParser.g:5421:1: rule__Refinement__Group__0 : rule__Refinement__Group__0__Impl rule__Refinement__Group__1 ;
    public final void rule__Refinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5425:1: ( rule__Refinement__Group__0__Impl rule__Refinement__Group__1 )
            // InternalEtlParser.g:5426:2: rule__Refinement__Group__0__Impl rule__Refinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0"


    // $ANTLR start "rule__Refinement__Group__0__Impl"
    // InternalEtlParser.g:5433:1: rule__Refinement__Group__0__Impl : ( ( rule__Refinement__Alternatives_0 ) ) ;
    public final void rule__Refinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5437:1: ( ( ( rule__Refinement__Alternatives_0 ) ) )
            // InternalEtlParser.g:5438:1: ( ( rule__Refinement__Alternatives_0 ) )
            {
            // InternalEtlParser.g:5438:1: ( ( rule__Refinement__Alternatives_0 ) )
            // InternalEtlParser.g:5439:2: ( rule__Refinement__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:5440:2: ( rule__Refinement__Alternatives_0 )
            // InternalEtlParser.g:5440:3: rule__Refinement__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0__Impl"


    // $ANTLR start "rule__Refinement__Group__1"
    // InternalEtlParser.g:5448:1: rule__Refinement__Group__1 : rule__Refinement__Group__1__Impl ;
    public final void rule__Refinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5452:1: ( rule__Refinement__Group__1__Impl )
            // InternalEtlParser.g:5453:2: rule__Refinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1"


    // $ANTLR start "rule__Refinement__Group__1__Impl"
    // InternalEtlParser.g:5459:1: rule__Refinement__Group__1__Impl : ( ( rule__Refinement__Group_1__0 )* ) ;
    public final void rule__Refinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5463:1: ( ( ( rule__Refinement__Group_1__0 )* ) )
            // InternalEtlParser.g:5464:1: ( ( rule__Refinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:5464:1: ( ( rule__Refinement__Group_1__0 )* )
            // InternalEtlParser.g:5465:2: ( rule__Refinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:5466:2: ( rule__Refinement__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_DOUBLE_SQUARE_OPEN||LA60_0==RULE_COMMA||LA60_0==RULE_CURLY_OPEN) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEtlParser.g:5466:3: rule__Refinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__Refinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__0"
    // InternalEtlParser.g:5475:1: rule__Refinement__Group_0_0__0 : rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 ;
    public final void rule__Refinement__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5479:1: ( rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 )
            // InternalEtlParser.g:5480:2: rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__Refinement__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0"


    // $ANTLR start "rule__Refinement__Group_0_0__0__Impl"
    // InternalEtlParser.g:5487:1: rule__Refinement__Group_0_0__0__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) ;
    public final void rule__Refinement__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5491:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:5492:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:5492:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            // InternalEtlParser.g:5493:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:5494:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            // InternalEtlParser.g:5494:3: rule__Refinement__AttributesAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__1"
    // InternalEtlParser.g:5502:1: rule__Refinement__Group_0_0__1 : rule__Refinement__Group_0_0__1__Impl ;
    public final void rule__Refinement__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5506:1: ( rule__Refinement__Group_0_0__1__Impl )
            // InternalEtlParser.g:5507:2: rule__Refinement__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1"


    // $ANTLR start "rule__Refinement__Group_0_0__1__Impl"
    // InternalEtlParser.g:5513:1: rule__Refinement__Group_0_0__1__Impl : ( ( rule__Refinement__Group_0_0_1__0 )* ) ;
    public final void rule__Refinement__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5517:1: ( ( ( rule__Refinement__Group_0_0_1__0 )* ) )
            // InternalEtlParser.g:5518:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            {
            // InternalEtlParser.g:5518:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            // InternalEtlParser.g:5519:2: ( rule__Refinement__Group_0_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }
            // InternalEtlParser.g:5520:2: ( rule__Refinement__Group_0_0_1__0 )*
            loop61:
            do {
                int alt61=2;
                alt61 = dfa61.predict(input);
                switch (alt61) {
            	case 1 :
            	    // InternalEtlParser.g:5520:3: rule__Refinement__Group_0_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__Refinement__Group_0_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0"
    // InternalEtlParser.g:5529:1: rule__Refinement__Group_0_0_1__0 : rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 ;
    public final void rule__Refinement__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5533:1: ( rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 )
            // InternalEtlParser.g:5534:2: rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Refinement__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0__Impl"
    // InternalEtlParser.g:5541:1: rule__Refinement__Group_0_0_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__Refinement__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5545:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:5546:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:5546:1: ( RULE_COMMA )
            // InternalEtlParser.g:5547:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1"
    // InternalEtlParser.g:5556:1: rule__Refinement__Group_0_0_1__1 : rule__Refinement__Group_0_0_1__1__Impl ;
    public final void rule__Refinement__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5560:1: ( rule__Refinement__Group_0_0_1__1__Impl )
            // InternalEtlParser.g:5561:2: rule__Refinement__Group_0_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1__Impl"
    // InternalEtlParser.g:5567:1: rule__Refinement__Group_0_0_1__1__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) ;
    public final void rule__Refinement__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5571:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) )
            // InternalEtlParser.g:5572:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            {
            // InternalEtlParser.g:5572:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            // InternalEtlParser.g:5573:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }
            // InternalEtlParser.g:5574:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            // InternalEtlParser.g:5574:3: rule__Refinement__AttributesAssignment_0_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__Refinement__Group_1__0"
    // InternalEtlParser.g:5583:1: rule__Refinement__Group_1__0 : rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 ;
    public final void rule__Refinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5587:1: ( rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 )
            // InternalEtlParser.g:5588:2: rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0"


    // $ANTLR start "rule__Refinement__Group_1__0__Impl"
    // InternalEtlParser.g:5595:1: rule__Refinement__Group_1__0__Impl : ( ( RULE_COMMA )? ) ;
    public final void rule__Refinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5599:1: ( ( ( RULE_COMMA )? ) )
            // InternalEtlParser.g:5600:1: ( ( RULE_COMMA )? )
            {
            // InternalEtlParser.g:5600:1: ( ( RULE_COMMA )? )
            // InternalEtlParser.g:5601:2: ( RULE_COMMA )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }
            // InternalEtlParser.g:5602:2: ( RULE_COMMA )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_COMMA) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalEtlParser.g:5602:3: RULE_COMMA
                    {
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_1__1"
    // InternalEtlParser.g:5610:1: rule__Refinement__Group_1__1 : rule__Refinement__Group_1__1__Impl ;
    public final void rule__Refinement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5614:1: ( rule__Refinement__Group_1__1__Impl )
            // InternalEtlParser.g:5615:2: rule__Refinement__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1"


    // $ANTLR start "rule__Refinement__Group_1__1__Impl"
    // InternalEtlParser.g:5621:1: rule__Refinement__Group_1__1__Impl : ( ( rule__Refinement__GroupsAssignment_1_1 ) ) ;
    public final void rule__Refinement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5625:1: ( ( ( rule__Refinement__GroupsAssignment_1_1 ) ) )
            // InternalEtlParser.g:5626:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:5626:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            // InternalEtlParser.g:5627:2: ( rule__Refinement__GroupsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }
            // InternalEtlParser.g:5628:2: ( rule__Refinement__GroupsAssignment_1_1 )
            // InternalEtlParser.g:5628:3: rule__Refinement__GroupsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__GroupsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__0"
    // InternalEtlParser.g:5637:1: rule__AttributeGroup__Group__0 : rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 ;
    public final void rule__AttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5641:1: ( rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 )
            // InternalEtlParser.g:5642:2: rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0"


    // $ANTLR start "rule__AttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:5649:1: rule__AttributeGroup__Group__0__Impl : ( ( rule__AttributeGroup__SlotAssignment_0 )? ) ;
    public final void rule__AttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5653:1: ( ( ( rule__AttributeGroup__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5654:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5654:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            // InternalEtlParser.g:5655:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5656:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEtlParser.g:5656:3: rule__AttributeGroup__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeGroup__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__1"
    // InternalEtlParser.g:5664:1: rule__AttributeGroup__Group__1 : rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 ;
    public final void rule__AttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5668:1: ( rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 )
            // InternalEtlParser.g:5669:2: rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1"


    // $ANTLR start "rule__AttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:5676:1: rule__AttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__AttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5680:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:5681:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:5681:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:5682:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__2"
    // InternalEtlParser.g:5691:1: rule__AttributeGroup__Group__2 : rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 ;
    public final void rule__AttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5695:1: ( rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 )
            // InternalEtlParser.g:5696:2: rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2"


    // $ANTLR start "rule__AttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:5703:1: rule__AttributeGroup__Group__2__Impl : ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) ;
    public final void rule__AttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5707:1: ( ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) )
            // InternalEtlParser.g:5708:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            {
            // InternalEtlParser.g:5708:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            // InternalEtlParser.g:5709:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }
            // InternalEtlParser.g:5710:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            // InternalEtlParser.g:5710:3: rule__AttributeGroup__AttributesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__3"
    // InternalEtlParser.g:5718:1: rule__AttributeGroup__Group__3 : rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 ;
    public final void rule__AttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5722:1: ( rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 )
            // InternalEtlParser.g:5723:2: rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3"


    // $ANTLR start "rule__AttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:5730:1: rule__AttributeGroup__Group__3__Impl : ( ( rule__AttributeGroup__Group_3__0 )* ) ;
    public final void rule__AttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5734:1: ( ( ( rule__AttributeGroup__Group_3__0 )* ) )
            // InternalEtlParser.g:5735:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            {
            // InternalEtlParser.g:5735:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            // InternalEtlParser.g:5736:2: ( rule__AttributeGroup__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }
            // InternalEtlParser.g:5737:2: ( rule__AttributeGroup__Group_3__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_COMMA) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalEtlParser.g:5737:3: rule__AttributeGroup__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__AttributeGroup__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__4"
    // InternalEtlParser.g:5745:1: rule__AttributeGroup__Group__4 : rule__AttributeGroup__Group__4__Impl ;
    public final void rule__AttributeGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5749:1: ( rule__AttributeGroup__Group__4__Impl )
            // InternalEtlParser.g:5750:2: rule__AttributeGroup__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4"


    // $ANTLR start "rule__AttributeGroup__Group__4__Impl"
    // InternalEtlParser.g:5756:1: rule__AttributeGroup__Group__4__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__AttributeGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5760:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:5761:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:5761:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:5762:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__0"
    // InternalEtlParser.g:5772:1: rule__AttributeGroup__Group_3__0 : rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 ;
    public final void rule__AttributeGroup__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5776:1: ( rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 )
            // InternalEtlParser.g:5777:2: rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0"


    // $ANTLR start "rule__AttributeGroup__Group_3__0__Impl"
    // InternalEtlParser.g:5784:1: rule__AttributeGroup__Group_3__0__Impl : ( RULE_COMMA ) ;
    public final void rule__AttributeGroup__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5788:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:5789:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:5789:1: ( RULE_COMMA )
            // InternalEtlParser.g:5790:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__1"
    // InternalEtlParser.g:5799:1: rule__AttributeGroup__Group_3__1 : rule__AttributeGroup__Group_3__1__Impl ;
    public final void rule__AttributeGroup__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5803:1: ( rule__AttributeGroup__Group_3__1__Impl )
            // InternalEtlParser.g:5804:2: rule__AttributeGroup__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1"


    // $ANTLR start "rule__AttributeGroup__Group_3__1__Impl"
    // InternalEtlParser.g:5810:1: rule__AttributeGroup__Group_3__1__Impl : ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) ;
    public final void rule__AttributeGroup__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5814:1: ( ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) )
            // InternalEtlParser.g:5815:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            {
            // InternalEtlParser.g:5815:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            // InternalEtlParser.g:5816:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }
            // InternalEtlParser.g:5817:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            // InternalEtlParser.g:5817:3: rule__AttributeGroup__AttributesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1__Impl"


    // $ANTLR start "rule__Attribute__Group__0"
    // InternalEtlParser.g:5826:1: rule__Attribute__Group__0 : rule__Attribute__Group__0__Impl rule__Attribute__Group__1 ;
    public final void rule__Attribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5830:1: ( rule__Attribute__Group__0__Impl rule__Attribute__Group__1 )
            // InternalEtlParser.g:5831:2: rule__Attribute__Group__0__Impl rule__Attribute__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Attribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0"


    // $ANTLR start "rule__Attribute__Group__0__Impl"
    // InternalEtlParser.g:5838:1: rule__Attribute__Group__0__Impl : ( ( rule__Attribute__SlotAssignment_0 )? ) ;
    public final void rule__Attribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5842:1: ( ( ( rule__Attribute__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5843:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5843:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            // InternalEtlParser.g:5844:2: ( rule__Attribute__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5845:2: ( rule__Attribute__SlotAssignment_0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA65_1 = input.LA(2);

                if ( ((LA65_1>=RULE_DOUBLE_SQUARE_CLOSE && LA65_1<=RULE_TILDE)||LA65_1==RULE_SLOTNAME_STRING||LA65_1==RULE_DIGIT) ) {
                    alt65=1;
                }
            }
            switch (alt65) {
                case 1 :
                    // InternalEtlParser.g:5845:3: rule__Attribute__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Attribute__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0__Impl"


    // $ANTLR start "rule__Attribute__Group__1"
    // InternalEtlParser.g:5853:1: rule__Attribute__Group__1 : rule__Attribute__Group__1__Impl rule__Attribute__Group__2 ;
    public final void rule__Attribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5857:1: ( rule__Attribute__Group__1__Impl rule__Attribute__Group__2 )
            // InternalEtlParser.g:5858:2: rule__Attribute__Group__1__Impl rule__Attribute__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Attribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1"


    // $ANTLR start "rule__Attribute__Group__1__Impl"
    // InternalEtlParser.g:5865:1: rule__Attribute__Group__1__Impl : ( ( rule__Attribute__NameAssignment_1 ) ) ;
    public final void rule__Attribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5869:1: ( ( ( rule__Attribute__NameAssignment_1 ) ) )
            // InternalEtlParser.g:5870:1: ( ( rule__Attribute__NameAssignment_1 ) )
            {
            // InternalEtlParser.g:5870:1: ( ( rule__Attribute__NameAssignment_1 ) )
            // InternalEtlParser.g:5871:2: ( rule__Attribute__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }
            // InternalEtlParser.g:5872:2: ( rule__Attribute__NameAssignment_1 )
            // InternalEtlParser.g:5872:3: rule__Attribute__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1__Impl"


    // $ANTLR start "rule__Attribute__Group__2"
    // InternalEtlParser.g:5880:1: rule__Attribute__Group__2 : rule__Attribute__Group__2__Impl rule__Attribute__Group__3 ;
    public final void rule__Attribute__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5884:1: ( rule__Attribute__Group__2__Impl rule__Attribute__Group__3 )
            // InternalEtlParser.g:5885:2: rule__Attribute__Group__2__Impl rule__Attribute__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Attribute__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2"


    // $ANTLR start "rule__Attribute__Group__2__Impl"
    // InternalEtlParser.g:5892:1: rule__Attribute__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__Attribute__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5896:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:5897:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:5897:1: ( RULE_EQUAL )
            // InternalEtlParser.g:5898:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2__Impl"


    // $ANTLR start "rule__Attribute__Group__3"
    // InternalEtlParser.g:5907:1: rule__Attribute__Group__3 : rule__Attribute__Group__3__Impl ;
    public final void rule__Attribute__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5911:1: ( rule__Attribute__Group__3__Impl )
            // InternalEtlParser.g:5912:2: rule__Attribute__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3"


    // $ANTLR start "rule__Attribute__Group__3__Impl"
    // InternalEtlParser.g:5918:1: rule__Attribute__Group__3__Impl : ( ( rule__Attribute__ValueAssignment_3 ) ) ;
    public final void rule__Attribute__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5922:1: ( ( ( rule__Attribute__ValueAssignment_3 ) ) )
            // InternalEtlParser.g:5923:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            {
            // InternalEtlParser.g:5923:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            // InternalEtlParser.g:5924:2: ( rule__Attribute__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }
            // InternalEtlParser.g:5925:2: ( rule__Attribute__ValueAssignment_3 )
            // InternalEtlParser.g:5925:3: rule__Attribute__ValueAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__0"
    // InternalEtlParser.g:5934:1: rule__AttributeValue__Group_1__0 : rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 ;
    public final void rule__AttributeValue__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5938:1: ( rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 )
            // InternalEtlParser.g:5939:2: rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeValue__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0"


    // $ANTLR start "rule__AttributeValue__Group_1__0__Impl"
    // InternalEtlParser.g:5946:1: rule__AttributeValue__Group_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AttributeValue__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5950:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5951:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5951:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5952:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__1"
    // InternalEtlParser.g:5961:1: rule__AttributeValue__Group_1__1 : rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 ;
    public final void rule__AttributeValue__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5965:1: ( rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 )
            // InternalEtlParser.g:5966:2: rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__AttributeValue__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1"


    // $ANTLR start "rule__AttributeValue__Group_1__1__Impl"
    // InternalEtlParser.g:5973:1: rule__AttributeValue__Group_1__1__Impl : ( ruleSubExpression ) ;
    public final void rule__AttributeValue__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5977:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:5978:1: ( ruleSubExpression )
            {
            // InternalEtlParser.g:5978:1: ( ruleSubExpression )
            // InternalEtlParser.g:5979:2: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__2"
    // InternalEtlParser.g:5988:1: rule__AttributeValue__Group_1__2 : rule__AttributeValue__Group_1__2__Impl ;
    public final void rule__AttributeValue__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5992:1: ( rule__AttributeValue__Group_1__2__Impl )
            // InternalEtlParser.g:5993:2: rule__AttributeValue__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2"


    // $ANTLR start "rule__AttributeValue__Group_1__2__Impl"
    // InternalEtlParser.g:5999:1: rule__AttributeValue__Group_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AttributeValue__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6003:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6004:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6004:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6005:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0"
    // InternalEtlParser.g:6015:1: rule__ConceptIdReplacementSlot__Group__0 : rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 ;
    public final void rule__ConceptIdReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6019:1: ( rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 )
            // InternalEtlParser.g:6020:2: rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ConceptIdReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6027:1: rule__ConceptIdReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ConceptIdReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6031:1: ( ( () ) )
            // InternalEtlParser.g:6032:1: ( () )
            {
            // InternalEtlParser.g:6032:1: ( () )
            // InternalEtlParser.g:6033:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6034:2: ()
            // InternalEtlParser.g:6034:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1"
    // InternalEtlParser.g:6042:1: rule__ConceptIdReplacementSlot__Group__1 : rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 ;
    public final void rule__ConceptIdReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6046:1: ( rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 )
            // InternalEtlParser.g:6047:2: rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6054:1: rule__ConceptIdReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6058:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6059:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6059:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6060:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2"
    // InternalEtlParser.g:6069:1: rule__ConceptIdReplacementSlot__Group__2 : rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 ;
    public final void rule__ConceptIdReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6073:1: ( rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 )
            // InternalEtlParser.g:6074:2: rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ConceptIdReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6081:1: rule__ConceptIdReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ConceptIdReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6085:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6086:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6086:1: ( RULE_PLUS )
            // InternalEtlParser.g:6087:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3"
    // InternalEtlParser.g:6096:1: rule__ConceptIdReplacementSlot__Group__3 : rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 ;
    public final void rule__ConceptIdReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6100:1: ( rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 )
            // InternalEtlParser.g:6101:2: rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6108:1: rule__ConceptIdReplacementSlot__Group__3__Impl : ( RULE_ID ) ;
    public final void rule__ConceptIdReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6112:1: ( ( RULE_ID ) )
            // InternalEtlParser.g:6113:1: ( RULE_ID )
            {
            // InternalEtlParser.g:6113:1: ( RULE_ID )
            // InternalEtlParser.g:6114:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4"
    // InternalEtlParser.g:6123:1: rule__ConceptIdReplacementSlot__Group__4 : rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 ;
    public final void rule__ConceptIdReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6127:1: ( rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 )
            // InternalEtlParser.g:6128:2: rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6135:1: rule__ConceptIdReplacementSlot__Group__4__Impl : ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6139:1: ( ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6140:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6140:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6141:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6142:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ROUND_OPEN) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEtlParser.g:6142:3: rule__ConceptIdReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5"
    // InternalEtlParser.g:6150:1: rule__ConceptIdReplacementSlot__Group__5 : rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 ;
    public final void rule__ConceptIdReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6154:1: ( rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 )
            // InternalEtlParser.g:6155:2: rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6162:1: rule__ConceptIdReplacementSlot__Group__5__Impl : ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6166:1: ( ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6167:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6167:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6168:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6169:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_SLOTNAME_STRING) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEtlParser.g:6169:3: rule__ConceptIdReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6"
    // InternalEtlParser.g:6177:1: rule__ConceptIdReplacementSlot__Group__6 : rule__ConceptIdReplacementSlot__Group__6__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6181:1: ( rule__ConceptIdReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6182:2: rule__ConceptIdReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6188:1: rule__ConceptIdReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6192:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6193:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6193:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6194:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6204:1: rule__ConceptIdReplacementSlot__Group_4__0 : rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6208:1: ( rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6209:2: rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ConceptIdReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6216:1: rule__ConceptIdReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6220:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6221:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6221:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6222:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6231:1: rule__ConceptIdReplacementSlot__Group_4__1 : rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6235:1: ( rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6236:2: rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ConceptIdReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6243:1: rule__ConceptIdReplacementSlot__Group_4__1__Impl : ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6247:1: ( ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:6248:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6248:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:6249:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:6250:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:6250:3: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6258:1: rule__ConceptIdReplacementSlot__Group_4__2 : rule__ConceptIdReplacementSlot__Group_4__2__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6262:1: ( rule__ConceptIdReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:6263:2: rule__ConceptIdReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6269:1: rule__ConceptIdReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6273:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6274:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6274:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6275:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0"
    // InternalEtlParser.g:6285:1: rule__ExpressionReplacementSlot__Group__0 : rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 ;
    public final void rule__ExpressionReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6289:1: ( rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 )
            // InternalEtlParser.g:6290:2: rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ExpressionReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6297:1: rule__ExpressionReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6301:1: ( ( () ) )
            // InternalEtlParser.g:6302:1: ( () )
            {
            // InternalEtlParser.g:6302:1: ( () )
            // InternalEtlParser.g:6303:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6304:2: ()
            // InternalEtlParser.g:6304:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1"
    // InternalEtlParser.g:6312:1: rule__ExpressionReplacementSlot__Group__1 : rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 ;
    public final void rule__ExpressionReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6316:1: ( rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 )
            // InternalEtlParser.g:6317:2: rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ExpressionReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6324:1: rule__ExpressionReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6328:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6329:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6329:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6330:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2"
    // InternalEtlParser.g:6339:1: rule__ExpressionReplacementSlot__Group__2 : rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 ;
    public final void rule__ExpressionReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6343:1: ( rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 )
            // InternalEtlParser.g:6344:2: rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6351:1: rule__ExpressionReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ExpressionReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6355:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6356:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6356:1: ( RULE_PLUS )
            // InternalEtlParser.g:6357:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3"
    // InternalEtlParser.g:6366:1: rule__ExpressionReplacementSlot__Group__3 : rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 ;
    public final void rule__ExpressionReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6370:1: ( rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 )
            // InternalEtlParser.g:6371:2: rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6378:1: rule__ExpressionReplacementSlot__Group__3__Impl : ( ( RULE_SCG )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6382:1: ( ( ( RULE_SCG )? ) )
            // InternalEtlParser.g:6383:1: ( ( RULE_SCG )? )
            {
            // InternalEtlParser.g:6383:1: ( ( RULE_SCG )? )
            // InternalEtlParser.g:6384:2: ( RULE_SCG )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }
            // InternalEtlParser.g:6385:2: ( RULE_SCG )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_SCG) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEtlParser.g:6385:3: RULE_SCG
                    {
                    match(input,RULE_SCG,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4"
    // InternalEtlParser.g:6393:1: rule__ExpressionReplacementSlot__Group__4 : rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 ;
    public final void rule__ExpressionReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6397:1: ( rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 )
            // InternalEtlParser.g:6398:2: rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6405:1: rule__ExpressionReplacementSlot__Group__4__Impl : ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6409:1: ( ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6410:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6410:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6411:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6412:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_ROUND_OPEN) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalEtlParser.g:6412:3: rule__ExpressionReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5"
    // InternalEtlParser.g:6420:1: rule__ExpressionReplacementSlot__Group__5 : rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 ;
    public final void rule__ExpressionReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6424:1: ( rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 )
            // InternalEtlParser.g:6425:2: rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6432:1: rule__ExpressionReplacementSlot__Group__5__Impl : ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6436:1: ( ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6437:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6437:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6438:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6439:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_SLOTNAME_STRING) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEtlParser.g:6439:3: rule__ExpressionReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6"
    // InternalEtlParser.g:6447:1: rule__ExpressionReplacementSlot__Group__6 : rule__ExpressionReplacementSlot__Group__6__Impl ;
    public final void rule__ExpressionReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6451:1: ( rule__ExpressionReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6452:2: rule__ExpressionReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6458:1: rule__ExpressionReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6462:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6463:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6463:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6464:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6474:1: rule__ExpressionReplacementSlot__Group_4__0 : rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 ;
    public final void rule__ExpressionReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6478:1: ( rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6479:2: rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExpressionReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6486:1: rule__ExpressionReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6490:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6491:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6491:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6492:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6501:1: rule__ExpressionReplacementSlot__Group_4__1 : rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 ;
    public final void rule__ExpressionReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6505:1: ( rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6506:2: rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ExpressionReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6513:1: rule__ExpressionReplacementSlot__Group_4__1__Impl : ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6517:1: ( ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:6518:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6518:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:6519:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:6520:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:6520:3: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6528:1: rule__ExpressionReplacementSlot__Group_4__2 : rule__ExpressionReplacementSlot__Group_4__2__Impl ;
    public final void rule__ExpressionReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6532:1: ( rule__ExpressionReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:6533:2: rule__ExpressionReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6539:1: rule__ExpressionReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6543:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6544:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6544:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6545:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0"
    // InternalEtlParser.g:6555:1: rule__TokenReplacementSlot__Group__0 : rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 ;
    public final void rule__TokenReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6559:1: ( rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 )
            // InternalEtlParser.g:6560:2: rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__TokenReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6567:1: rule__TokenReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__TokenReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6571:1: ( ( () ) )
            // InternalEtlParser.g:6572:1: ( () )
            {
            // InternalEtlParser.g:6572:1: ( () )
            // InternalEtlParser.g:6573:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6574:2: ()
            // InternalEtlParser.g:6574:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1"
    // InternalEtlParser.g:6582:1: rule__TokenReplacementSlot__Group__1 : rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 ;
    public final void rule__TokenReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6586:1: ( rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 )
            // InternalEtlParser.g:6587:2: rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6594:1: rule__TokenReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6598:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6599:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6599:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6600:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2"
    // InternalEtlParser.g:6609:1: rule__TokenReplacementSlot__Group__2 : rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 ;
    public final void rule__TokenReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6613:1: ( rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 )
            // InternalEtlParser.g:6614:2: rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TokenReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6621:1: rule__TokenReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__TokenReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6625:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6626:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6626:1: ( RULE_PLUS )
            // InternalEtlParser.g:6627:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3"
    // InternalEtlParser.g:6636:1: rule__TokenReplacementSlot__Group__3 : rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 ;
    public final void rule__TokenReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6640:1: ( rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 )
            // InternalEtlParser.g:6641:2: rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6648:1: rule__TokenReplacementSlot__Group__3__Impl : ( RULE_TOK ) ;
    public final void rule__TokenReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6652:1: ( ( RULE_TOK ) )
            // InternalEtlParser.g:6653:1: ( RULE_TOK )
            {
            // InternalEtlParser.g:6653:1: ( RULE_TOK )
            // InternalEtlParser.g:6654:2: RULE_TOK
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }
            match(input,RULE_TOK,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4"
    // InternalEtlParser.g:6663:1: rule__TokenReplacementSlot__Group__4 : rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 ;
    public final void rule__TokenReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6667:1: ( rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 )
            // InternalEtlParser.g:6668:2: rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6675:1: rule__TokenReplacementSlot__Group__4__Impl : ( ( rule__TokenReplacementSlot__Group_4__0 )? ) ;
    public final void rule__TokenReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6679:1: ( ( ( rule__TokenReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6680:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6680:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6681:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6682:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==RULE_ROUND_OPEN) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalEtlParser.g:6682:3: rule__TokenReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5"
    // InternalEtlParser.g:6690:1: rule__TokenReplacementSlot__Group__5 : rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 ;
    public final void rule__TokenReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6694:1: ( rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 )
            // InternalEtlParser.g:6695:2: rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6702:1: rule__TokenReplacementSlot__Group__5__Impl : ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__TokenReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6706:1: ( ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6707:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6707:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6708:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6709:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_SLOTNAME_STRING) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEtlParser.g:6709:3: rule__TokenReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6"
    // InternalEtlParser.g:6717:1: rule__TokenReplacementSlot__Group__6 : rule__TokenReplacementSlot__Group__6__Impl ;
    public final void rule__TokenReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6721:1: ( rule__TokenReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6722:2: rule__TokenReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6728:1: rule__TokenReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6732:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6733:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6733:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6734:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6744:1: rule__TokenReplacementSlot__Group_4__0 : rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 ;
    public final void rule__TokenReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6748:1: ( rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6749:2: rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TokenReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6756:1: rule__TokenReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6760:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6761:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6761:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6762:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6771:1: rule__TokenReplacementSlot__Group_4__1 : rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 ;
    public final void rule__TokenReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6775:1: ( rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6776:2: rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6783:1: rule__TokenReplacementSlot__Group_4__1__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) ;
    public final void rule__TokenReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6787:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) )
            // InternalEtlParser.g:6788:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6788:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            // InternalEtlParser.g:6789:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }
            // InternalEtlParser.g:6790:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            // InternalEtlParser.g:6790:3: rule__TokenReplacementSlot__TokensAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__TokensAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6798:1: rule__TokenReplacementSlot__Group_4__2 : rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 ;
    public final void rule__TokenReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6802:1: ( rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6803:2: rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6810:1: rule__TokenReplacementSlot__Group_4__2__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) ;
    public final void rule__TokenReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6814:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) )
            // InternalEtlParser.g:6815:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6815:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            // InternalEtlParser.g:6816:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }
            // InternalEtlParser.g:6817:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0>=RULE_EQUIVALENT_TO && LA73_0<=RULE_SUBTYPE_OF)||LA73_0==RULE_EXCLUSION_KEYWORD||(LA73_0>=RULE_CONJUNCTION_KEYWORD && LA73_0<=RULE_DISJUNCTION_KEYWORD)||LA73_0==RULE_REVERSED||(LA73_0>=RULE_DBL_LT && LA73_0<=RULE_LTE)||LA73_0==RULE_COMMA||LA73_0==RULE_CARET||(LA73_0>=RULE_EQUAL && LA73_0<=RULE_GT)) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalEtlParser.g:6817:3: rule__TokenReplacementSlot__TokensAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    rule__TokenReplacementSlot__TokensAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6825:1: rule__TokenReplacementSlot__Group_4__3 : rule__TokenReplacementSlot__Group_4__3__Impl ;
    public final void rule__TokenReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6829:1: ( rule__TokenReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6830:2: rule__TokenReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6836:1: rule__TokenReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6840:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6841:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6841:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6842:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0"
    // InternalEtlParser.g:6852:1: rule__TemplateInformationSlot__Group__0 : rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 ;
    public final void rule__TemplateInformationSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6856:1: ( rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 )
            // InternalEtlParser.g:6857:2: rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__TemplateInformationSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0__Impl"
    // InternalEtlParser.g:6864:1: rule__TemplateInformationSlot__Group__0__Impl : ( () ) ;
    public final void rule__TemplateInformationSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6868:1: ( ( () ) )
            // InternalEtlParser.g:6869:1: ( () )
            {
            // InternalEtlParser.g:6869:1: ( () )
            // InternalEtlParser.g:6870:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }
            // InternalEtlParser.g:6871:2: ()
            // InternalEtlParser.g:6871:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1"
    // InternalEtlParser.g:6879:1: rule__TemplateInformationSlot__Group__1 : rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 ;
    public final void rule__TemplateInformationSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6883:1: ( rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 )
            // InternalEtlParser.g:6884:2: rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1__Impl"
    // InternalEtlParser.g:6891:1: rule__TemplateInformationSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TemplateInformationSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6895:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6896:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6896:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6897:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2"
    // InternalEtlParser.g:6906:1: rule__TemplateInformationSlot__Group__2 : rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 ;
    public final void rule__TemplateInformationSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6910:1: ( rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 )
            // InternalEtlParser.g:6911:2: rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2__Impl"
    // InternalEtlParser.g:6918:1: rule__TemplateInformationSlot__Group__2__Impl : ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) ;
    public final void rule__TemplateInformationSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6922:1: ( ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) )
            // InternalEtlParser.g:6923:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            {
            // InternalEtlParser.g:6923:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            // InternalEtlParser.g:6924:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }
            // InternalEtlParser.g:6925:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_TILDE||LA74_0==RULE_DIGIT) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalEtlParser.g:6925:3: rule__TemplateInformationSlot__CardinalityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__CardinalityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3"
    // InternalEtlParser.g:6933:1: rule__TemplateInformationSlot__Group__3 : rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 ;
    public final void rule__TemplateInformationSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6937:1: ( rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 )
            // InternalEtlParser.g:6938:2: rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3__Impl"
    // InternalEtlParser.g:6945:1: rule__TemplateInformationSlot__Group__3__Impl : ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) ;
    public final void rule__TemplateInformationSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6949:1: ( ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) )
            // InternalEtlParser.g:6950:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            {
            // InternalEtlParser.g:6950:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            // InternalEtlParser.g:6951:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }
            // InternalEtlParser.g:6952:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_SLOTNAME_STRING) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalEtlParser.g:6952:3: rule__TemplateInformationSlot__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4"
    // InternalEtlParser.g:6960:1: rule__TemplateInformationSlot__Group__4 : rule__TemplateInformationSlot__Group__4__Impl ;
    public final void rule__TemplateInformationSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6964:1: ( rule__TemplateInformationSlot__Group__4__Impl )
            // InternalEtlParser.g:6965:2: rule__TemplateInformationSlot__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4__Impl"
    // InternalEtlParser.g:6971:1: rule__TemplateInformationSlot__Group__4__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TemplateInformationSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6975:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6976:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6976:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6977:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__0"
    // InternalEtlParser.g:6987:1: rule__StringReplacementSlot__Group__0 : rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 ;
    public final void rule__StringReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6991:1: ( rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 )
            // InternalEtlParser.g:6992:2: rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__StringReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0"


    // $ANTLR start "rule__StringReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6999:1: rule__StringReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__StringReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7003:1: ( ( () ) )
            // InternalEtlParser.g:7004:1: ( () )
            {
            // InternalEtlParser.g:7004:1: ( () )
            // InternalEtlParser.g:7005:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:7006:2: ()
            // InternalEtlParser.g:7006:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__1"
    // InternalEtlParser.g:7014:1: rule__StringReplacementSlot__Group__1 : rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 ;
    public final void rule__StringReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7018:1: ( rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 )
            // InternalEtlParser.g:7019:2: rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1"


    // $ANTLR start "rule__StringReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:7026:1: rule__StringReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__StringReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7030:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:7031:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:7031:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:7032:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__2"
    // InternalEtlParser.g:7041:1: rule__StringReplacementSlot__Group__2 : rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 ;
    public final void rule__StringReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7045:1: ( rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 )
            // InternalEtlParser.g:7046:2: rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2"


    // $ANTLR start "rule__StringReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:7053:1: rule__StringReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__StringReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7057:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:7058:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:7058:1: ( RULE_PLUS )
            // InternalEtlParser.g:7059:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__3"
    // InternalEtlParser.g:7068:1: rule__StringReplacementSlot__Group__3 : rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 ;
    public final void rule__StringReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7072:1: ( rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 )
            // InternalEtlParser.g:7073:2: rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3"


    // $ANTLR start "rule__StringReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:7080:1: rule__StringReplacementSlot__Group__3__Impl : ( RULE_STR ) ;
    public final void rule__StringReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7084:1: ( ( RULE_STR ) )
            // InternalEtlParser.g:7085:1: ( RULE_STR )
            {
            // InternalEtlParser.g:7085:1: ( RULE_STR )
            // InternalEtlParser.g:7086:2: RULE_STR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }
            match(input,RULE_STR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__4"
    // InternalEtlParser.g:7095:1: rule__StringReplacementSlot__Group__4 : rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 ;
    public final void rule__StringReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7099:1: ( rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 )
            // InternalEtlParser.g:7100:2: rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4"


    // $ANTLR start "rule__StringReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:7107:1: rule__StringReplacementSlot__Group__4__Impl : ( ( rule__StringReplacementSlot__Group_4__0 )? ) ;
    public final void rule__StringReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7111:1: ( ( ( rule__StringReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:7112:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:7112:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:7113:2: ( rule__StringReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:7114:2: ( rule__StringReplacementSlot__Group_4__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ROUND_OPEN) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalEtlParser.g:7114:3: rule__StringReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__5"
    // InternalEtlParser.g:7122:1: rule__StringReplacementSlot__Group__5 : rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 ;
    public final void rule__StringReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7126:1: ( rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 )
            // InternalEtlParser.g:7127:2: rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5"


    // $ANTLR start "rule__StringReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:7134:1: rule__StringReplacementSlot__Group__5__Impl : ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__StringReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7138:1: ( ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:7139:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:7139:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:7140:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:7141:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_SLOTNAME_STRING) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalEtlParser.g:7141:3: rule__StringReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__6"
    // InternalEtlParser.g:7149:1: rule__StringReplacementSlot__Group__6 : rule__StringReplacementSlot__Group__6__Impl ;
    public final void rule__StringReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7153:1: ( rule__StringReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:7154:2: rule__StringReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6"


    // $ANTLR start "rule__StringReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:7160:1: rule__StringReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7164:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:7165:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:7165:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:7166:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0"
    // InternalEtlParser.g:7176:1: rule__StringReplacementSlot__Group_4__0 : rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 ;
    public final void rule__StringReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7180:1: ( rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:7181:2: rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:7188:1: rule__StringReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__StringReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7192:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:7193:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:7193:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:7194:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1"
    // InternalEtlParser.g:7203:1: rule__StringReplacementSlot__Group_4__1 : rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 ;
    public final void rule__StringReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7207:1: ( rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:7208:2: rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7215:1: rule__StringReplacementSlot__Group_4__1__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__StringReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7219:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7220:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7220:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7221:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7222:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7222:3: rule__StringReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7230:1: rule__StringReplacementSlot__Group_4__2 : rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 ;
    public final void rule__StringReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7234:1: ( rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7235:2: rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7242:1: rule__StringReplacementSlot__Group_4__2__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__StringReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7246:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7247:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7247:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7248:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7249:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_STRING) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalEtlParser.g:7249:3: rule__StringReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    rule__StringReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7257:1: rule__StringReplacementSlot__Group_4__3 : rule__StringReplacementSlot__Group_4__3__Impl ;
    public final void rule__StringReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7261:1: ( rule__StringReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7262:2: rule__StringReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7268:1: rule__StringReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7272:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7273:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7273:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7274:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0"
    // InternalEtlParser.g:7284:1: rule__IntegerReplacementSlot__Group__0 : rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 ;
    public final void rule__IntegerReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7288:1: ( rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 )
            // InternalEtlParser.g:7289:2: rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__IntegerReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:7296:1: rule__IntegerReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__IntegerReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7300:1: ( ( () ) )
            // InternalEtlParser.g:7301:1: ( () )
            {
            // InternalEtlParser.g:7301:1: ( () )
            // InternalEtlParser.g:7302:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:7303:2: ()
            // InternalEtlParser.g:7303:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1"
    // InternalEtlParser.g:7311:1: rule__IntegerReplacementSlot__Group__1 : rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 ;
    public final void rule__IntegerReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7315:1: ( rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 )
            // InternalEtlParser.g:7316:2: rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:7323:1: rule__IntegerReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7327:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:7328:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:7328:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:7329:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2"
    // InternalEtlParser.g:7338:1: rule__IntegerReplacementSlot__Group__2 : rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 ;
    public final void rule__IntegerReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7342:1: ( rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 )
            // InternalEtlParser.g:7343:2: rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__IntegerReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:7350:1: rule__IntegerReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__IntegerReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7354:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:7355:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:7355:1: ( RULE_PLUS )
            // InternalEtlParser.g:7356:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3"
    // InternalEtlParser.g:7365:1: rule__IntegerReplacementSlot__Group__3 : rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 ;
    public final void rule__IntegerReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7369:1: ( rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 )
            // InternalEtlParser.g:7370:2: rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:7377:1: rule__IntegerReplacementSlot__Group__3__Impl : ( RULE_INT ) ;
    public final void rule__IntegerReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7381:1: ( ( RULE_INT ) )
            // InternalEtlParser.g:7382:1: ( RULE_INT )
            {
            // InternalEtlParser.g:7382:1: ( RULE_INT )
            // InternalEtlParser.g:7383:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4"
    // InternalEtlParser.g:7392:1: rule__IntegerReplacementSlot__Group__4 : rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 ;
    public final void rule__IntegerReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7396:1: ( rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 )
            // InternalEtlParser.g:7397:2: rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:7404:1: rule__IntegerReplacementSlot__Group__4__Impl : ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7408:1: ( ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:7409:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:7409:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:7410:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:7411:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_ROUND_OPEN) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalEtlParser.g:7411:3: rule__IntegerReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5"
    // InternalEtlParser.g:7419:1: rule__IntegerReplacementSlot__Group__5 : rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 ;
    public final void rule__IntegerReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7423:1: ( rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 )
            // InternalEtlParser.g:7424:2: rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:7431:1: rule__IntegerReplacementSlot__Group__5__Impl : ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7435:1: ( ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:7436:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:7436:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:7437:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:7438:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_SLOTNAME_STRING) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalEtlParser.g:7438:3: rule__IntegerReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6"
    // InternalEtlParser.g:7446:1: rule__IntegerReplacementSlot__Group__6 : rule__IntegerReplacementSlot__Group__6__Impl ;
    public final void rule__IntegerReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7450:1: ( rule__IntegerReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:7451:2: rule__IntegerReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:7457:1: rule__IntegerReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7461:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:7462:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:7462:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:7463:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0"
    // InternalEtlParser.g:7473:1: rule__IntegerReplacementSlot__Group_4__0 : rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 ;
    public final void rule__IntegerReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7477:1: ( rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:7478:2: rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__IntegerReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:7485:1: rule__IntegerReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7489:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:7490:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:7490:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:7491:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1"
    // InternalEtlParser.g:7500:1: rule__IntegerReplacementSlot__Group_4__1 : rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 ;
    public final void rule__IntegerReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7504:1: ( rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:7505:2: rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7512:1: rule__IntegerReplacementSlot__Group_4__1__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__IntegerReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7516:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7517:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7517:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7518:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7519:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7519:3: rule__IntegerReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7527:1: rule__IntegerReplacementSlot__Group_4__2 : rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 ;
    public final void rule__IntegerReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7531:1: ( rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7532:2: rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7539:1: rule__IntegerReplacementSlot__Group_4__2__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__IntegerReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7543:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7544:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7544:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7545:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7546:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==RULE_TO||(LA81_0>=RULE_GT && LA81_0<=RULE_HASH)) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalEtlParser.g:7546:3: rule__IntegerReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__IntegerReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7554:1: rule__IntegerReplacementSlot__Group_4__3 : rule__IntegerReplacementSlot__Group_4__3__Impl ;
    public final void rule__IntegerReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7558:1: ( rule__IntegerReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7559:2: rule__IntegerReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7565:1: rule__IntegerReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7569:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7570:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7570:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7571:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0"
    // InternalEtlParser.g:7581:1: rule__DecimalReplacementSlot__Group__0 : rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 ;
    public final void rule__DecimalReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7585:1: ( rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 )
            // InternalEtlParser.g:7586:2: rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__DecimalReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:7593:1: rule__DecimalReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__DecimalReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7597:1: ( ( () ) )
            // InternalEtlParser.g:7598:1: ( () )
            {
            // InternalEtlParser.g:7598:1: ( () )
            // InternalEtlParser.g:7599:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:7600:2: ()
            // InternalEtlParser.g:7600:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1"
    // InternalEtlParser.g:7608:1: rule__DecimalReplacementSlot__Group__1 : rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 ;
    public final void rule__DecimalReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7612:1: ( rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 )
            // InternalEtlParser.g:7613:2: rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:7620:1: rule__DecimalReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7624:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:7625:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:7625:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:7626:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2"
    // InternalEtlParser.g:7635:1: rule__DecimalReplacementSlot__Group__2 : rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 ;
    public final void rule__DecimalReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7639:1: ( rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 )
            // InternalEtlParser.g:7640:2: rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__DecimalReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:7647:1: rule__DecimalReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__DecimalReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7651:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:7652:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:7652:1: ( RULE_PLUS )
            // InternalEtlParser.g:7653:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3"
    // InternalEtlParser.g:7662:1: rule__DecimalReplacementSlot__Group__3 : rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 ;
    public final void rule__DecimalReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7666:1: ( rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 )
            // InternalEtlParser.g:7667:2: rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:7674:1: rule__DecimalReplacementSlot__Group__3__Impl : ( RULE_DEC ) ;
    public final void rule__DecimalReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7678:1: ( ( RULE_DEC ) )
            // InternalEtlParser.g:7679:1: ( RULE_DEC )
            {
            // InternalEtlParser.g:7679:1: ( RULE_DEC )
            // InternalEtlParser.g:7680:2: RULE_DEC
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }
            match(input,RULE_DEC,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4"
    // InternalEtlParser.g:7689:1: rule__DecimalReplacementSlot__Group__4 : rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 ;
    public final void rule__DecimalReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7693:1: ( rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 )
            // InternalEtlParser.g:7694:2: rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:7701:1: rule__DecimalReplacementSlot__Group__4__Impl : ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7705:1: ( ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:7706:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:7706:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:7707:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:7708:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_ROUND_OPEN) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalEtlParser.g:7708:3: rule__DecimalReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5"
    // InternalEtlParser.g:7716:1: rule__DecimalReplacementSlot__Group__5 : rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 ;
    public final void rule__DecimalReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7720:1: ( rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 )
            // InternalEtlParser.g:7721:2: rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:7728:1: rule__DecimalReplacementSlot__Group__5__Impl : ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7732:1: ( ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:7733:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:7733:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:7734:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:7735:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_SLOTNAME_STRING) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalEtlParser.g:7735:3: rule__DecimalReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6"
    // InternalEtlParser.g:7743:1: rule__DecimalReplacementSlot__Group__6 : rule__DecimalReplacementSlot__Group__6__Impl ;
    public final void rule__DecimalReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7747:1: ( rule__DecimalReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:7748:2: rule__DecimalReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:7754:1: rule__DecimalReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7758:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:7759:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:7759:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:7760:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0"
    // InternalEtlParser.g:7770:1: rule__DecimalReplacementSlot__Group_4__0 : rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 ;
    public final void rule__DecimalReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7774:1: ( rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:7775:2: rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DecimalReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:7782:1: rule__DecimalReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7786:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:7787:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:7787:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:7788:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1"
    // InternalEtlParser.g:7797:1: rule__DecimalReplacementSlot__Group_4__1 : rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 ;
    public final void rule__DecimalReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7801:1: ( rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:7802:2: rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7809:1: rule__DecimalReplacementSlot__Group_4__1__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__DecimalReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7813:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7814:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7814:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7815:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7816:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7816:3: rule__DecimalReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7824:1: rule__DecimalReplacementSlot__Group_4__2 : rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 ;
    public final void rule__DecimalReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7828:1: ( rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7829:2: rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7836:1: rule__DecimalReplacementSlot__Group_4__2__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__DecimalReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7840:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7841:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7841:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7842:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7843:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==RULE_TO||(LA84_0>=RULE_GT && LA84_0<=RULE_HASH)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalEtlParser.g:7843:3: rule__DecimalReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__DecimalReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7851:1: rule__DecimalReplacementSlot__Group_4__3 : rule__DecimalReplacementSlot__Group_4__3__Impl ;
    public final void rule__DecimalReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7855:1: ( rule__DecimalReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7856:2: rule__DecimalReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7862:1: rule__DecimalReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7866:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7867:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7867:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7868:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__0"
    // InternalEtlParser.g:7878:1: rule__EtlCardinality__Group__0 : rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 ;
    public final void rule__EtlCardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7882:1: ( rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 )
            // InternalEtlParser.g:7883:2: rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__EtlCardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0"


    // $ANTLR start "rule__EtlCardinality__Group__0__Impl"
    // InternalEtlParser.g:7890:1: rule__EtlCardinality__Group__0__Impl : ( ( RULE_TILDE )? ) ;
    public final void rule__EtlCardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7894:1: ( ( ( RULE_TILDE )? ) )
            // InternalEtlParser.g:7895:1: ( ( RULE_TILDE )? )
            {
            // InternalEtlParser.g:7895:1: ( ( RULE_TILDE )? )
            // InternalEtlParser.g:7896:2: ( RULE_TILDE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }
            // InternalEtlParser.g:7897:2: ( RULE_TILDE )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_TILDE) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalEtlParser.g:7897:3: RULE_TILDE
                    {
                    match(input,RULE_TILDE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__1"
    // InternalEtlParser.g:7905:1: rule__EtlCardinality__Group__1 : rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 ;
    public final void rule__EtlCardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7909:1: ( rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 )
            // InternalEtlParser.g:7910:2: rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__EtlCardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1"


    // $ANTLR start "rule__EtlCardinality__Group__1__Impl"
    // InternalEtlParser.g:7917:1: rule__EtlCardinality__Group__1__Impl : ( ( rule__EtlCardinality__MinAssignment_1 ) ) ;
    public final void rule__EtlCardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7921:1: ( ( ( rule__EtlCardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:7922:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:7922:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:7923:2: ( rule__EtlCardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:7924:2: ( rule__EtlCardinality__MinAssignment_1 )
            // InternalEtlParser.g:7924:3: rule__EtlCardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__2"
    // InternalEtlParser.g:7932:1: rule__EtlCardinality__Group__2 : rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 ;
    public final void rule__EtlCardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7936:1: ( rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 )
            // InternalEtlParser.g:7937:2: rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__EtlCardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2"


    // $ANTLR start "rule__EtlCardinality__Group__2__Impl"
    // InternalEtlParser.g:7944:1: rule__EtlCardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__EtlCardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7948:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7949:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7949:1: ( RULE_TO )
            // InternalEtlParser.g:7950:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__3"
    // InternalEtlParser.g:7959:1: rule__EtlCardinality__Group__3 : rule__EtlCardinality__Group__3__Impl ;
    public final void rule__EtlCardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7963:1: ( rule__EtlCardinality__Group__3__Impl )
            // InternalEtlParser.g:7964:2: rule__EtlCardinality__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3"


    // $ANTLR start "rule__EtlCardinality__Group__3__Impl"
    // InternalEtlParser.g:7970:1: rule__EtlCardinality__Group__3__Impl : ( ( rule__EtlCardinality__MaxAssignment_3 ) ) ;
    public final void rule__EtlCardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7974:1: ( ( ( rule__EtlCardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:7975:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:7975:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:7976:2: ( rule__EtlCardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:7977:2: ( rule__EtlCardinality__MaxAssignment_3 )
            // InternalEtlParser.g:7977:3: rule__EtlCardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__0"
    // InternalEtlParser.g:7986:1: rule__ConceptReference__Group_1__0 : rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 ;
    public final void rule__ConceptReference__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7990:1: ( rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 )
            // InternalEtlParser.g:7991:2: rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__ConceptReference__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0"


    // $ANTLR start "rule__ConceptReference__Group_1__0__Impl"
    // InternalEtlParser.g:7998:1: rule__ConceptReference__Group_1__0__Impl : ( ( rule__ConceptReference__IdAssignment_1_0 ) ) ;
    public final void rule__ConceptReference__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8002:1: ( ( ( rule__ConceptReference__IdAssignment_1_0 ) ) )
            // InternalEtlParser.g:8003:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            {
            // InternalEtlParser.g:8003:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            // InternalEtlParser.g:8004:2: ( rule__ConceptReference__IdAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }
            // InternalEtlParser.g:8005:2: ( rule__ConceptReference__IdAssignment_1_0 )
            // InternalEtlParser.g:8005:3: rule__ConceptReference__IdAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__IdAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__1"
    // InternalEtlParser.g:8013:1: rule__ConceptReference__Group_1__1 : rule__ConceptReference__Group_1__1__Impl ;
    public final void rule__ConceptReference__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8017:1: ( rule__ConceptReference__Group_1__1__Impl )
            // InternalEtlParser.g:8018:2: rule__ConceptReference__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1"


    // $ANTLR start "rule__ConceptReference__Group_1__1__Impl"
    // InternalEtlParser.g:8024:1: rule__ConceptReference__Group_1__1__Impl : ( ( rule__ConceptReference__TermAssignment_1_1 )? ) ;
    public final void rule__ConceptReference__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8028:1: ( ( ( rule__ConceptReference__TermAssignment_1_1 )? ) )
            // InternalEtlParser.g:8029:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            {
            // InternalEtlParser.g:8029:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            // InternalEtlParser.g:8030:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }
            // InternalEtlParser.g:8031:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalEtlParser.g:8031:3: rule__ConceptReference__TermAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__TermAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1__Impl"


    // $ANTLR start "rule__IntegerValue__Group__0"
    // InternalEtlParser.g:8040:1: rule__IntegerValue__Group__0 : rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 ;
    public final void rule__IntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8044:1: ( rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 )
            // InternalEtlParser.g:8045:2: rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0"


    // $ANTLR start "rule__IntegerValue__Group__0__Impl"
    // InternalEtlParser.g:8052:1: rule__IntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8056:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8057:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8057:1: ( RULE_HASH )
            // InternalEtlParser.g:8058:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0__Impl"


    // $ANTLR start "rule__IntegerValue__Group__1"
    // InternalEtlParser.g:8067:1: rule__IntegerValue__Group__1 : rule__IntegerValue__Group__1__Impl ;
    public final void rule__IntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8071:1: ( rule__IntegerValue__Group__1__Impl )
            // InternalEtlParser.g:8072:2: rule__IntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1"


    // $ANTLR start "rule__IntegerValue__Group__1__Impl"
    // InternalEtlParser.g:8078:1: rule__IntegerValue__Group__1__Impl : ( ( rule__IntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__IntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8082:1: ( ( ( rule__IntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:8083:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:8083:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:8084:2: ( rule__IntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:8085:2: ( rule__IntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:8085:3: rule__IntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1__Impl"


    // $ANTLR start "rule__DecimalValue__Group__0"
    // InternalEtlParser.g:8094:1: rule__DecimalValue__Group__0 : rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 ;
    public final void rule__DecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8098:1: ( rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 )
            // InternalEtlParser.g:8099:2: rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0"


    // $ANTLR start "rule__DecimalValue__Group__0__Impl"
    // InternalEtlParser.g:8106:1: rule__DecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8110:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8111:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8111:1: ( RULE_HASH )
            // InternalEtlParser.g:8112:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0__Impl"


    // $ANTLR start "rule__DecimalValue__Group__1"
    // InternalEtlParser.g:8121:1: rule__DecimalValue__Group__1 : rule__DecimalValue__Group__1__Impl ;
    public final void rule__DecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8125:1: ( rule__DecimalValue__Group__1__Impl )
            // InternalEtlParser.g:8126:2: rule__DecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1"


    // $ANTLR start "rule__DecimalValue__Group__1__Impl"
    // InternalEtlParser.g:8132:1: rule__DecimalValue__Group__1__Impl : ( ( rule__DecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__DecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8136:1: ( ( ( rule__DecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:8137:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:8137:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:8138:2: ( rule__DecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:8139:2: ( rule__DecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:8139:3: rule__DecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__0"
    // InternalEtlParser.g:8148:1: rule__SlotIntegerValue__Group__0 : rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 ;
    public final void rule__SlotIntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8152:1: ( rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 )
            // InternalEtlParser.g:8153:2: rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0"


    // $ANTLR start "rule__SlotIntegerValue__Group__0__Impl"
    // InternalEtlParser.g:8160:1: rule__SlotIntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8164:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8165:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8165:1: ( RULE_HASH )
            // InternalEtlParser.g:8166:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__1"
    // InternalEtlParser.g:8175:1: rule__SlotIntegerValue__Group__1 : rule__SlotIntegerValue__Group__1__Impl ;
    public final void rule__SlotIntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8179:1: ( rule__SlotIntegerValue__Group__1__Impl )
            // InternalEtlParser.g:8180:2: rule__SlotIntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1"


    // $ANTLR start "rule__SlotIntegerValue__Group__1__Impl"
    // InternalEtlParser.g:8186:1: rule__SlotIntegerValue__Group__1__Impl : ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotIntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8190:1: ( ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:8191:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:8191:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:8192:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:8193:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:8193:3: rule__SlotIntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0"
    // InternalEtlParser.g:8202:1: rule__SlotIntegerRange__Group_0__0 : rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 ;
    public final void rule__SlotIntegerRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8206:1: ( rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 )
            // InternalEtlParser.g:8207:2: rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotIntegerRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0__Impl"
    // InternalEtlParser.g:8214:1: rule__SlotIntegerRange__Group_0__0__Impl : ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotIntegerRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8218:1: ( ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:8219:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:8219:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:8220:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:8221:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:8221:3: rule__SlotIntegerRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1"
    // InternalEtlParser.g:8229:1: rule__SlotIntegerRange__Group_0__1 : rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 ;
    public final void rule__SlotIntegerRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8233:1: ( rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 )
            // InternalEtlParser.g:8234:2: rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1__Impl"
    // InternalEtlParser.g:8241:1: rule__SlotIntegerRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8245:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8246:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8246:1: ( RULE_TO )
            // InternalEtlParser.g:8247:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2"
    // InternalEtlParser.g:8256:1: rule__SlotIntegerRange__Group_0__2 : rule__SlotIntegerRange__Group_0__2__Impl ;
    public final void rule__SlotIntegerRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8260:1: ( rule__SlotIntegerRange__Group_0__2__Impl )
            // InternalEtlParser.g:8261:2: rule__SlotIntegerRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2__Impl"
    // InternalEtlParser.g:8267:1: rule__SlotIntegerRange__Group_0__2__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotIntegerRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8271:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:8272:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:8272:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:8273:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:8274:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LT) ) {
                alt87=1;
            }
            else if ( (LA87_0==RULE_HASH) ) {
                int LA87_2 = input.LA(2);

                if ( (LA87_2==RULE_DIGIT) ) {
                    int LA87_4 = input.LA(3);

                    if ( (synpred191_InternalEtlParser()) ) {
                        alt87=1;
                    }
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalEtlParser.g:8274:3: rule__SlotIntegerRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0"
    // InternalEtlParser.g:8283:1: rule__SlotIntegerRange__Group_1__0 : rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 ;
    public final void rule__SlotIntegerRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8287:1: ( rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 )
            // InternalEtlParser.g:8288:2: rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0__Impl"
    // InternalEtlParser.g:8295:1: rule__SlotIntegerRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8299:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8300:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8300:1: ( RULE_TO )
            // InternalEtlParser.g:8301:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1"
    // InternalEtlParser.g:8310:1: rule__SlotIntegerRange__Group_1__1 : rule__SlotIntegerRange__Group_1__1__Impl ;
    public final void rule__SlotIntegerRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8314:1: ( rule__SlotIntegerRange__Group_1__1__Impl )
            // InternalEtlParser.g:8315:2: rule__SlotIntegerRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1__Impl"
    // InternalEtlParser.g:8321:1: rule__SlotIntegerRange__Group_1__1__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotIntegerRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8325:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:8326:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:8326:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:8327:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:8328:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:8328:3: rule__SlotIntegerRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0"
    // InternalEtlParser.g:8337:1: rule__SlotIntegerMinimumValue__Group__0 : rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 ;
    public final void rule__SlotIntegerMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8341:1: ( rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 )
            // InternalEtlParser.g:8342:2: rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotIntegerMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:8349:1: rule__SlotIntegerMinimumValue__Group__0__Impl : ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8353:1: ( ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8354:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8354:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8355:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8356:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==RULE_GT) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalEtlParser.g:8356:3: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1"
    // InternalEtlParser.g:8364:1: rule__SlotIntegerMinimumValue__Group__1 : rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 ;
    public final void rule__SlotIntegerMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8368:1: ( rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 )
            // InternalEtlParser.g:8369:2: rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:8376:1: rule__SlotIntegerMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8380:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8381:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8381:1: ( RULE_HASH )
            // InternalEtlParser.g:8382:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2"
    // InternalEtlParser.g:8391:1: rule__SlotIntegerMinimumValue__Group__2 : rule__SlotIntegerMinimumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8395:1: ( rule__SlotIntegerMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:8396:2: rule__SlotIntegerMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:8402:1: rule__SlotIntegerMinimumValue__Group__2__Impl : ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8406:1: ( ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8407:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8407:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8408:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8409:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8409:3: rule__SlotIntegerMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0"
    // InternalEtlParser.g:8418:1: rule__SlotIntegerMaximumValue__Group__0 : rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 ;
    public final void rule__SlotIntegerMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8422:1: ( rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 )
            // InternalEtlParser.g:8423:2: rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:8430:1: rule__SlotIntegerMaximumValue__Group__0__Impl : ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8434:1: ( ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8435:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8435:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8436:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8437:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_LT) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalEtlParser.g:8437:3: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1"
    // InternalEtlParser.g:8445:1: rule__SlotIntegerMaximumValue__Group__1 : rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 ;
    public final void rule__SlotIntegerMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8449:1: ( rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 )
            // InternalEtlParser.g:8450:2: rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:8457:1: rule__SlotIntegerMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8461:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8462:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8462:1: ( RULE_HASH )
            // InternalEtlParser.g:8463:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2"
    // InternalEtlParser.g:8472:1: rule__SlotIntegerMaximumValue__Group__2 : rule__SlotIntegerMaximumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8476:1: ( rule__SlotIntegerMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:8477:2: rule__SlotIntegerMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:8483:1: rule__SlotIntegerMaximumValue__Group__2__Impl : ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8487:1: ( ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8488:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8488:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8489:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8490:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8490:3: rule__SlotIntegerMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__0"
    // InternalEtlParser.g:8499:1: rule__SlotDecimalValue__Group__0 : rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 ;
    public final void rule__SlotDecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8503:1: ( rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 )
            // InternalEtlParser.g:8504:2: rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0"


    // $ANTLR start "rule__SlotDecimalValue__Group__0__Impl"
    // InternalEtlParser.g:8511:1: rule__SlotDecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8515:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8516:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8516:1: ( RULE_HASH )
            // InternalEtlParser.g:8517:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__1"
    // InternalEtlParser.g:8526:1: rule__SlotDecimalValue__Group__1 : rule__SlotDecimalValue__Group__1__Impl ;
    public final void rule__SlotDecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8530:1: ( rule__SlotDecimalValue__Group__1__Impl )
            // InternalEtlParser.g:8531:2: rule__SlotDecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1"


    // $ANTLR start "rule__SlotDecimalValue__Group__1__Impl"
    // InternalEtlParser.g:8537:1: rule__SlotDecimalValue__Group__1__Impl : ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotDecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8541:1: ( ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:8542:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:8542:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:8543:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:8544:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:8544:3: rule__SlotDecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0"
    // InternalEtlParser.g:8553:1: rule__SlotDecimalRange__Group_0__0 : rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 ;
    public final void rule__SlotDecimalRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8557:1: ( rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 )
            // InternalEtlParser.g:8558:2: rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotDecimalRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0__Impl"
    // InternalEtlParser.g:8565:1: rule__SlotDecimalRange__Group_0__0__Impl : ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotDecimalRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8569:1: ( ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:8570:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:8570:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:8571:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:8572:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:8572:3: rule__SlotDecimalRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1"
    // InternalEtlParser.g:8580:1: rule__SlotDecimalRange__Group_0__1 : rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 ;
    public final void rule__SlotDecimalRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8584:1: ( rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 )
            // InternalEtlParser.g:8585:2: rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1__Impl"
    // InternalEtlParser.g:8592:1: rule__SlotDecimalRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8596:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8597:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8597:1: ( RULE_TO )
            // InternalEtlParser.g:8598:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2"
    // InternalEtlParser.g:8607:1: rule__SlotDecimalRange__Group_0__2 : rule__SlotDecimalRange__Group_0__2__Impl ;
    public final void rule__SlotDecimalRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8611:1: ( rule__SlotDecimalRange__Group_0__2__Impl )
            // InternalEtlParser.g:8612:2: rule__SlotDecimalRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2__Impl"
    // InternalEtlParser.g:8618:1: rule__SlotDecimalRange__Group_0__2__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotDecimalRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8622:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:8623:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:8623:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:8624:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:8625:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalEtlParser.g:8625:3: rule__SlotDecimalRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0"
    // InternalEtlParser.g:8634:1: rule__SlotDecimalRange__Group_1__0 : rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 ;
    public final void rule__SlotDecimalRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8638:1: ( rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 )
            // InternalEtlParser.g:8639:2: rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0__Impl"
    // InternalEtlParser.g:8646:1: rule__SlotDecimalRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8650:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8651:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8651:1: ( RULE_TO )
            // InternalEtlParser.g:8652:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1"
    // InternalEtlParser.g:8661:1: rule__SlotDecimalRange__Group_1__1 : rule__SlotDecimalRange__Group_1__1__Impl ;
    public final void rule__SlotDecimalRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8665:1: ( rule__SlotDecimalRange__Group_1__1__Impl )
            // InternalEtlParser.g:8666:2: rule__SlotDecimalRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1__Impl"
    // InternalEtlParser.g:8672:1: rule__SlotDecimalRange__Group_1__1__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotDecimalRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8676:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:8677:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:8677:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:8678:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:8679:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:8679:3: rule__SlotDecimalRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0"
    // InternalEtlParser.g:8688:1: rule__SlotDecimalMinimumValue__Group__0 : rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 ;
    public final void rule__SlotDecimalMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8692:1: ( rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 )
            // InternalEtlParser.g:8693:2: rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotDecimalMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:8700:1: rule__SlotDecimalMinimumValue__Group__0__Impl : ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8704:1: ( ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8705:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8705:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8706:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8707:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_GT) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalEtlParser.g:8707:3: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1"
    // InternalEtlParser.g:8715:1: rule__SlotDecimalMinimumValue__Group__1 : rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 ;
    public final void rule__SlotDecimalMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8719:1: ( rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 )
            // InternalEtlParser.g:8720:2: rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:8727:1: rule__SlotDecimalMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8731:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8732:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8732:1: ( RULE_HASH )
            // InternalEtlParser.g:8733:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2"
    // InternalEtlParser.g:8742:1: rule__SlotDecimalMinimumValue__Group__2 : rule__SlotDecimalMinimumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8746:1: ( rule__SlotDecimalMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:8747:2: rule__SlotDecimalMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:8753:1: rule__SlotDecimalMinimumValue__Group__2__Impl : ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8757:1: ( ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8758:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8758:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8759:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8760:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8760:3: rule__SlotDecimalMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0"
    // InternalEtlParser.g:8769:1: rule__SlotDecimalMaximumValue__Group__0 : rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 ;
    public final void rule__SlotDecimalMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8773:1: ( rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 )
            // InternalEtlParser.g:8774:2: rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:8781:1: rule__SlotDecimalMaximumValue__Group__0__Impl : ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8785:1: ( ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8786:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8786:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8787:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8788:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_LT) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalEtlParser.g:8788:3: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1"
    // InternalEtlParser.g:8796:1: rule__SlotDecimalMaximumValue__Group__1 : rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 ;
    public final void rule__SlotDecimalMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8800:1: ( rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 )
            // InternalEtlParser.g:8801:2: rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:8808:1: rule__SlotDecimalMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8812:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8813:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8813:1: ( RULE_HASH )
            // InternalEtlParser.g:8814:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2"
    // InternalEtlParser.g:8823:1: rule__SlotDecimalMaximumValue__Group__2 : rule__SlotDecimalMaximumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8827:1: ( rule__SlotDecimalMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:8828:2: rule__SlotDecimalMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:8834:1: rule__SlotDecimalMaximumValue__Group__2__Impl : ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8838:1: ( ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8839:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8839:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8840:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8841:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8841:3: rule__SlotDecimalMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEtlParser.g:8850:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8854:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8855:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8862:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8866:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:8867:1: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:8867:1: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:8868:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEtlParser.g:8877:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8881:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8882:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8888:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8892:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8893:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8893:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8894:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8895:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalEtlParser.g:8895:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8904:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8908:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8909:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8916:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8920:1: ( ( () ) )
            // InternalEtlParser.g:8921:1: ( () )
            {
            // InternalEtlParser.g:8921:1: ( () )
            // InternalEtlParser.g:8922:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8923:2: ()
            // InternalEtlParser.g:8923:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8931:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8935:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8936:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8943:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8947:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:8948:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:8948:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:8949:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8958:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8962:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8963:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8969:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8973:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8974:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8974:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8975:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8976:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8976:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEtlParser.g:8985:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8989:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8990:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8997:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9001:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:9002:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:9002:1: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:9003:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEtlParser.g:9012:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9016:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9017:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9023:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9027:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:9028:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:9028:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:9029:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9030:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_CONJUNCTION_KEYWORD||LA94_0==RULE_COMMA) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalEtlParser.g:9030:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9039:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9043:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9044:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9051:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9055:1: ( ( () ) )
            // InternalEtlParser.g:9056:1: ( () )
            {
            // InternalEtlParser.g:9056:1: ( () )
            // InternalEtlParser.g:9057:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:9058:2: ()
            // InternalEtlParser.g:9058:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9066:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9070:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:9071:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9078:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9082:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:9083:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:9083:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEtlParser.g:9084:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:9085:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEtlParser.g:9085:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:9093:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9097:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:9098:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:9104:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9108:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:9109:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9109:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:9110:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:9111:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:9111:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEtlParser.g:9120:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9124:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9125:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9132:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9136:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:9137:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:9137:1: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:9138:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEtlParser.g:9147:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9151:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9152:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9158:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9162:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:9163:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:9163:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:9164:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9165:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_EXCLUSION_KEYWORD) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalEtlParser.g:9165:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9174:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9178:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9179:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9186:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9190:1: ( ( () ) )
            // InternalEtlParser.g:9191:1: ( () )
            {
            // InternalEtlParser.g:9191:1: ( () )
            // InternalEtlParser.g:9192:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:9193:2: ()
            // InternalEtlParser.g:9193:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9201:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9205:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:9206:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9213:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION_KEYWORD ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9217:1: ( ( RULE_EXCLUSION_KEYWORD ) )
            // InternalEtlParser.g:9218:1: ( RULE_EXCLUSION_KEYWORD )
            {
            // InternalEtlParser.g:9218:1: ( RULE_EXCLUSION_KEYWORD )
            // InternalEtlParser.g:9219:2: RULE_EXCLUSION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:9228:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9232:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:9233:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:9239:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9243:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:9244:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9244:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:9245:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:9246:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:9246:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEtlParser.g:9255:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9259:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9260:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9267:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9271:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEtlParser.g:9272:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEtlParser.g:9272:1: ( ruleDottedExpressionConstraint )
            // InternalEtlParser.g:9273:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEtlParser.g:9282:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9286:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9287:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9293:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9297:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:9298:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:9298:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:9299:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9300:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_COLON) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalEtlParser.g:9300:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9309:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9313:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9314:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9321:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9325:1: ( ( () ) )
            // InternalEtlParser.g:9326:1: ( () )
            {
            // InternalEtlParser.g:9326:1: ( () )
            // InternalEtlParser.g:9327:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9328:2: ()
            // InternalEtlParser.g:9328:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9336:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9340:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:9341:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9348:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9352:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:9353:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:9353:1: ( RULE_COLON )
            // InternalEtlParser.g:9354:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:9363:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9367:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:9368:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:9374:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9378:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEtlParser.g:9379:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9379:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEtlParser.g:9380:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEtlParser.g:9381:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEtlParser.g:9381:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEtlParser.g:9390:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9394:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9395:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9402:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleSupplementExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9406:1: ( ( ruleSupplementExpressionConstraint ) )
            // InternalEtlParser.g:9407:1: ( ruleSupplementExpressionConstraint )
            {
            // InternalEtlParser.g:9407:1: ( ruleSupplementExpressionConstraint )
            // InternalEtlParser.g:9408:2: ruleSupplementExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getSupplementExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getSupplementExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEtlParser.g:9417:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9421:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9422:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9428:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9432:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:9433:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:9433:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:9434:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9435:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==RULE_DOT) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalEtlParser.g:9435:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9444:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9448:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9449:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9456:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9460:1: ( ( () ) )
            // InternalEtlParser.g:9461:1: ( () )
            {
            // InternalEtlParser.g:9461:1: ( () )
            // InternalEtlParser.g:9462:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9463:2: ()
            // InternalEtlParser.g:9463:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9471:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9475:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:9476:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9483:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9487:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:9488:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:9488:1: ( RULE_DOT )
            // InternalEtlParser.g:9489:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:9498:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9502:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:9503:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:9509:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9513:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEtlParser.g:9514:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9514:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEtlParser.g:9515:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEtlParser.g:9516:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEtlParser.g:9516:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__0"
    // InternalEtlParser.g:9525:1: rule__SupplementExpressionConstraint__Group__0 : rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1 ;
    public final void rule__SupplementExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9529:1: ( rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9530:2: rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__SupplementExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__0"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9537:1: rule__SupplementExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__SupplementExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9541:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:9542:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:9542:1: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:9543:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__1"
    // InternalEtlParser.g:9552:1: rule__SupplementExpressionConstraint__Group__1 : rule__SupplementExpressionConstraint__Group__1__Impl ;
    public final void rule__SupplementExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9556:1: ( rule__SupplementExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9557:2: rule__SupplementExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__1"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9563:1: rule__SupplementExpressionConstraint__Group__1__Impl : ( ( rule__SupplementExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__SupplementExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9567:1: ( ( ( rule__SupplementExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:9568:1: ( ( rule__SupplementExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:9568:1: ( ( rule__SupplementExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:9569:2: ( rule__SupplementExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9570:2: ( rule__SupplementExpressionConstraint__Group_1__0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_DOUBLE_CURLY_OPEN) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalEtlParser.g:9570:3: rule__SupplementExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SupplementExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9579:1: rule__SupplementExpressionConstraint__Group_1__0 : rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1 ;
    public final void rule__SupplementExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9583:1: ( rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9584:2: rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__SupplementExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9591:1: rule__SupplementExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__SupplementExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9595:1: ( ( () ) )
            // InternalEtlParser.g:9596:1: ( () )
            {
            // InternalEtlParser.g:9596:1: ( () )
            // InternalEtlParser.g:9597:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9598:2: ()
            // InternalEtlParser.g:9598:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9606:1: rule__SupplementExpressionConstraint__Group_1__1 : rule__SupplementExpressionConstraint__Group_1__1__Impl ;
    public final void rule__SupplementExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9610:1: ( rule__SupplementExpressionConstraint__Group_1__1__Impl )
            // InternalEtlParser.g:9611:2: rule__SupplementExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9617:1: rule__SupplementExpressionConstraint__Group_1__1__Impl : ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) ) ;
    public final void rule__SupplementExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9621:1: ( ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) ) )
            // InternalEtlParser.g:9622:1: ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) )
            {
            // InternalEtlParser.g:9622:1: ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) )
            // InternalEtlParser.g:9623:2: ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementAssignment_1_1()); 
            }
            // InternalEtlParser.g:9624:2: ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 )
            // InternalEtlParser.g:9624:3: rule__SupplementExpressionConstraint__SupplementAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__SupplementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEtlParser.g:9633:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9637:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9638:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9645:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9649:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:9650:1: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:9650:1: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:9651:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEtlParser.g:9660:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9664:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9665:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9671:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9675:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:9676:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:9676:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:9677:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9678:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    int LA99_2 = input.LA(2);

                    if ( ((LA99_2>=RULE_HISTORY_KEYWORD && LA99_2<=RULE_CONCEPT_SHORT_KEYWORD)||LA99_2==RULE_KEYWORD||LA99_2==RULE_ROUND_OPEN||LA99_2==RULE_WILDCARD) ) {
                        alt99=1;
                    }


                }


                switch (alt99) {
            	case 1 :
            	    // InternalEtlParser.g:9678:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9687:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9691:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9692:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9699:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9703:1: ( ( () ) )
            // InternalEtlParser.g:9704:1: ( () )
            {
            // InternalEtlParser.g:9704:1: ( () )
            // InternalEtlParser.g:9705:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9706:2: ()
            // InternalEtlParser.g:9706:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9714:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9718:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEtlParser.g:9719:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9725:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9729:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEtlParser.g:9730:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEtlParser.g:9730:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEtlParser.g:9731:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEtlParser.g:9732:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEtlParser.g:9732:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEtlParser.g:9741:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9745:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEtlParser.g:9746:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEtlParser.g:9753:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9757:1: ( ( RULE_LT_EM ) )
            // InternalEtlParser.g:9758:1: ( RULE_LT_EM )
            {
            // InternalEtlParser.g:9758:1: ( RULE_LT_EM )
            // InternalEtlParser.g:9759:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEtlParser.g:9768:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9772:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEtlParser.g:9773:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEtlParser.g:9779:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9783:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9784:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9784:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9785:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9786:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9786:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEtlParser.g:9795:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9799:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEtlParser.g:9800:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9807:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9811:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEtlParser.g:9812:1: ( RULE_DBL_LT_EM )
            {
            // InternalEtlParser.g:9812:1: ( RULE_DBL_LT_EM )
            // InternalEtlParser.g:9813:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEtlParser.g:9822:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9826:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9827:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9833:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9837:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9838:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9838:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9839:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9840:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9840:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEtlParser.g:9849:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9853:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEtlParser.g:9854:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEtlParser.g:9861:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9865:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:9866:1: ( RULE_LT )
            {
            // InternalEtlParser.g:9866:1: ( RULE_LT )
            // InternalEtlParser.g:9867:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEtlParser.g:9876:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9880:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEtlParser.g:9881:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEtlParser.g:9887:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9891:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9892:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9892:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9893:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9894:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9894:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEtlParser.g:9903:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9907:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEtlParser.g:9908:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9915:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9919:1: ( ( RULE_DBL_LT ) )
            // InternalEtlParser.g:9920:1: ( RULE_DBL_LT )
            {
            // InternalEtlParser.g:9920:1: ( RULE_DBL_LT )
            // InternalEtlParser.g:9921:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEtlParser.g:9930:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9934:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9935:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9941:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9945:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9946:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9946:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9947:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9948:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9948:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEtlParser.g:9957:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9961:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEtlParser.g:9962:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEtlParser.g:9969:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9973:1: ( ( RULE_GT_EM ) )
            // InternalEtlParser.g:9974:1: ( RULE_GT_EM )
            {
            // InternalEtlParser.g:9974:1: ( RULE_GT_EM )
            // InternalEtlParser.g:9975:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEtlParser.g:9984:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9988:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEtlParser.g:9989:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEtlParser.g:9995:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9999:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:10000:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:10000:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:10001:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:10002:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:10002:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEtlParser.g:10011:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10015:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEtlParser.g:10016:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:10023:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10027:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEtlParser.g:10028:1: ( RULE_DBL_GT_EM )
            {
            // InternalEtlParser.g:10028:1: ( RULE_DBL_GT_EM )
            // InternalEtlParser.g:10029:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEtlParser.g:10038:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10042:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:10043:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:10049:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10053:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:10054:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:10054:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:10055:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:10056:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:10056:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEtlParser.g:10065:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10069:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEtlParser.g:10070:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEtlParser.g:10077:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10081:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:10082:1: ( RULE_GT )
            {
            // InternalEtlParser.g:10082:1: ( RULE_GT )
            // InternalEtlParser.g:10083:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEtlParser.g:10092:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10096:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEtlParser.g:10097:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEtlParser.g:10103:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10107:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:10108:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:10108:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:10109:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:10110:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:10110:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEtlParser.g:10119:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10123:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEtlParser.g:10124:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:10131:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10135:1: ( ( RULE_DBL_GT ) )
            // InternalEtlParser.g:10136:1: ( RULE_DBL_GT )
            {
            // InternalEtlParser.g:10136:1: ( RULE_DBL_GT )
            // InternalEtlParser.g:10137:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEtlParser.g:10146:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10150:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:10151:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:10157:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10161:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:10162:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:10162:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:10163:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:10164:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:10164:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEtlParser.g:10173:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10177:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEtlParser.g:10178:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEtlParser.g:10185:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10189:1: ( ( RULE_CARET ) )
            // InternalEtlParser.g:10190:1: ( RULE_CARET )
            {
            // InternalEtlParser.g:10190:1: ( RULE_CARET )
            // InternalEtlParser.g:10191:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEtlParser.g:10200:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2 ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10204:1: ( rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2 )
            // InternalEtlParser.g:10205:2: rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEtlParser.g:10212:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__Group_1__0 )? ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10216:1: ( ( ( rule__MemberOf__Group_1__0 )? ) )
            // InternalEtlParser.g:10217:1: ( ( rule__MemberOf__Group_1__0 )? )
            {
            // InternalEtlParser.g:10217:1: ( ( rule__MemberOf__Group_1__0 )? )
            // InternalEtlParser.g:10218:2: ( rule__MemberOf__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10219:2: ( rule__MemberOf__Group_1__0 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_SQUARE_OPEN) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalEtlParser.g:10219:3: rule__MemberOf__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MemberOf__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__2"
    // InternalEtlParser.g:10227:1: rule__MemberOf__Group__2 : rule__MemberOf__Group__2__Impl ;
    public final void rule__MemberOf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10231:1: ( rule__MemberOf__Group__2__Impl )
            // InternalEtlParser.g:10232:2: rule__MemberOf__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__2"


    // $ANTLR start "rule__MemberOf__Group__2__Impl"
    // InternalEtlParser.g:10238:1: rule__MemberOf__Group__2__Impl : ( ( rule__MemberOf__ConstraintAssignment_2 ) ) ;
    public final void rule__MemberOf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10242:1: ( ( ( rule__MemberOf__ConstraintAssignment_2 ) ) )
            // InternalEtlParser.g:10243:1: ( ( rule__MemberOf__ConstraintAssignment_2 ) )
            {
            // InternalEtlParser.g:10243:1: ( ( rule__MemberOf__ConstraintAssignment_2 ) )
            // InternalEtlParser.g:10244:2: ( rule__MemberOf__ConstraintAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_2()); 
            }
            // InternalEtlParser.g:10245:2: ( rule__MemberOf__ConstraintAssignment_2 )
            // InternalEtlParser.g:10245:3: rule__MemberOf__ConstraintAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__2__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__0"
    // InternalEtlParser.g:10254:1: rule__MemberOf__Group_1__0 : rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1 ;
    public final void rule__MemberOf__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10258:1: ( rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1 )
            // InternalEtlParser.g:10259:2: rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__MemberOf__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__0"


    // $ANTLR start "rule__MemberOf__Group_1__0__Impl"
    // InternalEtlParser.g:10266:1: rule__MemberOf__Group_1__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__MemberOf__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10270:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEtlParser.g:10271:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:10271:1: ( RULE_SQUARE_OPEN )
            // InternalEtlParser.g:10272:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getSQUARE_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getSQUARE_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__1"
    // InternalEtlParser.g:10281:1: rule__MemberOf__Group_1__1 : rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2 ;
    public final void rule__MemberOf__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10285:1: ( rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2 )
            // InternalEtlParser.g:10286:2: rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__MemberOf__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__1"


    // $ANTLR start "rule__MemberOf__Group_1__1__Impl"
    // InternalEtlParser.g:10293:1: rule__MemberOf__Group_1__1__Impl : ( ( rule__MemberOf__Group_1_1__0 ) ) ;
    public final void rule__MemberOf__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10297:1: ( ( ( rule__MemberOf__Group_1_1__0 ) ) )
            // InternalEtlParser.g:10298:1: ( ( rule__MemberOf__Group_1_1__0 ) )
            {
            // InternalEtlParser.g:10298:1: ( ( rule__MemberOf__Group_1_1__0 ) )
            // InternalEtlParser.g:10299:2: ( rule__MemberOf__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1_1()); 
            }
            // InternalEtlParser.g:10300:2: ( rule__MemberOf__Group_1_1__0 )
            // InternalEtlParser.g:10300:3: rule__MemberOf__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__1__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__2"
    // InternalEtlParser.g:10308:1: rule__MemberOf__Group_1__2 : rule__MemberOf__Group_1__2__Impl ;
    public final void rule__MemberOf__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10312:1: ( rule__MemberOf__Group_1__2__Impl )
            // InternalEtlParser.g:10313:2: rule__MemberOf__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__2"


    // $ANTLR start "rule__MemberOf__Group_1__2__Impl"
    // InternalEtlParser.g:10319:1: rule__MemberOf__Group_1__2__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__MemberOf__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10323:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:10324:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:10324:1: ( RULE_SQUARE_CLOSE )
            // InternalEtlParser.g:10325:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getSQUARE_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getSQUARE_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__2__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1__0"
    // InternalEtlParser.g:10335:1: rule__MemberOf__Group_1_1__0 : rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1 ;
    public final void rule__MemberOf__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10339:1: ( rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1 )
            // InternalEtlParser.g:10340:2: rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__MemberOf__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__0"


    // $ANTLR start "rule__MemberOf__Group_1_1__0__Impl"
    // InternalEtlParser.g:10347:1: rule__MemberOf__Group_1_1__0__Impl : ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) ) ;
    public final void rule__MemberOf__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10351:1: ( ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) ) )
            // InternalEtlParser.g:10352:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) )
            {
            // InternalEtlParser.g:10352:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) )
            // InternalEtlParser.g:10353:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_0()); 
            }
            // InternalEtlParser.g:10354:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 )
            // InternalEtlParser.g:10354:3: rule__MemberOf__RefsetFieldsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__RefsetFieldsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1__1"
    // InternalEtlParser.g:10362:1: rule__MemberOf__Group_1_1__1 : rule__MemberOf__Group_1_1__1__Impl ;
    public final void rule__MemberOf__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10366:1: ( rule__MemberOf__Group_1_1__1__Impl )
            // InternalEtlParser.g:10367:2: rule__MemberOf__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__1"


    // $ANTLR start "rule__MemberOf__Group_1_1__1__Impl"
    // InternalEtlParser.g:10373:1: rule__MemberOf__Group_1_1__1__Impl : ( ( rule__MemberOf__Group_1_1_1__0 )* ) ;
    public final void rule__MemberOf__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10377:1: ( ( ( rule__MemberOf__Group_1_1_1__0 )* ) )
            // InternalEtlParser.g:10378:1: ( ( rule__MemberOf__Group_1_1_1__0 )* )
            {
            // InternalEtlParser.g:10378:1: ( ( rule__MemberOf__Group_1_1_1__0 )* )
            // InternalEtlParser.g:10379:2: ( rule__MemberOf__Group_1_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1_1_1()); 
            }
            // InternalEtlParser.g:10380:2: ( rule__MemberOf__Group_1_1_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_COMMA) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalEtlParser.g:10380:3: rule__MemberOf__Group_1_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__MemberOf__Group_1_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__1__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__0"
    // InternalEtlParser.g:10389:1: rule__MemberOf__Group_1_1_1__0 : rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1 ;
    public final void rule__MemberOf__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10393:1: ( rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1 )
            // InternalEtlParser.g:10394:2: rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__MemberOf__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__0"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__0__Impl"
    // InternalEtlParser.g:10401:1: rule__MemberOf__Group_1_1_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__MemberOf__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10405:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:10406:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:10406:1: ( RULE_COMMA )
            // InternalEtlParser.g:10407:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCOMMATerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCOMMATerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__1"
    // InternalEtlParser.g:10416:1: rule__MemberOf__Group_1_1_1__1 : rule__MemberOf__Group_1_1_1__1__Impl ;
    public final void rule__MemberOf__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10420:1: ( rule__MemberOf__Group_1_1_1__1__Impl )
            // InternalEtlParser.g:10421:2: rule__MemberOf__Group_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__1"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__1__Impl"
    // InternalEtlParser.g:10427:1: rule__MemberOf__Group_1_1_1__1__Impl : ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) ) ;
    public final void rule__MemberOf__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10431:1: ( ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) ) )
            // InternalEtlParser.g:10432:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) )
            {
            // InternalEtlParser.g:10432:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) )
            // InternalEtlParser.g:10433:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_1_1()); 
            }
            // InternalEtlParser.g:10434:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 )
            // InternalEtlParser.g:10434:3: rule__MemberOf__RefsetFieldsAssignment_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__RefsetFieldsAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEtlParser.g:10443:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10447:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEtlParser.g:10448:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEtlParser.g:10455:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10459:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEtlParser.g:10460:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEtlParser.g:10460:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEtlParser.g:10461:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEtlParser.g:10462:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEtlParser.g:10462:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEtlParser.g:10470:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl rule__EclConceptReference__Group__2 ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10474:1: ( rule__EclConceptReference__Group__1__Impl rule__EclConceptReference__Group__2 )
            // InternalEtlParser.g:10475:2: rule__EclConceptReference__Group__1__Impl rule__EclConceptReference__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEtlParser.g:10482:1: rule__EclConceptReference__Group__1__Impl : ( ( RULE_WS )* ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10486:1: ( ( ( RULE_WS )* ) )
            // InternalEtlParser.g:10487:1: ( ( RULE_WS )* )
            {
            // InternalEtlParser.g:10487:1: ( ( RULE_WS )* )
            // InternalEtlParser.g:10488:2: ( RULE_WS )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalEtlParser.g:10489:2: ( RULE_WS )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_WS) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalEtlParser.g:10489:3: RULE_WS
            	    {
            	    match(input,RULE_WS,FollowSets000.FOLLOW_60); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__2"
    // InternalEtlParser.g:10497:1: rule__EclConceptReference__Group__2 : rule__EclConceptReference__Group__2__Impl ;
    public final void rule__EclConceptReference__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10501:1: ( rule__EclConceptReference__Group__2__Impl )
            // InternalEtlParser.g:10502:2: rule__EclConceptReference__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__2"


    // $ANTLR start "rule__EclConceptReference__Group__2__Impl"
    // InternalEtlParser.g:10508:1: rule__EclConceptReference__Group__2__Impl : ( ( rule__EclConceptReference__TermAssignment_2 )? ) ;
    public final void rule__EclConceptReference__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10512:1: ( ( ( rule__EclConceptReference__TermAssignment_2 )? ) )
            // InternalEtlParser.g:10513:1: ( ( rule__EclConceptReference__TermAssignment_2 )? )
            {
            // InternalEtlParser.g:10513:1: ( ( rule__EclConceptReference__TermAssignment_2 )? )
            // InternalEtlParser.g:10514:2: ( rule__EclConceptReference__TermAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_2()); 
            }
            // InternalEtlParser.g:10515:2: ( rule__EclConceptReference__TermAssignment_2 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalEtlParser.g:10515:3: rule__EclConceptReference__TermAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__2__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEtlParser.g:10524:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10528:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEtlParser.g:10529:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEtlParser.g:10536:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10540:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10541:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10541:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10542:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEtlParser.g:10551:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10555:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEtlParser.g:10556:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEtlParser.g:10563:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10567:1: ( ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) )
            // InternalEtlParser.g:10568:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            {
            // InternalEtlParser.g:10568:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            // InternalEtlParser.g:10569:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            {
            // InternalEtlParser.g:10569:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEtlParser.g:10570:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:10571:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEtlParser.g:10571:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }

            // InternalEtlParser.g:10574:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            // InternalEtlParser.g:10575:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:10576:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( ((LA104_0>=RULE_ID_KEYWORD && LA104_0<=RULE_KEYWORD)||LA104_0==RULE_DIGIT) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalEtlParser.g:10576:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEtlParser.g:10585:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10589:1: ( rule__EclConceptReferenceSet__Group__2__Impl )
            // InternalEtlParser.g:10590:2: rule__EclConceptReferenceSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEtlParser.g:10596:1: rule__EclConceptReferenceSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10600:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10601:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10601:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10602:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEtlParser.g:10612:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10616:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEtlParser.g:10617:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEtlParser.g:10624:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10628:1: ( ( RULE_WILDCARD ) )
            // InternalEtlParser.g:10629:1: ( RULE_WILDCARD )
            {
            // InternalEtlParser.g:10629:1: ( RULE_WILDCARD )
            // InternalEtlParser.g:10630:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEtlParser.g:10639:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10643:1: ( rule__Any__Group__1__Impl )
            // InternalEtlParser.g:10644:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEtlParser.g:10650:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10654:1: ( ( () ) )
            // InternalEtlParser.g:10655:1: ( () )
            {
            // InternalEtlParser.g:10655:1: ( () )
            // InternalEtlParser.g:10656:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEtlParser.g:10657:2: ()
            // InternalEtlParser.g:10657:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEtlParser.g:10666:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10670:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEtlParser.g:10671:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEtlParser.g:10678:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10682:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:10683:1: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:10683:1: ( ruleAndRefinement )
            // InternalEtlParser.g:10684:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEtlParser.g:10693:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10697:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEtlParser.g:10698:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEtlParser.g:10704:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10708:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:10709:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:10709:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEtlParser.g:10710:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10711:2: ( rule__OrRefinement__Group_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA105_5 = input.LA(2);

                    if ( (synpred209_InternalEtlParser()) ) {
                        alt105=1;
                    }


                }


                switch (alt105) {
            	case 1 :
            	    // InternalEtlParser.g:10711:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEtlParser.g:10720:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10724:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:10725:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:10731:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10735:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:10736:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:10736:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:10737:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:10738:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEtlParser.g:10738:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEtlParser.g:10747:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10751:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEtlParser.g:10752:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:10759:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10763:1: ( ( () ) )
            // InternalEtlParser.g:10764:1: ( () )
            {
            // InternalEtlParser.g:10764:1: ( () )
            // InternalEtlParser.g:10765:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:10766:2: ()
            // InternalEtlParser.g:10766:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEtlParser.g:10774:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10778:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEtlParser.g:10779:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:10786:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10790:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:10791:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:10791:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:10792:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEtlParser.g:10801:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10805:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:10806:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:10812:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10816:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:10817:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:10817:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:10818:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:10819:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:10819:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEtlParser.g:10828:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10832:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEtlParser.g:10833:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEtlParser.g:10840:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10844:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:10845:1: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:10845:1: ( ruleSubRefinement )
            // InternalEtlParser.g:10846:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEtlParser.g:10855:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10859:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEtlParser.g:10860:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEtlParser.g:10866:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10870:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:10871:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:10871:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEtlParser.g:10872:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10873:2: ( rule__AndRefinement__Group_1__0 )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA106_4 = input.LA(2);

                    if ( (synpred210_InternalEtlParser()) ) {
                        alt106=1;
                    }


                }
                else if ( (LA106_0==RULE_COMMA) ) {
                    int LA106_5 = input.LA(2);

                    if ( (synpred210_InternalEtlParser()) ) {
                        alt106=1;
                    }


                }


                switch (alt106) {
            	case 1 :
            	    // InternalEtlParser.g:10873:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEtlParser.g:10882:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10886:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:10887:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:10893:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10897:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:10898:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:10898:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:10899:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:10900:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEtlParser.g:10900:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEtlParser.g:10909:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10913:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEtlParser.g:10914:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:10921:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10925:1: ( ( () ) )
            // InternalEtlParser.g:10926:1: ( () )
            {
            // InternalEtlParser.g:10926:1: ( () )
            // InternalEtlParser.g:10927:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:10928:2: ()
            // InternalEtlParser.g:10928:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEtlParser.g:10936:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10940:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEtlParser.g:10941:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:10948:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10952:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEtlParser.g:10953:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEtlParser.g:10953:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEtlParser.g:10954:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEtlParser.g:10955:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEtlParser.g:10955:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEtlParser.g:10963:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10967:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:10968:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:10974:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10978:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:10979:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:10979:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:10980:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:10981:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:10981:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEtlParser.g:10990:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10994:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEtlParser.g:10995:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEtlParser.g:11002:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11006:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11007:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11007:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11008:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEtlParser.g:11017:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11021:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEtlParser.g:11022:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEtlParser.g:11029:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11033:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11034:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11034:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEtlParser.g:11035:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11036:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEtlParser.g:11036:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEtlParser.g:11044:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11048:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEtlParser.g:11049:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEtlParser.g:11055:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11059:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11060:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11060:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11061:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEtlParser.g:11071:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11075:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEtlParser.g:11076:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:11083:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11087:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:11088:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:11088:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:11089:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:11090:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==RULE_SQUARE_OPEN) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalEtlParser.g:11090:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEtlParser.g:11098:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11102:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEtlParser.g:11103:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:11110:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11114:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:11115:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:11115:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:11116:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEtlParser.g:11125:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11129:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEtlParser.g:11130:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:11137:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11141:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEtlParser.g:11142:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEtlParser.g:11142:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEtlParser.g:11143:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEtlParser.g:11144:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEtlParser.g:11144:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEtlParser.g:11152:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11156:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEtlParser.g:11157:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:11163:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11167:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:11168:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:11168:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:11169:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEtlParser.g:11179:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11183:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEtlParser.g:11184:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:11191:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11195:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:11196:1: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:11196:1: ( ruleAndAttributeSet )
            // InternalEtlParser.g:11197:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEtlParser.g:11206:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11210:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:11211:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:11217:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11221:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:11222:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:11222:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:11223:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11224:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalEtlParser.g:11224:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEtlParser.g:11233:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11237:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEtlParser.g:11238:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:11245:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11249:1: ( ( () ) )
            // InternalEtlParser.g:11250:1: ( () )
            {
            // InternalEtlParser.g:11250:1: ( () )
            // InternalEtlParser.g:11251:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11252:2: ()
            // InternalEtlParser.g:11252:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEtlParser.g:11260:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11264:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEtlParser.g:11265:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:11272:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11276:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:11277:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:11277:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:11278:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEtlParser.g:11287:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11291:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:11292:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:11298:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11302:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11303:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11303:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11304:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11305:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:11305:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEtlParser.g:11314:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11318:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEtlParser.g:11319:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:11326:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11330:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:11331:1: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:11331:1: ( ruleSubAttributeSet )
            // InternalEtlParser.g:11332:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEtlParser.g:11341:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11345:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:11346:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:11352:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11356:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:11357:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:11357:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:11358:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11359:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==RULE_CONJUNCTION_KEYWORD||LA109_0==RULE_COMMA) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalEtlParser.g:11359:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEtlParser.g:11368:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11372:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEtlParser.g:11373:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:11380:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11384:1: ( ( () ) )
            // InternalEtlParser.g:11385:1: ( () )
            {
            // InternalEtlParser.g:11385:1: ( () )
            // InternalEtlParser.g:11386:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11387:2: ()
            // InternalEtlParser.g:11387:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEtlParser.g:11395:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11399:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEtlParser.g:11400:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:11407:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11411:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:11412:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:11412:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEtlParser.g:11413:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:11414:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEtlParser.g:11414:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEtlParser.g:11422:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11426:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:11427:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:11433:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11437:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11438:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11438:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11439:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11440:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:11440:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEtlParser.g:11449:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11453:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEtlParser.g:11454:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:11461:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11465:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11466:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11466:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11467:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEtlParser.g:11476:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11480:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEtlParser.g:11481:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:11488:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11492:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11493:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11493:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEtlParser.g:11494:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11495:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEtlParser.g:11495:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEtlParser.g:11503:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11507:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEtlParser.g:11508:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEtlParser.g:11514:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11518:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11519:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11519:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11520:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEtlParser.g:11530:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11534:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEtlParser.g:11535:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEtlParser.g:11542:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11546:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:11547:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:11547:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:11548:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:11549:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==RULE_SQUARE_OPEN) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalEtlParser.g:11549:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEtlParser.g:11557:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11561:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEtlParser.g:11562:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEtlParser.g:11569:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11573:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEtlParser.g:11574:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEtlParser.g:11574:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEtlParser.g:11575:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEtlParser.g:11576:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt111=2;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalEtlParser.g:11576:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEtlParser.g:11584:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11588:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEtlParser.g:11589:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEtlParser.g:11596:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11600:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEtlParser.g:11601:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEtlParser.g:11601:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEtlParser.g:11602:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEtlParser.g:11603:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEtlParser.g:11603:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEtlParser.g:11611:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11615:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEtlParser.g:11616:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEtlParser.g:11622:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11626:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEtlParser.g:11627:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEtlParser.g:11627:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEtlParser.g:11628:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEtlParser.g:11629:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( ((LA112_0>=RULE_GTE && LA112_0<=RULE_LTE)||(LA112_0>=RULE_EQUAL && LA112_0<=RULE_GT)) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalEtlParser.g:11629:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEtlParser.g:11638:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11642:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEtlParser.g:11643:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEtlParser.g:11650:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11654:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEtlParser.g:11655:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:11655:1: ( RULE_SQUARE_OPEN )
            // InternalEtlParser.g:11656:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEtlParser.g:11665:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11669:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEtlParser.g:11670:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEtlParser.g:11677:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11681:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:11682:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:11682:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:11683:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:11684:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEtlParser.g:11684:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEtlParser.g:11692:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11696:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEtlParser.g:11697:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEtlParser.g:11704:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11708:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:11709:1: ( RULE_TO )
            {
            // InternalEtlParser.g:11709:1: ( RULE_TO )
            // InternalEtlParser.g:11710:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEtlParser.g:11719:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11723:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEtlParser.g:11724:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEtlParser.g:11731:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11735:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:11736:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:11736:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:11737:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:11738:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEtlParser.g:11738:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEtlParser.g:11746:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11750:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEtlParser.g:11751:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEtlParser.g:11757:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11761:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:11762:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:11762:1: ( RULE_SQUARE_CLOSE )
            // InternalEtlParser.g:11763:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEtlParser.g:11773:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11777:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEtlParser.g:11778:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEtlParser.g:11785:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11789:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11790:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11790:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11791:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11792:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEtlParser.g:11792:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEtlParser.g:11800:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11804:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEtlParser.g:11805:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEtlParser.g:11811:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11815:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:11816:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:11816:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:11817:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:11818:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEtlParser.g:11818:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEtlParser.g:11827:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11831:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEtlParser.g:11832:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11839:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11843:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11844:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11844:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11845:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11846:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11846:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEtlParser.g:11854:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11858:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEtlParser.g:11859:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11865:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11869:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:11870:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:11870:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:11871:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:11872:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:11872:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEtlParser.g:11881:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11885:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEtlParser.g:11886:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11893:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11897:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11898:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11898:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11899:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11900:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11900:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEtlParser.g:11908:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11912:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEtlParser.g:11913:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11919:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11923:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:11924:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:11924:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:11925:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:11926:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:11926:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEtlParser.g:11935:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11939:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEtlParser.g:11940:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11947:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11951:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11952:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11952:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11953:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11954:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11954:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEtlParser.g:11962:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11966:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEtlParser.g:11967:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11974:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11978:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:11979:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:11979:1: ( RULE_HASH )
            // InternalEtlParser.g:11980:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEtlParser.g:11989:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11993:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEtlParser.g:11994:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEtlParser.g:12000:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12004:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:12005:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:12005:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:12006:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:12007:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:12007:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEtlParser.g:12016:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12020:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEtlParser.g:12021:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEtlParser.g:12028:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12032:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:12033:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:12033:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:12034:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:12035:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:12035:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEtlParser.g:12043:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12047:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEtlParser.g:12048:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEtlParser.g:12055:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12059:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:12060:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:12060:1: ( RULE_HASH )
            // InternalEtlParser.g:12061:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEtlParser.g:12070:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12074:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEtlParser.g:12075:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEtlParser.g:12081:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12085:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:12086:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:12086:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:12087:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:12088:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:12088:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEtlParser.g:12097:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12101:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEtlParser.g:12102:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEtlParser.g:12109:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12113:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12114:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12114:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12115:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEtlParser.g:12124:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12128:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEtlParser.g:12129:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEtlParser.g:12136:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12140:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:12141:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:12141:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEtlParser.g:12142:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:12143:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEtlParser.g:12143:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEtlParser.g:12151:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12155:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEtlParser.g:12156:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEtlParser.g:12162:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12166:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12167:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12167:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12168:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEtlParser.g:12178:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12182:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEtlParser.g:12183:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEtlParser.g:12190:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12194:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEtlParser.g:12195:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEtlParser.g:12195:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEtlParser.g:12196:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEtlParser.g:12205:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12209:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEtlParser.g:12210:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEtlParser.g:12217:1: rule__FilterConstraint__Group__1__Impl : ( ( rule__FilterConstraint__DomainAssignment_1 )? ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12221:1: ( ( ( rule__FilterConstraint__DomainAssignment_1 )? ) )
            // InternalEtlParser.g:12222:1: ( ( rule__FilterConstraint__DomainAssignment_1 )? )
            {
            // InternalEtlParser.g:12222:1: ( ( rule__FilterConstraint__DomainAssignment_1 )? )
            // InternalEtlParser.g:12223:2: ( rule__FilterConstraint__DomainAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDomainAssignment_1()); 
            }
            // InternalEtlParser.g:12224:2: ( rule__FilterConstraint__DomainAssignment_1 )?
            int alt113=2;
            switch ( input.LA(1) ) {
                case RULE_CONCEPT_SHORT_KEYWORD:
                    {
                    int LA113_1 = input.LA(2);

                    if ( ((LA113_1>=RULE_HISTORY_KEYWORD && LA113_1<=RULE_CONCEPT_SHORT_KEYWORD)||LA113_1==RULE_KEYWORD||LA113_1==RULE_ROUND_OPEN||LA113_1==RULE_WILDCARD) ) {
                        alt113=1;
                    }
                    }
                    break;
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                    {
                    int LA113_2 = input.LA(2);

                    if ( ((LA113_2>=RULE_HISTORY_KEYWORD && LA113_2<=RULE_CONCEPT_SHORT_KEYWORD)||LA113_2==RULE_KEYWORD||LA113_2==RULE_ROUND_OPEN||LA113_2==RULE_WILDCARD) ) {
                        alt113=1;
                    }
                    }
                    break;
                case RULE_MEMBER_SHORT_KEYWORD:
                    {
                    int LA113_3 = input.LA(2);

                    if ( ((LA113_3>=RULE_HISTORY_KEYWORD && LA113_3<=RULE_CONCEPT_SHORT_KEYWORD)||LA113_3==RULE_KEYWORD||LA113_3==RULE_ROUND_OPEN||LA113_3==RULE_WILDCARD) ) {
                        alt113=1;
                    }
                    }
                    break;
            }

            switch (alt113) {
                case 1 :
                    // InternalEtlParser.g:12224:3: rule__FilterConstraint__DomainAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FilterConstraint__DomainAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDomainAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEtlParser.g:12232:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3 ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12236:1: ( rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3 )
            // InternalEtlParser.g:12237:2: rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEtlParser.g:12244:1: rule__FilterConstraint__Group__2__Impl : ( ( rule__FilterConstraint__FilterAssignment_2 ) ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12248:1: ( ( ( rule__FilterConstraint__FilterAssignment_2 ) ) )
            // InternalEtlParser.g:12249:1: ( ( rule__FilterConstraint__FilterAssignment_2 ) )
            {
            // InternalEtlParser.g:12249:1: ( ( rule__FilterConstraint__FilterAssignment_2 ) )
            // InternalEtlParser.g:12250:2: ( rule__FilterConstraint__FilterAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterAssignment_2()); 
            }
            // InternalEtlParser.g:12251:2: ( rule__FilterConstraint__FilterAssignment_2 )
            // InternalEtlParser.g:12251:3: rule__FilterConstraint__FilterAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__FilterAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__3"
    // InternalEtlParser.g:12259:1: rule__FilterConstraint__Group__3 : rule__FilterConstraint__Group__3__Impl ;
    public final void rule__FilterConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12263:1: ( rule__FilterConstraint__Group__3__Impl )
            // InternalEtlParser.g:12264:2: rule__FilterConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__3"


    // $ANTLR start "rule__FilterConstraint__Group__3__Impl"
    // InternalEtlParser.g:12270:1: rule__FilterConstraint__Group__3__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12274:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEtlParser.g:12275:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:12275:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEtlParser.g:12276:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__3__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEtlParser.g:12286:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12290:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEtlParser.g:12291:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:12298:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12302:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:12303:1: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:12303:1: ( ruleConjunctionFilter )
            // InternalEtlParser.g:12304:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEtlParser.g:12313:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12317:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:12318:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:12324:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12328:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:12329:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:12329:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:12330:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:12331:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalEtlParser.g:12331:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEtlParser.g:12340:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12344:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:12345:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:12352:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12356:1: ( ( () ) )
            // InternalEtlParser.g:12357:1: ( () )
            {
            // InternalEtlParser.g:12357:1: ( () )
            // InternalEtlParser.g:12358:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:12359:2: ()
            // InternalEtlParser.g:12359:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEtlParser.g:12367:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12371:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:12372:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:12379:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12383:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:12384:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:12384:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:12385:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEtlParser.g:12394:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12398:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:12399:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:12405:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12409:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:12410:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:12410:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:12411:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:12412:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:12412:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEtlParser.g:12421:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12425:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEtlParser.g:12426:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:12433:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12437:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:12438:1: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:12438:1: ( rulePropertyFilter )
            // InternalEtlParser.g:12439:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEtlParser.g:12448:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12452:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:12453:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:12459:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12463:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:12464:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:12464:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:12465:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:12466:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==RULE_CONJUNCTION_KEYWORD||LA115_0==RULE_COMMA) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalEtlParser.g:12466:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEtlParser.g:12475:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12479:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:12480:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:12487:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12491:1: ( ( () ) )
            // InternalEtlParser.g:12492:1: ( () )
            {
            // InternalEtlParser.g:12492:1: ( () )
            // InternalEtlParser.g:12493:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:12494:2: ()
            // InternalEtlParser.g:12494:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEtlParser.g:12502:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12506:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:12507:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:12514:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12518:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:12519:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:12519:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEtlParser.g:12520:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:12521:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEtlParser.g:12521:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEtlParser.g:12529:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12533:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:12534:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:12540:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12544:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:12545:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:12545:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:12546:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:12547:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:12547:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEtlParser.g:12556:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12560:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEtlParser.g:12561:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEtlParser.g:12568:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12572:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12573:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12573:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12574:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEtlParser.g:12583:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12587:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEtlParser.g:12588:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEtlParser.g:12595:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12599:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:12600:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:12600:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEtlParser.g:12601:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:12602:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEtlParser.g:12602:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEtlParser.g:12610:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12614:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEtlParser.g:12615:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEtlParser.g:12621:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12625:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12626:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12626:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12627:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__MemberFieldFilter__Group__0"
    // InternalEtlParser.g:12637:1: rule__MemberFieldFilter__Group__0 : rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1 ;
    public final void rule__MemberFieldFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12641:1: ( rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1 )
            // InternalEtlParser.g:12642:2: rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__MemberFieldFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__0"


    // $ANTLR start "rule__MemberFieldFilter__Group__0__Impl"
    // InternalEtlParser.g:12649:1: rule__MemberFieldFilter__Group__0__Impl : ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) ) ;
    public final void rule__MemberFieldFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12653:1: ( ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) ) )
            // InternalEtlParser.g:12654:1: ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) )
            {
            // InternalEtlParser.g:12654:1: ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) )
            // InternalEtlParser.g:12655:2: ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameAssignment_0()); 
            }
            // InternalEtlParser.g:12656:2: ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 )
            // InternalEtlParser.g:12656:3: rule__MemberFieldFilter__RefsetFieldNameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__RefsetFieldNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__0__Impl"


    // $ANTLR start "rule__MemberFieldFilter__Group__1"
    // InternalEtlParser.g:12664:1: rule__MemberFieldFilter__Group__1 : rule__MemberFieldFilter__Group__1__Impl ;
    public final void rule__MemberFieldFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12668:1: ( rule__MemberFieldFilter__Group__1__Impl )
            // InternalEtlParser.g:12669:2: rule__MemberFieldFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__1"


    // $ANTLR start "rule__MemberFieldFilter__Group__1__Impl"
    // InternalEtlParser.g:12675:1: rule__MemberFieldFilter__Group__1__Impl : ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) ) ;
    public final void rule__MemberFieldFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12679:1: ( ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) ) )
            // InternalEtlParser.g:12680:1: ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) )
            {
            // InternalEtlParser.g:12680:1: ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) )
            // InternalEtlParser.g:12681:2: ( rule__MemberFieldFilter__ComparisonAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getComparisonAssignment_1()); 
            }
            // InternalEtlParser.g:12682:2: ( rule__MemberFieldFilter__ComparisonAssignment_1 )
            // InternalEtlParser.g:12682:3: rule__MemberFieldFilter__ComparisonAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__ComparisonAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getComparisonAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__1__Impl"


    // $ANTLR start "rule__IdFilter__Group__0"
    // InternalEtlParser.g:12691:1: rule__IdFilter__Group__0 : rule__IdFilter__Group__0__Impl rule__IdFilter__Group__1 ;
    public final void rule__IdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12695:1: ( rule__IdFilter__Group__0__Impl rule__IdFilter__Group__1 )
            // InternalEtlParser.g:12696:2: rule__IdFilter__Group__0__Impl rule__IdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__IdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__0"


    // $ANTLR start "rule__IdFilter__Group__0__Impl"
    // InternalEtlParser.g:12703:1: rule__IdFilter__Group__0__Impl : ( RULE_ID_KEYWORD ) ;
    public final void rule__IdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12707:1: ( ( RULE_ID_KEYWORD ) )
            // InternalEtlParser.g:12708:1: ( RULE_ID_KEYWORD )
            {
            // InternalEtlParser.g:12708:1: ( RULE_ID_KEYWORD )
            // InternalEtlParser.g:12709:2: RULE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__0__Impl"


    // $ANTLR start "rule__IdFilter__Group__1"
    // InternalEtlParser.g:12718:1: rule__IdFilter__Group__1 : rule__IdFilter__Group__1__Impl rule__IdFilter__Group__2 ;
    public final void rule__IdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12722:1: ( rule__IdFilter__Group__1__Impl rule__IdFilter__Group__2 )
            // InternalEtlParser.g:12723:2: rule__IdFilter__Group__1__Impl rule__IdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__IdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__1"


    // $ANTLR start "rule__IdFilter__Group__1__Impl"
    // InternalEtlParser.g:12730:1: rule__IdFilter__Group__1__Impl : ( ( rule__IdFilter__OpAssignment_1 ) ) ;
    public final void rule__IdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12734:1: ( ( ( rule__IdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12735:1: ( ( rule__IdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12735:1: ( ( rule__IdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12736:2: ( rule__IdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12737:2: ( rule__IdFilter__OpAssignment_1 )
            // InternalEtlParser.g:12737:3: rule__IdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__1__Impl"


    // $ANTLR start "rule__IdFilter__Group__2"
    // InternalEtlParser.g:12745:1: rule__IdFilter__Group__2 : rule__IdFilter__Group__2__Impl ;
    public final void rule__IdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12749:1: ( rule__IdFilter__Group__2__Impl )
            // InternalEtlParser.g:12750:2: rule__IdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__2"


    // $ANTLR start "rule__IdFilter__Group__2__Impl"
    // InternalEtlParser.g:12756:1: rule__IdFilter__Group__2__Impl : ( ( rule__IdFilter__Alternatives_2 ) ) ;
    public final void rule__IdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12760:1: ( ( ( rule__IdFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12761:1: ( ( rule__IdFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12761:1: ( ( rule__IdFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12762:2: ( rule__IdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12763:2: ( rule__IdFilter__Alternatives_2 )
            // InternalEtlParser.g:12763:3: rule__IdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group__2__Impl"


    // $ANTLR start "rule__IdFilter__Group_2_1__0"
    // InternalEtlParser.g:12772:1: rule__IdFilter__Group_2_1__0 : rule__IdFilter__Group_2_1__0__Impl rule__IdFilter__Group_2_1__1 ;
    public final void rule__IdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12776:1: ( rule__IdFilter__Group_2_1__0__Impl rule__IdFilter__Group_2_1__1 )
            // InternalEtlParser.g:12777:2: rule__IdFilter__Group_2_1__0__Impl rule__IdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__IdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__0"


    // $ANTLR start "rule__IdFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12784:1: rule__IdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__IdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12788:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12789:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12789:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12790:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__IdFilter__Group_2_1__1"
    // InternalEtlParser.g:12799:1: rule__IdFilter__Group_2_1__1 : rule__IdFilter__Group_2_1__1__Impl rule__IdFilter__Group_2_1__2 ;
    public final void rule__IdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12803:1: ( rule__IdFilter__Group_2_1__1__Impl rule__IdFilter__Group_2_1__2 )
            // InternalEtlParser.g:12804:2: rule__IdFilter__Group_2_1__1__Impl rule__IdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__IdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__1"


    // $ANTLR start "rule__IdFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12811:1: rule__IdFilter__Group_2_1__1__Impl : ( ( ( rule__IdFilter__IdsAssignment_2_1_1 ) ) ( ( rule__IdFilter__IdsAssignment_2_1_1 )* ) ) ;
    public final void rule__IdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12815:1: ( ( ( ( rule__IdFilter__IdsAssignment_2_1_1 ) ) ( ( rule__IdFilter__IdsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12816:1: ( ( ( rule__IdFilter__IdsAssignment_2_1_1 ) ) ( ( rule__IdFilter__IdsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12816:1: ( ( ( rule__IdFilter__IdsAssignment_2_1_1 ) ) ( ( rule__IdFilter__IdsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12817:2: ( ( rule__IdFilter__IdsAssignment_2_1_1 ) ) ( ( rule__IdFilter__IdsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12817:2: ( ( rule__IdFilter__IdsAssignment_2_1_1 ) )
            // InternalEtlParser.g:12818:3: ( rule__IdFilter__IdsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getIdsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12819:3: ( rule__IdFilter__IdsAssignment_2_1_1 )
            // InternalEtlParser.g:12819:4: rule__IdFilter__IdsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__IdFilter__IdsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getIdsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12822:2: ( ( rule__IdFilter__IdsAssignment_2_1_1 )* )
            // InternalEtlParser.g:12823:3: ( rule__IdFilter__IdsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getIdsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12824:3: ( rule__IdFilter__IdsAssignment_2_1_1 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( ((LA116_0>=RULE_ID_KEYWORD && LA116_0<=RULE_KEYWORD)||LA116_0==RULE_DIGIT) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalEtlParser.g:12824:4: rule__IdFilter__IdsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    rule__IdFilter__IdsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getIdsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__IdFilter__Group_2_1__2"
    // InternalEtlParser.g:12833:1: rule__IdFilter__Group_2_1__2 : rule__IdFilter__Group_2_1__2__Impl ;
    public final void rule__IdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12837:1: ( rule__IdFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12838:2: rule__IdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__2"


    // $ANTLR start "rule__IdFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12844:1: rule__IdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__IdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12848:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12849:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12849:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12850:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEtlParser.g:12860:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12864:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEtlParser.g:12865:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEtlParser.g:12872:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12876:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEtlParser.g:12877:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEtlParser.g:12877:1: ( RULE_TERM_KEYWORD )
            // InternalEtlParser.g:12878:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEtlParser.g:12887:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2 ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12891:1: ( rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2 )
            // InternalEtlParser.g:12892:2: rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEtlParser.g:12899:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__OpAssignment_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12903:1: ( ( ( rule__TermFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12904:1: ( ( rule__TermFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12904:1: ( ( rule__TermFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12905:2: ( rule__TermFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12906:2: ( rule__TermFilter__OpAssignment_1 )
            // InternalEtlParser.g:12906:3: rule__TermFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TermFilter__Group__2"
    // InternalEtlParser.g:12914:1: rule__TermFilter__Group__2 : rule__TermFilter__Group__2__Impl ;
    public final void rule__TermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12918:1: ( rule__TermFilter__Group__2__Impl )
            // InternalEtlParser.g:12919:2: rule__TermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__2"


    // $ANTLR start "rule__TermFilter__Group__2__Impl"
    // InternalEtlParser.g:12925:1: rule__TermFilter__Group__2__Impl : ( ( rule__TermFilter__SearchTermAssignment_2 ) ) ;
    public final void rule__TermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12929:1: ( ( ( rule__TermFilter__SearchTermAssignment_2 ) ) )
            // InternalEtlParser.g:12930:1: ( ( rule__TermFilter__SearchTermAssignment_2 ) )
            {
            // InternalEtlParser.g:12930:1: ( ( rule__TermFilter__SearchTermAssignment_2 ) )
            // InternalEtlParser.g:12931:2: ( rule__TermFilter__SearchTermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getSearchTermAssignment_2()); 
            }
            // InternalEtlParser.g:12932:2: ( rule__TermFilter__SearchTermAssignment_2 )
            // InternalEtlParser.g:12932:3: rule__TermFilter__SearchTermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__SearchTermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getSearchTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__0"
    // InternalEtlParser.g:12941:1: rule__TypedSearchTermSet__Group__0 : rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1 ;
    public final void rule__TypedSearchTermSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12945:1: ( rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1 )
            // InternalEtlParser.g:12946:2: rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__TypedSearchTermSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__0"


    // $ANTLR start "rule__TypedSearchTermSet__Group__0__Impl"
    // InternalEtlParser.g:12953:1: rule__TypedSearchTermSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedSearchTermSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12957:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12958:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12958:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12959:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__0__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__1"
    // InternalEtlParser.g:12968:1: rule__TypedSearchTermSet__Group__1 : rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2 ;
    public final void rule__TypedSearchTermSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12972:1: ( rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2 )
            // InternalEtlParser.g:12973:2: rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypedSearchTermSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__1"


    // $ANTLR start "rule__TypedSearchTermSet__Group__1__Impl"
    // InternalEtlParser.g:12980:1: rule__TypedSearchTermSet__Group__1__Impl : ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) ) ;
    public final void rule__TypedSearchTermSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12984:1: ( ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) ) )
            // InternalEtlParser.g:12985:1: ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) )
            {
            // InternalEtlParser.g:12985:1: ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) )
            // InternalEtlParser.g:12986:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* )
            {
            // InternalEtlParser.g:12986:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) )
            // InternalEtlParser.g:12987:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }
            // InternalEtlParser.g:12988:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )
            // InternalEtlParser.g:12988:4: rule__TypedSearchTermSet__ClausesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__TypedSearchTermSet__ClausesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }

            }

            // InternalEtlParser.g:12991:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* )
            // InternalEtlParser.g:12992:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }
            // InternalEtlParser.g:12993:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==RULE_STRING||LA117_0==RULE_EXACT_KEYWORD||(LA117_0>=RULE_MATCH_KEYWORD && LA117_0<=RULE_REGEX_KEYWORD)||LA117_0==RULE_WILD_KEYWORD) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalEtlParser.g:12993:4: rule__TypedSearchTermSet__ClausesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    rule__TypedSearchTermSet__ClausesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__1__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__2"
    // InternalEtlParser.g:13002:1: rule__TypedSearchTermSet__Group__2 : rule__TypedSearchTermSet__Group__2__Impl ;
    public final void rule__TypedSearchTermSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13006:1: ( rule__TypedSearchTermSet__Group__2__Impl )
            // InternalEtlParser.g:13007:2: rule__TypedSearchTermSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__2"


    // $ANTLR start "rule__TypedSearchTermSet__Group__2__Impl"
    // InternalEtlParser.g:13013:1: rule__TypedSearchTermSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedSearchTermSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13017:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13018:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13018:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13019:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__2__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__0"
    // InternalEtlParser.g:13029:1: rule__TypedSearchTermClause__Group_0__0 : rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1 ;
    public final void rule__TypedSearchTermClause__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13033:1: ( rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1 )
            // InternalEtlParser.g:13034:2: rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__TypedSearchTermClause__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__0__Impl"
    // InternalEtlParser.g:13041:1: rule__TypedSearchTermClause__Group_0__0__Impl : ( ( rule__TypedSearchTermClause__Group_0_0__0 )? ) ;
    public final void rule__TypedSearchTermClause__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13045:1: ( ( ( rule__TypedSearchTermClause__Group_0_0__0 )? ) )
            // InternalEtlParser.g:13046:1: ( ( rule__TypedSearchTermClause__Group_0_0__0 )? )
            {
            // InternalEtlParser.g:13046:1: ( ( rule__TypedSearchTermClause__Group_0_0__0 )? )
            // InternalEtlParser.g:13047:2: ( rule__TypedSearchTermClause__Group_0_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0_0()); 
            }
            // InternalEtlParser.g:13048:2: ( rule__TypedSearchTermClause__Group_0_0__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_EXACT_KEYWORD||LA118_0==RULE_MATCH_KEYWORD||LA118_0==RULE_WILD_KEYWORD) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalEtlParser.g:13048:3: rule__TypedSearchTermClause__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__1"
    // InternalEtlParser.g:13056:1: rule__TypedSearchTermClause__Group_0__1 : rule__TypedSearchTermClause__Group_0__1__Impl ;
    public final void rule__TypedSearchTermClause__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13060:1: ( rule__TypedSearchTermClause__Group_0__1__Impl )
            // InternalEtlParser.g:13061:2: rule__TypedSearchTermClause__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__1__Impl"
    // InternalEtlParser.g:13067:1: rule__TypedSearchTermClause__Group_0__1__Impl : ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) ) ;
    public final void rule__TypedSearchTermClause__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13071:1: ( ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) ) )
            // InternalEtlParser.g:13072:1: ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) )
            {
            // InternalEtlParser.g:13072:1: ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) )
            // InternalEtlParser.g:13073:2: ( rule__TypedSearchTermClause__TermAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_0_1()); 
            }
            // InternalEtlParser.g:13074:2: ( rule__TypedSearchTermClause__TermAssignment_0_1 )
            // InternalEtlParser.g:13074:3: rule__TypedSearchTermClause__TermAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__TermAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__0"
    // InternalEtlParser.g:13083:1: rule__TypedSearchTermClause__Group_0_0__0 : rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1 ;
    public final void rule__TypedSearchTermClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13087:1: ( rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1 )
            // InternalEtlParser.g:13088:2: rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TypedSearchTermClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__0__Impl"
    // InternalEtlParser.g:13095:1: rule__TypedSearchTermClause__Group_0_0__0__Impl : ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) ) ;
    public final void rule__TypedSearchTermClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13099:1: ( ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:13100:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:13100:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) )
            // InternalEtlParser.g:13101:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:13102:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 )
            // InternalEtlParser.g:13102:3: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__1"
    // InternalEtlParser.g:13110:1: rule__TypedSearchTermClause__Group_0_0__1 : rule__TypedSearchTermClause__Group_0_0__1__Impl ;
    public final void rule__TypedSearchTermClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13114:1: ( rule__TypedSearchTermClause__Group_0_0__1__Impl )
            // InternalEtlParser.g:13115:2: rule__TypedSearchTermClause__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__1__Impl"
    // InternalEtlParser.g:13121:1: rule__TypedSearchTermClause__Group_0_0__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedSearchTermClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13125:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:13126:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:13126:1: ( RULE_COLON )
            // InternalEtlParser.g:13127:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__0"
    // InternalEtlParser.g:13137:1: rule__TypedSearchTermClause__Group_1__0 : rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1 ;
    public final void rule__TypedSearchTermClause__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13141:1: ( rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1 )
            // InternalEtlParser.g:13142:2: rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TypedSearchTermClause__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__0__Impl"
    // InternalEtlParser.g:13149:1: rule__TypedSearchTermClause__Group_1__0__Impl : ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedSearchTermClause__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13153:1: ( ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEtlParser.g:13154:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEtlParser.g:13154:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEtlParser.g:13155:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEtlParser.g:13156:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 )
            // InternalEtlParser.g:13156:3: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__1"
    // InternalEtlParser.g:13164:1: rule__TypedSearchTermClause__Group_1__1 : rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2 ;
    public final void rule__TypedSearchTermClause__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13168:1: ( rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2 )
            // InternalEtlParser.g:13169:2: rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__TypedSearchTermClause__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__1__Impl"
    // InternalEtlParser.g:13176:1: rule__TypedSearchTermClause__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedSearchTermClause__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13180:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:13181:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:13181:1: ( RULE_COLON )
            // InternalEtlParser.g:13182:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__2"
    // InternalEtlParser.g:13191:1: rule__TypedSearchTermClause__Group_1__2 : rule__TypedSearchTermClause__Group_1__2__Impl ;
    public final void rule__TypedSearchTermClause__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13195:1: ( rule__TypedSearchTermClause__Group_1__2__Impl )
            // InternalEtlParser.g:13196:2: rule__TypedSearchTermClause__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__2"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__2__Impl"
    // InternalEtlParser.g:13202:1: rule__TypedSearchTermClause__Group_1__2__Impl : ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) ) ;
    public final void rule__TypedSearchTermClause__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13206:1: ( ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) ) )
            // InternalEtlParser.g:13207:1: ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) )
            {
            // InternalEtlParser.g:13207:1: ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) )
            // InternalEtlParser.g:13208:2: ( rule__TypedSearchTermClause__TermAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_1_2()); 
            }
            // InternalEtlParser.g:13209:2: ( rule__TypedSearchTermClause__TermAssignment_1_2 )
            // InternalEtlParser.g:13209:3: rule__TypedSearchTermClause__TermAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__TermAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEtlParser.g:13218:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13222:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEtlParser.g:13223:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEtlParser.g:13230:1: rule__LanguageFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13234:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEtlParser.g:13235:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEtlParser.g:13235:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEtlParser.g:13236:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEtlParser.g:13245:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13249:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEtlParser.g:13250:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEtlParser.g:13257:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13261:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:13262:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:13262:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:13263:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:13264:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEtlParser.g:13264:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEtlParser.g:13272:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13276:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEtlParser.g:13277:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEtlParser.g:13283:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13287:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:13288:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:13288:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEtlParser.g:13289:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:13290:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEtlParser.g:13290:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEtlParser.g:13299:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13303:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEtlParser.g:13304:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:13311:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13315:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:13316:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:13316:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:13317:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEtlParser.g:13326:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13330:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEtlParser.g:13331:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:13338:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13342:1: ( ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:13343:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:13343:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:13344:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:13344:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEtlParser.g:13345:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13346:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEtlParser.g:13346:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:13349:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            // InternalEtlParser.g:13350:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13351:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( ((LA119_0>=RULE_HISTORY_KEYWORD && LA119_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA119_0==RULE_KEYWORD||LA119_0==RULE_WILDCARD) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalEtlParser.g:13351:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEtlParser.g:13360:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13364:1: ( rule__LanguageFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:13365:2: rule__LanguageFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:13371:1: rule__LanguageFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13375:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13376:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13376:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13377:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEtlParser.g:13387:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13391:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEtlParser.g:13392:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEtlParser.g:13399:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13403:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEtlParser.g:13404:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEtlParser.g:13404:1: ( RULE_TYPEID_KEYWORD )
            // InternalEtlParser.g:13405:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEtlParser.g:13414:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13418:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEtlParser.g:13419:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEtlParser.g:13426:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13430:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:13431:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:13431:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:13432:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:13433:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:13433:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEtlParser.g:13441:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13445:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEtlParser.g:13446:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEtlParser.g:13452:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13456:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEtlParser.g:13457:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEtlParser.g:13457:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEtlParser.g:13458:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEtlParser.g:13459:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEtlParser.g:13459:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEtlParser.g:13468:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13472:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEtlParser.g:13473:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEtlParser.g:13480:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13484:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEtlParser.g:13485:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEtlParser.g:13485:1: ( RULE_TYPE_KEYWORD )
            // InternalEtlParser.g:13486:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEtlParser.g:13495:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13499:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEtlParser.g:13500:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEtlParser.g:13507:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13511:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:13512:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:13512:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:13513:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:13514:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEtlParser.g:13514:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEtlParser.g:13522:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13526:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEtlParser.g:13527:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEtlParser.g:13533:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13537:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:13538:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:13538:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEtlParser.g:13539:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:13540:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEtlParser.g:13540:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEtlParser.g:13549:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13553:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEtlParser.g:13554:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:13561:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13565:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:13566:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:13566:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:13567:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEtlParser.g:13576:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13580:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEtlParser.g:13581:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:13588:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13592:1: ( ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:13593:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:13593:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:13594:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:13594:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEtlParser.g:13595:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13596:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEtlParser.g:13596:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:13599:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            // InternalEtlParser.g:13600:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13601:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=RULE_HISTORY_KEYWORD && LA120_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA120_0==RULE_KEYWORD||LA120_0==RULE_WILDCARD) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalEtlParser.g:13601:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEtlParser.g:13610:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13614:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:13615:2: rule__TypeTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:13621:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13625:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13626:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13626:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13627:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEtlParser.g:13637:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13641:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEtlParser.g:13642:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEtlParser.g:13649:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13653:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEtlParser.g:13654:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEtlParser.g:13654:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEtlParser.g:13655:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEtlParser.g:13664:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13668:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEtlParser.g:13669:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEtlParser.g:13676:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13680:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:13681:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:13681:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:13682:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:13683:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:13683:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEtlParser.g:13691:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13695:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEtlParser.g:13696:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEtlParser.g:13702:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13706:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:13707:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:13707:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEtlParser.g:13708:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:13709:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEtlParser.g:13709:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEtlParser.g:13718:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13722:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEtlParser.g:13723:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:13730:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13734:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:13735:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:13735:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:13736:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEtlParser.g:13745:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13749:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEtlParser.g:13750:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:13757:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13761:1: ( ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:13762:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:13762:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:13763:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:13763:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:13764:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13765:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:13765:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:13768:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:13769:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13770:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( ((LA121_0>=RULE_ID_KEYWORD && LA121_0<=RULE_GT_EM)||LA121_0==RULE_DIGIT||LA121_0==RULE_ROUND_OPEN||LA121_0==RULE_CARET||LA121_0==RULE_WILDCARD||(LA121_0>=RULE_LT && LA121_0<=RULE_GT)) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalEtlParser.g:13770:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_76);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEtlParser.g:13779:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13783:1: ( rule__DialectIdFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:13784:2: rule__DialectIdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:13790:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13794:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13795:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13795:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13796:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEtlParser.g:13806:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13810:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEtlParser.g:13811:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEtlParser.g:13818:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13822:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEtlParser.g:13823:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEtlParser.g:13823:1: ( RULE_DIALECT_KEYWORD )
            // InternalEtlParser.g:13824:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEtlParser.g:13833:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13837:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEtlParser.g:13838:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEtlParser.g:13845:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13849:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:13850:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:13850:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:13851:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:13852:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEtlParser.g:13852:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEtlParser.g:13860:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13864:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEtlParser.g:13865:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEtlParser.g:13871:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13875:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:13876:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:13876:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEtlParser.g:13877:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:13878:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEtlParser.g:13878:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEtlParser.g:13887:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13891:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEtlParser.g:13892:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:13899:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13903:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:13904:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:13904:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:13905:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEtlParser.g:13914:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13918:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEtlParser.g:13919:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:13926:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13930:1: ( ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:13931:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:13931:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:13932:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:13932:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:13933:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13934:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:13934:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:13937:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:13938:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:13939:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==RULE_KEYWORD||LA122_0==RULE_DIGIT||LA122_0==RULE_DASH) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalEtlParser.g:13939:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEtlParser.g:13948:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13952:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:13953:2: rule__DialectAliasFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:13959:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13963:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13964:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13964:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13965:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEtlParser.g:13975:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13979:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEtlParser.g:13980:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEtlParser.g:13987:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13991:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEtlParser.g:13992:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEtlParser.g:13992:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEtlParser.g:13993:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEtlParser.g:13994:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEtlParser.g:13994:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEtlParser.g:14002:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14006:1: ( rule__Dialect__Group__1__Impl )
            // InternalEtlParser.g:14007:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEtlParser.g:14013:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14017:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEtlParser.g:14018:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEtlParser.g:14018:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEtlParser.g:14019:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEtlParser.g:14020:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt123=2;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // InternalEtlParser.g:14020:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEtlParser.g:14029:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14033:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEtlParser.g:14034:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEtlParser.g:14041:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14045:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEtlParser.g:14046:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEtlParser.g:14046:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEtlParser.g:14047:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEtlParser.g:14048:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEtlParser.g:14048:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEtlParser.g:14056:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14060:1: ( rule__DialectAlias__Group__1__Impl )
            // InternalEtlParser.g:14061:2: rule__DialectAlias__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEtlParser.g:14067:1: rule__DialectAlias__Group__1__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14071:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) )
            // InternalEtlParser.g:14072:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            {
            // InternalEtlParser.g:14072:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            // InternalEtlParser.g:14073:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEtlParser.g:14074:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==RULE_ROUND_OPEN) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalEtlParser.g:14074:3: rule__DialectAlias__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__0"
    // InternalEtlParser.g:14083:1: rule__DefinitionStatusIdFilter__Group__0 : rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1 ;
    public final void rule__DefinitionStatusIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14087:1: ( rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1 )
            // InternalEtlParser.g:14088:2: rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__DefinitionStatusIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__0"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__0__Impl"
    // InternalEtlParser.g:14095:1: rule__DefinitionStatusIdFilter__Group__0__Impl : ( RULE_DEFINITION_STATUS_ID_KEYWORD ) ;
    public final void rule__DefinitionStatusIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14099:1: ( ( RULE_DEFINITION_STATUS_ID_KEYWORD ) )
            // InternalEtlParser.g:14100:1: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
            {
            // InternalEtlParser.g:14100:1: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
            // InternalEtlParser.g:14101:2: RULE_DEFINITION_STATUS_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DEFINITION_STATUS_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__1"
    // InternalEtlParser.g:14110:1: rule__DefinitionStatusIdFilter__Group__1 : rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2 ;
    public final void rule__DefinitionStatusIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14114:1: ( rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2 )
            // InternalEtlParser.g:14115:2: rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DefinitionStatusIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__1"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__1__Impl"
    // InternalEtlParser.g:14122:1: rule__DefinitionStatusIdFilter__Group__1__Impl : ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DefinitionStatusIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14126:1: ( ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14127:1: ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14127:1: ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14128:2: ( rule__DefinitionStatusIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14129:2: ( rule__DefinitionStatusIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:14129:3: rule__DefinitionStatusIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__2"
    // InternalEtlParser.g:14137:1: rule__DefinitionStatusIdFilter__Group__2 : rule__DefinitionStatusIdFilter__Group__2__Impl ;
    public final void rule__DefinitionStatusIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14141:1: ( rule__DefinitionStatusIdFilter__Group__2__Impl )
            // InternalEtlParser.g:14142:2: rule__DefinitionStatusIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__2"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__2__Impl"
    // InternalEtlParser.g:14148:1: rule__DefinitionStatusIdFilter__Group__2__Impl : ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) ) ;
    public final void rule__DefinitionStatusIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14152:1: ( ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) ) )
            // InternalEtlParser.g:14153:1: ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) )
            {
            // InternalEtlParser.g:14153:1: ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) )
            // InternalEtlParser.g:14154:2: ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusAssignment_2()); 
            }
            // InternalEtlParser.g:14155:2: ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 )
            // InternalEtlParser.g:14155:3: rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__0"
    // InternalEtlParser.g:14164:1: rule__DefinitionStatusTokenFilter__Group__0 : rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1 ;
    public final void rule__DefinitionStatusTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14168:1: ( rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1 )
            // InternalEtlParser.g:14169:2: rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__DefinitionStatusTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__0__Impl"
    // InternalEtlParser.g:14176:1: rule__DefinitionStatusTokenFilter__Group__0__Impl : ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14180:1: ( ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) )
            // InternalEtlParser.g:14181:1: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
            {
            // InternalEtlParser.g:14181:1: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
            // InternalEtlParser.g:14182:2: RULE_DEFINITION_STATUS_TOKEN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DEFINITION_STATUS_TOKEN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__1"
    // InternalEtlParser.g:14191:1: rule__DefinitionStatusTokenFilter__Group__1 : rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2 ;
    public final void rule__DefinitionStatusTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14195:1: ( rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2 )
            // InternalEtlParser.g:14196:2: rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__DefinitionStatusTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__1__Impl"
    // InternalEtlParser.g:14203:1: rule__DefinitionStatusTokenFilter__Group__1__Impl : ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14207:1: ( ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14208:1: ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14208:1: ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14209:2: ( rule__DefinitionStatusTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14210:2: ( rule__DefinitionStatusTokenFilter__OpAssignment_1 )
            // InternalEtlParser.g:14210:3: rule__DefinitionStatusTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__2"
    // InternalEtlParser.g:14218:1: rule__DefinitionStatusTokenFilter__Group__2 : rule__DefinitionStatusTokenFilter__Group__2__Impl ;
    public final void rule__DefinitionStatusTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14222:1: ( rule__DefinitionStatusTokenFilter__Group__2__Impl )
            // InternalEtlParser.g:14223:2: rule__DefinitionStatusTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__2__Impl"
    // InternalEtlParser.g:14229:1: rule__DefinitionStatusTokenFilter__Group__2__Impl : ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14233:1: ( ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:14234:1: ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:14234:1: ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) )
            // InternalEtlParser.g:14235:2: ( rule__DefinitionStatusTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:14236:2: ( rule__DefinitionStatusTokenFilter__Alternatives_2 )
            // InternalEtlParser.g:14236:3: rule__DefinitionStatusTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__0"
    // InternalEtlParser.g:14245:1: rule__DefinitionStatusTokenFilter__Group_2_1__0 : rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1 ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14249:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1 )
            // InternalEtlParser.g:14250:2: rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:14257:1: rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14261:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:14262:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:14262:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:14263:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__1"
    // InternalEtlParser.g:14272:1: rule__DefinitionStatusTokenFilter__Group_2_1__1 : rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2 ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14276:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2 )
            // InternalEtlParser.g:14277:2: rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:14284:1: rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl : ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14288:1: ( ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:14289:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:14289:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:14290:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:14290:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) )
            // InternalEtlParser.g:14291:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:14292:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )
            // InternalEtlParser.g:14292:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:14295:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* )
            // InternalEtlParser.g:14296:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:14297:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( ((LA125_0>=RULE_HISTORY_KEYWORD && LA125_0<=RULE_CONCEPT_SHORT_KEYWORD)||LA125_0==RULE_KEYWORD||LA125_0==RULE_WILDCARD) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalEtlParser.g:14297:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__2"
    // InternalEtlParser.g:14306:1: rule__DefinitionStatusTokenFilter__Group_2_1__2 : rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14310:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:14311:2: rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:14317:1: rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14321:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:14322:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:14322:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:14323:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEtlParser.g:14333:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14337:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEtlParser.g:14338:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEtlParser.g:14345:1: rule__ModuleFilter__Group__0__Impl : ( RULE_MODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14349:1: ( ( RULE_MODULEID_KEYWORD ) )
            // InternalEtlParser.g:14350:1: ( RULE_MODULEID_KEYWORD )
            {
            // InternalEtlParser.g:14350:1: ( RULE_MODULEID_KEYWORD )
            // InternalEtlParser.g:14351:2: RULE_MODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEtlParser.g:14360:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14364:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEtlParser.g:14365:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEtlParser.g:14372:1: rule__ModuleFilter__Group__1__Impl : ( ( rule__ModuleFilter__OpAssignment_1 ) ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14376:1: ( ( ( rule__ModuleFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14377:1: ( ( rule__ModuleFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14377:1: ( ( rule__ModuleFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14378:2: ( rule__ModuleFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14379:2: ( rule__ModuleFilter__OpAssignment_1 )
            // InternalEtlParser.g:14379:3: rule__ModuleFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEtlParser.g:14387:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14391:1: ( rule__ModuleFilter__Group__2__Impl )
            // InternalEtlParser.g:14392:2: rule__ModuleFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEtlParser.g:14398:1: rule__ModuleFilter__Group__2__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14402:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) ) )
            // InternalEtlParser.g:14403:1: ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14403:1: ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) )
            // InternalEtlParser.g:14404:2: ( rule__ModuleFilter__ModuleIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_2()); 
            }
            // InternalEtlParser.g:14405:2: ( rule__ModuleFilter__ModuleIdAssignment_2 )
            // InternalEtlParser.g:14405:3: rule__ModuleFilter__ModuleIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEtlParser.g:14414:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14418:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEtlParser.g:14419:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEtlParser.g:14426:1: rule__EffectiveTimeFilter__Group__0__Impl : ( RULE_EFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14430:1: ( ( RULE_EFFECTIVE_TIME_KEYWORD ) )
            // InternalEtlParser.g:14431:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            {
            // InternalEtlParser.g:14431:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            // InternalEtlParser.g:14432:2: RULE_EFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEtlParser.g:14441:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14445:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEtlParser.g:14446:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEtlParser.g:14453:1: rule__EffectiveTimeFilter__Group__1__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14457:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14458:1: ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14458:1: ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14459:2: ( rule__EffectiveTimeFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14460:2: ( rule__EffectiveTimeFilter__OpAssignment_1 )
            // InternalEtlParser.g:14460:3: rule__EffectiveTimeFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEtlParser.g:14468:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14472:1: ( rule__EffectiveTimeFilter__Group__2__Impl )
            // InternalEtlParser.g:14473:2: rule__EffectiveTimeFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEtlParser.g:14479:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14483:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) ) )
            // InternalEtlParser.g:14484:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) )
            {
            // InternalEtlParser.g:14484:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) )
            // InternalEtlParser.g:14485:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_2()); 
            }
            // InternalEtlParser.g:14486:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 )
            // InternalEtlParser.g:14486:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEtlParser.g:14495:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14499:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEtlParser.g:14500:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEtlParser.g:14507:1: rule__ActiveFilter__Group__0__Impl : ( RULE_ACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14511:1: ( ( RULE_ACTIVE_KEYWORD ) )
            // InternalEtlParser.g:14512:1: ( RULE_ACTIVE_KEYWORD )
            {
            // InternalEtlParser.g:14512:1: ( RULE_ACTIVE_KEYWORD )
            // InternalEtlParser.g:14513:2: RULE_ACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEtlParser.g:14522:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14526:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEtlParser.g:14527:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEtlParser.g:14534:1: rule__ActiveFilter__Group__1__Impl : ( ( rule__ActiveFilter__OpAssignment_1 ) ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14538:1: ( ( ( rule__ActiveFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14539:1: ( ( rule__ActiveFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14539:1: ( ( rule__ActiveFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14540:2: ( rule__ActiveFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14541:2: ( rule__ActiveFilter__OpAssignment_1 )
            // InternalEtlParser.g:14541:3: rule__ActiveFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEtlParser.g:14549:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14553:1: ( rule__ActiveFilter__Group__2__Impl )
            // InternalEtlParser.g:14554:2: rule__ActiveFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEtlParser.g:14560:1: rule__ActiveFilter__Group__2__Impl : ( ( rule__ActiveFilter__ActiveAssignment_2 ) ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14564:1: ( ( ( rule__ActiveFilter__ActiveAssignment_2 ) ) )
            // InternalEtlParser.g:14565:1: ( ( rule__ActiveFilter__ActiveAssignment_2 ) )
            {
            // InternalEtlParser.g:14565:1: ( ( rule__ActiveFilter__ActiveAssignment_2 ) )
            // InternalEtlParser.g:14566:2: ( rule__ActiveFilter__ActiveAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_2()); 
            }
            // InternalEtlParser.g:14567:2: ( rule__ActiveFilter__ActiveAssignment_2 )
            // InternalEtlParser.g:14567:3: rule__ActiveFilter__ActiveAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEtlParser.g:14576:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14580:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEtlParser.g:14581:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEtlParser.g:14588:1: rule__SemanticTagFilter__Group__0__Impl : ( RULE_SEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14592:1: ( ( RULE_SEMANTIC_TAG_KEYWORD ) )
            // InternalEtlParser.g:14593:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            {
            // InternalEtlParser.g:14593:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            // InternalEtlParser.g:14594:2: RULE_SEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEtlParser.g:14603:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14607:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEtlParser.g:14608:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEtlParser.g:14615:1: rule__SemanticTagFilter__Group__1__Impl : ( ( rule__SemanticTagFilter__OpAssignment_1 ) ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14619:1: ( ( ( rule__SemanticTagFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:14620:1: ( ( rule__SemanticTagFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:14620:1: ( ( rule__SemanticTagFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:14621:2: ( rule__SemanticTagFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:14622:2: ( rule__SemanticTagFilter__OpAssignment_1 )
            // InternalEtlParser.g:14622:3: rule__SemanticTagFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEtlParser.g:14630:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14634:1: ( rule__SemanticTagFilter__Group__2__Impl )
            // InternalEtlParser.g:14635:2: rule__SemanticTagFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEtlParser.g:14641:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14645:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) ) )
            // InternalEtlParser.g:14646:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) )
            {
            // InternalEtlParser.g:14646:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) )
            // InternalEtlParser.g:14647:2: ( rule__SemanticTagFilter__SemanticTagAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_2()); 
            }
            // InternalEtlParser.g:14648:2: ( rule__SemanticTagFilter__SemanticTagAssignment_2 )
            // InternalEtlParser.g:14648:3: rule__SemanticTagFilter__SemanticTagAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEtlParser.g:14657:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14661:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEtlParser.g:14662:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEtlParser.g:14669:1: rule__PreferredInFilter__Group__0__Impl : ( RULE_PREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14673:1: ( ( RULE_PREFERRED_IN_KEYWORD ) )
            // InternalEtlParser.g:14674:1: ( RULE_PREFERRED_IN_KEYWORD )
            {
            // InternalEtlParser.g:14674:1: ( RULE_PREFERRED_IN_KEYWORD )
            // InternalEtlParser.g:14675:2: RULE_PREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEtlParser.g:14684:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14688:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEtlParser.g:14689:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEtlParser.g:14696:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14700:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:14701:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:14701:1: ( RULE_EQUAL )
            // InternalEtlParser.g:14702:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEtlParser.g:14711:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14715:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEtlParser.g:14716:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEtlParser.g:14722:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14726:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:14727:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14727:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:14728:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:14729:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:14729:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEtlParser.g:14738:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14742:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEtlParser.g:14743:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEtlParser.g:14750:1: rule__AcceptableInFilter__Group__0__Impl : ( RULE_ACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14754:1: ( ( RULE_ACCEPTABLE_IN_KEYWORD ) )
            // InternalEtlParser.g:14755:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            {
            // InternalEtlParser.g:14755:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            // InternalEtlParser.g:14756:2: RULE_ACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEtlParser.g:14765:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14769:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEtlParser.g:14770:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEtlParser.g:14777:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14781:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:14782:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:14782:1: ( RULE_EQUAL )
            // InternalEtlParser.g:14783:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEtlParser.g:14792:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14796:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEtlParser.g:14797:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEtlParser.g:14803:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14807:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:14808:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14808:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:14809:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:14810:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:14810:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEtlParser.g:14819:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14823:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEtlParser.g:14824:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEtlParser.g:14831:1: rule__LanguageRefSetFilter__Group__0__Impl : ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14835:1: ( ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEtlParser.g:14836:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEtlParser.g:14836:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            // InternalEtlParser.g:14837:2: RULE_LANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEtlParser.g:14846:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14850:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEtlParser.g:14851:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEtlParser.g:14858:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14862:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:14863:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:14863:1: ( RULE_EQUAL )
            // InternalEtlParser.g:14864:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEtlParser.g:14873:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14877:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEtlParser.g:14878:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEtlParser.g:14884:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14888:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:14889:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14889:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:14890:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:14891:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:14891:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEtlParser.g:14900:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14904:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEtlParser.g:14905:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEtlParser.g:14912:1: rule__CaseSignificanceFilter__Group__0__Impl : ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14916:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEtlParser.g:14917:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEtlParser.g:14917:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEtlParser.g:14918:2: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEtlParser.g:14927:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14931:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEtlParser.g:14932:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEtlParser.g:14939:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14943:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:14944:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:14944:1: ( RULE_EQUAL )
            // InternalEtlParser.g:14945:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEtlParser.g:14954:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14958:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEtlParser.g:14959:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEtlParser.g:14965:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14969:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEtlParser.g:14970:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14970:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEtlParser.g:14971:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEtlParser.g:14972:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEtlParser.g:14972:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__0"
    // InternalEtlParser.g:14981:1: rule__HistorySupplement__Group__0 : rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1 ;
    public final void rule__HistorySupplement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14985:1: ( rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1 )
            // InternalEtlParser.g:14986:2: rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__HistorySupplement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__0"


    // $ANTLR start "rule__HistorySupplement__Group__0__Impl"
    // InternalEtlParser.g:14993:1: rule__HistorySupplement__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__HistorySupplement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14997:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEtlParser.g:14998:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEtlParser.g:14998:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEtlParser.g:14999:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__0__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__1"
    // InternalEtlParser.g:15008:1: rule__HistorySupplement__Group__1 : rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2 ;
    public final void rule__HistorySupplement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15012:1: ( rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2 )
            // InternalEtlParser.g:15013:2: rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__HistorySupplement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__1"


    // $ANTLR start "rule__HistorySupplement__Group__1__Impl"
    // InternalEtlParser.g:15020:1: rule__HistorySupplement__Group__1__Impl : ( RULE_PLUS ) ;
    public final void rule__HistorySupplement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15024:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:15025:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:15025:1: ( RULE_PLUS )
            // InternalEtlParser.g:15026:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getPLUSTerminalRuleCall_1()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getPLUSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__1__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__2"
    // InternalEtlParser.g:15035:1: rule__HistorySupplement__Group__2 : rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3 ;
    public final void rule__HistorySupplement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15039:1: ( rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3 )
            // InternalEtlParser.g:15040:2: rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__HistorySupplement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__2"


    // $ANTLR start "rule__HistorySupplement__Group__2__Impl"
    // InternalEtlParser.g:15047:1: rule__HistorySupplement__Group__2__Impl : ( RULE_HISTORY_KEYWORD ) ;
    public final void rule__HistorySupplement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15051:1: ( ( RULE_HISTORY_KEYWORD ) )
            // InternalEtlParser.g:15052:1: ( RULE_HISTORY_KEYWORD )
            {
            // InternalEtlParser.g:15052:1: ( RULE_HISTORY_KEYWORD )
            // InternalEtlParser.g:15053:2: RULE_HISTORY_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHISTORY_KEYWORDTerminalRuleCall_2()); 
            }
            match(input,RULE_HISTORY_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHISTORY_KEYWORDTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__2__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__3"
    // InternalEtlParser.g:15062:1: rule__HistorySupplement__Group__3 : rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4 ;
    public final void rule__HistorySupplement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15066:1: ( rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4 )
            // InternalEtlParser.g:15067:2: rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__HistorySupplement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__3"


    // $ANTLR start "rule__HistorySupplement__Group__3__Impl"
    // InternalEtlParser.g:15074:1: rule__HistorySupplement__Group__3__Impl : ( () ) ;
    public final void rule__HistorySupplement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15078:1: ( ( () ) )
            // InternalEtlParser.g:15079:1: ( () )
            {
            // InternalEtlParser.g:15079:1: ( () )
            // InternalEtlParser.g:15080:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistorySupplementAction_3()); 
            }
            // InternalEtlParser.g:15081:2: ()
            // InternalEtlParser.g:15081:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistorySupplementAction_3()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__3__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__4"
    // InternalEtlParser.g:15089:1: rule__HistorySupplement__Group__4 : rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5 ;
    public final void rule__HistorySupplement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15093:1: ( rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5 )
            // InternalEtlParser.g:15094:2: rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__HistorySupplement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__4"


    // $ANTLR start "rule__HistorySupplement__Group__4__Impl"
    // InternalEtlParser.g:15101:1: rule__HistorySupplement__Group__4__Impl : ( ( rule__HistorySupplement__HistoryAssignment_4 )? ) ;
    public final void rule__HistorySupplement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15105:1: ( ( ( rule__HistorySupplement__HistoryAssignment_4 )? ) )
            // InternalEtlParser.g:15106:1: ( ( rule__HistorySupplement__HistoryAssignment_4 )? )
            {
            // InternalEtlParser.g:15106:1: ( ( rule__HistorySupplement__HistoryAssignment_4 )? )
            // InternalEtlParser.g:15107:2: ( rule__HistorySupplement__HistoryAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistoryAssignment_4()); 
            }
            // InternalEtlParser.g:15108:2: ( rule__HistorySupplement__HistoryAssignment_4 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==RULE_ROUND_OPEN||(LA126_0>=RULE_DASH && LA126_0<=RULE_UNDERSCORE)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalEtlParser.g:15108:3: rule__HistorySupplement__HistoryAssignment_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__HistorySupplement__HistoryAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistoryAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__4__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__5"
    // InternalEtlParser.g:15116:1: rule__HistorySupplement__Group__5 : rule__HistorySupplement__Group__5__Impl ;
    public final void rule__HistorySupplement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15120:1: ( rule__HistorySupplement__Group__5__Impl )
            // InternalEtlParser.g:15121:2: rule__HistorySupplement__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__5"


    // $ANTLR start "rule__HistorySupplement__Group__5__Impl"
    // InternalEtlParser.g:15127:1: rule__HistorySupplement__Group__5__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__HistorySupplement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15131:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEtlParser.g:15132:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:15132:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEtlParser.g:15133:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_5()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__5__Impl"


    // $ANTLR start "rule__HistoryProfile__Group__0"
    // InternalEtlParser.g:15143:1: rule__HistoryProfile__Group__0 : rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1 ;
    public final void rule__HistoryProfile__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15147:1: ( rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1 )
            // InternalEtlParser.g:15148:2: rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__HistoryProfile__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__0"


    // $ANTLR start "rule__HistoryProfile__Group__0__Impl"
    // InternalEtlParser.g:15155:1: rule__HistoryProfile__Group__0__Impl : ( ( rule__HistoryProfile__Alternatives_0 ) ) ;
    public final void rule__HistoryProfile__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15159:1: ( ( ( rule__HistoryProfile__Alternatives_0 ) ) )
            // InternalEtlParser.g:15160:1: ( ( rule__HistoryProfile__Alternatives_0 ) )
            {
            // InternalEtlParser.g:15160:1: ( ( rule__HistoryProfile__Alternatives_0 ) )
            // InternalEtlParser.g:15161:2: ( rule__HistoryProfile__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:15162:2: ( rule__HistoryProfile__Alternatives_0 )
            // InternalEtlParser.g:15162:3: rule__HistoryProfile__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__0__Impl"


    // $ANTLR start "rule__HistoryProfile__Group__1"
    // InternalEtlParser.g:15170:1: rule__HistoryProfile__Group__1 : rule__HistoryProfile__Group__1__Impl ;
    public final void rule__HistoryProfile__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15174:1: ( rule__HistoryProfile__Group__1__Impl )
            // InternalEtlParser.g:15175:2: rule__HistoryProfile__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__1"


    // $ANTLR start "rule__HistoryProfile__Group__1__Impl"
    // InternalEtlParser.g:15181:1: rule__HistoryProfile__Group__1__Impl : ( ( rule__HistoryProfile__ProfileAssignment_1 ) ) ;
    public final void rule__HistoryProfile__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15185:1: ( ( ( rule__HistoryProfile__ProfileAssignment_1 ) ) )
            // InternalEtlParser.g:15186:1: ( ( rule__HistoryProfile__ProfileAssignment_1 ) )
            {
            // InternalEtlParser.g:15186:1: ( ( rule__HistoryProfile__ProfileAssignment_1 ) )
            // InternalEtlParser.g:15187:2: ( rule__HistoryProfile__ProfileAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getProfileAssignment_1()); 
            }
            // InternalEtlParser.g:15188:2: ( rule__HistoryProfile__ProfileAssignment_1 )
            // InternalEtlParser.g:15188:3: rule__HistoryProfile__ProfileAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__ProfileAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getProfileAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__1__Impl"


    // $ANTLR start "rule__Identifier__Group__0"
    // InternalEtlParser.g:15197:1: rule__Identifier__Group__0 : rule__Identifier__Group__0__Impl rule__Identifier__Group__1 ;
    public final void rule__Identifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15201:1: ( rule__Identifier__Group__0__Impl rule__Identifier__Group__1 )
            // InternalEtlParser.g:15202:2: rule__Identifier__Group__0__Impl rule__Identifier__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__Identifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__0"


    // $ANTLR start "rule__Identifier__Group__0__Impl"
    // InternalEtlParser.g:15209:1: rule__Identifier__Group__0__Impl : ( ( rule__Identifier__Alternatives_0 ) ) ;
    public final void rule__Identifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15213:1: ( ( ( rule__Identifier__Alternatives_0 ) ) )
            // InternalEtlParser.g:15214:1: ( ( rule__Identifier__Alternatives_0 ) )
            {
            // InternalEtlParser.g:15214:1: ( ( rule__Identifier__Alternatives_0 ) )
            // InternalEtlParser.g:15215:2: ( rule__Identifier__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:15216:2: ( rule__Identifier__Alternatives_0 )
            // InternalEtlParser.g:15216:3: rule__Identifier__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__0__Impl"


    // $ANTLR start "rule__Identifier__Group__1"
    // InternalEtlParser.g:15224:1: rule__Identifier__Group__1 : rule__Identifier__Group__1__Impl ;
    public final void rule__Identifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15228:1: ( rule__Identifier__Group__1__Impl )
            // InternalEtlParser.g:15229:2: rule__Identifier__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__1"


    // $ANTLR start "rule__Identifier__Group__1__Impl"
    // InternalEtlParser.g:15235:1: rule__Identifier__Group__1__Impl : ( ( rule__Identifier__Alternatives_1 )* ) ;
    public final void rule__Identifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15239:1: ( ( ( rule__Identifier__Alternatives_1 )* ) )
            // InternalEtlParser.g:15240:1: ( ( rule__Identifier__Alternatives_1 )* )
            {
            // InternalEtlParser.g:15240:1: ( ( rule__Identifier__Alternatives_1 )* )
            // InternalEtlParser.g:15241:2: ( rule__Identifier__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_1()); 
            }
            // InternalEtlParser.g:15242:2: ( rule__Identifier__Alternatives_1 )*
            loop127:
            do {
                int alt127=2;
                alt127 = dfa127.predict(input);
                switch (alt127) {
            	case 1 :
            	    // InternalEtlParser.g:15242:3: rule__Identifier__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_84);
            	    rule__Identifier__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEtlParser.g:15251:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15255:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEtlParser.g:15256:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEtlParser.g:15263:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15267:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15268:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15268:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15269:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEtlParser.g:15278:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15282:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEtlParser.g:15283:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEtlParser.g:15290:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15294:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:15295:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:15295:1: ( RULE_DOT )
            // InternalEtlParser.g:15296:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEtlParser.g:15305:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15309:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEtlParser.g:15310:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEtlParser.g:15316:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( RULE_DIGIT )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15320:1: ( ( ( RULE_DIGIT )* ) )
            // InternalEtlParser.g:15321:1: ( ( RULE_DIGIT )* )
            {
            // InternalEtlParser.g:15321:1: ( ( RULE_DIGIT )* )
            // InternalEtlParser.g:15322:2: ( RULE_DIGIT )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDIGITTerminalRuleCall_2()); 
            }
            // InternalEtlParser.g:15323:2: ( RULE_DIGIT )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==RULE_DIGIT) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalEtlParser.g:15323:3: RULE_DIGIT
            	    {
            	    match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDIGITTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEtlParser.g:15332:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15336:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEtlParser.g:15337:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEtlParser.g:15344:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15348:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEtlParser.g:15349:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEtlParser.g:15349:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEtlParser.g:15350:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:15351:2: ( rule__Integer__Alternatives_0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=RULE_PLUS && LA129_0<=RULE_DASH)) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalEtlParser.g:15351:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEtlParser.g:15359:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15363:1: ( rule__Integer__Group__1__Impl )
            // InternalEtlParser.g:15364:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEtlParser.g:15370:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15374:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15375:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15375:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15376:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEtlParser.g:15386:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15390:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEtlParser.g:15391:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEtlParser.g:15398:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15402:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEtlParser.g:15403:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEtlParser.g:15403:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEtlParser.g:15404:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:15405:2: ( rule__Decimal__Alternatives_0 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=RULE_PLUS && LA130_0<=RULE_DASH)) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalEtlParser.g:15405:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEtlParser.g:15413:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15417:1: ( rule__Decimal__Group__1__Impl )
            // InternalEtlParser.g:15418:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEtlParser.g:15424:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15428:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:15429:1: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:15429:1: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:15430:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"
    // InternalEtlParser.g:15440:1: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 : ( RULE_SUBTYPE_OF ) ;
    public final void rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15444:1: ( ( RULE_SUBTYPE_OF ) )
            // InternalEtlParser.g:15445:2: ( RULE_SUBTYPE_OF )
            {
            // InternalEtlParser.g:15445:2: ( RULE_SUBTYPE_OF )
            // InternalEtlParser.g:15446:3: RULE_SUBTYPE_OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }
            match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"


    // $ANTLR start "rule__ExpressionTemplate__SlotAssignment_1_0_1"
    // InternalEtlParser.g:15455:1: rule__ExpressionTemplate__SlotAssignment_1_0_1 : ( ruleTokenReplacementSlot ) ;
    public final void rule__ExpressionTemplate__SlotAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15459:1: ( ( ruleTokenReplacementSlot ) )
            // InternalEtlParser.g:15460:2: ( ruleTokenReplacementSlot )
            {
            // InternalEtlParser.g:15460:2: ( ruleTokenReplacementSlot )
            // InternalEtlParser.g:15461:3: ruleTokenReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__SlotAssignment_1_0_1"


    // $ANTLR start "rule__ExpressionTemplate__ExpressionAssignment_1_1"
    // InternalEtlParser.g:15470:1: rule__ExpressionTemplate__ExpressionAssignment_1_1 : ( ruleSubExpression ) ;
    public final void rule__ExpressionTemplate__ExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15474:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:15475:2: ( ruleSubExpression )
            {
            // InternalEtlParser.g:15475:2: ( ruleSubExpression )
            // InternalEtlParser.g:15476:3: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__ExpressionAssignment_1_1"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_0"
    // InternalEtlParser.g:15485:1: rule__SubExpression__FocusConceptsAssignment_0 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15489:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:15490:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:15490:2: ( ruleFocusConcept )
            // InternalEtlParser.g:15491:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_0"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_1_1"
    // InternalEtlParser.g:15500:1: rule__SubExpression__FocusConceptsAssignment_1_1 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15504:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:15505:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:15505:2: ( ruleFocusConcept )
            // InternalEtlParser.g:15506:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_1_1"


    // $ANTLR start "rule__SubExpression__RefinementAssignment_2_1"
    // InternalEtlParser.g:15515:1: rule__SubExpression__RefinementAssignment_2_1 : ( ruleRefinement ) ;
    public final void rule__SubExpression__RefinementAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15519:1: ( ( ruleRefinement ) )
            // InternalEtlParser.g:15520:2: ( ruleRefinement )
            {
            // InternalEtlParser.g:15520:2: ( ruleRefinement )
            // InternalEtlParser.g:15521:3: ruleRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__RefinementAssignment_2_1"


    // $ANTLR start "rule__FocusConcept__SlotAssignment_0"
    // InternalEtlParser.g:15530:1: rule__FocusConcept__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__FocusConcept__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15534:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:15535:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:15535:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:15536:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__SlotAssignment_0"


    // $ANTLR start "rule__FocusConcept__ConceptAssignment_1"
    // InternalEtlParser.g:15545:1: rule__FocusConcept__ConceptAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__FocusConcept__ConceptAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15549:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:15550:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:15550:2: ( ruleConceptReference )
            // InternalEtlParser.g:15551:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__ConceptAssignment_1"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_0"
    // InternalEtlParser.g:15560:1: rule__Refinement__AttributesAssignment_0_0_0 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15564:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:15565:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:15565:2: ( ruleAttribute )
            // InternalEtlParser.g:15566:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_0"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_1_1"
    // InternalEtlParser.g:15575:1: rule__Refinement__AttributesAssignment_0_0_1_1 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15579:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:15580:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:15580:2: ( ruleAttribute )
            // InternalEtlParser.g:15581:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_1_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_0_1"
    // InternalEtlParser.g:15590:1: rule__Refinement__GroupsAssignment_0_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15594:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:15595:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:15595:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:15596:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_0_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_1_1"
    // InternalEtlParser.g:15605:1: rule__Refinement__GroupsAssignment_1_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15609:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:15610:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:15610:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:15611:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_1_1"


    // $ANTLR start "rule__AttributeGroup__SlotAssignment_0"
    // InternalEtlParser.g:15620:1: rule__AttributeGroup__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__AttributeGroup__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15624:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:15625:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:15625:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:15626:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__SlotAssignment_0"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_2"
    // InternalEtlParser.g:15635:1: rule__AttributeGroup__AttributesAssignment_2 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15639:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:15640:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:15640:2: ( ruleAttribute )
            // InternalEtlParser.g:15641:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_2"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_3_1"
    // InternalEtlParser.g:15650:1: rule__AttributeGroup__AttributesAssignment_3_1 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15654:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:15655:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:15655:2: ( ruleAttribute )
            // InternalEtlParser.g:15656:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_3_1"


    // $ANTLR start "rule__Attribute__SlotAssignment_0"
    // InternalEtlParser.g:15665:1: rule__Attribute__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__Attribute__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15669:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:15670:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:15670:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:15671:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__SlotAssignment_0"


    // $ANTLR start "rule__Attribute__NameAssignment_1"
    // InternalEtlParser.g:15680:1: rule__Attribute__NameAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__Attribute__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15684:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:15685:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:15685:2: ( ruleConceptReference )
            // InternalEtlParser.g:15686:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__NameAssignment_1"


    // $ANTLR start "rule__Attribute__ValueAssignment_3"
    // InternalEtlParser.g:15695:1: rule__Attribute__ValueAssignment_3 : ( ruleAttributeValue ) ;
    public final void rule__Attribute__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15699:1: ( ( ruleAttributeValue ) )
            // InternalEtlParser.g:15700:2: ( ruleAttributeValue )
            {
            // InternalEtlParser.g:15700:2: ( ruleAttributeValue )
            // InternalEtlParser.g:15701:3: ruleAttributeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__ValueAssignment_3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:15710:1: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15714:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:15715:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:15715:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:15716:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15725:1: rule__ConceptIdReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ConceptIdReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15729:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15730:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15730:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15731:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:15740:1: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ExpressionReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15744:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:15745:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:15745:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:15746:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ExpressionReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15755:1: rule__ExpressionReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ExpressionReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15759:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15760:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15760:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15761:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_1"
    // InternalEtlParser.g:15770:1: rule__TokenReplacementSlot__TokensAssignment_4_1 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15774:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:15775:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:15775:2: ( ruleSlotToken )
            // InternalEtlParser.g:15776:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_1"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_2"
    // InternalEtlParser.g:15785:1: rule__TokenReplacementSlot__TokensAssignment_4_2 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15789:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:15790:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:15790:2: ( ruleSlotToken )
            // InternalEtlParser.g:15791:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_2"


    // $ANTLR start "rule__TokenReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15800:1: rule__TokenReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TokenReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15804:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15805:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15805:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15806:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TemplateInformationSlot__CardinalityAssignment_2"
    // InternalEtlParser.g:15815:1: rule__TemplateInformationSlot__CardinalityAssignment_2 : ( ruleEtlCardinality ) ;
    public final void rule__TemplateInformationSlot__CardinalityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15819:1: ( ( ruleEtlCardinality ) )
            // InternalEtlParser.g:15820:2: ( ruleEtlCardinality )
            {
            // InternalEtlParser.g:15820:2: ( ruleEtlCardinality )
            // InternalEtlParser.g:15821:3: ruleEtlCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__CardinalityAssignment_2"


    // $ANTLR start "rule__TemplateInformationSlot__NameAssignment_3"
    // InternalEtlParser.g:15830:1: rule__TemplateInformationSlot__NameAssignment_3 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TemplateInformationSlot__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15834:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15835:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15835:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15836:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__NameAssignment_3"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:15845:1: rule__StringReplacementSlot__ValuesAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15849:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15850:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15850:2: ( RULE_STRING )
            // InternalEtlParser.g:15851:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:15860:1: rule__StringReplacementSlot__ValuesAssignment_4_2 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15864:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15865:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15865:2: ( RULE_STRING )
            // InternalEtlParser.g:15866:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__StringReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15875:1: rule__StringReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__StringReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15879:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15880:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15880:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15881:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:15890:1: rule__IntegerReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15894:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:15895:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:15895:2: ( ruleSlotInteger )
            // InternalEtlParser.g:15896:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:15905:1: rule__IntegerReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15909:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:15910:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:15910:2: ( ruleSlotInteger )
            // InternalEtlParser.g:15911:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__IntegerReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15920:1: rule__IntegerReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__IntegerReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15924:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15925:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15925:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15926:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:15935:1: rule__DecimalReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15939:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:15940:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:15940:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:15941:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:15950:1: rule__DecimalReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15954:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:15955:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:15955:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:15956:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__DecimalReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:15965:1: rule__DecimalReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__DecimalReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15969:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:15970:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:15970:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:15971:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__EtlCardinality__MinAssignment_1"
    // InternalEtlParser.g:15980:1: rule__EtlCardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__EtlCardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15984:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15985:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15985:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15986:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MinAssignment_1"


    // $ANTLR start "rule__EtlCardinality__MaxAssignment_3"
    // InternalEtlParser.g:15995:1: rule__EtlCardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__EtlCardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15999:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:16000:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:16000:2: ( ruleMaxValue )
            // InternalEtlParser.g:16001:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MaxAssignment_3"


    // $ANTLR start "rule__ConceptReference__SlotAssignment_0"
    // InternalEtlParser.g:16010:1: rule__ConceptReference__SlotAssignment_0 : ( ruleConceptReplacementSlot ) ;
    public final void rule__ConceptReference__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16014:1: ( ( ruleConceptReplacementSlot ) )
            // InternalEtlParser.g:16015:2: ( ruleConceptReplacementSlot )
            {
            // InternalEtlParser.g:16015:2: ( ruleConceptReplacementSlot )
            // InternalEtlParser.g:16016:3: ruleConceptReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__SlotAssignment_0"


    // $ANTLR start "rule__ConceptReference__IdAssignment_1_0"
    // InternalEtlParser.g:16025:1: rule__ConceptReference__IdAssignment_1_0 : ( ruleIdentifier ) ;
    public final void rule__ConceptReference__IdAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16029:1: ( ( ruleIdentifier ) )
            // InternalEtlParser.g:16030:2: ( ruleIdentifier )
            {
            // InternalEtlParser.g:16030:2: ( ruleIdentifier )
            // InternalEtlParser.g:16031:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdIdentifierParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdIdentifierParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__IdAssignment_1_0"


    // $ANTLR start "rule__ConceptReference__TermAssignment_1_1"
    // InternalEtlParser.g:16040:1: rule__ConceptReference__TermAssignment_1_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__ConceptReference__TermAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16044:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:16045:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:16045:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:16046:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__TermAssignment_1_1"


    // $ANTLR start "rule__StringValue__ValueAssignment"
    // InternalEtlParser.g:16055:1: rule__StringValue__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16059:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:16060:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:16060:2: ( RULE_STRING )
            // InternalEtlParser.g:16061:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValueAssignment"


    // $ANTLR start "rule__IntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:16070:1: rule__IntegerValue__ValueAssignment_1 : ( ruleInteger ) ;
    public final void rule__IntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16074:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:16075:2: ( ruleInteger )
            {
            // InternalEtlParser.g:16075:2: ( ruleInteger )
            // InternalEtlParser.g:16076:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__DecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:16085:1: rule__DecimalValue__ValueAssignment_1 : ( ruleDecimal ) ;
    public final void rule__DecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16089:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:16090:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:16090:2: ( ruleDecimal )
            // InternalEtlParser.g:16091:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:16100:1: rule__SlotIntegerValue__ValueAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16104:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:16105:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:16105:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:16106:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:16115:1: rule__SlotIntegerRange__MinimumAssignment_0_0 : ( ruleSlotIntegerMinimumValue ) ;
    public final void rule__SlotIntegerRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16119:1: ( ( ruleSlotIntegerMinimumValue ) )
            // InternalEtlParser.g:16120:2: ( ruleSlotIntegerMinimumValue )
            {
            // InternalEtlParser.g:16120:2: ( ruleSlotIntegerMinimumValue )
            // InternalEtlParser.g:16121:3: ruleSlotIntegerMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:16130:1: rule__SlotIntegerRange__MaximumAssignment_0_2 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16134:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:16135:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:16135:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:16136:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:16145:1: rule__SlotIntegerRange__MaximumAssignment_1_1 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16149:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:16150:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:16150:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:16151:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:16160:1: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotIntegerMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16164:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:16165:2: ( RULE_GT )
            {
            // InternalEtlParser.g:16165:2: ( RULE_GT )
            // InternalEtlParser.g:16166:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:16175:1: rule__SlotIntegerMinimumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16179:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:16180:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:16180:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:16181:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:16190:1: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotIntegerMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16194:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:16195:2: ( RULE_LT )
            {
            // InternalEtlParser.g:16195:2: ( RULE_LT )
            // InternalEtlParser.g:16196:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:16205:1: rule__SlotIntegerMaximumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16209:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:16210:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:16210:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:16211:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:16220:1: rule__SlotDecimalValue__ValueAssignment_1 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16224:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:16225:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:16225:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:16226:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotDecimalRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:16235:1: rule__SlotDecimalRange__MinimumAssignment_0_0 : ( ruleSlotDecimalMinimumValue ) ;
    public final void rule__SlotDecimalRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16239:1: ( ( ruleSlotDecimalMinimumValue ) )
            // InternalEtlParser.g:16240:2: ( ruleSlotDecimalMinimumValue )
            {
            // InternalEtlParser.g:16240:2: ( ruleSlotDecimalMinimumValue )
            // InternalEtlParser.g:16241:3: ruleSlotDecimalMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:16250:1: rule__SlotDecimalRange__MaximumAssignment_0_2 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16254:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:16255:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:16255:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:16256:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:16265:1: rule__SlotDecimalRange__MaximumAssignment_1_1 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16269:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:16270:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:16270:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:16271:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:16280:1: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotDecimalMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16284:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:16285:2: ( RULE_GT )
            {
            // InternalEtlParser.g:16285:2: ( RULE_GT )
            // InternalEtlParser.g:16286:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:16295:1: rule__SlotDecimalMinimumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16299:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:16300:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:16300:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:16301:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:16310:1: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotDecimalMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16314:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:16315:2: ( RULE_LT )
            {
            // InternalEtlParser.g:16315:2: ( RULE_LT )
            // InternalEtlParser.g:16316:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:16325:1: rule__SlotDecimalMaximumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16329:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:16330:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:16330:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:16331:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:16340:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16344:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:16345:2: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:16345:2: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:16346:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:16355:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16359:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:16360:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:16360:2: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:16361:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:16370:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16374:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:16375:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:16375:2: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:16376:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEtlParser.g:16385:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16389:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:16390:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:16390:2: ( ruleEclRefinement )
            // InternalEtlParser.g:16391:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEtlParser.g:16400:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleSupplementExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16404:1: ( ( ruleSupplementExpressionConstraint ) )
            // InternalEtlParser.g:16405:2: ( ruleSupplementExpressionConstraint )
            {
            // InternalEtlParser.g:16405:2: ( ruleSupplementExpressionConstraint )
            // InternalEtlParser.g:16406:3: ruleSupplementExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSupplementExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSupplementExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__SupplementExpressionConstraint__SupplementAssignment_1_1"
    // InternalEtlParser.g:16415:1: rule__SupplementExpressionConstraint__SupplementAssignment_1_1 : ( ruleSupplement ) ;
    public final void rule__SupplementExpressionConstraint__SupplementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16419:1: ( ( ruleSupplement ) )
            // InternalEtlParser.g:16420:2: ( ruleSupplement )
            {
            // InternalEtlParser.g:16420:2: ( ruleSupplement )
            // InternalEtlParser.g:16421:3: ruleSupplement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementSupplementParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementSupplementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__SupplementAssignment_1_1"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEtlParser.g:16430:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16434:1: ( ( ruleFilterConstraint ) )
            // InternalEtlParser.g:16435:2: ( ruleFilterConstraint )
            {
            // InternalEtlParser.g:16435:2: ( ruleFilterConstraint )
            // InternalEtlParser.g:16436:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16445:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16449:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16450:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16450:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16451:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16460:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16464:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16465:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16465:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16466:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16475:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16479:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16480:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16480:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16481:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16490:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16494:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16495:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16495:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16496:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16505:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16509:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16510:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16510:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16511:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16520:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16524:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16525:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16525:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16526:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16535:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16539:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16540:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16540:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16541:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:16550:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16554:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:16555:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:16555:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:16556:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__RefsetFieldsAssignment_1_1_0"
    // InternalEtlParser.g:16565:1: rule__MemberOf__RefsetFieldsAssignment_1_1_0 : ( ruleUnquotedString ) ;
    public final void rule__MemberOf__RefsetFieldsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16569:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16570:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16570:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16571:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__RefsetFieldsAssignment_1_1_0"


    // $ANTLR start "rule__MemberOf__RefsetFieldsAssignment_1_1_1_1"
    // InternalEtlParser.g:16580:1: rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 : ( ruleUnquotedString ) ;
    public final void rule__MemberOf__RefsetFieldsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16584:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16585:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16585:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16586:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__RefsetFieldsAssignment_1_1_1_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_2"
    // InternalEtlParser.g:16595:1: rule__MemberOf__ConstraintAssignment_2 : ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16599:1: ( ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) ) )
            // InternalEtlParser.g:16600:2: ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) )
            {
            // InternalEtlParser.g:16600:2: ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) )
            // InternalEtlParser.g:16601:3: ( rule__MemberOf__ConstraintAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_2_0()); 
            }
            // InternalEtlParser.g:16602:3: ( rule__MemberOf__ConstraintAlternatives_2_0 )
            // InternalEtlParser.g:16602:4: rule__MemberOf__ConstraintAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_2"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEtlParser.g:16610:1: rule__EclConceptReference__IdAssignment_0 : ( ruleIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16614:1: ( ( ruleIdentifier ) )
            // InternalEtlParser.g:16615:2: ( ruleIdentifier )
            {
            // InternalEtlParser.g:16615:2: ( ruleIdentifier )
            // InternalEtlParser.g:16616:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_2"
    // InternalEtlParser.g:16625:1: rule__EclConceptReference__TermAssignment_2 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16629:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:16630:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:16630:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:16631:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_2"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEtlParser.g:16640:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16644:1: ( ( ruleEclConceptReference ) )
            // InternalEtlParser.g:16645:2: ( ruleEclConceptReference )
            {
            // InternalEtlParser.g:16645:2: ( ruleEclConceptReference )
            // InternalEtlParser.g:16646:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:16655:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16659:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:16660:2: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:16660:2: ( ruleAndRefinement )
            // InternalEtlParser.g:16661:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:16670:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16674:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:16675:2: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:16675:2: ( ruleSubRefinement )
            // InternalEtlParser.g:16676:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEtlParser.g:16685:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16689:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:16690:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:16690:2: ( ruleEclRefinement )
            // InternalEtlParser.g:16691:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEtlParser.g:16700:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16704:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:16705:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:16705:2: ( ruleCardinality )
            // InternalEtlParser.g:16706:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEtlParser.g:16715:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16719:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:16720:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:16720:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:16721:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:16730:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16734:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:16735:2: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:16735:2: ( ruleAndAttributeSet )
            // InternalEtlParser.g:16736:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:16745:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16749:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:16750:2: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:16750:2: ( ruleSubAttributeSet )
            // InternalEtlParser.g:16751:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEtlParser.g:16760:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16764:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:16765:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:16765:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:16766:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEtlParser.g:16775:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16779:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:16780:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:16780:2: ( ruleCardinality )
            // InternalEtlParser.g:16781:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEtlParser.g:16790:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16794:1: ( ( RULE_REVERSED ) )
            // InternalEtlParser.g:16795:2: ( RULE_REVERSED )
            {
            // InternalEtlParser.g:16795:2: ( RULE_REVERSED )
            // InternalEtlParser.g:16796:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEtlParser.g:16805:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16809:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:16810:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:16810:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:16811:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEtlParser.g:16820:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16824:1: ( ( ruleComparison ) )
            // InternalEtlParser.g:16825:2: ( ruleComparison )
            {
            // InternalEtlParser.g:16825:2: ( ruleComparison )
            // InternalEtlParser.g:16826:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEtlParser.g:16835:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16839:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:16840:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:16840:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:16841:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEtlParser.g:16850:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16854:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:16855:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:16855:2: ( ruleMaxValue )
            // InternalEtlParser.g:16856:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEtlParser.g:16865:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16869:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16870:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16870:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16871:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEtlParser.g:16880:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16884:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:16885:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:16885:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:16886:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEtlParser.g:16895:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16899:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16900:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16900:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16901:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:16910:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16914:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:16915:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:16915:2: ( ruleBoolean )
            // InternalEtlParser.g:16916:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEtlParser.g:16925:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16929:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16930:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16930:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16931:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:16940:1: rule__StringValueComparison__ValueAssignment_1 : ( ruleSearchTerm ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16944:1: ( ( ruleSearchTerm ) )
            // InternalEtlParser.g:16945:2: ( ruleSearchTerm )
            {
            // InternalEtlParser.g:16945:2: ( ruleSearchTerm )
            // InternalEtlParser.g:16946:3: ruleSearchTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSearchTermParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSearchTermParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEtlParser.g:16955:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16959:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16960:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16960:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:16961:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:16970:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16974:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:16975:2: ( ruleInteger )
            {
            // InternalEtlParser.g:16975:2: ( ruleInteger )
            // InternalEtlParser.g:16976:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEtlParser.g:16985:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16989:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16990:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16990:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:16991:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:17000:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17004:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:17005:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:17005:2: ( ruleDecimal )
            // InternalEtlParser.g:17006:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEtlParser.g:17015:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17019:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:17020:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:17020:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:17021:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__FilterConstraint__DomainAssignment_1"
    // InternalEtlParser.g:17030:1: rule__FilterConstraint__DomainAssignment_1 : ( ruleSHORT_DOMAIN ) ;
    public final void rule__FilterConstraint__DomainAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17034:1: ( ( ruleSHORT_DOMAIN ) )
            // InternalEtlParser.g:17035:2: ( ruleSHORT_DOMAIN )
            {
            // InternalEtlParser.g:17035:2: ( ruleSHORT_DOMAIN )
            // InternalEtlParser.g:17036:3: ruleSHORT_DOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDomainSHORT_DOMAINParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSHORT_DOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDomainSHORT_DOMAINParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__DomainAssignment_1"


    // $ANTLR start "rule__FilterConstraint__FilterAssignment_2"
    // InternalEtlParser.g:17045:1: rule__FilterConstraint__FilterAssignment_2 : ( ruleFilter ) ;
    public final void rule__FilterConstraint__FilterAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17049:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:17050:2: ( ruleFilter )
            {
            // InternalEtlParser.g:17050:2: ( ruleFilter )
            // InternalEtlParser.g:17051:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__FilterAssignment_2"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:17060:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17064:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:17065:2: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:17065:2: ( ruleConjunctionFilter )
            // InternalEtlParser.g:17066:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:17075:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17079:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:17080:2: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:17080:2: ( rulePropertyFilter )
            // InternalEtlParser.g:17081:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEtlParser.g:17090:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17094:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:17095:2: ( ruleFilter )
            {
            // InternalEtlParser.g:17095:2: ( ruleFilter )
            // InternalEtlParser.g:17096:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__MemberFieldFilter__RefsetFieldNameAssignment_0"
    // InternalEtlParser.g:17105:1: rule__MemberFieldFilter__RefsetFieldNameAssignment_0 : ( ruleUnquotedString ) ;
    public final void rule__MemberFieldFilter__RefsetFieldNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17109:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17110:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17110:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17111:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameUnquotedStringParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameUnquotedStringParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__RefsetFieldNameAssignment_0"


    // $ANTLR start "rule__MemberFieldFilter__ComparisonAssignment_1"
    // InternalEtlParser.g:17120:1: rule__MemberFieldFilter__ComparisonAssignment_1 : ( ruleComparison ) ;
    public final void rule__MemberFieldFilter__ComparisonAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17124:1: ( ( ruleComparison ) )
            // InternalEtlParser.g:17125:2: ( ruleComparison )
            {
            // InternalEtlParser.g:17125:2: ( ruleComparison )
            // InternalEtlParser.g:17126:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getComparisonComparisonParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getComparisonComparisonParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__ComparisonAssignment_1"


    // $ANTLR start "rule__IdFilter__OpAssignment_1"
    // InternalEtlParser.g:17135:1: rule__IdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__IdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17139:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17140:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17140:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17141:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__OpAssignment_1"


    // $ANTLR start "rule__IdFilter__IdsAssignment_2_0"
    // InternalEtlParser.g:17150:1: rule__IdFilter__IdsAssignment_2_0 : ( ruleIdentifier ) ;
    public final void rule__IdFilter__IdsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17154:1: ( ( ruleIdentifier ) )
            // InternalEtlParser.g:17155:2: ( ruleIdentifier )
            {
            // InternalEtlParser.g:17155:2: ( ruleIdentifier )
            // InternalEtlParser.g:17156:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getIdsIdentifierParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getIdsIdentifierParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__IdsAssignment_2_0"


    // $ANTLR start "rule__IdFilter__IdsAssignment_2_1_1"
    // InternalEtlParser.g:17165:1: rule__IdFilter__IdsAssignment_2_1_1 : ( ruleIdentifier ) ;
    public final void rule__IdFilter__IdsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17169:1: ( ( ruleIdentifier ) )
            // InternalEtlParser.g:17170:2: ( ruleIdentifier )
            {
            // InternalEtlParser.g:17170:2: ( ruleIdentifier )
            // InternalEtlParser.g:17171:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdFilterAccess().getIdsIdentifierParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdFilterAccess().getIdsIdentifierParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdFilter__IdsAssignment_2_1_1"


    // $ANTLR start "rule__TermFilter__OpAssignment_1"
    // InternalEtlParser.g:17180:1: rule__TermFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TermFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17184:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17185:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17185:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17186:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__OpAssignment_1"


    // $ANTLR start "rule__TermFilter__SearchTermAssignment_2"
    // InternalEtlParser.g:17195:1: rule__TermFilter__SearchTermAssignment_2 : ( ruleSearchTerm ) ;
    public final void rule__TermFilter__SearchTermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17199:1: ( ( ruleSearchTerm ) )
            // InternalEtlParser.g:17200:2: ( ruleSearchTerm )
            {
            // InternalEtlParser.g:17200:2: ( ruleSearchTerm )
            // InternalEtlParser.g:17201:3: ruleSearchTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getSearchTermSearchTermParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getSearchTermSearchTermParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__SearchTermAssignment_2"


    // $ANTLR start "rule__TypedSearchTerm__ClauseAssignment"
    // InternalEtlParser.g:17210:1: rule__TypedSearchTerm__ClauseAssignment : ( ruleTypedSearchTermClause ) ;
    public final void rule__TypedSearchTerm__ClauseAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17214:1: ( ( ruleTypedSearchTermClause ) )
            // InternalEtlParser.g:17215:2: ( ruleTypedSearchTermClause )
            {
            // InternalEtlParser.g:17215:2: ( ruleTypedSearchTermClause )
            // InternalEtlParser.g:17216:3: ruleTypedSearchTermClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermAccess().getClauseTypedSearchTermClauseParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermAccess().getClauseTypedSearchTermClauseParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTerm__ClauseAssignment"


    // $ANTLR start "rule__TypedSearchTermSet__ClausesAssignment_1"
    // InternalEtlParser.g:17225:1: rule__TypedSearchTermSet__ClausesAssignment_1 : ( ruleTypedSearchTermClause ) ;
    public final void rule__TypedSearchTermSet__ClausesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17229:1: ( ( ruleTypedSearchTermClause ) )
            // InternalEtlParser.g:17230:2: ( ruleTypedSearchTermClause )
            {
            // InternalEtlParser.g:17230:2: ( ruleTypedSearchTermClause )
            // InternalEtlParser.g:17231:3: ruleTypedSearchTermClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesTypedSearchTermClauseParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesTypedSearchTermClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__ClausesAssignment_1"


    // $ANTLR start "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0"
    // InternalEtlParser.g:17240:1: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17244:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEtlParser.g:17245:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEtlParser.g:17245:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEtlParser.g:17246:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0"


    // $ANTLR start "rule__TypedSearchTermClause__TermAssignment_0_1"
    // InternalEtlParser.g:17255:1: rule__TypedSearchTermClause__TermAssignment_0_1 : ( RULE_STRING ) ;
    public final void rule__TypedSearchTermClause__TermAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17259:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:17260:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:17260:2: ( RULE_STRING )
            // InternalEtlParser.g:17261:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__TermAssignment_0_1"


    // $ANTLR start "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0"
    // InternalEtlParser.g:17270:1: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 : ( RULE_REGEX_KEYWORD ) ;
    public final void rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17274:1: ( ( RULE_REGEX_KEYWORD ) )
            // InternalEtlParser.g:17275:2: ( RULE_REGEX_KEYWORD )
            {
            // InternalEtlParser.g:17275:2: ( RULE_REGEX_KEYWORD )
            // InternalEtlParser.g:17276:3: RULE_REGEX_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedSearchTermClause__TermAssignment_1_2"
    // InternalEtlParser.g:17285:1: rule__TypedSearchTermClause__TermAssignment_1_2 : ( ruleRegularExpression ) ;
    public final void rule__TypedSearchTermClause__TermAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17289:1: ( ( ruleRegularExpression ) )
            // InternalEtlParser.g:17290:2: ( ruleRegularExpression )
            {
            // InternalEtlParser.g:17290:2: ( ruleRegularExpression )
            // InternalEtlParser.g:17291:3: ruleRegularExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__TermAssignment_1_2"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEtlParser.g:17300:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17304:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17305:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17305:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17306:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEtlParser.g:17315:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17319:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17320:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17320:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17321:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEtlParser.g:17330:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17334:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17335:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17335:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17336:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEtlParser.g:17345:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17349:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17350:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17350:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17351:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEtlParser.g:17360:1: rule__TypeIdFilter__TypeAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17364:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17365:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17365:2: ( ruleFilterValue )
            // InternalEtlParser.g:17366:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEtlParser.g:17375:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17379:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17380:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17380:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17381:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEtlParser.g:17390:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17394:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17395:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17395:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17396:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEtlParser.g:17405:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17409:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17410:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17410:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17411:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEtlParser.g:17420:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17424:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17425:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17425:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17426:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:17435:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17439:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:17440:2: ( ruleDialect )
            {
            // InternalEtlParser.g:17440:2: ( ruleDialect )
            // InternalEtlParser.g:17441:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:17450:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17454:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:17455:2: ( ruleDialect )
            {
            // InternalEtlParser.g:17455:2: ( ruleDialect )
            // InternalEtlParser.g:17456:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEtlParser.g:17465:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17469:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17470:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17470:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17471:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:17480:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17484:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:17485:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:17485:2: ( ruleDialectAlias )
            // InternalEtlParser.g:17486:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:17495:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17499:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:17500:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:17500:2: ( ruleDialectAlias )
            // InternalEtlParser.g:17501:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEtlParser.g:17510:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17514:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:17515:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:17515:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:17516:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdFilteredExpressionConstraintParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdFilteredExpressionConstraintParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEtlParser.g:17525:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17529:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:17530:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:17530:2: ( ruleAcceptability )
            // InternalEtlParser.g:17531:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEtlParser.g:17540:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17544:1: ( ( ruleDialectAliasValue ) )
            // InternalEtlParser.g:17545:2: ( ruleDialectAliasValue )
            {
            // InternalEtlParser.g:17545:2: ( ruleDialectAliasValue )
            // InternalEtlParser.g:17546:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_1"
    // InternalEtlParser.g:17555:1: rule__DialectAlias__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17559:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:17560:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:17560:2: ( ruleAcceptability )
            // InternalEtlParser.g:17561:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_1"


    // $ANTLR start "rule__Acceptability__AcceptabilitiesAssignment"
    // InternalEtlParser.g:17570:1: rule__Acceptability__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__Acceptability__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17574:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEtlParser.g:17575:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEtlParser.g:17575:2: ( ruleEclConceptReferenceSet )
            // InternalEtlParser.g:17576:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__AcceptabilitiesAssignment"


    // $ANTLR start "rule__DefinitionStatusIdFilter__OpAssignment_1"
    // InternalEtlParser.g:17585:1: rule__DefinitionStatusIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DefinitionStatusIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17589:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17590:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17590:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17591:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2"
    // InternalEtlParser.g:17600:1: rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17604:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17605:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17605:2: ( ruleFilterValue )
            // InternalEtlParser.g:17606:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__OpAssignment_1"
    // InternalEtlParser.g:17615:1: rule__DefinitionStatusTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DefinitionStatusTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17619:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17620:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17620:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17621:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0"
    // InternalEtlParser.g:17630:1: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17634:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17635:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17635:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17636:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1"
    // InternalEtlParser.g:17645:1: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17649:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:17650:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:17650:2: ( ruleUnquotedString )
            // InternalEtlParser.g:17651:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1"


    // $ANTLR start "rule__ModuleFilter__OpAssignment_1"
    // InternalEtlParser.g:17660:1: rule__ModuleFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__ModuleFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17664:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17665:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17665:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17666:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__OpAssignment_1"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_2"
    // InternalEtlParser.g:17675:1: rule__ModuleFilter__ModuleIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17679:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17680:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17680:2: ( ruleFilterValue )
            // InternalEtlParser.g:17681:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_1"
    // InternalEtlParser.g:17690:1: rule__EffectiveTimeFilter__OpAssignment_1 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17694:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17695:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17695:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:17696:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_1"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_2"
    // InternalEtlParser.g:17705:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17709:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:17710:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:17710:2: ( RULE_STRING )
            // InternalEtlParser.g:17711:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_2"


    // $ANTLR start "rule__ActiveFilter__OpAssignment_1"
    // InternalEtlParser.g:17720:1: rule__ActiveFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__ActiveFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17724:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17725:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17725:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17726:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__OpAssignment_1"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_2"
    // InternalEtlParser.g:17735:1: rule__ActiveFilter__ActiveAssignment_2 : ( ruleActiveBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17739:1: ( ( ruleActiveBoolean ) )
            // InternalEtlParser.g:17740:2: ( ruleActiveBoolean )
            {
            // InternalEtlParser.g:17740:2: ( ruleActiveBoolean )
            // InternalEtlParser.g:17741:3: ruleActiveBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveActiveBooleanParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleActiveBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveActiveBooleanParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_1"
    // InternalEtlParser.g:17750:1: rule__SemanticTagFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17754:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:17755:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:17755:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:17756:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_1"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_2"
    // InternalEtlParser.g:17765:1: rule__SemanticTagFilter__SemanticTagAssignment_2 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17769:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:17770:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:17770:2: ( RULE_STRING )
            // InternalEtlParser.g:17771:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_2"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:17780:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17784:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17785:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17785:2: ( ruleFilterValue )
            // InternalEtlParser.g:17786:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:17795:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17799:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17800:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17800:2: ( ruleFilterValue )
            // InternalEtlParser.g:17801:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:17810:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17814:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17815:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17815:2: ( ruleFilterValue )
            // InternalEtlParser.g:17816:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEtlParser.g:17825:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17829:1: ( ( ruleFilterValue ) )
            // InternalEtlParser.g:17830:2: ( ruleFilterValue )
            {
            // InternalEtlParser.g:17830:2: ( ruleFilterValue )
            // InternalEtlParser.g:17831:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"


    // $ANTLR start "rule__HistorySupplement__HistoryAssignment_4"
    // InternalEtlParser.g:17840:1: rule__HistorySupplement__HistoryAssignment_4 : ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) ) ;
    public final void rule__HistorySupplement__HistoryAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17844:1: ( ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) ) )
            // InternalEtlParser.g:17845:2: ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) )
            {
            // InternalEtlParser.g:17845:2: ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) )
            // InternalEtlParser.g:17846:3: ( rule__HistorySupplement__HistoryAlternatives_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistoryAlternatives_4_0()); 
            }
            // InternalEtlParser.g:17847:3: ( rule__HistorySupplement__HistoryAlternatives_4_0 )
            // InternalEtlParser.g:17847:4: rule__HistorySupplement__HistoryAlternatives_4_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__HistoryAlternatives_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistoryAlternatives_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__HistoryAssignment_4"


    // $ANTLR start "rule__HistoryProfile__ProfileAssignment_1"
    // InternalEtlParser.g:17855:1: rule__HistoryProfile__ProfileAssignment_1 : ( ruleHISTORY_PROFILE_TYPE ) ;
    public final void rule__HistoryProfile__ProfileAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:17859:1: ( ( ruleHISTORY_PROFILE_TYPE ) )
            // InternalEtlParser.g:17860:2: ( ruleHISTORY_PROFILE_TYPE )
            {
            // InternalEtlParser.g:17860:2: ( ruleHISTORY_PROFILE_TYPE )
            // InternalEtlParser.g:17861:3: ruleHISTORY_PROFILE_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getProfileHISTORY_PROFILE_TYPEParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleHISTORY_PROFILE_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getProfileHISTORY_PROFILE_TYPEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__ProfileAssignment_1"

    // $ANTLR start synpred2_InternalEtlParser
    public final void synpred2_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3219:5: ( rule__DialectAliasValue__Alternatives )
        // InternalEtlParser.g:3219:5: rule__DialectAliasValue__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEtlParser

    // $ANTLR start synpred32_InternalEtlParser
    public final void synpred32_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3653:2: ( ( ruleSlotIntegerRange ) )
        // InternalEtlParser.g:3653:2: ( ruleSlotIntegerRange )
        {
        // InternalEtlParser.g:3653:2: ( ruleSlotIntegerRange )
        // InternalEtlParser.g:3654:3: ruleSlotIntegerRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotIntegerRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEtlParser

    // $ANTLR start synpred34_InternalEtlParser
    public final void synpred34_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3695:2: ( ( ruleSlotDecimalRange ) )
        // InternalEtlParser.g:3695:2: ( ruleSlotDecimalRange )
        {
        // InternalEtlParser.g:3695:2: ( ruleSlotDecimalRange )
        // InternalEtlParser.g:3696:3: ruleSlotDecimalRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotDecimalRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalEtlParser

    // $ANTLR start synpred51_InternalEtlParser
    public final void synpred51_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3902:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3902:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3902:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3903:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred51_InternalEtlParser

    // $ANTLR start synpred52_InternalEtlParser
    public final void synpred52_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3908:2: ( ( ruleEclAttributeGroup ) )
        // InternalEtlParser.g:3908:2: ( ruleEclAttributeGroup )
        {
        // InternalEtlParser.g:3908:2: ( ruleEclAttributeGroup )
        // InternalEtlParser.g:3909:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalEtlParser

    // $ANTLR start synpred54_InternalEtlParser
    public final void synpred54_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3950:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3950:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3950:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3951:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_InternalEtlParser

    // $ANTLR start synpred60_InternalEtlParser
    public final void synpred60_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4046:2: ( ( ruleTermFilter ) )
        // InternalEtlParser.g:4046:2: ( ruleTermFilter )
        {
        // InternalEtlParser.g:4046:2: ( ruleTermFilter )
        // InternalEtlParser.g:4047:3: ruleTermFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTermFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred60_InternalEtlParser

    // $ANTLR start synpred61_InternalEtlParser
    public final void synpred61_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4052:2: ( ( ruleLanguageFilter ) )
        // InternalEtlParser.g:4052:2: ( ruleLanguageFilter )
        {
        // InternalEtlParser.g:4052:2: ( ruleLanguageFilter )
        // InternalEtlParser.g:4053:3: ruleLanguageFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLanguageFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalEtlParser

    // $ANTLR start synpred62_InternalEtlParser
    public final void synpred62_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4058:2: ( ( ruleTypeFilter ) )
        // InternalEtlParser.g:4058:2: ( ruleTypeFilter )
        {
        // InternalEtlParser.g:4058:2: ( ruleTypeFilter )
        // InternalEtlParser.g:4059:3: ruleTypeFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTypeFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred62_InternalEtlParser

    // $ANTLR start synpred63_InternalEtlParser
    public final void synpred63_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4064:2: ( ( ruleDialectFilter ) )
        // InternalEtlParser.g:4064:2: ( ruleDialectFilter )
        {
        // InternalEtlParser.g:4064:2: ( ruleDialectFilter )
        // InternalEtlParser.g:4065:3: ruleDialectFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDialectFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred63_InternalEtlParser

    // $ANTLR start synpred64_InternalEtlParser
    public final void synpred64_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4070:2: ( ( ruleIdFilter ) )
        // InternalEtlParser.g:4070:2: ( ruleIdFilter )
        {
        // InternalEtlParser.g:4070:2: ( ruleIdFilter )
        // InternalEtlParser.g:4071:3: ruleIdFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getIdFilterParserRuleCall_4()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleIdFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalEtlParser

    // $ANTLR start synpred65_InternalEtlParser
    public final void synpred65_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4076:2: ( ( ruleDefinitionStatusFilter ) )
        // InternalEtlParser.g:4076:2: ( ruleDefinitionStatusFilter )
        {
        // InternalEtlParser.g:4076:2: ( ruleDefinitionStatusFilter )
        // InternalEtlParser.g:4077:3: ruleDefinitionStatusFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_5()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStatusFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalEtlParser

    // $ANTLR start synpred66_InternalEtlParser
    public final void synpred66_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4082:2: ( ( ruleModuleFilter ) )
        // InternalEtlParser.g:4082:2: ( ruleModuleFilter )
        {
        // InternalEtlParser.g:4082:2: ( ruleModuleFilter )
        // InternalEtlParser.g:4083:3: ruleModuleFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleModuleFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred66_InternalEtlParser

    // $ANTLR start synpred67_InternalEtlParser
    public final void synpred67_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4088:2: ( ( ruleEffectiveTimeFilter ) )
        // InternalEtlParser.g:4088:2: ( ruleEffectiveTimeFilter )
        {
        // InternalEtlParser.g:4088:2: ( ruleEffectiveTimeFilter )
        // InternalEtlParser.g:4089:3: ruleEffectiveTimeFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_7()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEffectiveTimeFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalEtlParser

    // $ANTLR start synpred68_InternalEtlParser
    public final void synpred68_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4094:2: ( ( ruleActiveFilter ) )
        // InternalEtlParser.g:4094:2: ( ruleActiveFilter )
        {
        // InternalEtlParser.g:4094:2: ( ruleActiveFilter )
        // InternalEtlParser.g:4095:3: ruleActiveFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_8()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleActiveFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalEtlParser

    // $ANTLR start synpred69_InternalEtlParser
    public final void synpred69_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4100:2: ( ( ruleSemanticTagFilter ) )
        // InternalEtlParser.g:4100:2: ( ruleSemanticTagFilter )
        {
        // InternalEtlParser.g:4100:2: ( ruleSemanticTagFilter )
        // InternalEtlParser.g:4101:3: ruleSemanticTagFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSemanticTagFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred69_InternalEtlParser

    // $ANTLR start synpred70_InternalEtlParser
    public final void synpred70_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4106:2: ( ( rulePreferredInFilter ) )
        // InternalEtlParser.g:4106:2: ( rulePreferredInFilter )
        {
        // InternalEtlParser.g:4106:2: ( rulePreferredInFilter )
        // InternalEtlParser.g:4107:3: rulePreferredInFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_10()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        rulePreferredInFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalEtlParser

    // $ANTLR start synpred71_InternalEtlParser
    public final void synpred71_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4112:2: ( ( ruleAcceptableInFilter ) )
        // InternalEtlParser.g:4112:2: ( ruleAcceptableInFilter )
        {
        // InternalEtlParser.g:4112:2: ( ruleAcceptableInFilter )
        // InternalEtlParser.g:4113:3: ruleAcceptableInFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_11()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAcceptableInFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred71_InternalEtlParser

    // $ANTLR start synpred72_InternalEtlParser
    public final void synpred72_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4118:2: ( ( ruleLanguageRefSetFilter ) )
        // InternalEtlParser.g:4118:2: ( ruleLanguageRefSetFilter )
        {
        // InternalEtlParser.g:4118:2: ( ruleLanguageRefSetFilter )
        // InternalEtlParser.g:4119:3: ruleLanguageRefSetFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_12()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLanguageRefSetFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalEtlParser

    // $ANTLR start synpred73_InternalEtlParser
    public final void synpred73_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4124:2: ( ( ruleCaseSignificanceFilter ) )
        // InternalEtlParser.g:4124:2: ( ruleCaseSignificanceFilter )
        {
        // InternalEtlParser.g:4124:2: ( ruleCaseSignificanceFilter )
        // InternalEtlParser.g:4125:3: ruleCaseSignificanceFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_13()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleCaseSignificanceFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred73_InternalEtlParser

    // $ANTLR start synpred74_InternalEtlParser
    public final void synpred74_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4130:2: ( ( ruleMemberFieldFilter ) )
        // InternalEtlParser.g:4130:2: ( ruleMemberFieldFilter )
        {
        // InternalEtlParser.g:4130:2: ( ruleMemberFieldFilter )
        // InternalEtlParser.g:4131:3: ruleMemberFieldFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_14()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMemberFieldFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred74_InternalEtlParser

    // $ANTLR start synpred82_InternalEtlParser
    public final void synpred82_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4298:2: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) )
        // InternalEtlParser.g:4298:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
        {
        // InternalEtlParser.g:4298:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
        // InternalEtlParser.g:4299:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
        }
        // InternalEtlParser.g:4300:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
        // InternalEtlParser.g:4300:4: rule__DialectIdFilter__DialectsAssignment_2_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectIdFilter__DialectsAssignment_2_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalEtlParser

    // $ANTLR start synpred86_InternalEtlParser
    public final void synpred86_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:4382:2: ( ( ruleFilteredExpressionConstraint ) )
        // InternalEtlParser.g:4382:2: ( ruleFilteredExpressionConstraint )
        {
        // InternalEtlParser.g:4382:2: ( ruleFilteredExpressionConstraint )
        // InternalEtlParser.g:4383:3: ruleFilteredExpressionConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFilteredExpressionConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred86_InternalEtlParser

    // $ANTLR start synpred191_InternalEtlParser
    public final void synpred191_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8274:3: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:8274:3: rule__SlotIntegerRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotIntegerRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred191_InternalEtlParser

    // $ANTLR start synpred194_InternalEtlParser
    public final void synpred194_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8625:3: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:8625:3: rule__SlotDecimalRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotDecimalRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred194_InternalEtlParser

    // $ANTLR start synpred209_InternalEtlParser
    public final void synpred209_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:10711:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEtlParser.g:10711:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred209_InternalEtlParser

    // $ANTLR start synpred210_InternalEtlParser
    public final void synpred210_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:10873:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEtlParser.g:10873:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred210_InternalEtlParser

    // $ANTLR start synpred215_InternalEtlParser
    public final void synpred215_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:11576:3: ( rule__AttributeConstraint__ReversedAssignment_1 )
        // InternalEtlParser.g:11576:3: rule__AttributeConstraint__ReversedAssignment_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AttributeConstraint__ReversedAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred215_InternalEtlParser

    // $ANTLR start synpred227_InternalEtlParser
    public final void synpred227_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:14020:3: ( rule__Dialect__AcceptabilityAssignment_1 )
        // InternalEtlParser.g:14020:3: rule__Dialect__AcceptabilityAssignment_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Dialect__AcceptabilityAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred227_InternalEtlParser

    // $ANTLR start synpred231_InternalEtlParser
    public final void synpred231_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:15242:3: ( rule__Identifier__Alternatives_1 )
        // InternalEtlParser.g:15242:3: rule__Identifier__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Identifier__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred231_InternalEtlParser

    // Delegated rules

    public final boolean synpred66_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA127 dfa127 = new DFA127(this);
    static final String dfa_1s = "\15\uffff";
    static final String dfa_2s = "\1\4\1\5\2\uffff\1\106\1\104\1\5\1\4\1\104\1\106\3\5";
    static final String dfa_3s = "\1\110\1\114\2\uffff\2\106\1\5\1\110\1\106\1\121\1\106\1\24\1\106";
    static final String dfa_4s = "\2\uffff\1\1\1\2\11\uffff";
    static final String dfa_5s = "\15\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\55\uffff\7\2\15\uffff\1\2\1\uffff\1\3",
            "\1\7\1\4\15\uffff\1\6\61\uffff\1\5\5\uffff\1\2",
            "",
            "",
            "\1\5",
            "\1\11\1\uffff\1\10",
            "\1\7",
            "\1\2\55\uffff\7\2\15\uffff\1\2\1\uffff\1\3",
            "\1\11\1\uffff\1\10",
            "\1\12\12\uffff\1\13",
            "\1\7\16\uffff\1\6\61\uffff\1\14",
            "\1\7\16\uffff\1\6",
            "\1\7\16\uffff\1\6\61\uffff\1\14"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "3396:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_7s = "\16\uffff";
    static final String dfa_8s = "\11\uffff\1\15\1\uffff\1\15\2\uffff";
    static final String dfa_9s = "\1\4\1\114\3\uffff\1\106\1\5\2\106\1\4\1\uffff\1\4\2\uffff";
    static final String dfa_10s = "\1\126\1\114\3\uffff\1\115\1\112\2\106\1\120\1\uffff\1\120\2\uffff";
    static final String dfa_11s = "\2\uffff\1\1\1\2\1\3\5\uffff\1\6\1\uffff\1\5\1\4";
    static final String dfa_12s = "\16\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\13\uffff\1\4\41\uffff\7\2\15\uffff\1\2\3\uffff\1\3\13\uffff\1\5",
            "\1\6",
            "",
            "",
            "",
            "\1\11\5\uffff\1\7\1\10",
            "\1\2\2\uffff\2\2\1\uffff\3\12\6\uffff\1\2\65\uffff\1\2",
            "\1\11",
            "\1\11",
            "\1\15\100\uffff\1\15\1\13\1\uffff\2\15\1\uffff\1\15\4\uffff\1\14",
            "",
            "\1\15\100\uffff\1\15\1\13\1\uffff\2\15\1\uffff\1\15\4\uffff\1\14",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3417:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );";
        }
    }
    static final String dfa_14s = "\14\uffff";
    static final String dfa_15s = "\3\uffff\2\6\1\1\6\uffff";
    static final String dfa_16s = "\1\104\1\uffff\1\106\3\104\1\uffff\1\126\2\106\2\0";
    static final String dfa_17s = "\1\126\1\uffff\1\106\3\126\1\uffff\1\126\2\106\2\0";
    static final String dfa_18s = "\1\uffff\1\1\4\uffff\1\2\5\uffff";
    static final String dfa_19s = "\12\uffff\1\1\1\0}>";
    static final String[] dfa_20s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\3",
            "\1\5\1\uffff\1\4\4\uffff\1\6\11\uffff\2\6",
            "\1\5\1\uffff\1\4\4\uffff\1\6\11\uffff\2\6",
            "\1\1\6\uffff\1\1\10\uffff\1\7\1\1\1\10",
            "",
            "\1\11",
            "\1\12",
            "\1\13",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "3648:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_11 = input.LA(1);

                         
                        int index11_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index11_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\22\uffff";
    static final String dfa_22s = "\5\uffff\2\7\1\uffff\1\1\11\uffff";
    static final String dfa_23s = "\1\104\1\uffff\3\106\2\104\1\uffff\1\104\1\126\5\106\1\0\1\106\1\0";
    static final String dfa_24s = "\1\126\1\uffff\1\106\2\120\2\126\1\uffff\2\126\2\106\3\120\1\0\1\120\1\0";
    static final String dfa_25s = "\1\uffff\1\1\5\uffff\1\2\12\uffff";
    static final String dfa_26s = "\17\uffff\1\1\1\uffff\1\0}>";
    static final String[] dfa_27s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\3",
            "\1\4\11\uffff\1\5",
            "\1\4\11\uffff\1\5",
            "\1\10\1\uffff\1\6\4\uffff\1\7\11\uffff\2\7",
            "\1\10\1\uffff\1\6\4\uffff\1\7\11\uffff\2\7",
            "",
            "\1\1\6\uffff\1\1\10\uffff\1\11\1\1\1\12",
            "\1\13",
            "\1\14",
            "\1\15",
            "\1\16\11\uffff\1\17",
            "\1\20\11\uffff\1\21",
            "\1\16\11\uffff\1\17",
            "\1\uffff",
            "\1\20\11\uffff\1\21",
            "\1\uffff"
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "3690:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_17 = input.LA(1);

                         
                        int index13_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index13_17);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA13_15 = input.LA(1);

                         
                        int index13_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index13_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\27\uffff";
    static final String dfa_29s = "\1\22\1\0\22\uffff\1\0\2\uffff";
    static final String dfa_30s = "\1\125\1\0\22\uffff\1\0\2\uffff";
    static final String dfa_31s = "\2\uffff\1\1\22\uffff\1\2\1\3";
    static final String dfa_32s = "\1\uffff\1\0\22\uffff\1\1\2\uffff}>";
    static final String[] dfa_33s = {
            "\1\1\37\uffff\15\2\7\uffff\1\2\1\uffff\1\25\1\uffff\1\24\4\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3897:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalEtlParser()) ) {s = 2;}

                        else if ( (synpred52_InternalEtlParser()) ) {s = 21;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA20_20 = input.LA(1);

                         
                        int index20_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalEtlParser()) ) {s = 2;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index20_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\26\uffff";
    static final String dfa_35s = "\1\22\23\uffff\1\0\1\uffff";
    static final String dfa_36s = "\1\125\23\uffff\1\0\1\uffff";
    static final String dfa_37s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_38s = "\24\uffff\1\0\1\uffff}>";
    static final String[] dfa_39s = {
            "\1\1\37\uffff\15\1\7\uffff\1\1\3\uffff\1\24\4\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3945:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA22_20 = input.LA(1);

                         
                        int index22_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index22_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 22, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\20\uffff";
    static final String dfa_41s = "\14\uffff\2\17\2\uffff";
    static final String dfa_42s = "\1\77\2\20\4\126\1\106\2\uffff\2\106\2\44\2\uffff";
    static final String dfa_43s = "\1\125\6\126\1\115\2\uffff\2\106\2\120\2\uffff";
    static final String dfa_44s = "\10\uffff\1\1\1\2\4\uffff\1\4\1\3";
    static final String dfa_45s = "\20\uffff}>";
    static final String[] dfa_46s = {
            "\1\5\1\6\21\uffff\1\1\1\2\1\4\1\3",
            "\1\11\24\uffff\1\11\1\10\2\11\1\uffff\1\10\1\uffff\1\11\35\uffff\1\11\13\uffff\1\7",
            "\1\11\24\uffff\1\11\1\10\2\11\1\uffff\1\10\1\uffff\1\11\35\uffff\1\11\13\uffff\1\7",
            "\1\7",
            "\1\7",
            "\1\7",
            "\1\7",
            "\1\14\5\uffff\1\12\1\13",
            "",
            "",
            "\1\14",
            "\1\14",
            "\1\17\13\uffff\2\17\20\uffff\1\17\2\uffff\1\17\1\15\2\uffff\1\17\1\uffff\1\17\4\uffff\1\16",
            "\1\17\13\uffff\2\17\20\uffff\1\17\2\uffff\1\17\1\15\2\uffff\1\17\1\uffff\1\17\4\uffff\1\16",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "3987:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_47s = "\64\uffff";
    static final String dfa_48s = "\1\25\21\0\42\uffff";
    static final String dfa_49s = "\1\121\21\0\42\uffff";
    static final String dfa_50s = "\22\uffff\1\17\22\uffff\1\20\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16";
    static final String dfa_51s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\42\uffff}>";
    static final String[] dfa_52s = {
            "\1\22\1\21\1\10\1\11\1\20\1\13\1\17\1\16\1\15\1\5\1\2\1\12\1\6\1\14\1\3\5\22\1\1\1\22\1\4\6\22\1\7\4\22\1\uffff\1\22\21\uffff\1\45\6\uffff\1\22",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "4041:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleIdFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalEtlParser()) ) {s = 38;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEtlParser()) ) {s = 39;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_3 = input.LA(1);

                         
                        int index26_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalEtlParser()) ) {s = 40;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalEtlParser()) ) {s = 40;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA26_5 = input.LA(1);

                         
                        int index26_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalEtlParser()) ) {s = 41;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA26_6 = input.LA(1);

                         
                        int index26_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalEtlParser()) ) {s = 41;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA26_7 = input.LA(1);

                         
                        int index26_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalEtlParser()) ) {s = 42;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA26_8 = input.LA(1);

                         
                        int index26_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalEtlParser()) ) {s = 43;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA26_9 = input.LA(1);

                         
                        int index26_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalEtlParser()) ) {s = 43;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA26_10 = input.LA(1);

                         
                        int index26_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalEtlParser()) ) {s = 44;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA26_11 = input.LA(1);

                         
                        int index26_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalEtlParser()) ) {s = 45;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA26_12 = input.LA(1);

                         
                        int index26_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalEtlParser()) ) {s = 46;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalEtlParser()) ) {s = 47;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA26_14 = input.LA(1);

                         
                        int index26_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalEtlParser()) ) {s = 48;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA26_15 = input.LA(1);

                         
                        int index26_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalEtlParser()) ) {s = 49;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA26_16 = input.LA(1);

                         
                        int index26_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalEtlParser()) ) {s = 50;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA26_17 = input.LA(1);

                         
                        int index26_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalEtlParser()) ) {s = 51;}

                        else if ( (synpred74_InternalEtlParser()) ) {s = 18;}

                         
                        input.seek(index26_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\25\uffff";
    static final String dfa_54s = "\1\62\22\uffff\1\0\1\uffff";
    static final String dfa_55s = "\1\125\22\uffff\1\0\1\uffff";
    static final String dfa_56s = "\1\uffff\1\1\22\uffff\1\2";
    static final String dfa_57s = "\23\uffff\1\0\1\uffff}>";
    static final String[] dfa_58s = {
            "\15\1\7\uffff\1\1\3\uffff\1\23\4\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "4293:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_19 = input.LA(1);

                         
                        int index34_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index34_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\45\uffff";
    static final String dfa_60s = "\1\62\1\uffff\1\62\23\21\1\44\1\0\1\21\1\44\12\21\1\uffff";
    static final String dfa_61s = "\1\125\1\uffff\1\125\24\120\1\0\14\120\1\uffff";
    static final String dfa_62s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_63s = "\27\uffff\1\0\15\uffff}>";
    static final String[] dfa_64s = {
            "\15\1\7\uffff\1\1\3\uffff\1\2\4\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "",
            "\1\11\1\10\1\7\1\6\1\5\1\4\1\12\6\1\7\uffff\1\3\3\uffff\1\1\4\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\13\1\1\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\1",
            "\1\25\22\uffff\1\1\13\uffff\2\1\7\44\10\uffff\1\1\1\uffff\1\26\1\uffff\1\1\1\44\1\1\3\uffff\1\27\4\uffff\1\1",
            "\1\1\13\uffff\2\1\7\44\10\uffff\1\1\3\uffff\1\1\1\44\1\1\3\uffff\1\27\4\uffff\1\1",
            "\1\uffff",
            "\1\30\22\uffff\1\1\13\uffff\2\1\7\44\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\44\1\1\3\uffff\1\27\4\uffff\1\1",
            "\1\1\13\uffff\2\1\7\44\10\uffff\1\1\3\uffff\1\1\1\44\1\1\3\uffff\1\27\4\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            "\1\30\22\uffff\1\1\13\uffff\2\1\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\1\1\uffff\1\31\1\uffff\1\1\1\32\1\1\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\1",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "4377:1: rule__FilterValue__Alternatives : ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_23 = input.LA(1);

                         
                        int index38_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index38_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\1\2\15\uffff";
    static final String dfa_66s = "\2\4\1\uffff\1\5\1\uffff\1\106\1\104\1\5\1\4\1\104\1\106\3\5";
    static final String dfa_67s = "\1\113\1\110\1\uffff\1\114\1\uffff\2\106\1\5\1\110\1\106\1\121\1\106\1\24\1\106";
    static final String dfa_68s = "\2\uffff\1\2\1\uffff\1\1\11\uffff";
    static final String[] dfa_69s = {
            "\1\2\100\uffff\1\1\2\uffff\1\2\2\uffff\1\2",
            "\1\3\55\uffff\7\4\15\uffff\1\4\1\uffff\1\2",
            "",
            "\1\10\1\5\15\uffff\1\7\61\uffff\1\6\5\uffff\1\4",
            "",
            "\1\6",
            "\1\12\1\uffff\1\11",
            "\1\10",
            "\1\4\55\uffff\7\4\15\uffff\1\4\1\uffff\1\2",
            "\1\12\1\uffff\1\11",
            "\1\13\12\uffff\1\14",
            "\1\10\16\uffff\1\7\61\uffff\1\15",
            "\1\10\16\uffff\1\7",
            "\1\10\16\uffff\1\7\61\uffff\1\15"
    };
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_7;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_12;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "()* loopback of 5520:2: ( rule__Refinement__Group_0_0_1__0 )*";
        }
    }
    static final String dfa_70s = "\7\uffff";
    static final String dfa_71s = "\1\3\6\uffff";
    static final String dfa_72s = "\1\104\1\uffff\1\106\1\uffff\2\106\1\0";
    static final String dfa_73s = "\1\126\1\uffff\1\106\1\uffff\2\120\1\0";
    static final String dfa_74s = "\1\uffff\1\1\1\uffff\1\2\3\uffff";
    static final String dfa_75s = "\6\uffff\1\0}>";
    static final String[] dfa_76s = {
            "\1\3\6\uffff\1\3\10\uffff\1\1\1\3\1\2",
            "",
            "\1\4",
            "",
            "\1\5\11\uffff\1\6",
            "\1\5\11\uffff\1\6",
            "\1\uffff"
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_70;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "8625:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_6 = input.LA(1);

                         
                        int index90_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred194_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index90_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\1\uffff\1\2\14\uffff";
    static final String dfa_78s = "\1\62\1\21\2\uffff\2\62\10\0";
    static final String dfa_79s = "\2\125\2\uffff\2\126\10\0";
    static final String dfa_80s = "\2\uffff\1\2\1\1\12\uffff";
    static final String dfa_81s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7}>";
    static final String[] dfa_82s = {
            "\1\2\1\1\13\2\7\uffff\1\2\3\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "\1\2\22\uffff\1\2\13\uffff\2\2\1\14\1\13\1\12\1\11\1\10\1\7\1\15\6\3\3\2\1\uffff\1\2\1\uffff\1\2\1\6\2\uffff\1\2\1\3\1\2\1\uffff\2\2\1\3\1\uffff\1\3\2\2\1\4\1\5",
            "",
            "",
            "\7\3\15\uffff\1\3\3\uffff\1\3\4\uffff\1\3\1\uffff\1\3\4\uffff\1\2",
            "\7\3\15\uffff\1\3\3\uffff\1\3\4\uffff\1\3\1\uffff\1\3\4\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_7;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "11576:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_6 = input.LA(1);

                         
                        int index111_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_7 = input.LA(1);

                         
                        int index111_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_8 = input.LA(1);

                         
                        int index111_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA111_9 = input.LA(1);

                         
                        int index111_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA111_10 = input.LA(1);

                         
                        int index111_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA111_11 = input.LA(1);

                         
                        int index111_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA111_12 = input.LA(1);

                         
                        int index111_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA111_13 = input.LA(1);

                         
                        int index111_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred215_InternalEtlParser()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\1\2\44\uffff";
    static final String dfa_84s = "\1\60\1\62\1\uffff\23\21\1\44\1\0\1\21\1\44\12\21\1\uffff";
    static final String dfa_85s = "\2\125\1\uffff\24\120\1\0\14\120\1\uffff";
    static final String dfa_86s = "\2\uffff\1\2\41\uffff\1\1";
    static final String[] dfa_87s = {
            "\17\2\3\uffff\1\2\2\uffff\2\2\3\uffff\1\1\1\2\3\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "\1\11\1\10\1\7\1\6\1\5\1\4\1\12\6\2\7\uffff\1\3\3\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\1\21\1\20\1\17\1\16\1\15\1\14\1\22\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\13\1\2\3\uffff\1\27\1\uffff\1\23\1\24\1\uffff\1\2",
            "\1\25\22\uffff\1\2\13\uffff\2\2\7\44\10\uffff\1\2\1\uffff\1\26\1\uffff\1\2\1\44\1\2\3\uffff\1\27\4\uffff\1\2",
            "\1\2\13\uffff\2\2\7\44\10\uffff\1\2\3\uffff\1\2\1\44\1\2\3\uffff\1\27\4\uffff\1\2",
            "\1\uffff",
            "\1\30\22\uffff\1\2\13\uffff\2\2\7\44\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\44\1\2\3\uffff\1\27\4\uffff\1\2",
            "\1\2\13\uffff\2\2\7\44\10\uffff\1\2\3\uffff\1\2\1\44\1\2\3\uffff\1\27\4\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            "\1\30\22\uffff\1\2\13\uffff\2\2\1\40\1\37\1\36\1\35\1\34\1\33\1\41\10\uffff\1\2\1\uffff\1\31\1\uffff\1\2\1\32\1\2\3\uffff\1\27\1\uffff\1\42\1\43\1\uffff\1\2",
            ""
    };
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_59;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_63;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "14020:2: ( rule__Dialect__AcceptabilityAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_23 = input.LA(1);

                         
                        int index123_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred227_InternalEtlParser()) ) {s = 36;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index123_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\13\uffff";
    static final String dfa_89s = "\1\1\12\uffff";
    static final String dfa_90s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_91s = "\1\125\1\uffff\10\0\1\uffff";
    static final String dfa_92s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_93s = "\2\uffff\1\0\1\4\1\1\1\5\1\2\1\6\1\3\1\7\1\uffff}>";
    static final String[] dfa_94s = {
            "\1\1\14\uffff\1\1\22\uffff\1\1\13\uffff\2\1\1\10\1\7\1\6\1\5\1\4\1\3\1\11\13\1\1\uffff\1\1\1\2\6\1\2\12\7\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "()* loopback of 15242:2: ( rule__Identifier__Alternatives_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_4 = input.LA(1);

                         
                        int index127_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_8 = input.LA(1);

                         
                        int index127_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_5 = input.LA(1);

                         
                        int index127_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_7 = input.LA(1);

                         
                        int index127_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_9 = input.LA(1);

                         
                        int index127_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalEtlParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index127_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0100000000000002L,0x0000000000002040L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x01FC00000000C010L,0x0000000000000040L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001080L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x01FC00000000C010L,0x0000000000000140L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x01FC00000000C010L,0x0000000000000160L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x01FC00000000C012L,0x0000000000000160L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000220L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x01FC00000001C010L,0x0000000000400440L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000100020L,0x0000000000000400L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x7FFC00000000C010L,0x0000000000328440L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000100220L,0x0000000000000400L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000000000000C010L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xF80B00100000C000L,0x00000000003C8021L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0xF80B00100000C000L,0x00000000003C8821L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xF80B00100000C002L,0x00000000003C8021L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000100060L,0x0000000000000040L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000800L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600010L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600810L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000002L,0x0000000000600010L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000002000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000040L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000040L,0x0000000000020040L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000040L,0x0000000000003040L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000500000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0002000000000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0001000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x7FFC00000004C010L,0x0000000000328540L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x7FFC00000004C010L,0x0000000000328440L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x017FFFFFFFE00000L,0x0000000000020000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000008L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000020002L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x01FC00000000C012L,0x0000000000000040L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000100L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x8000000000000000L,0x00000000003C0001L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000044000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x000011A000010000L,0x0000000000000400L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x017FFFFFFFE00000L,0x0000000000020400L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x00000000000C0000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x01FC00000000C010L,0x0000000000000440L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x000011A000010000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x000011A000010002L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x000010A000010000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x017FFFFFFFE00002L,0x0000000000020000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x7FFC00000000C012L,0x0000000000328440L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0100000000000000L,0x0000000000002440L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0100000000000000L,0x0000000000002040L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000044000000040L,0x0000000000000040L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x7FFC00000000C010L,0x000000000032E444L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000E00000000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x01FC000000000000L,0x0000000000006040L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x01FC000000000002L,0x0000000000006040L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    }


}