package com.b2international.snomed.etl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.etl.services.EtlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEtlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOUBLE_SQUARE_OPEN", "RULE_DOUBLE_SQUARE_CLOSE", "RULE_TILDE", "RULE_AT", "RULE_ID", "RULE_SCG", "RULE_TOK", "RULE_STR", "RULE_INT", "RULE_DEC", "RULE_EQUIVALENT_TO", "RULE_SUBTYPE_OF", "RULE_STRING", "RULE_WS", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_SLOTNAME_STRING", "RULE_CASE_SIGNIFICANCE_ID_KEYWORD", "RULE_LANGUAGE_REFSET_ID_KEYWORD", "RULE_EFFECTIVE_TIME_KEYWORD", "RULE_ACCEPTABLE_IN_KEYWORD", "RULE_DESCRIPTION_KEYWORD", "RULE_PREFERRED_IN_KEYWORD", "RULE_SEMANTIC_TAG_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_MODULEID_KEYWORD", "RULE_CONCEPT_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ACTIVE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_EXCLUSION_KEYWORD", "RULE_EXACT_KEYWORD", "RULE_FALSE_KEYWORD", "RULE_MATCH_KEYWORD", "RULE_REGEX_KEYWORD", "RULE_TERM_KEYWORD", "RULE_TRUE_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_WILD_KEYWORD", "RULE_CONJUNCTION_KEYWORD", "RULE_DISJUNCTION_KEYWORD", "RULE_REVERSED", "RULE_KEYWORD", "RULE_DBL_LT_EM", "RULE_DBL_GT_EM", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_PIPE_DELIMITED_STRING", "RULE_TO", "RULE_COMMA", "RULE_DIGIT_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_HASH", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIALECT_KEYWORD=32;
    public static final int RULE_LANGUAGE_KEYWORD=29;
    public static final int RULE_DIGIT_NONZERO=62;
    public static final int RULE_CURLY_OPEN=64;
    public static final int RULE_DBL_GT=51;
    public static final int RULE_TO=59;
    public static final int RULE_ROUND_CLOSE=67;
    public static final int RULE_GT=76;
    public static final int RULE_ACTIVE_KEYWORD=33;
    public static final int RULE_SLOTNAME_STRING=20;
    public static final int RULE_SCG=9;
    public static final int RULE_MODULEID_KEYWORD=30;
    public static final int RULE_GTE=54;
    public static final int RULE_DOUBLE_SQUARE_OPEN=4;
    public static final int RULE_DISJUNCTION_KEYWORD=45;
    public static final int RULE_EQUIVALENT_TO=14;
    public static final int RULE_ROUND_OPEN=66;
    public static final int RULE_DBL_LT=50;
    public static final int RULE_TYPEID_KEYWORD=34;
    public static final int RULE_MATCH_KEYWORD=38;
    public static final int RULE_NOT_EQUAL=74;
    public static final int RULE_SQUARE_CLOSE=19;
    public static final int RULE_SEMANTIC_TAG_KEYWORD=27;
    public static final int RULE_ID=8;
    public static final int RULE_SQUARE_OPEN=18;
    public static final int RULE_EQUAL=73;
    public static final int RULE_DEC=13;
    public static final int RULE_CASE_SIGNIFICANCE_ID_KEYWORD=21;
    public static final int RULE_EXCLUSION_KEYWORD=35;
    public static final int RULE_LT_EM=52;
    public static final int RULE_COMMA=60;
    public static final int RULE_CURLY_CLOSE=65;
    public static final int RULE_DBL_GT_EM=49;
    public static final int RULE_COLON=63;
    public static final int RULE_TILDE=6;
    public static final int RULE_LT=75;
    public static final int RULE_DOUBLE_CURLY_CLOSE=57;
    public static final int RULE_LANGUAGE_REFSET_ID_KEYWORD=22;
    public static final int RULE_INT=12;
    public static final int RULE_DESCRIPTION_KEYWORD=25;
    public static final int RULE_EXACT_KEYWORD=36;
    public static final int RULE_ML_COMMENT=78;
    public static final int RULE_DOUBLE_SQUARE_CLOSE=5;
    public static final int RULE_PREFERRED_IN_KEYWORD=26;
    public static final int RULE_PIPE_DELIMITED_STRING=58;
    public static final int RULE_LTE=55;
    public static final int RULE_TYPE_KEYWORD=42;
    public static final int RULE_CONCEPT_KEYWORD=31;
    public static final int RULE_STRING=16;
    public static final int RULE_AT=7;
    public static final int RULE_FALSE_KEYWORD=37;
    public static final int RULE_REVERSED=46;
    public static final int RULE_SL_COMMENT=79;
    public static final int RULE_DIGIT_ZERO=61;
    public static final int RULE_HASH=77;
    public static final int RULE_TOK=10;
    public static final int RULE_DASH=69;
    public static final int RULE_PLUS=68;
    public static final int RULE_DOT=71;
    public static final int EOF=-1;
    public static final int RULE_DIALECTID_KEYWORD=28;
    public static final int RULE_KEYWORD=47;
    public static final int RULE_ACCEPTABLE_IN_KEYWORD=24;
    public static final int RULE_SUBTYPE_OF=15;
    public static final int RULE_WS=17;
    public static final int RULE_TERM_KEYWORD=40;
    public static final int RULE_GT_EM=53;
    public static final int RULE_REGEX_KEYWORD=39;
    public static final int RULE_TRUE_KEYWORD=41;
    public static final int RULE_CARET=70;
    public static final int RULE_DOUBLE_CURLY_OPEN=56;
    public static final int RULE_WILD_KEYWORD=43;
    public static final int RULE_CONJUNCTION_KEYWORD=44;
    public static final int RULE_STR=11;
    public static final int RULE_WILDCARD=72;
    public static final int RULE_EFFECTIVE_TIME_KEYWORD=23;
    public static final int RULE_DBL_LT_EM=48;

    // delegates
    // delegators


        public InternalEtlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEtlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEtlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEtlParser.g"; }


    	private EtlGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    	}

    	public void setGrammarAccess(EtlGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleExpressionTemplate"
    // InternalEtlParser.g:68:1: entryRuleExpressionTemplate : ruleExpressionTemplate EOF ;
    public final void entryRuleExpressionTemplate() throws RecognitionException {
        try {
            // InternalEtlParser.g:69:1: ( ruleExpressionTemplate EOF )
            // InternalEtlParser.g:70:1: ruleExpressionTemplate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionTemplate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionTemplate"


    // $ANTLR start "ruleExpressionTemplate"
    // InternalEtlParser.g:77:1: ruleExpressionTemplate : ( ( rule__ExpressionTemplate__Group__0 ) ) ;
    public final void ruleExpressionTemplate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:81:2: ( ( ( rule__ExpressionTemplate__Group__0 ) ) )
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            {
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            // InternalEtlParser.g:83:3: ( rule__ExpressionTemplate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }
            // InternalEtlParser.g:84:3: ( rule__ExpressionTemplate__Group__0 )
            // InternalEtlParser.g:84:4: rule__ExpressionTemplate__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionTemplate"


    // $ANTLR start "entryRuleSubExpression"
    // InternalEtlParser.g:93:1: entryRuleSubExpression : ruleSubExpression EOF ;
    public final void entryRuleSubExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:94:1: ( ruleSubExpression EOF )
            // InternalEtlParser.g:95:1: ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalEtlParser.g:102:1: ruleSubExpression : ( ( rule__SubExpression__Group__0 ) ) ;
    public final void ruleSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:106:2: ( ( ( rule__SubExpression__Group__0 ) ) )
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            {
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            // InternalEtlParser.g:108:3: ( rule__SubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:109:3: ( rule__SubExpression__Group__0 )
            // InternalEtlParser.g:109:4: rule__SubExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleFocusConcept"
    // InternalEtlParser.g:118:1: entryRuleFocusConcept : ruleFocusConcept EOF ;
    public final void entryRuleFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:119:1: ( ruleFocusConcept EOF )
            // InternalEtlParser.g:120:1: ruleFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFocusConcept"


    // $ANTLR start "ruleFocusConcept"
    // InternalEtlParser.g:127:1: ruleFocusConcept : ( ( rule__FocusConcept__Group__0 ) ) ;
    public final void ruleFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:131:2: ( ( ( rule__FocusConcept__Group__0 ) ) )
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            {
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            // InternalEtlParser.g:133:3: ( rule__FocusConcept__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getGroup()); 
            }
            // InternalEtlParser.g:134:3: ( rule__FocusConcept__Group__0 )
            // InternalEtlParser.g:134:4: rule__FocusConcept__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFocusConcept"


    // $ANTLR start "entryRuleRefinement"
    // InternalEtlParser.g:143:1: entryRuleRefinement : ruleRefinement EOF ;
    public final void entryRuleRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:144:1: ( ruleRefinement EOF )
            // InternalEtlParser.g:145:1: ruleRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinement"


    // $ANTLR start "ruleRefinement"
    // InternalEtlParser.g:152:1: ruleRefinement : ( ( rule__Refinement__Group__0 ) ) ;
    public final void ruleRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:156:2: ( ( ( rule__Refinement__Group__0 ) ) )
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            {
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            // InternalEtlParser.g:158:3: ( rule__Refinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:159:3: ( rule__Refinement__Group__0 )
            // InternalEtlParser.g:159:4: rule__Refinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinement"


    // $ANTLR start "entryRuleAttributeGroup"
    // InternalEtlParser.g:168:1: entryRuleAttributeGroup : ruleAttributeGroup EOF ;
    public final void entryRuleAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:169:1: ( ruleAttributeGroup EOF )
            // InternalEtlParser.g:170:1: ruleAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeGroup"


    // $ANTLR start "ruleAttributeGroup"
    // InternalEtlParser.g:177:1: ruleAttributeGroup : ( ( rule__AttributeGroup__Group__0 ) ) ;
    public final void ruleAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:181:2: ( ( ( rule__AttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            // InternalEtlParser.g:183:3: ( rule__AttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:184:3: ( rule__AttributeGroup__Group__0 )
            // InternalEtlParser.g:184:4: rule__AttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeGroup"


    // $ANTLR start "entryRuleAttribute"
    // InternalEtlParser.g:193:1: entryRuleAttribute : ruleAttribute EOF ;
    public final void entryRuleAttribute() throws RecognitionException {
        try {
            // InternalEtlParser.g:194:1: ( ruleAttribute EOF )
            // InternalEtlParser.g:195:1: ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalEtlParser.g:202:1: ruleAttribute : ( ( rule__Attribute__Group__0 ) ) ;
    public final void ruleAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:206:2: ( ( ( rule__Attribute__Group__0 ) ) )
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            {
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            // InternalEtlParser.g:208:3: ( rule__Attribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getGroup()); 
            }
            // InternalEtlParser.g:209:3: ( rule__Attribute__Group__0 )
            // InternalEtlParser.g:209:4: rule__Attribute__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleAttributeValue"
    // InternalEtlParser.g:218:1: entryRuleAttributeValue : ruleAttributeValue EOF ;
    public final void entryRuleAttributeValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:219:1: ( ruleAttributeValue EOF )
            // InternalEtlParser.g:220:1: ruleAttributeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValue"


    // $ANTLR start "ruleAttributeValue"
    // InternalEtlParser.g:227:1: ruleAttributeValue : ( ( rule__AttributeValue__Alternatives ) ) ;
    public final void ruleAttributeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:231:2: ( ( ( rule__AttributeValue__Alternatives ) ) )
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            {
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            // InternalEtlParser.g:233:3: ( rule__AttributeValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:234:3: ( rule__AttributeValue__Alternatives )
            // InternalEtlParser.g:234:4: rule__AttributeValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValue"


    // $ANTLR start "entryRuleConceptIdReplacementSlot"
    // InternalEtlParser.g:243:1: entryRuleConceptIdReplacementSlot : ruleConceptIdReplacementSlot EOF ;
    public final void entryRuleConceptIdReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:244:1: ( ruleConceptIdReplacementSlot EOF )
            // InternalEtlParser.g:245:1: ruleConceptIdReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptIdReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptIdReplacementSlot"


    // $ANTLR start "ruleConceptIdReplacementSlot"
    // InternalEtlParser.g:252:1: ruleConceptIdReplacementSlot : ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) ;
    public final void ruleConceptIdReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:256:2: ( ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:258:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:259:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            // InternalEtlParser.g:259:4: rule__ConceptIdReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptIdReplacementSlot"


    // $ANTLR start "entryRuleExpressionReplacementSlot"
    // InternalEtlParser.g:268:1: entryRuleExpressionReplacementSlot : ruleExpressionReplacementSlot EOF ;
    public final void entryRuleExpressionReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:269:1: ( ruleExpressionReplacementSlot EOF )
            // InternalEtlParser.g:270:1: ruleExpressionReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionReplacementSlot"


    // $ANTLR start "ruleExpressionReplacementSlot"
    // InternalEtlParser.g:277:1: ruleExpressionReplacementSlot : ( ( rule__ExpressionReplacementSlot__Group__0 ) ) ;
    public final void ruleExpressionReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:281:2: ( ( ( rule__ExpressionReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:283:3: ( rule__ExpressionReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:284:3: ( rule__ExpressionReplacementSlot__Group__0 )
            // InternalEtlParser.g:284:4: rule__ExpressionReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionReplacementSlot"


    // $ANTLR start "entryRuleTokenReplacementSlot"
    // InternalEtlParser.g:293:1: entryRuleTokenReplacementSlot : ruleTokenReplacementSlot EOF ;
    public final void entryRuleTokenReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:294:1: ( ruleTokenReplacementSlot EOF )
            // InternalEtlParser.g:295:1: ruleTokenReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTokenReplacementSlot"


    // $ANTLR start "ruleTokenReplacementSlot"
    // InternalEtlParser.g:302:1: ruleTokenReplacementSlot : ( ( rule__TokenReplacementSlot__Group__0 ) ) ;
    public final void ruleTokenReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:306:2: ( ( ( rule__TokenReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:308:3: ( rule__TokenReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:309:3: ( rule__TokenReplacementSlot__Group__0 )
            // InternalEtlParser.g:309:4: rule__TokenReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTokenReplacementSlot"


    // $ANTLR start "entryRuleTemplateInformationSlot"
    // InternalEtlParser.g:318:1: entryRuleTemplateInformationSlot : ruleTemplateInformationSlot EOF ;
    public final void entryRuleTemplateInformationSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:319:1: ( ruleTemplateInformationSlot EOF )
            // InternalEtlParser.g:320:1: ruleTemplateInformationSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateInformationSlot"


    // $ANTLR start "ruleTemplateInformationSlot"
    // InternalEtlParser.g:327:1: ruleTemplateInformationSlot : ( ( rule__TemplateInformationSlot__Group__0 ) ) ;
    public final void ruleTemplateInformationSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:331:2: ( ( ( rule__TemplateInformationSlot__Group__0 ) ) )
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            {
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            // InternalEtlParser.g:333:3: ( rule__TemplateInformationSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:334:3: ( rule__TemplateInformationSlot__Group__0 )
            // InternalEtlParser.g:334:4: rule__TemplateInformationSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateInformationSlot"


    // $ANTLR start "entryRuleConcreteValueReplacementSlot"
    // InternalEtlParser.g:343:1: entryRuleConcreteValueReplacementSlot : ruleConcreteValueReplacementSlot EOF ;
    public final void entryRuleConcreteValueReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:344:1: ( ruleConcreteValueReplacementSlot EOF )
            // InternalEtlParser.g:345:1: ruleConcreteValueReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConcreteValueReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConcreteValueReplacementSlot"


    // $ANTLR start "ruleConcreteValueReplacementSlot"
    // InternalEtlParser.g:352:1: ruleConcreteValueReplacementSlot : ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) ;
    public final void ruleConcreteValueReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:356:2: ( ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:358:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:359:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            // InternalEtlParser.g:359:4: rule__ConcreteValueReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConcreteValueReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConcreteValueReplacementSlot"


    // $ANTLR start "entryRuleStringReplacementSlot"
    // InternalEtlParser.g:368:1: entryRuleStringReplacementSlot : ruleStringReplacementSlot EOF ;
    public final void entryRuleStringReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:369:1: ( ruleStringReplacementSlot EOF )
            // InternalEtlParser.g:370:1: ruleStringReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringReplacementSlot"


    // $ANTLR start "ruleStringReplacementSlot"
    // InternalEtlParser.g:377:1: ruleStringReplacementSlot : ( ( rule__StringReplacementSlot__Group__0 ) ) ;
    public final void ruleStringReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:381:2: ( ( ( rule__StringReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:383:3: ( rule__StringReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:384:3: ( rule__StringReplacementSlot__Group__0 )
            // InternalEtlParser.g:384:4: rule__StringReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringReplacementSlot"


    // $ANTLR start "entryRuleIntegerReplacementSlot"
    // InternalEtlParser.g:393:1: entryRuleIntegerReplacementSlot : ruleIntegerReplacementSlot EOF ;
    public final void entryRuleIntegerReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:394:1: ( ruleIntegerReplacementSlot EOF )
            // InternalEtlParser.g:395:1: ruleIntegerReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerReplacementSlot"


    // $ANTLR start "ruleIntegerReplacementSlot"
    // InternalEtlParser.g:402:1: ruleIntegerReplacementSlot : ( ( rule__IntegerReplacementSlot__Group__0 ) ) ;
    public final void ruleIntegerReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:406:2: ( ( ( rule__IntegerReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:408:3: ( rule__IntegerReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:409:3: ( rule__IntegerReplacementSlot__Group__0 )
            // InternalEtlParser.g:409:4: rule__IntegerReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerReplacementSlot"


    // $ANTLR start "entryRuleDecimalReplacementSlot"
    // InternalEtlParser.g:418:1: entryRuleDecimalReplacementSlot : ruleDecimalReplacementSlot EOF ;
    public final void entryRuleDecimalReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:419:1: ( ruleDecimalReplacementSlot EOF )
            // InternalEtlParser.g:420:1: ruleDecimalReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalReplacementSlot"


    // $ANTLR start "ruleDecimalReplacementSlot"
    // InternalEtlParser.g:427:1: ruleDecimalReplacementSlot : ( ( rule__DecimalReplacementSlot__Group__0 ) ) ;
    public final void ruleDecimalReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:431:2: ( ( ( rule__DecimalReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:433:3: ( rule__DecimalReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:434:3: ( rule__DecimalReplacementSlot__Group__0 )
            // InternalEtlParser.g:434:4: rule__DecimalReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalReplacementSlot"


    // $ANTLR start "entryRuleEtlCardinality"
    // InternalEtlParser.g:443:1: entryRuleEtlCardinality : ruleEtlCardinality EOF ;
    public final void entryRuleEtlCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:444:1: ( ruleEtlCardinality EOF )
            // InternalEtlParser.g:445:1: ruleEtlCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEtlCardinality"


    // $ANTLR start "ruleEtlCardinality"
    // InternalEtlParser.g:452:1: ruleEtlCardinality : ( ( rule__EtlCardinality__Group__0 ) ) ;
    public final void ruleEtlCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:456:2: ( ( ( rule__EtlCardinality__Group__0 ) ) )
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            {
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            // InternalEtlParser.g:458:3: ( rule__EtlCardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:459:3: ( rule__EtlCardinality__Group__0 )
            // InternalEtlParser.g:459:4: rule__EtlCardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEtlCardinality"


    // $ANTLR start "entryRuleConceptReplacementSlot"
    // InternalEtlParser.g:468:1: entryRuleConceptReplacementSlot : ruleConceptReplacementSlot EOF ;
    public final void entryRuleConceptReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:469:1: ( ruleConceptReplacementSlot EOF )
            // InternalEtlParser.g:470:1: ruleConceptReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReplacementSlot"


    // $ANTLR start "ruleConceptReplacementSlot"
    // InternalEtlParser.g:477:1: ruleConceptReplacementSlot : ( ( rule__ConceptReplacementSlot__Alternatives ) ) ;
    public final void ruleConceptReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:481:2: ( ( ( rule__ConceptReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:483:3: ( rule__ConceptReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:484:3: ( rule__ConceptReplacementSlot__Alternatives )
            // InternalEtlParser.g:484:4: rule__ConceptReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReplacementSlot"


    // $ANTLR start "entryRuleConceptReference"
    // InternalEtlParser.g:493:1: entryRuleConceptReference : ruleConceptReference EOF ;
    public final void entryRuleConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:494:1: ( ruleConceptReference EOF )
            // InternalEtlParser.g:495:1: ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalEtlParser.g:502:1: ruleConceptReference : ( ( rule__ConceptReference__Alternatives ) ) ;
    public final void ruleConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:506:2: ( ( ( rule__ConceptReference__Alternatives ) ) )
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            {
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            // InternalEtlParser.g:508:3: ( rule__ConceptReference__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:509:3: ( rule__ConceptReference__Alternatives )
            // InternalEtlParser.g:509:4: rule__ConceptReference__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleSlotToken"
    // InternalEtlParser.g:518:1: entryRuleSlotToken : ruleSlotToken EOF ;
    public final void entryRuleSlotToken() throws RecognitionException {
        try {
            // InternalEtlParser.g:519:1: ( ruleSlotToken EOF )
            // InternalEtlParser.g:520:1: ruleSlotToken EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotToken"


    // $ANTLR start "ruleSlotToken"
    // InternalEtlParser.g:527:1: ruleSlotToken : ( ( rule__SlotToken__Alternatives ) ) ;
    public final void ruleSlotToken() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:531:2: ( ( ( rule__SlotToken__Alternatives ) ) )
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            {
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            // InternalEtlParser.g:533:3: ( rule__SlotToken__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:534:3: ( rule__SlotToken__Alternatives )
            // InternalEtlParser.g:534:4: rule__SlotToken__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotToken__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotToken"


    // $ANTLR start "entryRuleStringValue"
    // InternalEtlParser.g:543:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:544:1: ( ruleStringValue EOF )
            // InternalEtlParser.g:545:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalEtlParser.g:552:1: ruleStringValue : ( ( rule__StringValue__ValueAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:556:2: ( ( ( rule__StringValue__ValueAssignment ) ) )
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            {
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            // InternalEtlParser.g:558:3: ( rule__StringValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }
            // InternalEtlParser.g:559:3: ( rule__StringValue__ValueAssignment )
            // InternalEtlParser.g:559:4: rule__StringValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalEtlParser.g:568:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:569:1: ( ruleIntegerValue EOF )
            // InternalEtlParser.g:570:1: ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalEtlParser.g:577:1: ruleIntegerValue : ( ( rule__IntegerValue__Group__0 ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:581:2: ( ( ( rule__IntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            // InternalEtlParser.g:583:3: ( rule__IntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:584:3: ( rule__IntegerValue__Group__0 )
            // InternalEtlParser.g:584:4: rule__IntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleDecimalValue"
    // InternalEtlParser.g:593:1: entryRuleDecimalValue : ruleDecimalValue EOF ;
    public final void entryRuleDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:594:1: ( ruleDecimalValue EOF )
            // InternalEtlParser.g:595:1: ruleDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValue"


    // $ANTLR start "ruleDecimalValue"
    // InternalEtlParser.g:602:1: ruleDecimalValue : ( ( rule__DecimalValue__Group__0 ) ) ;
    public final void ruleDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:606:2: ( ( ( rule__DecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            // InternalEtlParser.g:608:3: ( rule__DecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:609:3: ( rule__DecimalValue__Group__0 )
            // InternalEtlParser.g:609:4: rule__DecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValue"


    // $ANTLR start "entryRuleSlotInteger"
    // InternalEtlParser.g:618:1: entryRuleSlotInteger : ruleSlotInteger EOF ;
    public final void entryRuleSlotInteger() throws RecognitionException {
        try {
            // InternalEtlParser.g:619:1: ( ruleSlotInteger EOF )
            // InternalEtlParser.g:620:1: ruleSlotInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotInteger"


    // $ANTLR start "ruleSlotInteger"
    // InternalEtlParser.g:627:1: ruleSlotInteger : ( ( rule__SlotInteger__Alternatives ) ) ;
    public final void ruleSlotInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:631:2: ( ( ( rule__SlotInteger__Alternatives ) ) )
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            {
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            // InternalEtlParser.g:633:3: ( rule__SlotInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:634:3: ( rule__SlotInteger__Alternatives )
            // InternalEtlParser.g:634:4: rule__SlotInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotInteger"


    // $ANTLR start "entryRuleSlotIntegerValue"
    // InternalEtlParser.g:643:1: entryRuleSlotIntegerValue : ruleSlotIntegerValue EOF ;
    public final void entryRuleSlotIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:644:1: ( ruleSlotIntegerValue EOF )
            // InternalEtlParser.g:645:1: ruleSlotIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerValue"


    // $ANTLR start "ruleSlotIntegerValue"
    // InternalEtlParser.g:652:1: ruleSlotIntegerValue : ( ( rule__SlotIntegerValue__Group__0 ) ) ;
    public final void ruleSlotIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:656:2: ( ( ( rule__SlotIntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            // InternalEtlParser.g:658:3: ( rule__SlotIntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:659:3: ( rule__SlotIntegerValue__Group__0 )
            // InternalEtlParser.g:659:4: rule__SlotIntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerValue"


    // $ANTLR start "entryRuleSlotIntegerRange"
    // InternalEtlParser.g:668:1: entryRuleSlotIntegerRange : ruleSlotIntegerRange EOF ;
    public final void entryRuleSlotIntegerRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:669:1: ( ruleSlotIntegerRange EOF )
            // InternalEtlParser.g:670:1: ruleSlotIntegerRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerRange"


    // $ANTLR start "ruleSlotIntegerRange"
    // InternalEtlParser.g:677:1: ruleSlotIntegerRange : ( ( rule__SlotIntegerRange__Alternatives ) ) ;
    public final void ruleSlotIntegerRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:681:2: ( ( ( rule__SlotIntegerRange__Alternatives ) ) )
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            {
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            // InternalEtlParser.g:683:3: ( rule__SlotIntegerRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:684:3: ( rule__SlotIntegerRange__Alternatives )
            // InternalEtlParser.g:684:4: rule__SlotIntegerRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerRange"


    // $ANTLR start "entryRuleSlotIntegerMinimumValue"
    // InternalEtlParser.g:693:1: entryRuleSlotIntegerMinimumValue : ruleSlotIntegerMinimumValue EOF ;
    public final void entryRuleSlotIntegerMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:694:1: ( ruleSlotIntegerMinimumValue EOF )
            // InternalEtlParser.g:695:1: ruleSlotIntegerMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMinimumValue"


    // $ANTLR start "ruleSlotIntegerMinimumValue"
    // InternalEtlParser.g:702:1: ruleSlotIntegerMinimumValue : ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:706:2: ( ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            // InternalEtlParser.g:708:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:709:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            // InternalEtlParser.g:709:4: rule__SlotIntegerMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMinimumValue"


    // $ANTLR start "entryRuleSlotIntegerMaximumValue"
    // InternalEtlParser.g:718:1: entryRuleSlotIntegerMaximumValue : ruleSlotIntegerMaximumValue EOF ;
    public final void entryRuleSlotIntegerMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:719:1: ( ruleSlotIntegerMaximumValue EOF )
            // InternalEtlParser.g:720:1: ruleSlotIntegerMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMaximumValue"


    // $ANTLR start "ruleSlotIntegerMaximumValue"
    // InternalEtlParser.g:727:1: ruleSlotIntegerMaximumValue : ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:731:2: ( ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            // InternalEtlParser.g:733:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:734:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            // InternalEtlParser.g:734:4: rule__SlotIntegerMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMaximumValue"


    // $ANTLR start "entryRuleSlotDecimal"
    // InternalEtlParser.g:743:1: entryRuleSlotDecimal : ruleSlotDecimal EOF ;
    public final void entryRuleSlotDecimal() throws RecognitionException {
        try {
            // InternalEtlParser.g:744:1: ( ruleSlotDecimal EOF )
            // InternalEtlParser.g:745:1: ruleSlotDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimal"


    // $ANTLR start "ruleSlotDecimal"
    // InternalEtlParser.g:752:1: ruleSlotDecimal : ( ( rule__SlotDecimal__Alternatives ) ) ;
    public final void ruleSlotDecimal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:756:2: ( ( ( rule__SlotDecimal__Alternatives ) ) )
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            {
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            // InternalEtlParser.g:758:3: ( rule__SlotDecimal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:759:3: ( rule__SlotDecimal__Alternatives )
            // InternalEtlParser.g:759:4: rule__SlotDecimal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimal"


    // $ANTLR start "entryRuleSlotDecimalValue"
    // InternalEtlParser.g:768:1: entryRuleSlotDecimalValue : ruleSlotDecimalValue EOF ;
    public final void entryRuleSlotDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:769:1: ( ruleSlotDecimalValue EOF )
            // InternalEtlParser.g:770:1: ruleSlotDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalValue"


    // $ANTLR start "ruleSlotDecimalValue"
    // InternalEtlParser.g:777:1: ruleSlotDecimalValue : ( ( rule__SlotDecimalValue__Group__0 ) ) ;
    public final void ruleSlotDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:781:2: ( ( ( rule__SlotDecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            // InternalEtlParser.g:783:3: ( rule__SlotDecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:784:3: ( rule__SlotDecimalValue__Group__0 )
            // InternalEtlParser.g:784:4: rule__SlotDecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalValue"


    // $ANTLR start "entryRuleSlotDecimalRange"
    // InternalEtlParser.g:793:1: entryRuleSlotDecimalRange : ruleSlotDecimalRange EOF ;
    public final void entryRuleSlotDecimalRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:794:1: ( ruleSlotDecimalRange EOF )
            // InternalEtlParser.g:795:1: ruleSlotDecimalRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalRange"


    // $ANTLR start "ruleSlotDecimalRange"
    // InternalEtlParser.g:802:1: ruleSlotDecimalRange : ( ( rule__SlotDecimalRange__Alternatives ) ) ;
    public final void ruleSlotDecimalRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:806:2: ( ( ( rule__SlotDecimalRange__Alternatives ) ) )
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            {
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            // InternalEtlParser.g:808:3: ( rule__SlotDecimalRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:809:3: ( rule__SlotDecimalRange__Alternatives )
            // InternalEtlParser.g:809:4: rule__SlotDecimalRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalRange"


    // $ANTLR start "entryRuleSlotDecimalMinimumValue"
    // InternalEtlParser.g:818:1: entryRuleSlotDecimalMinimumValue : ruleSlotDecimalMinimumValue EOF ;
    public final void entryRuleSlotDecimalMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:819:1: ( ruleSlotDecimalMinimumValue EOF )
            // InternalEtlParser.g:820:1: ruleSlotDecimalMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMinimumValue"


    // $ANTLR start "ruleSlotDecimalMinimumValue"
    // InternalEtlParser.g:827:1: ruleSlotDecimalMinimumValue : ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:831:2: ( ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            // InternalEtlParser.g:833:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:834:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            // InternalEtlParser.g:834:4: rule__SlotDecimalMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMinimumValue"


    // $ANTLR start "entryRuleSlotDecimalMaximumValue"
    // InternalEtlParser.g:843:1: entryRuleSlotDecimalMaximumValue : ruleSlotDecimalMaximumValue EOF ;
    public final void entryRuleSlotDecimalMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:844:1: ( ruleSlotDecimalMaximumValue EOF )
            // InternalEtlParser.g:845:1: ruleSlotDecimalMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMaximumValue"


    // $ANTLR start "ruleSlotDecimalMaximumValue"
    // InternalEtlParser.g:852:1: ruleSlotDecimalMaximumValue : ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:856:2: ( ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            // InternalEtlParser.g:858:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:859:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            // InternalEtlParser.g:859:4: rule__SlotDecimalMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMaximumValue"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEtlParser.g:868:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:869:1: ( ruleExpressionConstraint EOF )
            // InternalEtlParser.g:870:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEtlParser.g:877:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:881:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            {
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            // InternalEtlParser.g:883:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEtlParser.g:893:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:894:1: ( ruleOrExpressionConstraint EOF )
            // InternalEtlParser.g:895:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEtlParser.g:902:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:906:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:908:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:909:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEtlParser.g:909:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEtlParser.g:918:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:919:1: ( ruleAndExpressionConstraint EOF )
            // InternalEtlParser.g:920:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEtlParser.g:927:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:931:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:933:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:934:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEtlParser.g:934:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEtlParser.g:943:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:944:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEtlParser.g:945:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEtlParser.g:952:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:956:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:958:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:959:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEtlParser.g:959:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEtlParser.g:968:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:969:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEtlParser.g:970:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEtlParser.g:977:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:981:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:983:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:984:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:984:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEtlParser.g:993:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:994:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEtlParser.g:995:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEtlParser.g:1002:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1006:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1008:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1009:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1009:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEtlParser.g:1018:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1019:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEtlParser.g:1020:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEtlParser.g:1027:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1031:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1032:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1032:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1033:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1034:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1034:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEtlParser.g:1043:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1044:1: ( ruleSubExpressionConstraint EOF )
            // InternalEtlParser.g:1045:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEtlParser.g:1052:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1056:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEtlParser.g:1057:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEtlParser.g:1057:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEtlParser.g:1058:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1059:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEtlParser.g:1059:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEtlParser.g:1068:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:1069:1: ( ruleEclFocusConcept EOF )
            // InternalEtlParser.g:1070:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEtlParser.g:1077:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1081:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEtlParser.g:1082:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEtlParser.g:1082:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEtlParser.g:1083:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1084:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEtlParser.g:1084:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEtlParser.g:1093:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1094:1: ( ruleChildOf EOF )
            // InternalEtlParser.g:1095:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEtlParser.g:1102:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1106:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEtlParser.g:1107:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEtlParser.g:1107:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEtlParser.g:1108:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1109:3: ( rule__ChildOf__Group__0 )
            // InternalEtlParser.g:1109:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEtlParser.g:1118:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1119:1: ( ruleChildOrSelfOf EOF )
            // InternalEtlParser.g:1120:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEtlParser.g:1127:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1131:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1133:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1134:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEtlParser.g:1134:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEtlParser.g:1143:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1144:1: ( ruleDescendantOf EOF )
            // InternalEtlParser.g:1145:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEtlParser.g:1152:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1156:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEtlParser.g:1157:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEtlParser.g:1157:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEtlParser.g:1158:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1159:3: ( rule__DescendantOf__Group__0 )
            // InternalEtlParser.g:1159:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEtlParser.g:1168:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1169:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEtlParser.g:1170:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEtlParser.g:1177:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1181:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1183:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1184:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEtlParser.g:1184:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEtlParser.g:1193:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1194:1: ( ruleParentOf EOF )
            // InternalEtlParser.g:1195:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEtlParser.g:1202:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1206:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEtlParser.g:1207:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEtlParser.g:1207:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEtlParser.g:1208:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1209:3: ( rule__ParentOf__Group__0 )
            // InternalEtlParser.g:1209:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEtlParser.g:1218:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1219:1: ( ruleParentOrSelfOf EOF )
            // InternalEtlParser.g:1220:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEtlParser.g:1227:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1231:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1233:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1234:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEtlParser.g:1234:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEtlParser.g:1243:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1244:1: ( ruleAncestorOf EOF )
            // InternalEtlParser.g:1245:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEtlParser.g:1252:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1256:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEtlParser.g:1257:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEtlParser.g:1257:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEtlParser.g:1258:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1259:3: ( rule__AncestorOf__Group__0 )
            // InternalEtlParser.g:1259:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEtlParser.g:1268:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1269:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEtlParser.g:1270:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEtlParser.g:1277:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1281:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1283:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1284:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEtlParser.g:1284:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEtlParser.g:1293:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1294:1: ( ruleMemberOf EOF )
            // InternalEtlParser.g:1295:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEtlParser.g:1302:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1306:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEtlParser.g:1307:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEtlParser.g:1307:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEtlParser.g:1308:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1309:3: ( rule__MemberOf__Group__0 )
            // InternalEtlParser.g:1309:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEtlParser.g:1318:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:1319:1: ( ruleEclConceptReference EOF )
            // InternalEtlParser.g:1320:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEtlParser.g:1327:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1331:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEtlParser.g:1332:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEtlParser.g:1332:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEtlParser.g:1333:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEtlParser.g:1334:3: ( rule__EclConceptReference__Group__0 )
            // InternalEtlParser.g:1334:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEtlParser.g:1343:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1344:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEtlParser.g:1345:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEtlParser.g:1352:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1356:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEtlParser.g:1358:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1359:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEtlParser.g:1359:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEtlParser.g:1368:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEtlParser.g:1369:1: ( ruleAny EOF )
            // InternalEtlParser.g:1370:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEtlParser.g:1377:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1381:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEtlParser.g:1382:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEtlParser.g:1382:2: ( ( rule__Any__Group__0 ) )
            // InternalEtlParser.g:1383:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEtlParser.g:1384:3: ( rule__Any__Group__0 )
            // InternalEtlParser.g:1384:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEtlParser.g:1393:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1394:1: ( ruleEclRefinement EOF )
            // InternalEtlParser.g:1395:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEtlParser.g:1402:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1406:2: ( ( ruleOrRefinement ) )
            // InternalEtlParser.g:1407:2: ( ruleOrRefinement )
            {
            // InternalEtlParser.g:1407:2: ( ruleOrRefinement )
            // InternalEtlParser.g:1408:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEtlParser.g:1418:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1419:1: ( ruleOrRefinement EOF )
            // InternalEtlParser.g:1420:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEtlParser.g:1427:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1431:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1432:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1432:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEtlParser.g:1433:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1434:3: ( rule__OrRefinement__Group__0 )
            // InternalEtlParser.g:1434:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEtlParser.g:1443:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1444:1: ( ruleAndRefinement EOF )
            // InternalEtlParser.g:1445:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEtlParser.g:1452:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1456:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1457:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1457:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEtlParser.g:1458:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1459:3: ( rule__AndRefinement__Group__0 )
            // InternalEtlParser.g:1459:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEtlParser.g:1468:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1469:1: ( ruleSubRefinement EOF )
            // InternalEtlParser.g:1470:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEtlParser.g:1477:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1481:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEtlParser.g:1482:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEtlParser.g:1482:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEtlParser.g:1483:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1484:3: ( rule__SubRefinement__Alternatives )
            // InternalEtlParser.g:1484:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEtlParser.g:1493:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1494:1: ( ruleNestedRefinement EOF )
            // InternalEtlParser.g:1495:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEtlParser.g:1502:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1506:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1507:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1507:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEtlParser.g:1508:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1509:3: ( rule__NestedRefinement__Group__0 )
            // InternalEtlParser.g:1509:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEtlParser.g:1518:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:1519:1: ( ruleEclAttributeGroup EOF )
            // InternalEtlParser.g:1520:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEtlParser.g:1527:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1531:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:1532:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:1532:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEtlParser.g:1533:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:1534:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEtlParser.g:1534:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEtlParser.g:1543:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1544:1: ( ruleEclAttributeSet EOF )
            // InternalEtlParser.g:1545:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEtlParser.g:1552:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1556:2: ( ( ruleOrAttributeSet ) )
            // InternalEtlParser.g:1557:2: ( ruleOrAttributeSet )
            {
            // InternalEtlParser.g:1557:2: ( ruleOrAttributeSet )
            // InternalEtlParser.g:1558:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEtlParser.g:1568:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1569:1: ( ruleOrAttributeSet EOF )
            // InternalEtlParser.g:1570:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEtlParser.g:1577:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1581:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1582:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1582:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1583:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1584:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEtlParser.g:1584:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEtlParser.g:1593:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1594:1: ( ruleAndAttributeSet EOF )
            // InternalEtlParser.g:1595:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEtlParser.g:1602:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1606:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1607:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1607:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1608:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1609:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEtlParser.g:1609:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEtlParser.g:1618:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1619:1: ( ruleSubAttributeSet EOF )
            // InternalEtlParser.g:1620:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEtlParser.g:1627:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1631:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEtlParser.g:1632:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEtlParser.g:1632:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEtlParser.g:1633:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1634:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEtlParser.g:1634:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEtlParser.g:1643:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1644:1: ( ruleNestedAttributeSet EOF )
            // InternalEtlParser.g:1645:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEtlParser.g:1652:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1656:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1657:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1657:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1658:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1659:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEtlParser.g:1659:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEtlParser.g:1668:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1669:1: ( ruleAttributeConstraint EOF )
            // InternalEtlParser.g:1670:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEtlParser.g:1677:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1681:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1682:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1682:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEtlParser.g:1683:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1684:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEtlParser.g:1684:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEtlParser.g:1693:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:1694:1: ( ruleCardinality EOF )
            // InternalEtlParser.g:1695:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEtlParser.g:1702:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1706:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEtlParser.g:1707:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEtlParser.g:1707:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEtlParser.g:1708:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:1709:3: ( rule__Cardinality__Group__0 )
            // InternalEtlParser.g:1709:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEtlParser.g:1718:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1719:1: ( ruleComparison EOF )
            // InternalEtlParser.g:1720:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEtlParser.g:1727:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1731:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEtlParser.g:1732:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEtlParser.g:1732:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEtlParser.g:1733:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1734:3: ( rule__Comparison__Alternatives )
            // InternalEtlParser.g:1734:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEtlParser.g:1743:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1744:1: ( ruleAttributeComparison EOF )
            // InternalEtlParser.g:1745:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEtlParser.g:1752:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1756:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEtlParser.g:1757:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1757:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEtlParser.g:1758:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1759:3: ( rule__AttributeComparison__Group__0 )
            // InternalEtlParser.g:1759:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEtlParser.g:1768:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1769:1: ( ruleDataTypeComparison EOF )
            // InternalEtlParser.g:1770:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEtlParser.g:1777:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1781:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEtlParser.g:1782:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEtlParser.g:1782:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEtlParser.g:1783:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1784:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEtlParser.g:1784:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEtlParser.g:1793:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1794:1: ( ruleBooleanValueComparison EOF )
            // InternalEtlParser.g:1795:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEtlParser.g:1802:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1806:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1807:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1807:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEtlParser.g:1808:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1809:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEtlParser.g:1809:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEtlParser.g:1818:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1819:1: ( ruleStringValueComparison EOF )
            // InternalEtlParser.g:1820:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEtlParser.g:1827:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1831:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1832:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1832:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEtlParser.g:1833:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1834:3: ( rule__StringValueComparison__Group__0 )
            // InternalEtlParser.g:1834:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEtlParser.g:1843:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1844:1: ( ruleIntegerValueComparison EOF )
            // InternalEtlParser.g:1845:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEtlParser.g:1852:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1856:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1857:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1857:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEtlParser.g:1858:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1859:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEtlParser.g:1859:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEtlParser.g:1868:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1869:1: ( ruleDecimalValueComparison EOF )
            // InternalEtlParser.g:1870:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEtlParser.g:1877:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1881:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1882:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1882:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEtlParser.g:1883:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1884:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEtlParser.g:1884:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEtlParser.g:1893:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:1894:1: ( ruleNestedExpression EOF )
            // InternalEtlParser.g:1895:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEtlParser.g:1902:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1906:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEtlParser.g:1907:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEtlParser.g:1907:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEtlParser.g:1908:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:1909:3: ( rule__NestedExpression__Group__0 )
            // InternalEtlParser.g:1909:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEtlParser.g:1918:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1919:1: ( ruleFilterConstraint EOF )
            // InternalEtlParser.g:1920:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEtlParser.g:1927:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1931:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1932:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1932:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEtlParser.g:1933:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1934:3: ( rule__FilterConstraint__Group__0 )
            // InternalEtlParser.g:1934:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEtlParser.g:1943:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1944:1: ( ruleFilter EOF )
            // InternalEtlParser.g:1945:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEtlParser.g:1952:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1956:2: ( ( ruleDisjunctionFilter ) )
            // InternalEtlParser.g:1957:2: ( ruleDisjunctionFilter )
            {
            // InternalEtlParser.g:1957:2: ( ruleDisjunctionFilter )
            // InternalEtlParser.g:1958:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEtlParser.g:1968:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1969:1: ( ruleDisjunctionFilter EOF )
            // InternalEtlParser.g:1970:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEtlParser.g:1977:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1981:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:1982:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:1982:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:1983:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:1984:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEtlParser.g:1984:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEtlParser.g:1993:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1994:1: ( ruleConjunctionFilter EOF )
            // InternalEtlParser.g:1995:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEtlParser.g:2002:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2006:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:2007:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2007:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:2008:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2009:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEtlParser.g:2009:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEtlParser.g:2018:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2019:1: ( ruleNestedFilter EOF )
            // InternalEtlParser.g:2020:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEtlParser.g:2027:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2031:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEtlParser.g:2032:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2032:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEtlParser.g:2033:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2034:3: ( rule__NestedFilter__Group__0 )
            // InternalEtlParser.g:2034:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEtlParser.g:2043:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2044:1: ( rulePropertyFilter EOF )
            // InternalEtlParser.g:2045:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEtlParser.g:2052:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2056:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEtlParser.g:2057:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2057:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEtlParser.g:2058:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2059:3: ( rule__PropertyFilter__Alternatives )
            // InternalEtlParser.g:2059:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEtlParser.g:2068:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2069:1: ( ruleTermFilter EOF )
            // InternalEtlParser.g:2070:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEtlParser.g:2077:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2081:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEtlParser.g:2082:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2082:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEtlParser.g:2083:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2084:3: ( rule__TermFilter__Group__0 )
            // InternalEtlParser.g:2084:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEtlParser.g:2093:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2094:1: ( ruleTypedTermFilter EOF )
            // InternalEtlParser.g:2095:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEtlParser.g:2102:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2106:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEtlParser.g:2107:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2107:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEtlParser.g:2108:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2109:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEtlParser.g:2109:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEtlParser.g:2118:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2119:1: ( ruleTypedTermFilterSet EOF )
            // InternalEtlParser.g:2120:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEtlParser.g:2127:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2131:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEtlParser.g:2132:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEtlParser.g:2132:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEtlParser.g:2133:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:2134:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEtlParser.g:2134:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleTypedTermFilterClause"
    // InternalEtlParser.g:2143:1: entryRuleTypedTermFilterClause : ruleTypedTermFilterClause EOF ;
    public final void entryRuleTypedTermFilterClause() throws RecognitionException {
        try {
            // InternalEtlParser.g:2144:1: ( ruleTypedTermFilterClause EOF )
            // InternalEtlParser.g:2145:1: ruleTypedTermFilterClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterClause"


    // $ANTLR start "ruleTypedTermFilterClause"
    // InternalEtlParser.g:2152:1: ruleTypedTermFilterClause : ( ( rule__TypedTermFilterClause__Alternatives ) ) ;
    public final void ruleTypedTermFilterClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2156:2: ( ( ( rule__TypedTermFilterClause__Alternatives ) ) )
            // InternalEtlParser.g:2157:2: ( ( rule__TypedTermFilterClause__Alternatives ) )
            {
            // InternalEtlParser.g:2157:2: ( ( rule__TypedTermFilterClause__Alternatives ) )
            // InternalEtlParser.g:2158:3: ( rule__TypedTermFilterClause__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2159:3: ( rule__TypedTermFilterClause__Alternatives )
            // InternalEtlParser.g:2159:4: rule__TypedTermFilterClause__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterClause"


    // $ANTLR start "entryRuleRegularExpression"
    // InternalEtlParser.g:2168:1: entryRuleRegularExpression : ruleRegularExpression EOF ;
    public final void entryRuleRegularExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:2169:1: ( ruleRegularExpression EOF )
            // InternalEtlParser.g:2170:1: ruleRegularExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRegularExpression"


    // $ANTLR start "ruleRegularExpression"
    // InternalEtlParser.g:2177:1: ruleRegularExpression : ( RULE_STRING ) ;
    public final void ruleRegularExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2181:2: ( ( RULE_STRING ) )
            // InternalEtlParser.g:2182:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:2182:2: ( RULE_STRING )
            // InternalEtlParser.g:2183:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRegularExpression"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEtlParser.g:2193:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2194:1: ( ruleLanguageFilter EOF )
            // InternalEtlParser.g:2195:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEtlParser.g:2202:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2206:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEtlParser.g:2207:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2207:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEtlParser.g:2208:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2209:3: ( rule__LanguageFilter__Group__0 )
            // InternalEtlParser.g:2209:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEtlParser.g:2218:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2219:1: ( ruleTypeFilter EOF )
            // InternalEtlParser.g:2220:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEtlParser.g:2227:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2231:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEtlParser.g:2232:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2232:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEtlParser.g:2233:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2234:3: ( rule__TypeFilter__Alternatives )
            // InternalEtlParser.g:2234:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEtlParser.g:2243:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2244:1: ( ruleTypeIdFilter EOF )
            // InternalEtlParser.g:2245:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEtlParser.g:2252:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2256:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2257:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2257:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEtlParser.g:2258:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2259:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEtlParser.g:2259:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEtlParser.g:2268:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2269:1: ( ruleTypeTokenFilter EOF )
            // InternalEtlParser.g:2270:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEtlParser.g:2277:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2281:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEtlParser.g:2282:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2282:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEtlParser.g:2283:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2284:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEtlParser.g:2284:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEtlParser.g:2293:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2294:1: ( ruleDialectFilter EOF )
            // InternalEtlParser.g:2295:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEtlParser.g:2302:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2306:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEtlParser.g:2307:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2307:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEtlParser.g:2308:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2309:3: ( rule__DialectFilter__Alternatives )
            // InternalEtlParser.g:2309:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEtlParser.g:2318:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2319:1: ( ruleDialectIdFilter EOF )
            // InternalEtlParser.g:2320:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEtlParser.g:2327:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2331:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2332:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2332:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEtlParser.g:2333:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2334:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEtlParser.g:2334:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEtlParser.g:2343:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2344:1: ( ruleDialectAliasFilter EOF )
            // InternalEtlParser.g:2345:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEtlParser.g:2352:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2356:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEtlParser.g:2357:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2357:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEtlParser.g:2358:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2359:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEtlParser.g:2359:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEtlParser.g:2368:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEtlParser.g:2369:1: ( ruleDialect EOF )
            // InternalEtlParser.g:2370:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEtlParser.g:2377:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2381:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEtlParser.g:2382:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEtlParser.g:2382:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEtlParser.g:2383:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEtlParser.g:2384:3: ( rule__Dialect__Group__0 )
            // InternalEtlParser.g:2384:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEtlParser.g:2393:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2397:1: ( ruleDialectAlias EOF )
            // InternalEtlParser.g:2398:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEtlParser.g:2408:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2413:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEtlParser.g:2414:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEtlParser.g:2414:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEtlParser.g:2415:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEtlParser.g:2416:3: ( rule__DialectAlias__Group__0 )
            // InternalEtlParser.g:2416:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEtlParser.g:2426:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEtlParser.g:2427:1: ( ruleAcceptability EOF )
            // InternalEtlParser.g:2428:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEtlParser.g:2435:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2439:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEtlParser.g:2440:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEtlParser.g:2440:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEtlParser.g:2441:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2442:3: ( rule__Acceptability__Alternatives )
            // InternalEtlParser.g:2442:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEtlParser.g:2451:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2452:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEtlParser.g:2453:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEtlParser.g:2460:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2464:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEtlParser.g:2465:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEtlParser.g:2465:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEtlParser.g:2466:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEtlParser.g:2467:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEtlParser.g:2467:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEtlParser.g:2476:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2477:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEtlParser.g:2478:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEtlParser.g:2485:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2489:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEtlParser.g:2490:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEtlParser.g:2490:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEtlParser.g:2491:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:2492:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEtlParser.g:2492:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEtlParser.g:2501:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2502:1: ( ruleActiveFilter EOF )
            // InternalEtlParser.g:2503:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEtlParser.g:2510:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2514:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEtlParser.g:2515:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2515:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEtlParser.g:2516:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2517:3: ( rule__ActiveFilter__Group__0 )
            // InternalEtlParser.g:2517:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEtlParser.g:2526:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2527:1: ( ruleModuleFilter EOF )
            // InternalEtlParser.g:2528:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEtlParser.g:2535:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2539:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEtlParser.g:2540:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2540:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEtlParser.g:2541:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2542:3: ( rule__ModuleFilter__Group__0 )
            // InternalEtlParser.g:2542:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEtlParser.g:2551:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2552:1: ( ruleSemanticTagFilter EOF )
            // InternalEtlParser.g:2553:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEtlParser.g:2560:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2564:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEtlParser.g:2565:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2565:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEtlParser.g:2566:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2567:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEtlParser.g:2567:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEtlParser.g:2576:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2577:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEtlParser.g:2578:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEtlParser.g:2585:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2589:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEtlParser.g:2590:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2590:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEtlParser.g:2591:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2592:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEtlParser.g:2592:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEtlParser.g:2601:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2602:1: ( rulePreferredInFilter EOF )
            // InternalEtlParser.g:2603:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEtlParser.g:2610:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2614:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2615:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2615:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEtlParser.g:2616:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2617:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEtlParser.g:2617:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEtlParser.g:2626:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2627:1: ( ruleAcceptableInFilter EOF )
            // InternalEtlParser.g:2628:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEtlParser.g:2635:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2639:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2640:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2640:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEtlParser.g:2641:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2642:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEtlParser.g:2642:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEtlParser.g:2651:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2652:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEtlParser.g:2653:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEtlParser.g:2660:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2664:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEtlParser.g:2665:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2665:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEtlParser.g:2666:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2667:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEtlParser.g:2667:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEtlParser.g:2676:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2677:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEtlParser.g:2678:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEtlParser.g:2685:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2689:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEtlParser.g:2690:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2690:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEtlParser.g:2691:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2692:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEtlParser.g:2692:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEtlParser.g:2701:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2705:1: ( ruleSnomedIdentifier EOF )
            // InternalEtlParser.g:2706:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEtlParser.g:2716:1: ruleSnomedIdentifier : ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2721:2: ( ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) )
            // InternalEtlParser.g:2722:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            {
            // InternalEtlParser.g:2722:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            // InternalEtlParser.g:2723:3: ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* )
            {
            // InternalEtlParser.g:2723:3: ( ( rule__SnomedIdentifier__Alternatives ) )
            // InternalEtlParser.g:2724:4: ( rule__SnomedIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2725:4: ( rule__SnomedIdentifier__Alternatives )
            // InternalEtlParser.g:2725:5: rule__SnomedIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__SnomedIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2728:3: ( ( rule__SnomedIdentifier__Alternatives )* )
            // InternalEtlParser.g:2729:4: ( rule__SnomedIdentifier__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2730:4: ( rule__SnomedIdentifier__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT_NONZERO) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEtlParser()) ) {
                        alt1=1;
                    }


                }
                else if ( (LA1_0==RULE_DIGIT_ZERO) ) {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalEtlParser()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEtlParser.g:2730:5: rule__SnomedIdentifier__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__SnomedIdentifier__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEtlParser.g:2741:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2745:1: ( ruleNonNegativeInteger EOF )
            // InternalEtlParser.g:2746:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEtlParser.g:2756:1: ruleNonNegativeInteger : ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2761:2: ( ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) )
            // InternalEtlParser.g:2762:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            {
            // InternalEtlParser.g:2762:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            // InternalEtlParser.g:2763:3: ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* )
            {
            // InternalEtlParser.g:2763:3: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEtlParser.g:2764:4: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2765:4: ( rule__NonNegativeInteger__Alternatives )
            // InternalEtlParser.g:2765:5: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2768:3: ( ( rule__NonNegativeInteger__Alternatives )* )
            // InternalEtlParser.g:2769:4: ( rule__NonNegativeInteger__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2770:4: ( rule__NonNegativeInteger__Alternatives )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=RULE_DIGIT_ZERO && LA2_0<=RULE_DIGIT_NONZERO)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalEtlParser.g:2770:5: rule__NonNegativeInteger__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeInteger__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEtlParser.g:2781:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2785:1: ( ruleNonNegativeDecimal EOF )
            // InternalEtlParser.g:2786:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEtlParser.g:2796:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2801:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEtlParser.g:2802:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEtlParser.g:2802:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEtlParser.g:2803:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2804:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEtlParser.g:2804:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEtlParser.g:2814:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2818:1: ( ruleMaxValue EOF )
            // InternalEtlParser.g:2819:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEtlParser.g:2829:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2834:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEtlParser.g:2835:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEtlParser.g:2835:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEtlParser.g:2836:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2837:3: ( rule__MaxValue__Alternatives )
            // InternalEtlParser.g:2837:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEtlParser.g:2847:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2851:1: ( ruleInteger EOF )
            // InternalEtlParser.g:2852:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEtlParser.g:2862:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2867:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEtlParser.g:2868:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEtlParser.g:2868:2: ( ( rule__Integer__Group__0 ) )
            // InternalEtlParser.g:2869:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEtlParser.g:2870:3: ( rule__Integer__Group__0 )
            // InternalEtlParser.g:2870:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEtlParser.g:2880:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2884:1: ( ruleDecimal EOF )
            // InternalEtlParser.g:2885:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEtlParser.g:2895:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2900:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEtlParser.g:2901:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEtlParser.g:2901:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEtlParser.g:2902:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2903:3: ( rule__Decimal__Group__0 )
            // InternalEtlParser.g:2903:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEtlParser.g:2913:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2917:1: ( ruleBoolean EOF )
            // InternalEtlParser.g:2918:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEtlParser.g:2928:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2933:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEtlParser.g:2934:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEtlParser.g:2934:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEtlParser.g:2935:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2936:3: ( rule__Boolean__Alternatives )
            // InternalEtlParser.g:2936:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleUnquotedString"
    // InternalEtlParser.g:2946:1: entryRuleUnquotedString : ruleUnquotedString EOF ;
    public final void entryRuleUnquotedString() throws RecognitionException {
        try {
            // InternalEtlParser.g:2947:1: ( ruleUnquotedString EOF )
            // InternalEtlParser.g:2948:1: ruleUnquotedString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnquotedString"


    // $ANTLR start "ruleUnquotedString"
    // InternalEtlParser.g:2955:1: ruleUnquotedString : ( ( rule__UnquotedString__Alternatives ) ) ;
    public final void ruleUnquotedString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2959:2: ( ( ( rule__UnquotedString__Alternatives ) ) )
            // InternalEtlParser.g:2960:2: ( ( rule__UnquotedString__Alternatives ) )
            {
            // InternalEtlParser.g:2960:2: ( ( rule__UnquotedString__Alternatives ) )
            // InternalEtlParser.g:2961:3: ( rule__UnquotedString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2962:3: ( rule__UnquotedString__Alternatives )
            // InternalEtlParser.g:2962:4: rule__UnquotedString__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnquotedString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnquotedString"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEtlParser.g:2971:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2975:1: ( ruleDialectAliasValue EOF )
            // InternalEtlParser.g:2976:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEtlParser.g:2986:1: ruleDialectAliasValue : ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2991:2: ( ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) )
            // InternalEtlParser.g:2992:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            {
            // InternalEtlParser.g:2992:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            // InternalEtlParser.g:2993:3: ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* )
            {
            // InternalEtlParser.g:2993:3: ( ( rule__DialectAliasValue__Alternatives ) )
            // InternalEtlParser.g:2994:4: ( rule__DialectAliasValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2995:4: ( rule__DialectAliasValue__Alternatives )
            // InternalEtlParser.g:2995:5: rule__DialectAliasValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2998:3: ( ( rule__DialectAliasValue__Alternatives )* )
            // InternalEtlParser.g:2999:4: ( rule__DialectAliasValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3000:4: ( rule__DialectAliasValue__Alternatives )*
            loop3:
            do {
                int alt3=2;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // InternalEtlParser.g:3000:5: rule__DialectAliasValue__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:3011:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEtlParser.g:3012:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEtlParser.g:3013:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:3020:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3024:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEtlParser.g:3025:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEtlParser.g:3025:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEtlParser.g:3026:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3027:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEtlParser.g:3027:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleDOMAIN"
    // InternalEtlParser.g:3036:1: entryRuleDOMAIN : ruleDOMAIN EOF ;
    public final void entryRuleDOMAIN() throws RecognitionException {
        try {
            // InternalEtlParser.g:3037:1: ( ruleDOMAIN EOF )
            // InternalEtlParser.g:3038:1: ruleDOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDOMAIN"


    // $ANTLR start "ruleDOMAIN"
    // InternalEtlParser.g:3045:1: ruleDOMAIN : ( ( rule__DOMAIN__Alternatives ) ) ;
    public final void ruleDOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3049:2: ( ( ( rule__DOMAIN__Alternatives ) ) )
            // InternalEtlParser.g:3050:2: ( ( rule__DOMAIN__Alternatives ) )
            {
            // InternalEtlParser.g:3050:2: ( ( rule__DOMAIN__Alternatives ) )
            // InternalEtlParser.g:3051:3: ( rule__DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3052:3: ( rule__DOMAIN__Alternatives )
            // InternalEtlParser.g:3052:4: rule__DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3061:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3062:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3063:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3070:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3074:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3075:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3075:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3076:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3077:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3077:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3086:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3087:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3088:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3095:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3099:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3100:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3100:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3101:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3102:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3102:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0"
    // InternalEtlParser.g:3110:1: rule__ExpressionTemplate__Alternatives_1_0 : ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3114:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_EQUIVALENT_TO && LA4_0<=RULE_SUBTYPE_OF)) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalEtlParser.g:3115:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    {
                    // InternalEtlParser.g:3115:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    // InternalEtlParser.g:3116:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }
                    // InternalEtlParser.g:3117:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    // InternalEtlParser.g:3117:4: rule__ExpressionTemplate__Alternatives_1_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3121:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    {
                    // InternalEtlParser.g:3121:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    // InternalEtlParser.g:3122:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }
                    // InternalEtlParser.g:3123:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    // InternalEtlParser.g:3123:4: rule__ExpressionTemplate__SlotAssignment_1_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__SlotAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0_0"
    // InternalEtlParser.g:3131:1: rule__ExpressionTemplate__Alternatives_1_0_0 : ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3135:1: ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_SUBTYPE_OF) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_EQUIVALENT_TO) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalEtlParser.g:3136:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    {
                    // InternalEtlParser.g:3136:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    // InternalEtlParser.g:3137:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }
                    // InternalEtlParser.g:3138:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    // InternalEtlParser.g:3138:4: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3142:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3142:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3143:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0_0"


    // $ANTLR start "rule__Refinement__Alternatives_0"
    // InternalEtlParser.g:3152:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );
    public final void rule__Refinement__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3156:1: ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) )
            int alt6=2;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalEtlParser.g:3157:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    {
                    // InternalEtlParser.g:3157:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    // InternalEtlParser.g:3158:3: ( rule__Refinement__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }
                    // InternalEtlParser.g:3159:3: ( rule__Refinement__Group_0_0__0 )
                    // InternalEtlParser.g:3159:4: rule__Refinement__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3163:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    {
                    // InternalEtlParser.g:3163:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    // InternalEtlParser.g:3164:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }
                    // InternalEtlParser.g:3165:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    // InternalEtlParser.g:3165:4: rule__Refinement__GroupsAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__GroupsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Alternatives_0"


    // $ANTLR start "rule__AttributeValue__Alternatives"
    // InternalEtlParser.g:3173:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );
    public final void rule__AttributeValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3177:1: ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) )
            int alt7=6;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalEtlParser.g:3178:2: ( ruleConceptReference )
                    {
                    // InternalEtlParser.g:3178:2: ( ruleConceptReference )
                    // InternalEtlParser.g:3179:3: ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3184:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3184:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    // InternalEtlParser.g:3185:3: ( rule__AttributeValue__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3186:3: ( rule__AttributeValue__Group_1__0 )
                    // InternalEtlParser.g:3186:4: rule__AttributeValue__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeValue__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3190:2: ( ruleStringValue )
                    {
                    // InternalEtlParser.g:3190:2: ( ruleStringValue )
                    // InternalEtlParser.g:3191:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3196:2: ( ruleIntegerValue )
                    {
                    // InternalEtlParser.g:3196:2: ( ruleIntegerValue )
                    // InternalEtlParser.g:3197:3: ruleIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3202:2: ( ruleDecimalValue )
                    {
                    // InternalEtlParser.g:3202:2: ( ruleDecimalValue )
                    // InternalEtlParser.g:3203:3: ruleDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3208:2: ( ruleConcreteValueReplacementSlot )
                    {
                    // InternalEtlParser.g:3208:2: ( ruleConcreteValueReplacementSlot )
                    // InternalEtlParser.g:3209:3: ruleConcreteValueReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConcreteValueReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Alternatives"


    // $ANTLR start "rule__ConcreteValueReplacementSlot__Alternatives"
    // InternalEtlParser.g:3218:1: rule__ConcreteValueReplacementSlot__Alternatives : ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) );
    public final void rule__ConcreteValueReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3222:1: ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RULE_PLUS) ) {
                    switch ( input.LA(3) ) {
                    case RULE_STR:
                        {
                        alt8=1;
                        }
                        break;
                    case RULE_DEC:
                        {
                        alt8=3;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt8=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEtlParser.g:3223:2: ( ruleStringReplacementSlot )
                    {
                    // InternalEtlParser.g:3223:2: ( ruleStringReplacementSlot )
                    // InternalEtlParser.g:3224:3: ruleStringReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3229:2: ( ruleIntegerReplacementSlot )
                    {
                    // InternalEtlParser.g:3229:2: ( ruleIntegerReplacementSlot )
                    // InternalEtlParser.g:3230:3: ruleIntegerReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3235:2: ( ruleDecimalReplacementSlot )
                    {
                    // InternalEtlParser.g:3235:2: ( ruleDecimalReplacementSlot )
                    // InternalEtlParser.g:3236:3: ruleDecimalReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConcreteValueReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReplacementSlot__Alternatives"
    // InternalEtlParser.g:3245:1: rule__ConceptReplacementSlot__Alternatives : ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) );
    public final void rule__ConceptReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3249:1: ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==RULE_PLUS) ) {
                    int LA9_2 = input.LA(3);

                    if ( (LA9_2==RULE_DOUBLE_SQUARE_CLOSE||LA9_2==RULE_SCG||LA9_2==RULE_SLOTNAME_STRING||LA9_2==RULE_ROUND_OPEN) ) {
                        alt9=2;
                    }
                    else if ( (LA9_2==RULE_ID) ) {
                        alt9=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 9, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalEtlParser.g:3250:2: ( ruleConceptIdReplacementSlot )
                    {
                    // InternalEtlParser.g:3250:2: ( ruleConceptIdReplacementSlot )
                    // InternalEtlParser.g:3251:3: ruleConceptIdReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptIdReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3256:2: ( ruleExpressionReplacementSlot )
                    {
                    // InternalEtlParser.g:3256:2: ( ruleExpressionReplacementSlot )
                    // InternalEtlParser.g:3257:3: ruleExpressionReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpressionReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReference__Alternatives"
    // InternalEtlParser.g:3266:1: rule__ConceptReference__Alternatives : ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) );
    public final void rule__ConceptReference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3270:1: ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=RULE_DIGIT_ZERO && LA10_0<=RULE_DIGIT_NONZERO)) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalEtlParser.g:3271:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    {
                    // InternalEtlParser.g:3271:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    // InternalEtlParser.g:3272:3: ( rule__ConceptReference__SlotAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }
                    // InternalEtlParser.g:3273:3: ( rule__ConceptReference__SlotAssignment_0 )
                    // InternalEtlParser.g:3273:4: rule__ConceptReference__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3277:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3277:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    // InternalEtlParser.g:3278:3: ( rule__ConceptReference__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3279:3: ( rule__ConceptReference__Group_1__0 )
                    // InternalEtlParser.g:3279:4: rule__ConceptReference__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Alternatives"


    // $ANTLR start "rule__SlotToken__Alternatives"
    // InternalEtlParser.g:3287:1: rule__SlotToken__Alternatives : ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__SlotToken__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3291:1: ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt11=18;
            switch ( input.LA(1) ) {
            case RULE_EQUIVALENT_TO:
                {
                alt11=1;
                }
                break;
            case RULE_SUBTYPE_OF:
                {
                alt11=2;
                }
                break;
            case RULE_COMMA:
                {
                alt11=3;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt11=4;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt11=5;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt11=6;
                }
                break;
            case RULE_REVERSED:
                {
                alt11=7;
                }
                break;
            case RULE_CARET:
                {
                alt11=8;
                }
                break;
            case RULE_LT:
                {
                alt11=9;
                }
                break;
            case RULE_LTE:
                {
                alt11=10;
                }
                break;
            case RULE_DBL_LT:
                {
                alt11=11;
                }
                break;
            case RULE_LT_EM:
                {
                alt11=12;
                }
                break;
            case RULE_GT:
                {
                alt11=13;
                }
                break;
            case RULE_GTE:
                {
                alt11=14;
                }
                break;
            case RULE_DBL_GT:
                {
                alt11=15;
                }
                break;
            case RULE_GT_EM:
                {
                alt11=16;
                }
                break;
            case RULE_EQUAL:
                {
                alt11=17;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt11=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalEtlParser.g:3292:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3292:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3293:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3298:2: ( RULE_SUBTYPE_OF )
                    {
                    // InternalEtlParser.g:3298:2: ( RULE_SUBTYPE_OF )
                    // InternalEtlParser.g:3299:3: RULE_SUBTYPE_OF
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3304:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3304:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3305:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3310:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3310:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3311:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3316:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3316:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3317:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3322:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:3322:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:3323:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3328:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:3328:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:3329:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3334:2: ( RULE_CARET )
                    {
                    // InternalEtlParser.g:3334:2: ( RULE_CARET )
                    // InternalEtlParser.g:3335:3: RULE_CARET
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }
                    match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3340:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:3340:2: ( RULE_LT )
                    // InternalEtlParser.g:3341:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3346:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:3346:2: ( RULE_LTE )
                    // InternalEtlParser.g:3347:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3352:2: ( RULE_DBL_LT )
                    {
                    // InternalEtlParser.g:3352:2: ( RULE_DBL_LT )
                    // InternalEtlParser.g:3353:3: RULE_DBL_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }
                    match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3358:2: ( RULE_LT_EM )
                    {
                    // InternalEtlParser.g:3358:2: ( RULE_LT_EM )
                    // InternalEtlParser.g:3359:3: RULE_LT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }
                    match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3364:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:3364:2: ( RULE_GT )
                    // InternalEtlParser.g:3365:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:3370:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:3370:2: ( RULE_GTE )
                    // InternalEtlParser.g:3371:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:3376:2: ( RULE_DBL_GT )
                    {
                    // InternalEtlParser.g:3376:2: ( RULE_DBL_GT )
                    // InternalEtlParser.g:3377:3: RULE_DBL_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }
                    match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:3382:2: ( RULE_GT_EM )
                    {
                    // InternalEtlParser.g:3382:2: ( RULE_GT_EM )
                    // InternalEtlParser.g:3383:3: RULE_GT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }
                    match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:3388:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:3388:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:3389:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:3394:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:3394:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:3395:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotToken__Alternatives"


    // $ANTLR start "rule__SlotInteger__Alternatives"
    // InternalEtlParser.g:3404:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );
    public final void rule__SlotInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3408:1: ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) )
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalEtlParser.g:3409:2: ( ruleSlotIntegerRange )
                    {
                    // InternalEtlParser.g:3409:2: ( ruleSlotIntegerRange )
                    // InternalEtlParser.g:3410:3: ruleSlotIntegerRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3415:2: ( ruleSlotIntegerValue )
                    {
                    // InternalEtlParser.g:3415:2: ( ruleSlotIntegerValue )
                    // InternalEtlParser.g:3416:3: ruleSlotIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotInteger__Alternatives"


    // $ANTLR start "rule__SlotIntegerRange__Alternatives"
    // InternalEtlParser.g:3425:1: rule__SlotIntegerRange__Alternatives : ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) );
    public final void rule__SlotIntegerRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3429:1: ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_GT && LA13_0<=RULE_HASH)) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_TO) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEtlParser.g:3430:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3430:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    // InternalEtlParser.g:3431:3: ( rule__SlotIntegerRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3432:3: ( rule__SlotIntegerRange__Group_0__0 )
                    // InternalEtlParser.g:3432:4: rule__SlotIntegerRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3436:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3436:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    // InternalEtlParser.g:3437:3: ( rule__SlotIntegerRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3438:3: ( rule__SlotIntegerRange__Group_1__0 )
                    // InternalEtlParser.g:3438:4: rule__SlotIntegerRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Alternatives"


    // $ANTLR start "rule__SlotDecimal__Alternatives"
    // InternalEtlParser.g:3446:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );
    public final void rule__SlotDecimal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3450:1: ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) )
            int alt14=2;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalEtlParser.g:3451:2: ( ruleSlotDecimalRange )
                    {
                    // InternalEtlParser.g:3451:2: ( ruleSlotDecimalRange )
                    // InternalEtlParser.g:3452:3: ruleSlotDecimalRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3457:2: ( ruleSlotDecimalValue )
                    {
                    // InternalEtlParser.g:3457:2: ( ruleSlotDecimalValue )
                    // InternalEtlParser.g:3458:3: ruleSlotDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimal__Alternatives"


    // $ANTLR start "rule__SlotDecimalRange__Alternatives"
    // InternalEtlParser.g:3467:1: rule__SlotDecimalRange__Alternatives : ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) );
    public final void rule__SlotDecimalRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3471:1: ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_GT && LA15_0<=RULE_HASH)) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_TO) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEtlParser.g:3472:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3472:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    // InternalEtlParser.g:3473:3: ( rule__SlotDecimalRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3474:3: ( rule__SlotDecimalRange__Group_0__0 )
                    // InternalEtlParser.g:3474:4: rule__SlotDecimalRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3478:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3478:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    // InternalEtlParser.g:3479:3: ( rule__SlotDecimalRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3480:3: ( rule__SlotDecimalRange__Group_1__0 )
                    // InternalEtlParser.g:3480:4: rule__SlotDecimalRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Alternatives"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEtlParser.g:3488:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3492:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_COMMA) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEtlParser.g:3493:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3493:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3494:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3499:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3499:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3500:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEtlParser.g:3509:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3513:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt17=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt17=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt17=2;
                }
                break;
            case RULE_LT:
                {
                alt17=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt17=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt17=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt17=6;
                }
                break;
            case RULE_GT:
                {
                alt17=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt17=8;
                }
                break;
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt17=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalEtlParser.g:3514:2: ( ruleChildOf )
                    {
                    // InternalEtlParser.g:3514:2: ( ruleChildOf )
                    // InternalEtlParser.g:3515:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3520:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEtlParser.g:3520:2: ( ruleChildOrSelfOf )
                    // InternalEtlParser.g:3521:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3526:2: ( ruleDescendantOf )
                    {
                    // InternalEtlParser.g:3526:2: ( ruleDescendantOf )
                    // InternalEtlParser.g:3527:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3532:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEtlParser.g:3532:2: ( ruleDescendantOrSelfOf )
                    // InternalEtlParser.g:3533:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3538:2: ( ruleParentOf )
                    {
                    // InternalEtlParser.g:3538:2: ( ruleParentOf )
                    // InternalEtlParser.g:3539:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3544:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEtlParser.g:3544:2: ( ruleParentOrSelfOf )
                    // InternalEtlParser.g:3545:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3550:2: ( ruleAncestorOf )
                    {
                    // InternalEtlParser.g:3550:2: ( ruleAncestorOf )
                    // InternalEtlParser.g:3551:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3556:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEtlParser.g:3556:2: ( ruleAncestorOrSelfOf )
                    // InternalEtlParser.g:3557:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3562:2: ( ruleEclFocusConcept )
                    {
                    // InternalEtlParser.g:3562:2: ( ruleEclFocusConcept )
                    // InternalEtlParser.g:3563:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEtlParser.g:3572:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3576:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt18=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt18=1;
                }
                break;
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt18=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt18=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt18=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEtlParser.g:3577:2: ( ruleMemberOf )
                    {
                    // InternalEtlParser.g:3577:2: ( ruleMemberOf )
                    // InternalEtlParser.g:3578:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3583:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3583:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3584:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3589:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3589:2: ( ruleAny )
                    // InternalEtlParser.g:3590:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3595:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3595:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3596:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEtlParser.g:3605:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3609:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt19=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt19=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt19=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalEtlParser.g:3610:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3610:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3611:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3616:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3616:2: ( ruleAny )
                    // InternalEtlParser.g:3617:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3622:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3622:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3623:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEtlParser.g:3632:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3636:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_COMMA) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEtlParser.g:3637:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3637:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3638:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3643:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3643:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3644:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEtlParser.g:3653:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3657:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt21=3;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalEtlParser.g:3658:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3658:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3659:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3664:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEtlParser.g:3664:2: ( ruleEclAttributeGroup )
                    // InternalEtlParser.g:3665:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3670:2: ( ruleNestedRefinement )
                    {
                    // InternalEtlParser.g:3670:2: ( ruleNestedRefinement )
                    // InternalEtlParser.g:3671:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEtlParser.g:3680:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3684:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_COMMA) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEtlParser.g:3685:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3685:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3686:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3691:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3691:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3692:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEtlParser.g:3701:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3705:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalEtlParser.g:3706:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3706:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3707:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3712:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEtlParser.g:3712:2: ( ruleNestedAttributeSet )
                    // InternalEtlParser.g:3713:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEtlParser.g:3722:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3726:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt24=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==RULE_STRING||LA24_1==RULE_FALSE_KEYWORD||LA24_1==RULE_TRUE_KEYWORD||LA24_1==RULE_HASH) ) {
                    alt24=2;
                }
                else if ( ((LA24_1>=RULE_DBL_LT_EM && LA24_1<=RULE_GT_EM)||(LA24_1>=RULE_DIGIT_ZERO && LA24_1<=RULE_DIGIT_NONZERO)||LA24_1==RULE_ROUND_OPEN||LA24_1==RULE_CARET||LA24_1==RULE_WILDCARD||(LA24_1>=RULE_LT && LA24_1<=RULE_GT)) ) {
                    alt24=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA24_2 = input.LA(2);

                if ( (LA24_2==RULE_STRING||LA24_2==RULE_FALSE_KEYWORD||LA24_2==RULE_TRUE_KEYWORD||LA24_2==RULE_HASH) ) {
                    alt24=2;
                }
                else if ( ((LA24_2>=RULE_DBL_LT_EM && LA24_2<=RULE_GT_EM)||(LA24_2>=RULE_DIGIT_ZERO && LA24_2<=RULE_DIGIT_NONZERO)||LA24_2==RULE_ROUND_OPEN||LA24_2==RULE_CARET||LA24_2==RULE_WILDCARD||(LA24_2>=RULE_LT && LA24_2<=RULE_GT)) ) {
                    alt24=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_GTE:
            case RULE_LTE:
            case RULE_LT:
            case RULE_GT:
                {
                alt24=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalEtlParser.g:3727:2: ( ruleAttributeComparison )
                    {
                    // InternalEtlParser.g:3727:2: ( ruleAttributeComparison )
                    // InternalEtlParser.g:3728:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3733:2: ( ruleDataTypeComparison )
                    {
                    // InternalEtlParser.g:3733:2: ( ruleDataTypeComparison )
                    // InternalEtlParser.g:3734:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEtlParser.g:3743:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3747:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalEtlParser.g:3748:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEtlParser.g:3748:2: ( ruleBooleanValueComparison )
                    // InternalEtlParser.g:3749:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3754:2: ( ruleStringValueComparison )
                    {
                    // InternalEtlParser.g:3754:2: ( ruleStringValueComparison )
                    // InternalEtlParser.g:3755:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3760:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEtlParser.g:3760:2: ( ruleIntegerValueComparison )
                    // InternalEtlParser.g:3761:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3766:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEtlParser.g:3766:2: ( ruleDecimalValueComparison )
                    // InternalEtlParser.g:3767:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEtlParser.g:3776:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3780:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_COMMA) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEtlParser.g:3781:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3781:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3782:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3787:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3787:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3788:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEtlParser.g:3797:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3801:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) )
            int alt27=13;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalEtlParser.g:3802:2: ( ruleTermFilter )
                    {
                    // InternalEtlParser.g:3802:2: ( ruleTermFilter )
                    // InternalEtlParser.g:3803:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3808:2: ( ruleLanguageFilter )
                    {
                    // InternalEtlParser.g:3808:2: ( ruleLanguageFilter )
                    // InternalEtlParser.g:3809:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3814:2: ( ruleTypeFilter )
                    {
                    // InternalEtlParser.g:3814:2: ( ruleTypeFilter )
                    // InternalEtlParser.g:3815:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3820:2: ( ruleDialectFilter )
                    {
                    // InternalEtlParser.g:3820:2: ( ruleDialectFilter )
                    // InternalEtlParser.g:3821:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3826:2: ( ruleActiveFilter )
                    {
                    // InternalEtlParser.g:3826:2: ( ruleActiveFilter )
                    // InternalEtlParser.g:3827:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3832:2: ( rulePreferredInFilter )
                    {
                    // InternalEtlParser.g:3832:2: ( rulePreferredInFilter )
                    // InternalEtlParser.g:3833:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3838:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEtlParser.g:3838:2: ( ruleAcceptableInFilter )
                    // InternalEtlParser.g:3839:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3844:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEtlParser.g:3844:2: ( ruleLanguageRefSetFilter )
                    // InternalEtlParser.g:3845:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3850:2: ( ruleModuleFilter )
                    {
                    // InternalEtlParser.g:3850:2: ( ruleModuleFilter )
                    // InternalEtlParser.g:3851:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3856:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEtlParser.g:3856:2: ( ruleSemanticTagFilter )
                    // InternalEtlParser.g:3857:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3862:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEtlParser.g:3862:2: ( ruleEffectiveTimeFilter )
                    // InternalEtlParser.g:3863:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3868:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEtlParser.g:3868:2: ( ruleCaseSignificanceFilter )
                    // InternalEtlParser.g:3869:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3874:2: ( ruleNestedFilter )
                    {
                    // InternalEtlParser.g:3874:2: ( ruleNestedFilter )
                    // InternalEtlParser.g:3875:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEtlParser.g:3884:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3888:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_EQUAL) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==RULE_STRING||LA28_1==RULE_EXACT_KEYWORD||(LA28_1>=RULE_MATCH_KEYWORD && LA28_1<=RULE_REGEX_KEYWORD)||LA28_1==RULE_WILD_KEYWORD) ) {
                    alt28=1;
                }
                else if ( (LA28_1==RULE_ROUND_OPEN) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA28_0==RULE_NOT_EQUAL) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==RULE_STRING||LA28_2==RULE_EXACT_KEYWORD||(LA28_2>=RULE_MATCH_KEYWORD && LA28_2<=RULE_REGEX_KEYWORD)||LA28_2==RULE_WILD_KEYWORD) ) {
                    alt28=1;
                }
                else if ( (LA28_2==RULE_ROUND_OPEN) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEtlParser.g:3889:2: ( ruleTypedTermFilter )
                    {
                    // InternalEtlParser.g:3889:2: ( ruleTypedTermFilter )
                    // InternalEtlParser.g:3890:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3895:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEtlParser.g:3895:2: ( ruleTypedTermFilterSet )
                    // InternalEtlParser.g:3896:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__TypedTermFilterClause__Alternatives"
    // InternalEtlParser.g:3905:1: rule__TypedTermFilterClause__Alternatives : ( ( ( rule__TypedTermFilterClause__Group_0__0 ) ) | ( ( rule__TypedTermFilterClause__Group_1__0 ) ) );
    public final void rule__TypedTermFilterClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3909:1: ( ( ( rule__TypedTermFilterClause__Group_0__0 ) ) | ( ( rule__TypedTermFilterClause__Group_1__0 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING||LA29_0==RULE_EXACT_KEYWORD||LA29_0==RULE_MATCH_KEYWORD||LA29_0==RULE_WILD_KEYWORD) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_REGEX_KEYWORD) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEtlParser.g:3910:2: ( ( rule__TypedTermFilterClause__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3910:2: ( ( rule__TypedTermFilterClause__Group_0__0 ) )
                    // InternalEtlParser.g:3911:3: ( rule__TypedTermFilterClause__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3912:3: ( rule__TypedTermFilterClause__Group_0__0 )
                    // InternalEtlParser.g:3912:4: rule__TypedTermFilterClause__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilterClause__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3916:2: ( ( rule__TypedTermFilterClause__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3916:2: ( ( rule__TypedTermFilterClause__Group_1__0 ) )
                    // InternalEtlParser.g:3917:3: ( rule__TypedTermFilterClause__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterClauseAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3918:3: ( rule__TypedTermFilterClause__Group_1__0 )
                    // InternalEtlParser.g:3918:4: rule__TypedTermFilterClause__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilterClause__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterClauseAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Alternatives"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEtlParser.g:3926:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3930:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA30_0<=RULE_KEYWORD)) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ROUND_OPEN) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEtlParser.g:3931:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3931:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEtlParser.g:3932:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3933:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEtlParser.g:3933:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3937:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:3937:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:3938:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:3939:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEtlParser.g:3939:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEtlParser.g:3947:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3951:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_TYPEID_KEYWORD) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_TYPE_KEYWORD) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEtlParser.g:3952:2: ( ruleTypeIdFilter )
                    {
                    // InternalEtlParser.g:3952:2: ( ruleTypeIdFilter )
                    // InternalEtlParser.g:3953:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3958:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEtlParser.g:3958:2: ( ruleTypeTokenFilter )
                    // InternalEtlParser.g:3959:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEtlParser.g:3968:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3972:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=RULE_DIGIT_ZERO && LA32_0<=RULE_DIGIT_NONZERO)) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_ROUND_OPEN) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEtlParser.g:3973:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3973:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3974:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3979:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEtlParser.g:3979:2: ( ruleEclConceptReferenceSet )
                    // InternalEtlParser.g:3980:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEtlParser.g:3989:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3993:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA33_0<=RULE_KEYWORD)) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_ROUND_OPEN) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEtlParser.g:3994:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3994:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEtlParser.g:3995:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3996:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEtlParser.g:3996:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4000:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4000:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4001:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4002:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4002:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEtlParser.g:4010:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4014:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DIALECTID_KEYWORD) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_DIALECT_KEYWORD) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEtlParser.g:4015:2: ( ruleDialectIdFilter )
                    {
                    // InternalEtlParser.g:4015:2: ( ruleDialectIdFilter )
                    // InternalEtlParser.g:4016:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4021:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEtlParser.g:4021:2: ( ruleDialectAliasFilter )
                    // InternalEtlParser.g:4022:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEtlParser.g:4031:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4035:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_DIGIT_ZERO && LA35_0<=RULE_DIGIT_NONZERO)) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_ROUND_OPEN) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEtlParser.g:4036:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4036:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:4037:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4038:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:4038:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4042:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4042:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4043:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4044:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4044:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEtlParser.g:4052:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4056:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( ((LA36_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA36_0<=RULE_KEYWORD)||(LA36_0>=RULE_DIGIT_ZERO && LA36_0<=RULE_DIGIT_NONZERO)||LA36_0==RULE_DASH) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_ROUND_OPEN) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEtlParser.g:4057:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:4057:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:4058:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:4059:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:4059:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4063:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:4063:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:4064:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:4065:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEtlParser.g:4065:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEtlParser.g:4073:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4077:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_ROUND_OPEN) ) {
                int LA37_1 = input.LA(2);

                if ( ((LA37_1>=RULE_DIGIT_ZERO && LA37_1<=RULE_DIGIT_NONZERO)) ) {
                    alt37=1;
                }
                else if ( ((LA37_1>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA37_1<=RULE_KEYWORD)) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalEtlParser.g:4078:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEtlParser.g:4078:2: ( ruleAcceptabilityIdSet )
                    // InternalEtlParser.g:4079:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4084:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEtlParser.g:4084:2: ( ruleAcceptabilityTokenSet )
                    // InternalEtlParser.g:4085:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives"
    // InternalEtlParser.g:4094:1: rule__SnomedIdentifier__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4098:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_DIGIT_NONZERO) ) {
                alt38=1;
            }
            else if ( (LA38_0==RULE_DIGIT_ZERO) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalEtlParser.g:4099:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4099:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4100:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4105:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4105:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4106:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEtlParser.g:4115:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4119:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DIGIT_NONZERO) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_DIGIT_ZERO) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalEtlParser.g:4120:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4120:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4121:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4126:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4126:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4127:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEtlParser.g:4136:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4140:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_DIGIT_NONZERO) ) {
                alt40=1;
            }
            else if ( (LA40_0==RULE_DIGIT_ZERO) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalEtlParser.g:4141:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4141:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4142:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4147:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4147:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4148:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEtlParser.g:4157:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4161:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=RULE_DIGIT_ZERO && LA41_0<=RULE_DIGIT_NONZERO)) ) {
                alt41=1;
            }
            else if ( (LA41_0==RULE_WILDCARD) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalEtlParser.g:4162:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEtlParser.g:4162:2: ( ruleNonNegativeInteger )
                    // InternalEtlParser.g:4163:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4168:2: ( RULE_WILDCARD )
                    {
                    // InternalEtlParser.g:4168:2: ( RULE_WILDCARD )
                    // InternalEtlParser.g:4169:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEtlParser.g:4178:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4182:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_PLUS) ) {
                alt42=1;
            }
            else if ( (LA42_0==RULE_DASH) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalEtlParser.g:4183:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4183:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4184:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4189:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4189:2: ( RULE_DASH )
                    // InternalEtlParser.g:4190:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEtlParser.g:4199:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4203:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_PLUS) ) {
                alt43=1;
            }
            else if ( (LA43_0==RULE_DASH) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalEtlParser.g:4204:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4204:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4205:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4210:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4210:2: ( RULE_DASH )
                    // InternalEtlParser.g:4211:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEtlParser.g:4220:1: rule__Boolean__Alternatives : ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4224:1: ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_TRUE_KEYWORD) ) {
                alt44=1;
            }
            else if ( (LA44_0==RULE_FALSE_KEYWORD) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalEtlParser.g:4225:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4225:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4226:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4231:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4231:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4232:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__UnquotedString__Alternatives"
    // InternalEtlParser.g:4241:1: rule__UnquotedString__Alternatives : ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) );
    public final void rule__UnquotedString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4245:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) )
            int alt45=27;
            switch ( input.LA(1) ) {
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
                {
                alt45=1;
                }
                break;
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
                {
                alt45=2;
                }
                break;
            case RULE_EFFECTIVE_TIME_KEYWORD:
                {
                alt45=3;
                }
                break;
            case RULE_ACCEPTABLE_IN_KEYWORD:
                {
                alt45=4;
                }
                break;
            case RULE_DESCRIPTION_KEYWORD:
                {
                alt45=5;
                }
                break;
            case RULE_PREFERRED_IN_KEYWORD:
                {
                alt45=6;
                }
                break;
            case RULE_SEMANTIC_TAG_KEYWORD:
                {
                alt45=7;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
                {
                alt45=8;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt45=9;
                }
                break;
            case RULE_MODULEID_KEYWORD:
                {
                alt45=10;
                }
                break;
            case RULE_CONCEPT_KEYWORD:
                {
                alt45=11;
                }
                break;
            case RULE_DIALECT_KEYWORD:
                {
                alt45=12;
                }
                break;
            case RULE_ACTIVE_KEYWORD:
                {
                alt45=13;
                }
                break;
            case RULE_TYPEID_KEYWORD:
                {
                alt45=14;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt45=15;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt45=16;
                }
                break;
            case RULE_FALSE_KEYWORD:
                {
                alt45=17;
                }
                break;
            case RULE_MATCH_KEYWORD:
                {
                alt45=18;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt45=19;
                }
                break;
            case RULE_TERM_KEYWORD:
                {
                alt45=20;
                }
                break;
            case RULE_TRUE_KEYWORD:
                {
                alt45=21;
                }
                break;
            case RULE_TYPE_KEYWORD:
                {
                alt45=22;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt45=23;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt45=24;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt45=25;
                }
                break;
            case RULE_REVERSED:
                {
                alt45=26;
                }
                break;
            case RULE_KEYWORD:
                {
                alt45=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalEtlParser.g:4246:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4246:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    // InternalEtlParser.g:4247:3: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4252:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4252:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    // InternalEtlParser.g:4253:3: RULE_LANGUAGE_REFSET_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4258:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    {
                    // InternalEtlParser.g:4258:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    // InternalEtlParser.g:4259:3: RULE_EFFECTIVE_TIME_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4264:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4264:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    // InternalEtlParser.g:4265:3: RULE_ACCEPTABLE_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4270:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4270:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEtlParser.g:4271:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4276:2: ( RULE_PREFERRED_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4276:2: ( RULE_PREFERRED_IN_KEYWORD )
                    // InternalEtlParser.g:4277:3: RULE_PREFERRED_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4282:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    {
                    // InternalEtlParser.g:4282:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    // InternalEtlParser.g:4283:3: RULE_SEMANTIC_TAG_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4288:2: ( RULE_DIALECTID_KEYWORD )
                    {
                    // InternalEtlParser.g:4288:2: ( RULE_DIALECTID_KEYWORD )
                    // InternalEtlParser.g:4289:3: RULE_DIALECTID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }
                    match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:4294:2: ( RULE_LANGUAGE_KEYWORD )
                    {
                    // InternalEtlParser.g:4294:2: ( RULE_LANGUAGE_KEYWORD )
                    // InternalEtlParser.g:4295:3: RULE_LANGUAGE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:4300:2: ( RULE_MODULEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4300:2: ( RULE_MODULEID_KEYWORD )
                    // InternalEtlParser.g:4301:3: RULE_MODULEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }
                    match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:4306:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEtlParser.g:4306:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEtlParser.g:4307:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:4312:2: ( RULE_DIALECT_KEYWORD )
                    {
                    // InternalEtlParser.g:4312:2: ( RULE_DIALECT_KEYWORD )
                    // InternalEtlParser.g:4313:3: RULE_DIALECT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }
                    match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:4318:2: ( RULE_ACTIVE_KEYWORD )
                    {
                    // InternalEtlParser.g:4318:2: ( RULE_ACTIVE_KEYWORD )
                    // InternalEtlParser.g:4319:3: RULE_ACTIVE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }
                    match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:4324:2: ( RULE_TYPEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4324:2: ( RULE_TYPEID_KEYWORD )
                    // InternalEtlParser.g:4325:3: RULE_TYPEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }
                    match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:4330:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:4330:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:4331:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:4336:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4336:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4337:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:4342:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4342:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4343:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:4348:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4348:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4349:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalEtlParser.g:4354:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEtlParser.g:4354:2: ( RULE_REGEX_KEYWORD )
                    // InternalEtlParser.g:4355:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalEtlParser.g:4360:2: ( RULE_TERM_KEYWORD )
                    {
                    // InternalEtlParser.g:4360:2: ( RULE_TERM_KEYWORD )
                    // InternalEtlParser.g:4361:3: RULE_TERM_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }
                    match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalEtlParser.g:4366:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4366:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4367:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalEtlParser.g:4372:2: ( RULE_TYPE_KEYWORD )
                    {
                    // InternalEtlParser.g:4372:2: ( RULE_TYPE_KEYWORD )
                    // InternalEtlParser.g:4373:3: RULE_TYPE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }
                    match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalEtlParser.g:4378:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4378:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4379:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalEtlParser.g:4384:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4384:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4385:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalEtlParser.g:4390:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4390:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4391:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalEtlParser.g:4396:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:4396:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:4397:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalEtlParser.g:4402:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4402:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4403:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnquotedString__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives"
    // InternalEtlParser.g:4412:1: rule__DialectAliasValue__Alternatives : ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4416:1: ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt46=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt46=1;
                }
                break;
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
            case RULE_EFFECTIVE_TIME_KEYWORD:
            case RULE_ACCEPTABLE_IN_KEYWORD:
            case RULE_DESCRIPTION_KEYWORD:
            case RULE_PREFERRED_IN_KEYWORD:
            case RULE_SEMANTIC_TAG_KEYWORD:
            case RULE_DIALECTID_KEYWORD:
            case RULE_LANGUAGE_KEYWORD:
            case RULE_MODULEID_KEYWORD:
            case RULE_CONCEPT_KEYWORD:
            case RULE_DIALECT_KEYWORD:
            case RULE_ACTIVE_KEYWORD:
            case RULE_TYPEID_KEYWORD:
            case RULE_EXCLUSION_KEYWORD:
            case RULE_EXACT_KEYWORD:
            case RULE_FALSE_KEYWORD:
            case RULE_MATCH_KEYWORD:
            case RULE_REGEX_KEYWORD:
            case RULE_TERM_KEYWORD:
            case RULE_TRUE_KEYWORD:
            case RULE_TYPE_KEYWORD:
            case RULE_WILD_KEYWORD:
            case RULE_CONJUNCTION_KEYWORD:
            case RULE_DISJUNCTION_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
                {
                alt46=2;
                }
                break;
            case RULE_DIGIT_ZERO:
                {
                alt46=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalEtlParser.g:4417:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4417:2: ( RULE_DASH )
                    // InternalEtlParser.g:4418:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4423:2: ( ruleUnquotedString )
                    {
                    // InternalEtlParser.g:4423:2: ( ruleUnquotedString )
                    // InternalEtlParser.g:4424:3: ruleUnquotedString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnquotedString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4429:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4429:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4430:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4435:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4435:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4436:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEtlParser.g:4445:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4449:1: ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) )
            int alt47=3;
            switch ( input.LA(1) ) {
            case RULE_MATCH_KEYWORD:
                {
                alt47=1;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt47=2;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt47=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalEtlParser.g:4450:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4450:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4451:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4456:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4456:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4457:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4462:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4462:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4463:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__DOMAIN__Alternatives"
    // InternalEtlParser.g:4472:1: rule__DOMAIN__Alternatives : ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) );
    public final void rule__DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4476:1: ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_CONCEPT_KEYWORD) ) {
                alt48=1;
            }
            else if ( (LA48_0==RULE_DESCRIPTION_KEYWORD) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalEtlParser.g:4477:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEtlParser.g:4477:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEtlParser.g:4478:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4483:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4483:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEtlParser.g:4484:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:4493:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4497:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_EQUAL) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_NOT_EQUAL) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalEtlParser.g:4498:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:4498:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:4499:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4504:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:4504:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:4505:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:4514:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4518:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt50=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt50=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt50=2;
                }
                break;
            case RULE_GT:
                {
                alt50=3;
                }
                break;
            case RULE_LT:
                {
                alt50=4;
                }
                break;
            case RULE_GTE:
                {
                alt50=5;
                }
                break;
            case RULE_LTE:
                {
                alt50=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalEtlParser.g:4519:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:4519:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:4520:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4525:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:4525:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:4526:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4531:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:4531:2: ( RULE_GT )
                    // InternalEtlParser.g:4532:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4537:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:4537:2: ( RULE_LT )
                    // InternalEtlParser.g:4538:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4543:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:4543:2: ( RULE_GTE )
                    // InternalEtlParser.g:4544:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4549:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:4549:2: ( RULE_LTE )
                    // InternalEtlParser.g:4550:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__ExpressionTemplate__Group__0"
    // InternalEtlParser.g:4559:1: rule__ExpressionTemplate__Group__0 : rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 ;
    public final void rule__ExpressionTemplate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4563:1: ( rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 )
            // InternalEtlParser.g:4564:2: rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0"


    // $ANTLR start "rule__ExpressionTemplate__Group__0__Impl"
    // InternalEtlParser.g:4571:1: rule__ExpressionTemplate__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionTemplate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4575:1: ( ( () ) )
            // InternalEtlParser.g:4576:1: ( () )
            {
            // InternalEtlParser.g:4576:1: ( () )
            // InternalEtlParser.g:4577:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }
            // InternalEtlParser.g:4578:2: ()
            // InternalEtlParser.g:4578:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group__1"
    // InternalEtlParser.g:4586:1: rule__ExpressionTemplate__Group__1 : rule__ExpressionTemplate__Group__1__Impl ;
    public final void rule__ExpressionTemplate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4590:1: ( rule__ExpressionTemplate__Group__1__Impl )
            // InternalEtlParser.g:4591:2: rule__ExpressionTemplate__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1"


    // $ANTLR start "rule__ExpressionTemplate__Group__1__Impl"
    // InternalEtlParser.g:4597:1: rule__ExpressionTemplate__Group__1__Impl : ( ( rule__ExpressionTemplate__Group_1__0 )? ) ;
    public final void rule__ExpressionTemplate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4601:1: ( ( ( rule__ExpressionTemplate__Group_1__0 )? ) )
            // InternalEtlParser.g:4602:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            {
            // InternalEtlParser.g:4602:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            // InternalEtlParser.g:4603:2: ( rule__ExpressionTemplate__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4604:2: ( rule__ExpressionTemplate__Group_1__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_DOUBLE_SQUARE_OPEN||(LA51_0>=RULE_EQUIVALENT_TO && LA51_0<=RULE_SUBTYPE_OF)||(LA51_0>=RULE_DIGIT_ZERO && LA51_0<=RULE_DIGIT_NONZERO)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalEtlParser.g:4604:3: rule__ExpressionTemplate__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0"
    // InternalEtlParser.g:4613:1: rule__ExpressionTemplate__Group_1__0 : rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 ;
    public final void rule__ExpressionTemplate__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4617:1: ( rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 )
            // InternalEtlParser.g:4618:2: rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0__Impl"
    // InternalEtlParser.g:4625:1: rule__ExpressionTemplate__Group_1__0__Impl : ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) ;
    public final void rule__ExpressionTemplate__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4629:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) )
            // InternalEtlParser.g:4630:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            {
            // InternalEtlParser.g:4630:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            // InternalEtlParser.g:4631:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }
            // InternalEtlParser.g:4632:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=RULE_EQUIVALENT_TO && LA52_0<=RULE_SUBTYPE_OF)) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA52_2 = input.LA(2);

                if ( (LA52_2==RULE_PLUS) ) {
                    int LA52_4 = input.LA(3);

                    if ( (LA52_4==RULE_TOK) ) {
                        alt52=1;
                    }
                }
            }
            switch (alt52) {
                case 1 :
                    // InternalEtlParser.g:4632:3: rule__ExpressionTemplate__Alternatives_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1"
    // InternalEtlParser.g:4640:1: rule__ExpressionTemplate__Group_1__1 : rule__ExpressionTemplate__Group_1__1__Impl ;
    public final void rule__ExpressionTemplate__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4644:1: ( rule__ExpressionTemplate__Group_1__1__Impl )
            // InternalEtlParser.g:4645:2: rule__ExpressionTemplate__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1__Impl"
    // InternalEtlParser.g:4651:1: rule__ExpressionTemplate__Group_1__1__Impl : ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) ;
    public final void rule__ExpressionTemplate__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4655:1: ( ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) )
            // InternalEtlParser.g:4656:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            {
            // InternalEtlParser.g:4656:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            // InternalEtlParser.g:4657:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }
            // InternalEtlParser.g:4658:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            // InternalEtlParser.g:4658:3: rule__ExpressionTemplate__ExpressionAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__ExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__0"
    // InternalEtlParser.g:4667:1: rule__SubExpression__Group__0 : rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 ;
    public final void rule__SubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4671:1: ( rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 )
            // InternalEtlParser.g:4672:2: rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0"


    // $ANTLR start "rule__SubExpression__Group__0__Impl"
    // InternalEtlParser.g:4679:1: rule__SubExpression__Group__0__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) ;
    public final void rule__SubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4683:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) )
            // InternalEtlParser.g:4684:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            {
            // InternalEtlParser.g:4684:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            // InternalEtlParser.g:4685:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }
            // InternalEtlParser.g:4686:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            // InternalEtlParser.g:4686:3: rule__SubExpression__FocusConceptsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0__Impl"


    // $ANTLR start "rule__SubExpression__Group__1"
    // InternalEtlParser.g:4694:1: rule__SubExpression__Group__1 : rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 ;
    public final void rule__SubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4698:1: ( rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 )
            // InternalEtlParser.g:4699:2: rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1"


    // $ANTLR start "rule__SubExpression__Group__1__Impl"
    // InternalEtlParser.g:4706:1: rule__SubExpression__Group__1__Impl : ( ( rule__SubExpression__Group_1__0 )* ) ;
    public final void rule__SubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4710:1: ( ( ( rule__SubExpression__Group_1__0 )* ) )
            // InternalEtlParser.g:4711:1: ( ( rule__SubExpression__Group_1__0 )* )
            {
            // InternalEtlParser.g:4711:1: ( ( rule__SubExpression__Group_1__0 )* )
            // InternalEtlParser.g:4712:2: ( rule__SubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4713:2: ( rule__SubExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==RULE_PLUS) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalEtlParser.g:4713:3: rule__SubExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__SubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__2"
    // InternalEtlParser.g:4721:1: rule__SubExpression__Group__2 : rule__SubExpression__Group__2__Impl ;
    public final void rule__SubExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4725:1: ( rule__SubExpression__Group__2__Impl )
            // InternalEtlParser.g:4726:2: rule__SubExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2"


    // $ANTLR start "rule__SubExpression__Group__2__Impl"
    // InternalEtlParser.g:4732:1: rule__SubExpression__Group__2__Impl : ( ( rule__SubExpression__Group_2__0 )? ) ;
    public final void rule__SubExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4736:1: ( ( ( rule__SubExpression__Group_2__0 )? ) )
            // InternalEtlParser.g:4737:1: ( ( rule__SubExpression__Group_2__0 )? )
            {
            // InternalEtlParser.g:4737:1: ( ( rule__SubExpression__Group_2__0 )? )
            // InternalEtlParser.g:4738:2: ( rule__SubExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }
            // InternalEtlParser.g:4739:2: ( rule__SubExpression__Group_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_COLON) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalEtlParser.g:4739:3: rule__SubExpression__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__0"
    // InternalEtlParser.g:4748:1: rule__SubExpression__Group_1__0 : rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 ;
    public final void rule__SubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4752:1: ( rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 )
            // InternalEtlParser.g:4753:2: rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__SubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0"


    // $ANTLR start "rule__SubExpression__Group_1__0__Impl"
    // InternalEtlParser.g:4760:1: rule__SubExpression__Group_1__0__Impl : ( RULE_PLUS ) ;
    public final void rule__SubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4764:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:4765:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:4765:1: ( RULE_PLUS )
            // InternalEtlParser.g:4766:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__1"
    // InternalEtlParser.g:4775:1: rule__SubExpression__Group_1__1 : rule__SubExpression__Group_1__1__Impl ;
    public final void rule__SubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4779:1: ( rule__SubExpression__Group_1__1__Impl )
            // InternalEtlParser.g:4780:2: rule__SubExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1"


    // $ANTLR start "rule__SubExpression__Group_1__1__Impl"
    // InternalEtlParser.g:4786:1: rule__SubExpression__Group_1__1__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) ;
    public final void rule__SubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4790:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) )
            // InternalEtlParser.g:4791:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:4791:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            // InternalEtlParser.g:4792:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }
            // InternalEtlParser.g:4793:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            // InternalEtlParser.g:4793:3: rule__SubExpression__FocusConceptsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__0"
    // InternalEtlParser.g:4802:1: rule__SubExpression__Group_2__0 : rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 ;
    public final void rule__SubExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4806:1: ( rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 )
            // InternalEtlParser.g:4807:2: rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SubExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0"


    // $ANTLR start "rule__SubExpression__Group_2__0__Impl"
    // InternalEtlParser.g:4814:1: rule__SubExpression__Group_2__0__Impl : ( RULE_COLON ) ;
    public final void rule__SubExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4818:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:4819:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:4819:1: ( RULE_COLON )
            // InternalEtlParser.g:4820:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__1"
    // InternalEtlParser.g:4829:1: rule__SubExpression__Group_2__1 : rule__SubExpression__Group_2__1__Impl ;
    public final void rule__SubExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4833:1: ( rule__SubExpression__Group_2__1__Impl )
            // InternalEtlParser.g:4834:2: rule__SubExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1"


    // $ANTLR start "rule__SubExpression__Group_2__1__Impl"
    // InternalEtlParser.g:4840:1: rule__SubExpression__Group_2__1__Impl : ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) ;
    public final void rule__SubExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4844:1: ( ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) )
            // InternalEtlParser.g:4845:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            {
            // InternalEtlParser.g:4845:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            // InternalEtlParser.g:4846:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }
            // InternalEtlParser.g:4847:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            // InternalEtlParser.g:4847:3: rule__SubExpression__RefinementAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__RefinementAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1__Impl"


    // $ANTLR start "rule__FocusConcept__Group__0"
    // InternalEtlParser.g:4856:1: rule__FocusConcept__Group__0 : rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 ;
    public final void rule__FocusConcept__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4860:1: ( rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 )
            // InternalEtlParser.g:4861:2: rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__FocusConcept__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0"


    // $ANTLR start "rule__FocusConcept__Group__0__Impl"
    // InternalEtlParser.g:4868:1: rule__FocusConcept__Group__0__Impl : ( ( rule__FocusConcept__SlotAssignment_0 )? ) ;
    public final void rule__FocusConcept__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4872:1: ( ( ( rule__FocusConcept__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:4873:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:4873:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            // InternalEtlParser.g:4874:2: ( rule__FocusConcept__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:4875:2: ( rule__FocusConcept__SlotAssignment_0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA55_1 = input.LA(2);

                if ( ((LA55_1>=RULE_DOUBLE_SQUARE_CLOSE && LA55_1<=RULE_TILDE)||LA55_1==RULE_SLOTNAME_STRING||(LA55_1>=RULE_DIGIT_ZERO && LA55_1<=RULE_DIGIT_NONZERO)) ) {
                    alt55=1;
                }
            }
            switch (alt55) {
                case 1 :
                    // InternalEtlParser.g:4875:3: rule__FocusConcept__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FocusConcept__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0__Impl"


    // $ANTLR start "rule__FocusConcept__Group__1"
    // InternalEtlParser.g:4883:1: rule__FocusConcept__Group__1 : rule__FocusConcept__Group__1__Impl ;
    public final void rule__FocusConcept__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4887:1: ( rule__FocusConcept__Group__1__Impl )
            // InternalEtlParser.g:4888:2: rule__FocusConcept__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1"


    // $ANTLR start "rule__FocusConcept__Group__1__Impl"
    // InternalEtlParser.g:4894:1: rule__FocusConcept__Group__1__Impl : ( ( rule__FocusConcept__ConceptAssignment_1 ) ) ;
    public final void rule__FocusConcept__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4898:1: ( ( ( rule__FocusConcept__ConceptAssignment_1 ) ) )
            // InternalEtlParser.g:4899:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            {
            // InternalEtlParser.g:4899:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            // InternalEtlParser.g:4900:2: ( rule__FocusConcept__ConceptAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }
            // InternalEtlParser.g:4901:2: ( rule__FocusConcept__ConceptAssignment_1 )
            // InternalEtlParser.g:4901:3: rule__FocusConcept__ConceptAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__ConceptAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group__0"
    // InternalEtlParser.g:4910:1: rule__Refinement__Group__0 : rule__Refinement__Group__0__Impl rule__Refinement__Group__1 ;
    public final void rule__Refinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4914:1: ( rule__Refinement__Group__0__Impl rule__Refinement__Group__1 )
            // InternalEtlParser.g:4915:2: rule__Refinement__Group__0__Impl rule__Refinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0"


    // $ANTLR start "rule__Refinement__Group__0__Impl"
    // InternalEtlParser.g:4922:1: rule__Refinement__Group__0__Impl : ( ( rule__Refinement__Alternatives_0 ) ) ;
    public final void rule__Refinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4926:1: ( ( ( rule__Refinement__Alternatives_0 ) ) )
            // InternalEtlParser.g:4927:1: ( ( rule__Refinement__Alternatives_0 ) )
            {
            // InternalEtlParser.g:4927:1: ( ( rule__Refinement__Alternatives_0 ) )
            // InternalEtlParser.g:4928:2: ( rule__Refinement__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:4929:2: ( rule__Refinement__Alternatives_0 )
            // InternalEtlParser.g:4929:3: rule__Refinement__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0__Impl"


    // $ANTLR start "rule__Refinement__Group__1"
    // InternalEtlParser.g:4937:1: rule__Refinement__Group__1 : rule__Refinement__Group__1__Impl ;
    public final void rule__Refinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4941:1: ( rule__Refinement__Group__1__Impl )
            // InternalEtlParser.g:4942:2: rule__Refinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1"


    // $ANTLR start "rule__Refinement__Group__1__Impl"
    // InternalEtlParser.g:4948:1: rule__Refinement__Group__1__Impl : ( ( rule__Refinement__Group_1__0 )* ) ;
    public final void rule__Refinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4952:1: ( ( ( rule__Refinement__Group_1__0 )* ) )
            // InternalEtlParser.g:4953:1: ( ( rule__Refinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:4953:1: ( ( rule__Refinement__Group_1__0 )* )
            // InternalEtlParser.g:4954:2: ( rule__Refinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4955:2: ( rule__Refinement__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_DOUBLE_SQUARE_OPEN||LA56_0==RULE_COMMA||LA56_0==RULE_CURLY_OPEN) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalEtlParser.g:4955:3: rule__Refinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__Refinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__0"
    // InternalEtlParser.g:4964:1: rule__Refinement__Group_0_0__0 : rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 ;
    public final void rule__Refinement__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4968:1: ( rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 )
            // InternalEtlParser.g:4969:2: rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__Refinement__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0"


    // $ANTLR start "rule__Refinement__Group_0_0__0__Impl"
    // InternalEtlParser.g:4976:1: rule__Refinement__Group_0_0__0__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) ;
    public final void rule__Refinement__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4980:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:4981:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:4981:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            // InternalEtlParser.g:4982:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:4983:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            // InternalEtlParser.g:4983:3: rule__Refinement__AttributesAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__1"
    // InternalEtlParser.g:4991:1: rule__Refinement__Group_0_0__1 : rule__Refinement__Group_0_0__1__Impl ;
    public final void rule__Refinement__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4995:1: ( rule__Refinement__Group_0_0__1__Impl )
            // InternalEtlParser.g:4996:2: rule__Refinement__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1"


    // $ANTLR start "rule__Refinement__Group_0_0__1__Impl"
    // InternalEtlParser.g:5002:1: rule__Refinement__Group_0_0__1__Impl : ( ( rule__Refinement__Group_0_0_1__0 )* ) ;
    public final void rule__Refinement__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5006:1: ( ( ( rule__Refinement__Group_0_0_1__0 )* ) )
            // InternalEtlParser.g:5007:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            {
            // InternalEtlParser.g:5007:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            // InternalEtlParser.g:5008:2: ( rule__Refinement__Group_0_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }
            // InternalEtlParser.g:5009:2: ( rule__Refinement__Group_0_0_1__0 )*
            loop57:
            do {
                int alt57=2;
                alt57 = dfa57.predict(input);
                switch (alt57) {
            	case 1 :
            	    // InternalEtlParser.g:5009:3: rule__Refinement__Group_0_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__Refinement__Group_0_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0"
    // InternalEtlParser.g:5018:1: rule__Refinement__Group_0_0_1__0 : rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 ;
    public final void rule__Refinement__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5022:1: ( rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 )
            // InternalEtlParser.g:5023:2: rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Refinement__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0__Impl"
    // InternalEtlParser.g:5030:1: rule__Refinement__Group_0_0_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__Refinement__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5034:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:5035:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:5035:1: ( RULE_COMMA )
            // InternalEtlParser.g:5036:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1"
    // InternalEtlParser.g:5045:1: rule__Refinement__Group_0_0_1__1 : rule__Refinement__Group_0_0_1__1__Impl ;
    public final void rule__Refinement__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5049:1: ( rule__Refinement__Group_0_0_1__1__Impl )
            // InternalEtlParser.g:5050:2: rule__Refinement__Group_0_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1__Impl"
    // InternalEtlParser.g:5056:1: rule__Refinement__Group_0_0_1__1__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) ;
    public final void rule__Refinement__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5060:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) )
            // InternalEtlParser.g:5061:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            {
            // InternalEtlParser.g:5061:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            // InternalEtlParser.g:5062:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }
            // InternalEtlParser.g:5063:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            // InternalEtlParser.g:5063:3: rule__Refinement__AttributesAssignment_0_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__Refinement__Group_1__0"
    // InternalEtlParser.g:5072:1: rule__Refinement__Group_1__0 : rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 ;
    public final void rule__Refinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5076:1: ( rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 )
            // InternalEtlParser.g:5077:2: rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0"


    // $ANTLR start "rule__Refinement__Group_1__0__Impl"
    // InternalEtlParser.g:5084:1: rule__Refinement__Group_1__0__Impl : ( ( RULE_COMMA )? ) ;
    public final void rule__Refinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5088:1: ( ( ( RULE_COMMA )? ) )
            // InternalEtlParser.g:5089:1: ( ( RULE_COMMA )? )
            {
            // InternalEtlParser.g:5089:1: ( ( RULE_COMMA )? )
            // InternalEtlParser.g:5090:2: ( RULE_COMMA )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }
            // InternalEtlParser.g:5091:2: ( RULE_COMMA )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_COMMA) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEtlParser.g:5091:3: RULE_COMMA
                    {
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_1__1"
    // InternalEtlParser.g:5099:1: rule__Refinement__Group_1__1 : rule__Refinement__Group_1__1__Impl ;
    public final void rule__Refinement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5103:1: ( rule__Refinement__Group_1__1__Impl )
            // InternalEtlParser.g:5104:2: rule__Refinement__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1"


    // $ANTLR start "rule__Refinement__Group_1__1__Impl"
    // InternalEtlParser.g:5110:1: rule__Refinement__Group_1__1__Impl : ( ( rule__Refinement__GroupsAssignment_1_1 ) ) ;
    public final void rule__Refinement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5114:1: ( ( ( rule__Refinement__GroupsAssignment_1_1 ) ) )
            // InternalEtlParser.g:5115:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:5115:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            // InternalEtlParser.g:5116:2: ( rule__Refinement__GroupsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }
            // InternalEtlParser.g:5117:2: ( rule__Refinement__GroupsAssignment_1_1 )
            // InternalEtlParser.g:5117:3: rule__Refinement__GroupsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__GroupsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__0"
    // InternalEtlParser.g:5126:1: rule__AttributeGroup__Group__0 : rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 ;
    public final void rule__AttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5130:1: ( rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 )
            // InternalEtlParser.g:5131:2: rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0"


    // $ANTLR start "rule__AttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:5138:1: rule__AttributeGroup__Group__0__Impl : ( ( rule__AttributeGroup__SlotAssignment_0 )? ) ;
    public final void rule__AttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5142:1: ( ( ( rule__AttributeGroup__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5143:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5143:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            // InternalEtlParser.g:5144:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5145:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalEtlParser.g:5145:3: rule__AttributeGroup__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeGroup__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__1"
    // InternalEtlParser.g:5153:1: rule__AttributeGroup__Group__1 : rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 ;
    public final void rule__AttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5157:1: ( rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 )
            // InternalEtlParser.g:5158:2: rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1"


    // $ANTLR start "rule__AttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:5165:1: rule__AttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__AttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5169:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:5170:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:5170:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:5171:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__2"
    // InternalEtlParser.g:5180:1: rule__AttributeGroup__Group__2 : rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 ;
    public final void rule__AttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5184:1: ( rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 )
            // InternalEtlParser.g:5185:2: rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2"


    // $ANTLR start "rule__AttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:5192:1: rule__AttributeGroup__Group__2__Impl : ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) ;
    public final void rule__AttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5196:1: ( ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) )
            // InternalEtlParser.g:5197:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            {
            // InternalEtlParser.g:5197:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            // InternalEtlParser.g:5198:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }
            // InternalEtlParser.g:5199:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            // InternalEtlParser.g:5199:3: rule__AttributeGroup__AttributesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__3"
    // InternalEtlParser.g:5207:1: rule__AttributeGroup__Group__3 : rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 ;
    public final void rule__AttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5211:1: ( rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 )
            // InternalEtlParser.g:5212:2: rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3"


    // $ANTLR start "rule__AttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:5219:1: rule__AttributeGroup__Group__3__Impl : ( ( rule__AttributeGroup__Group_3__0 )* ) ;
    public final void rule__AttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5223:1: ( ( ( rule__AttributeGroup__Group_3__0 )* ) )
            // InternalEtlParser.g:5224:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            {
            // InternalEtlParser.g:5224:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            // InternalEtlParser.g:5225:2: ( rule__AttributeGroup__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }
            // InternalEtlParser.g:5226:2: ( rule__AttributeGroup__Group_3__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_COMMA) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEtlParser.g:5226:3: rule__AttributeGroup__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__AttributeGroup__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__4"
    // InternalEtlParser.g:5234:1: rule__AttributeGroup__Group__4 : rule__AttributeGroup__Group__4__Impl ;
    public final void rule__AttributeGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5238:1: ( rule__AttributeGroup__Group__4__Impl )
            // InternalEtlParser.g:5239:2: rule__AttributeGroup__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4"


    // $ANTLR start "rule__AttributeGroup__Group__4__Impl"
    // InternalEtlParser.g:5245:1: rule__AttributeGroup__Group__4__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__AttributeGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5249:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:5250:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:5250:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:5251:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__0"
    // InternalEtlParser.g:5261:1: rule__AttributeGroup__Group_3__0 : rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 ;
    public final void rule__AttributeGroup__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5265:1: ( rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 )
            // InternalEtlParser.g:5266:2: rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0"


    // $ANTLR start "rule__AttributeGroup__Group_3__0__Impl"
    // InternalEtlParser.g:5273:1: rule__AttributeGroup__Group_3__0__Impl : ( RULE_COMMA ) ;
    public final void rule__AttributeGroup__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5277:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:5278:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:5278:1: ( RULE_COMMA )
            // InternalEtlParser.g:5279:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__1"
    // InternalEtlParser.g:5288:1: rule__AttributeGroup__Group_3__1 : rule__AttributeGroup__Group_3__1__Impl ;
    public final void rule__AttributeGroup__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5292:1: ( rule__AttributeGroup__Group_3__1__Impl )
            // InternalEtlParser.g:5293:2: rule__AttributeGroup__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1"


    // $ANTLR start "rule__AttributeGroup__Group_3__1__Impl"
    // InternalEtlParser.g:5299:1: rule__AttributeGroup__Group_3__1__Impl : ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) ;
    public final void rule__AttributeGroup__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5303:1: ( ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) )
            // InternalEtlParser.g:5304:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            {
            // InternalEtlParser.g:5304:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            // InternalEtlParser.g:5305:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }
            // InternalEtlParser.g:5306:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            // InternalEtlParser.g:5306:3: rule__AttributeGroup__AttributesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1__Impl"


    // $ANTLR start "rule__Attribute__Group__0"
    // InternalEtlParser.g:5315:1: rule__Attribute__Group__0 : rule__Attribute__Group__0__Impl rule__Attribute__Group__1 ;
    public final void rule__Attribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5319:1: ( rule__Attribute__Group__0__Impl rule__Attribute__Group__1 )
            // InternalEtlParser.g:5320:2: rule__Attribute__Group__0__Impl rule__Attribute__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Attribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0"


    // $ANTLR start "rule__Attribute__Group__0__Impl"
    // InternalEtlParser.g:5327:1: rule__Attribute__Group__0__Impl : ( ( rule__Attribute__SlotAssignment_0 )? ) ;
    public final void rule__Attribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5331:1: ( ( ( rule__Attribute__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5332:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5332:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            // InternalEtlParser.g:5333:2: ( rule__Attribute__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5334:2: ( rule__Attribute__SlotAssignment_0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA61_1 = input.LA(2);

                if ( ((LA61_1>=RULE_DOUBLE_SQUARE_CLOSE && LA61_1<=RULE_TILDE)||LA61_1==RULE_SLOTNAME_STRING||(LA61_1>=RULE_DIGIT_ZERO && LA61_1<=RULE_DIGIT_NONZERO)) ) {
                    alt61=1;
                }
            }
            switch (alt61) {
                case 1 :
                    // InternalEtlParser.g:5334:3: rule__Attribute__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Attribute__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0__Impl"


    // $ANTLR start "rule__Attribute__Group__1"
    // InternalEtlParser.g:5342:1: rule__Attribute__Group__1 : rule__Attribute__Group__1__Impl rule__Attribute__Group__2 ;
    public final void rule__Attribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5346:1: ( rule__Attribute__Group__1__Impl rule__Attribute__Group__2 )
            // InternalEtlParser.g:5347:2: rule__Attribute__Group__1__Impl rule__Attribute__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Attribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1"


    // $ANTLR start "rule__Attribute__Group__1__Impl"
    // InternalEtlParser.g:5354:1: rule__Attribute__Group__1__Impl : ( ( rule__Attribute__NameAssignment_1 ) ) ;
    public final void rule__Attribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5358:1: ( ( ( rule__Attribute__NameAssignment_1 ) ) )
            // InternalEtlParser.g:5359:1: ( ( rule__Attribute__NameAssignment_1 ) )
            {
            // InternalEtlParser.g:5359:1: ( ( rule__Attribute__NameAssignment_1 ) )
            // InternalEtlParser.g:5360:2: ( rule__Attribute__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }
            // InternalEtlParser.g:5361:2: ( rule__Attribute__NameAssignment_1 )
            // InternalEtlParser.g:5361:3: rule__Attribute__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1__Impl"


    // $ANTLR start "rule__Attribute__Group__2"
    // InternalEtlParser.g:5369:1: rule__Attribute__Group__2 : rule__Attribute__Group__2__Impl rule__Attribute__Group__3 ;
    public final void rule__Attribute__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5373:1: ( rule__Attribute__Group__2__Impl rule__Attribute__Group__3 )
            // InternalEtlParser.g:5374:2: rule__Attribute__Group__2__Impl rule__Attribute__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Attribute__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2"


    // $ANTLR start "rule__Attribute__Group__2__Impl"
    // InternalEtlParser.g:5381:1: rule__Attribute__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__Attribute__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5385:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:5386:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:5386:1: ( RULE_EQUAL )
            // InternalEtlParser.g:5387:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2__Impl"


    // $ANTLR start "rule__Attribute__Group__3"
    // InternalEtlParser.g:5396:1: rule__Attribute__Group__3 : rule__Attribute__Group__3__Impl ;
    public final void rule__Attribute__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5400:1: ( rule__Attribute__Group__3__Impl )
            // InternalEtlParser.g:5401:2: rule__Attribute__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3"


    // $ANTLR start "rule__Attribute__Group__3__Impl"
    // InternalEtlParser.g:5407:1: rule__Attribute__Group__3__Impl : ( ( rule__Attribute__ValueAssignment_3 ) ) ;
    public final void rule__Attribute__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5411:1: ( ( ( rule__Attribute__ValueAssignment_3 ) ) )
            // InternalEtlParser.g:5412:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            {
            // InternalEtlParser.g:5412:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            // InternalEtlParser.g:5413:2: ( rule__Attribute__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }
            // InternalEtlParser.g:5414:2: ( rule__Attribute__ValueAssignment_3 )
            // InternalEtlParser.g:5414:3: rule__Attribute__ValueAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__0"
    // InternalEtlParser.g:5423:1: rule__AttributeValue__Group_1__0 : rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 ;
    public final void rule__AttributeValue__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5427:1: ( rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 )
            // InternalEtlParser.g:5428:2: rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeValue__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0"


    // $ANTLR start "rule__AttributeValue__Group_1__0__Impl"
    // InternalEtlParser.g:5435:1: rule__AttributeValue__Group_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AttributeValue__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5439:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5440:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5440:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5441:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__1"
    // InternalEtlParser.g:5450:1: rule__AttributeValue__Group_1__1 : rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 ;
    public final void rule__AttributeValue__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5454:1: ( rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 )
            // InternalEtlParser.g:5455:2: rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__AttributeValue__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1"


    // $ANTLR start "rule__AttributeValue__Group_1__1__Impl"
    // InternalEtlParser.g:5462:1: rule__AttributeValue__Group_1__1__Impl : ( ruleSubExpression ) ;
    public final void rule__AttributeValue__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5466:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:5467:1: ( ruleSubExpression )
            {
            // InternalEtlParser.g:5467:1: ( ruleSubExpression )
            // InternalEtlParser.g:5468:2: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__2"
    // InternalEtlParser.g:5477:1: rule__AttributeValue__Group_1__2 : rule__AttributeValue__Group_1__2__Impl ;
    public final void rule__AttributeValue__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5481:1: ( rule__AttributeValue__Group_1__2__Impl )
            // InternalEtlParser.g:5482:2: rule__AttributeValue__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2"


    // $ANTLR start "rule__AttributeValue__Group_1__2__Impl"
    // InternalEtlParser.g:5488:1: rule__AttributeValue__Group_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AttributeValue__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5492:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5493:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5493:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5494:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0"
    // InternalEtlParser.g:5504:1: rule__ConceptIdReplacementSlot__Group__0 : rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 ;
    public final void rule__ConceptIdReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5508:1: ( rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 )
            // InternalEtlParser.g:5509:2: rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ConceptIdReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5516:1: rule__ConceptIdReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ConceptIdReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5520:1: ( ( () ) )
            // InternalEtlParser.g:5521:1: ( () )
            {
            // InternalEtlParser.g:5521:1: ( () )
            // InternalEtlParser.g:5522:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5523:2: ()
            // InternalEtlParser.g:5523:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1"
    // InternalEtlParser.g:5531:1: rule__ConceptIdReplacementSlot__Group__1 : rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 ;
    public final void rule__ConceptIdReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5535:1: ( rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 )
            // InternalEtlParser.g:5536:2: rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5543:1: rule__ConceptIdReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5547:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5548:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5548:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5549:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2"
    // InternalEtlParser.g:5558:1: rule__ConceptIdReplacementSlot__Group__2 : rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 ;
    public final void rule__ConceptIdReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5562:1: ( rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 )
            // InternalEtlParser.g:5563:2: rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ConceptIdReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5570:1: rule__ConceptIdReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ConceptIdReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5574:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5575:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5575:1: ( RULE_PLUS )
            // InternalEtlParser.g:5576:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3"
    // InternalEtlParser.g:5585:1: rule__ConceptIdReplacementSlot__Group__3 : rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 ;
    public final void rule__ConceptIdReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5589:1: ( rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 )
            // InternalEtlParser.g:5590:2: rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5597:1: rule__ConceptIdReplacementSlot__Group__3__Impl : ( RULE_ID ) ;
    public final void rule__ConceptIdReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5601:1: ( ( RULE_ID ) )
            // InternalEtlParser.g:5602:1: ( RULE_ID )
            {
            // InternalEtlParser.g:5602:1: ( RULE_ID )
            // InternalEtlParser.g:5603:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4"
    // InternalEtlParser.g:5612:1: rule__ConceptIdReplacementSlot__Group__4 : rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 ;
    public final void rule__ConceptIdReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5616:1: ( rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 )
            // InternalEtlParser.g:5617:2: rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5624:1: rule__ConceptIdReplacementSlot__Group__4__Impl : ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5628:1: ( ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5629:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5629:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5630:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5631:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ROUND_OPEN) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalEtlParser.g:5631:3: rule__ConceptIdReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5"
    // InternalEtlParser.g:5639:1: rule__ConceptIdReplacementSlot__Group__5 : rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 ;
    public final void rule__ConceptIdReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5643:1: ( rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 )
            // InternalEtlParser.g:5644:2: rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5651:1: rule__ConceptIdReplacementSlot__Group__5__Impl : ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5655:1: ( ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5656:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5656:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5657:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5658:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_SLOTNAME_STRING) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEtlParser.g:5658:3: rule__ConceptIdReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6"
    // InternalEtlParser.g:5666:1: rule__ConceptIdReplacementSlot__Group__6 : rule__ConceptIdReplacementSlot__Group__6__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5670:1: ( rule__ConceptIdReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5671:2: rule__ConceptIdReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5677:1: rule__ConceptIdReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5681:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5682:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5682:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5683:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5693:1: rule__ConceptIdReplacementSlot__Group_4__0 : rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5697:1: ( rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5698:2: rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ConceptIdReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5705:1: rule__ConceptIdReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5709:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5710:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5710:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5711:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5720:1: rule__ConceptIdReplacementSlot__Group_4__1 : rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5724:1: ( rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5725:2: rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ConceptIdReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5732:1: rule__ConceptIdReplacementSlot__Group_4__1__Impl : ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5736:1: ( ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:5737:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5737:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:5738:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:5739:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:5739:3: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5747:1: rule__ConceptIdReplacementSlot__Group_4__2 : rule__ConceptIdReplacementSlot__Group_4__2__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5751:1: ( rule__ConceptIdReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:5752:2: rule__ConceptIdReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5758:1: rule__ConceptIdReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5762:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5763:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5763:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5764:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0"
    // InternalEtlParser.g:5774:1: rule__ExpressionReplacementSlot__Group__0 : rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 ;
    public final void rule__ExpressionReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5778:1: ( rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 )
            // InternalEtlParser.g:5779:2: rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ExpressionReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5786:1: rule__ExpressionReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5790:1: ( ( () ) )
            // InternalEtlParser.g:5791:1: ( () )
            {
            // InternalEtlParser.g:5791:1: ( () )
            // InternalEtlParser.g:5792:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5793:2: ()
            // InternalEtlParser.g:5793:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1"
    // InternalEtlParser.g:5801:1: rule__ExpressionReplacementSlot__Group__1 : rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 ;
    public final void rule__ExpressionReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5805:1: ( rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 )
            // InternalEtlParser.g:5806:2: rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ExpressionReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5813:1: rule__ExpressionReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5817:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5818:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5818:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5819:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2"
    // InternalEtlParser.g:5828:1: rule__ExpressionReplacementSlot__Group__2 : rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 ;
    public final void rule__ExpressionReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5832:1: ( rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 )
            // InternalEtlParser.g:5833:2: rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5840:1: rule__ExpressionReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ExpressionReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5844:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5845:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5845:1: ( RULE_PLUS )
            // InternalEtlParser.g:5846:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3"
    // InternalEtlParser.g:5855:1: rule__ExpressionReplacementSlot__Group__3 : rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 ;
    public final void rule__ExpressionReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5859:1: ( rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 )
            // InternalEtlParser.g:5860:2: rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5867:1: rule__ExpressionReplacementSlot__Group__3__Impl : ( ( RULE_SCG )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5871:1: ( ( ( RULE_SCG )? ) )
            // InternalEtlParser.g:5872:1: ( ( RULE_SCG )? )
            {
            // InternalEtlParser.g:5872:1: ( ( RULE_SCG )? )
            // InternalEtlParser.g:5873:2: ( RULE_SCG )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }
            // InternalEtlParser.g:5874:2: ( RULE_SCG )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_SCG) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalEtlParser.g:5874:3: RULE_SCG
                    {
                    match(input,RULE_SCG,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4"
    // InternalEtlParser.g:5882:1: rule__ExpressionReplacementSlot__Group__4 : rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 ;
    public final void rule__ExpressionReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5886:1: ( rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 )
            // InternalEtlParser.g:5887:2: rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5894:1: rule__ExpressionReplacementSlot__Group__4__Impl : ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5898:1: ( ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5899:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5899:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5900:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5901:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ROUND_OPEN) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEtlParser.g:5901:3: rule__ExpressionReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5"
    // InternalEtlParser.g:5909:1: rule__ExpressionReplacementSlot__Group__5 : rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 ;
    public final void rule__ExpressionReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5913:1: ( rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 )
            // InternalEtlParser.g:5914:2: rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5921:1: rule__ExpressionReplacementSlot__Group__5__Impl : ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5925:1: ( ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5926:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5926:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5927:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5928:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_SLOTNAME_STRING) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEtlParser.g:5928:3: rule__ExpressionReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6"
    // InternalEtlParser.g:5936:1: rule__ExpressionReplacementSlot__Group__6 : rule__ExpressionReplacementSlot__Group__6__Impl ;
    public final void rule__ExpressionReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5940:1: ( rule__ExpressionReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5941:2: rule__ExpressionReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5947:1: rule__ExpressionReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5951:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5952:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5952:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5953:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5963:1: rule__ExpressionReplacementSlot__Group_4__0 : rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 ;
    public final void rule__ExpressionReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5967:1: ( rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5968:2: rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExpressionReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5975:1: rule__ExpressionReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5979:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5980:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5980:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5981:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5990:1: rule__ExpressionReplacementSlot__Group_4__1 : rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 ;
    public final void rule__ExpressionReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5994:1: ( rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5995:2: rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ExpressionReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6002:1: rule__ExpressionReplacementSlot__Group_4__1__Impl : ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6006:1: ( ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:6007:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6007:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:6008:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:6009:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:6009:3: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6017:1: rule__ExpressionReplacementSlot__Group_4__2 : rule__ExpressionReplacementSlot__Group_4__2__Impl ;
    public final void rule__ExpressionReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6021:1: ( rule__ExpressionReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:6022:2: rule__ExpressionReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6028:1: rule__ExpressionReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6032:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6033:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6033:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6034:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0"
    // InternalEtlParser.g:6044:1: rule__TokenReplacementSlot__Group__0 : rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 ;
    public final void rule__TokenReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6048:1: ( rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 )
            // InternalEtlParser.g:6049:2: rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__TokenReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6056:1: rule__TokenReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__TokenReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6060:1: ( ( () ) )
            // InternalEtlParser.g:6061:1: ( () )
            {
            // InternalEtlParser.g:6061:1: ( () )
            // InternalEtlParser.g:6062:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6063:2: ()
            // InternalEtlParser.g:6063:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1"
    // InternalEtlParser.g:6071:1: rule__TokenReplacementSlot__Group__1 : rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 ;
    public final void rule__TokenReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6075:1: ( rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 )
            // InternalEtlParser.g:6076:2: rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6083:1: rule__TokenReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6087:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6088:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6088:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6089:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2"
    // InternalEtlParser.g:6098:1: rule__TokenReplacementSlot__Group__2 : rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 ;
    public final void rule__TokenReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6102:1: ( rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 )
            // InternalEtlParser.g:6103:2: rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TokenReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6110:1: rule__TokenReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__TokenReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6114:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6115:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6115:1: ( RULE_PLUS )
            // InternalEtlParser.g:6116:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3"
    // InternalEtlParser.g:6125:1: rule__TokenReplacementSlot__Group__3 : rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 ;
    public final void rule__TokenReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6129:1: ( rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 )
            // InternalEtlParser.g:6130:2: rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6137:1: rule__TokenReplacementSlot__Group__3__Impl : ( RULE_TOK ) ;
    public final void rule__TokenReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6141:1: ( ( RULE_TOK ) )
            // InternalEtlParser.g:6142:1: ( RULE_TOK )
            {
            // InternalEtlParser.g:6142:1: ( RULE_TOK )
            // InternalEtlParser.g:6143:2: RULE_TOK
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }
            match(input,RULE_TOK,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4"
    // InternalEtlParser.g:6152:1: rule__TokenReplacementSlot__Group__4 : rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 ;
    public final void rule__TokenReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6156:1: ( rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 )
            // InternalEtlParser.g:6157:2: rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6164:1: rule__TokenReplacementSlot__Group__4__Impl : ( ( rule__TokenReplacementSlot__Group_4__0 )? ) ;
    public final void rule__TokenReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6168:1: ( ( ( rule__TokenReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6169:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6169:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6170:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6171:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_ROUND_OPEN) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEtlParser.g:6171:3: rule__TokenReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5"
    // InternalEtlParser.g:6179:1: rule__TokenReplacementSlot__Group__5 : rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 ;
    public final void rule__TokenReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6183:1: ( rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 )
            // InternalEtlParser.g:6184:2: rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6191:1: rule__TokenReplacementSlot__Group__5__Impl : ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__TokenReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6195:1: ( ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6196:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6196:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6197:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6198:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_SLOTNAME_STRING) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEtlParser.g:6198:3: rule__TokenReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6"
    // InternalEtlParser.g:6206:1: rule__TokenReplacementSlot__Group__6 : rule__TokenReplacementSlot__Group__6__Impl ;
    public final void rule__TokenReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6210:1: ( rule__TokenReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6211:2: rule__TokenReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6217:1: rule__TokenReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6221:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6222:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6222:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6223:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6233:1: rule__TokenReplacementSlot__Group_4__0 : rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 ;
    public final void rule__TokenReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6237:1: ( rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6238:2: rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TokenReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6245:1: rule__TokenReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6249:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6250:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6250:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6251:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6260:1: rule__TokenReplacementSlot__Group_4__1 : rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 ;
    public final void rule__TokenReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6264:1: ( rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6265:2: rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6272:1: rule__TokenReplacementSlot__Group_4__1__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) ;
    public final void rule__TokenReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6276:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) )
            // InternalEtlParser.g:6277:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6277:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            // InternalEtlParser.g:6278:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }
            // InternalEtlParser.g:6279:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            // InternalEtlParser.g:6279:3: rule__TokenReplacementSlot__TokensAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__TokensAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6287:1: rule__TokenReplacementSlot__Group_4__2 : rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 ;
    public final void rule__TokenReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6291:1: ( rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6292:2: rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6299:1: rule__TokenReplacementSlot__Group_4__2__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) ;
    public final void rule__TokenReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6303:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) )
            // InternalEtlParser.g:6304:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6304:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            // InternalEtlParser.g:6305:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }
            // InternalEtlParser.g:6306:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=RULE_EQUIVALENT_TO && LA69_0<=RULE_SUBTYPE_OF)||LA69_0==RULE_EXCLUSION_KEYWORD||(LA69_0>=RULE_CONJUNCTION_KEYWORD && LA69_0<=RULE_REVERSED)||(LA69_0>=RULE_DBL_LT && LA69_0<=RULE_LTE)||LA69_0==RULE_COMMA||LA69_0==RULE_CARET||(LA69_0>=RULE_EQUAL && LA69_0<=RULE_GT)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalEtlParser.g:6306:3: rule__TokenReplacementSlot__TokensAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    rule__TokenReplacementSlot__TokensAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6314:1: rule__TokenReplacementSlot__Group_4__3 : rule__TokenReplacementSlot__Group_4__3__Impl ;
    public final void rule__TokenReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6318:1: ( rule__TokenReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6319:2: rule__TokenReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6325:1: rule__TokenReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6329:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6330:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6330:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6331:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0"
    // InternalEtlParser.g:6341:1: rule__TemplateInformationSlot__Group__0 : rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 ;
    public final void rule__TemplateInformationSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6345:1: ( rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 )
            // InternalEtlParser.g:6346:2: rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__TemplateInformationSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0__Impl"
    // InternalEtlParser.g:6353:1: rule__TemplateInformationSlot__Group__0__Impl : ( () ) ;
    public final void rule__TemplateInformationSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6357:1: ( ( () ) )
            // InternalEtlParser.g:6358:1: ( () )
            {
            // InternalEtlParser.g:6358:1: ( () )
            // InternalEtlParser.g:6359:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }
            // InternalEtlParser.g:6360:2: ()
            // InternalEtlParser.g:6360:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1"
    // InternalEtlParser.g:6368:1: rule__TemplateInformationSlot__Group__1 : rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 ;
    public final void rule__TemplateInformationSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6372:1: ( rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 )
            // InternalEtlParser.g:6373:2: rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1__Impl"
    // InternalEtlParser.g:6380:1: rule__TemplateInformationSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TemplateInformationSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6384:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6385:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6385:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6386:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2"
    // InternalEtlParser.g:6395:1: rule__TemplateInformationSlot__Group__2 : rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 ;
    public final void rule__TemplateInformationSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6399:1: ( rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 )
            // InternalEtlParser.g:6400:2: rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2__Impl"
    // InternalEtlParser.g:6407:1: rule__TemplateInformationSlot__Group__2__Impl : ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) ;
    public final void rule__TemplateInformationSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6411:1: ( ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) )
            // InternalEtlParser.g:6412:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            {
            // InternalEtlParser.g:6412:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            // InternalEtlParser.g:6413:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }
            // InternalEtlParser.g:6414:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_TILDE||(LA70_0>=RULE_DIGIT_ZERO && LA70_0<=RULE_DIGIT_NONZERO)) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEtlParser.g:6414:3: rule__TemplateInformationSlot__CardinalityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__CardinalityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3"
    // InternalEtlParser.g:6422:1: rule__TemplateInformationSlot__Group__3 : rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 ;
    public final void rule__TemplateInformationSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6426:1: ( rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 )
            // InternalEtlParser.g:6427:2: rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3__Impl"
    // InternalEtlParser.g:6434:1: rule__TemplateInformationSlot__Group__3__Impl : ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) ;
    public final void rule__TemplateInformationSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6438:1: ( ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) )
            // InternalEtlParser.g:6439:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            {
            // InternalEtlParser.g:6439:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            // InternalEtlParser.g:6440:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }
            // InternalEtlParser.g:6441:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==RULE_SLOTNAME_STRING) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalEtlParser.g:6441:3: rule__TemplateInformationSlot__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4"
    // InternalEtlParser.g:6449:1: rule__TemplateInformationSlot__Group__4 : rule__TemplateInformationSlot__Group__4__Impl ;
    public final void rule__TemplateInformationSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6453:1: ( rule__TemplateInformationSlot__Group__4__Impl )
            // InternalEtlParser.g:6454:2: rule__TemplateInformationSlot__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4__Impl"
    // InternalEtlParser.g:6460:1: rule__TemplateInformationSlot__Group__4__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TemplateInformationSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6464:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6465:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6465:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6466:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__0"
    // InternalEtlParser.g:6476:1: rule__StringReplacementSlot__Group__0 : rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 ;
    public final void rule__StringReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6480:1: ( rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 )
            // InternalEtlParser.g:6481:2: rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__StringReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0"


    // $ANTLR start "rule__StringReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6488:1: rule__StringReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__StringReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6492:1: ( ( () ) )
            // InternalEtlParser.g:6493:1: ( () )
            {
            // InternalEtlParser.g:6493:1: ( () )
            // InternalEtlParser.g:6494:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6495:2: ()
            // InternalEtlParser.g:6495:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__1"
    // InternalEtlParser.g:6503:1: rule__StringReplacementSlot__Group__1 : rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 ;
    public final void rule__StringReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6507:1: ( rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 )
            // InternalEtlParser.g:6508:2: rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1"


    // $ANTLR start "rule__StringReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6515:1: rule__StringReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__StringReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6519:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6520:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6520:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6521:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__2"
    // InternalEtlParser.g:6530:1: rule__StringReplacementSlot__Group__2 : rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 ;
    public final void rule__StringReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6534:1: ( rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 )
            // InternalEtlParser.g:6535:2: rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2"


    // $ANTLR start "rule__StringReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6542:1: rule__StringReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__StringReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6546:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6547:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6547:1: ( RULE_PLUS )
            // InternalEtlParser.g:6548:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__3"
    // InternalEtlParser.g:6557:1: rule__StringReplacementSlot__Group__3 : rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 ;
    public final void rule__StringReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6561:1: ( rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 )
            // InternalEtlParser.g:6562:2: rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3"


    // $ANTLR start "rule__StringReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6569:1: rule__StringReplacementSlot__Group__3__Impl : ( RULE_STR ) ;
    public final void rule__StringReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6573:1: ( ( RULE_STR ) )
            // InternalEtlParser.g:6574:1: ( RULE_STR )
            {
            // InternalEtlParser.g:6574:1: ( RULE_STR )
            // InternalEtlParser.g:6575:2: RULE_STR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }
            match(input,RULE_STR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__4"
    // InternalEtlParser.g:6584:1: rule__StringReplacementSlot__Group__4 : rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 ;
    public final void rule__StringReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6588:1: ( rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 )
            // InternalEtlParser.g:6589:2: rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4"


    // $ANTLR start "rule__StringReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6596:1: rule__StringReplacementSlot__Group__4__Impl : ( ( rule__StringReplacementSlot__Group_4__0 )? ) ;
    public final void rule__StringReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6600:1: ( ( ( rule__StringReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6601:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6601:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6602:2: ( rule__StringReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6603:2: ( rule__StringReplacementSlot__Group_4__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_ROUND_OPEN) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEtlParser.g:6603:3: rule__StringReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__5"
    // InternalEtlParser.g:6611:1: rule__StringReplacementSlot__Group__5 : rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 ;
    public final void rule__StringReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6615:1: ( rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 )
            // InternalEtlParser.g:6616:2: rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5"


    // $ANTLR start "rule__StringReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6623:1: rule__StringReplacementSlot__Group__5__Impl : ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__StringReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6627:1: ( ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6628:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6628:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6629:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6630:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_SLOTNAME_STRING) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalEtlParser.g:6630:3: rule__StringReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__6"
    // InternalEtlParser.g:6638:1: rule__StringReplacementSlot__Group__6 : rule__StringReplacementSlot__Group__6__Impl ;
    public final void rule__StringReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6642:1: ( rule__StringReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6643:2: rule__StringReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6"


    // $ANTLR start "rule__StringReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6649:1: rule__StringReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6653:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6654:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6654:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6655:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6665:1: rule__StringReplacementSlot__Group_4__0 : rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 ;
    public final void rule__StringReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6669:1: ( rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6670:2: rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6677:1: rule__StringReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__StringReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6681:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6682:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6682:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6683:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6692:1: rule__StringReplacementSlot__Group_4__1 : rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 ;
    public final void rule__StringReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6696:1: ( rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6697:2: rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6704:1: rule__StringReplacementSlot__Group_4__1__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__StringReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6708:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:6709:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6709:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:6710:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:6711:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:6711:3: rule__StringReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6719:1: rule__StringReplacementSlot__Group_4__2 : rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 ;
    public final void rule__StringReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6723:1: ( rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6724:2: rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6731:1: rule__StringReplacementSlot__Group_4__2__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__StringReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6735:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:6736:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6736:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:6737:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:6738:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_STRING) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalEtlParser.g:6738:3: rule__StringReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    rule__StringReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6746:1: rule__StringReplacementSlot__Group_4__3 : rule__StringReplacementSlot__Group_4__3__Impl ;
    public final void rule__StringReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6750:1: ( rule__StringReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6751:2: rule__StringReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6757:1: rule__StringReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6761:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6762:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6762:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6763:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0"
    // InternalEtlParser.g:6773:1: rule__IntegerReplacementSlot__Group__0 : rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 ;
    public final void rule__IntegerReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6777:1: ( rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 )
            // InternalEtlParser.g:6778:2: rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__IntegerReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6785:1: rule__IntegerReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__IntegerReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6789:1: ( ( () ) )
            // InternalEtlParser.g:6790:1: ( () )
            {
            // InternalEtlParser.g:6790:1: ( () )
            // InternalEtlParser.g:6791:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6792:2: ()
            // InternalEtlParser.g:6792:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1"
    // InternalEtlParser.g:6800:1: rule__IntegerReplacementSlot__Group__1 : rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 ;
    public final void rule__IntegerReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6804:1: ( rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 )
            // InternalEtlParser.g:6805:2: rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6812:1: rule__IntegerReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6816:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6817:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6817:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6818:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2"
    // InternalEtlParser.g:6827:1: rule__IntegerReplacementSlot__Group__2 : rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 ;
    public final void rule__IntegerReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6831:1: ( rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 )
            // InternalEtlParser.g:6832:2: rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__IntegerReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6839:1: rule__IntegerReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__IntegerReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6843:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6844:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6844:1: ( RULE_PLUS )
            // InternalEtlParser.g:6845:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3"
    // InternalEtlParser.g:6854:1: rule__IntegerReplacementSlot__Group__3 : rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 ;
    public final void rule__IntegerReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6858:1: ( rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 )
            // InternalEtlParser.g:6859:2: rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6866:1: rule__IntegerReplacementSlot__Group__3__Impl : ( RULE_INT ) ;
    public final void rule__IntegerReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6870:1: ( ( RULE_INT ) )
            // InternalEtlParser.g:6871:1: ( RULE_INT )
            {
            // InternalEtlParser.g:6871:1: ( RULE_INT )
            // InternalEtlParser.g:6872:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4"
    // InternalEtlParser.g:6881:1: rule__IntegerReplacementSlot__Group__4 : rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 ;
    public final void rule__IntegerReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6885:1: ( rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 )
            // InternalEtlParser.g:6886:2: rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6893:1: rule__IntegerReplacementSlot__Group__4__Impl : ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6897:1: ( ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6898:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6898:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6899:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6900:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ROUND_OPEN) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalEtlParser.g:6900:3: rule__IntegerReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5"
    // InternalEtlParser.g:6908:1: rule__IntegerReplacementSlot__Group__5 : rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 ;
    public final void rule__IntegerReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6912:1: ( rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 )
            // InternalEtlParser.g:6913:2: rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6920:1: rule__IntegerReplacementSlot__Group__5__Impl : ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6924:1: ( ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6925:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6925:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6926:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6927:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_SLOTNAME_STRING) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalEtlParser.g:6927:3: rule__IntegerReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6"
    // InternalEtlParser.g:6935:1: rule__IntegerReplacementSlot__Group__6 : rule__IntegerReplacementSlot__Group__6__Impl ;
    public final void rule__IntegerReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6939:1: ( rule__IntegerReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6940:2: rule__IntegerReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6946:1: rule__IntegerReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6950:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6951:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6951:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6952:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6962:1: rule__IntegerReplacementSlot__Group_4__0 : rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 ;
    public final void rule__IntegerReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6966:1: ( rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6967:2: rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__IntegerReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6974:1: rule__IntegerReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6978:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6979:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6979:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6980:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6989:1: rule__IntegerReplacementSlot__Group_4__1 : rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 ;
    public final void rule__IntegerReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6993:1: ( rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6994:2: rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7001:1: rule__IntegerReplacementSlot__Group_4__1__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__IntegerReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7005:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7006:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7006:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7007:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7008:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7008:3: rule__IntegerReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7016:1: rule__IntegerReplacementSlot__Group_4__2 : rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 ;
    public final void rule__IntegerReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7020:1: ( rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7021:2: rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7028:1: rule__IntegerReplacementSlot__Group_4__2__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__IntegerReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7032:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7033:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7033:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7034:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7035:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==RULE_TO||(LA77_0>=RULE_GT && LA77_0<=RULE_HASH)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalEtlParser.g:7035:3: rule__IntegerReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__IntegerReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7043:1: rule__IntegerReplacementSlot__Group_4__3 : rule__IntegerReplacementSlot__Group_4__3__Impl ;
    public final void rule__IntegerReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7047:1: ( rule__IntegerReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7048:2: rule__IntegerReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7054:1: rule__IntegerReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7058:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7059:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7059:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7060:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0"
    // InternalEtlParser.g:7070:1: rule__DecimalReplacementSlot__Group__0 : rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 ;
    public final void rule__DecimalReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7074:1: ( rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 )
            // InternalEtlParser.g:7075:2: rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__DecimalReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:7082:1: rule__DecimalReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__DecimalReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7086:1: ( ( () ) )
            // InternalEtlParser.g:7087:1: ( () )
            {
            // InternalEtlParser.g:7087:1: ( () )
            // InternalEtlParser.g:7088:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:7089:2: ()
            // InternalEtlParser.g:7089:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1"
    // InternalEtlParser.g:7097:1: rule__DecimalReplacementSlot__Group__1 : rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 ;
    public final void rule__DecimalReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7101:1: ( rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 )
            // InternalEtlParser.g:7102:2: rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:7109:1: rule__DecimalReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7113:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:7114:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:7114:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:7115:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2"
    // InternalEtlParser.g:7124:1: rule__DecimalReplacementSlot__Group__2 : rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 ;
    public final void rule__DecimalReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7128:1: ( rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 )
            // InternalEtlParser.g:7129:2: rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__DecimalReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:7136:1: rule__DecimalReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__DecimalReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7140:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:7141:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:7141:1: ( RULE_PLUS )
            // InternalEtlParser.g:7142:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3"
    // InternalEtlParser.g:7151:1: rule__DecimalReplacementSlot__Group__3 : rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 ;
    public final void rule__DecimalReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7155:1: ( rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 )
            // InternalEtlParser.g:7156:2: rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:7163:1: rule__DecimalReplacementSlot__Group__3__Impl : ( RULE_DEC ) ;
    public final void rule__DecimalReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7167:1: ( ( RULE_DEC ) )
            // InternalEtlParser.g:7168:1: ( RULE_DEC )
            {
            // InternalEtlParser.g:7168:1: ( RULE_DEC )
            // InternalEtlParser.g:7169:2: RULE_DEC
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }
            match(input,RULE_DEC,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4"
    // InternalEtlParser.g:7178:1: rule__DecimalReplacementSlot__Group__4 : rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 ;
    public final void rule__DecimalReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7182:1: ( rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 )
            // InternalEtlParser.g:7183:2: rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:7190:1: rule__DecimalReplacementSlot__Group__4__Impl : ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7194:1: ( ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:7195:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:7195:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:7196:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:7197:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ROUND_OPEN) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalEtlParser.g:7197:3: rule__DecimalReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5"
    // InternalEtlParser.g:7205:1: rule__DecimalReplacementSlot__Group__5 : rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 ;
    public final void rule__DecimalReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7209:1: ( rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 )
            // InternalEtlParser.g:7210:2: rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:7217:1: rule__DecimalReplacementSlot__Group__5__Impl : ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7221:1: ( ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:7222:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:7222:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:7223:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:7224:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_SLOTNAME_STRING) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalEtlParser.g:7224:3: rule__DecimalReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6"
    // InternalEtlParser.g:7232:1: rule__DecimalReplacementSlot__Group__6 : rule__DecimalReplacementSlot__Group__6__Impl ;
    public final void rule__DecimalReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7236:1: ( rule__DecimalReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:7237:2: rule__DecimalReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:7243:1: rule__DecimalReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7247:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:7248:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:7248:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:7249:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0"
    // InternalEtlParser.g:7259:1: rule__DecimalReplacementSlot__Group_4__0 : rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 ;
    public final void rule__DecimalReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7263:1: ( rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:7264:2: rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DecimalReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:7271:1: rule__DecimalReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7275:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:7276:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:7276:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:7277:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1"
    // InternalEtlParser.g:7286:1: rule__DecimalReplacementSlot__Group_4__1 : rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 ;
    public final void rule__DecimalReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7290:1: ( rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:7291:2: rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7298:1: rule__DecimalReplacementSlot__Group_4__1__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__DecimalReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7302:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7303:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7303:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7304:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7305:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7305:3: rule__DecimalReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7313:1: rule__DecimalReplacementSlot__Group_4__2 : rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 ;
    public final void rule__DecimalReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7317:1: ( rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7318:2: rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7325:1: rule__DecimalReplacementSlot__Group_4__2__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__DecimalReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7329:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7330:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7330:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7331:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7332:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==RULE_TO||(LA80_0>=RULE_GT && LA80_0<=RULE_HASH)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalEtlParser.g:7332:3: rule__DecimalReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__DecimalReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7340:1: rule__DecimalReplacementSlot__Group_4__3 : rule__DecimalReplacementSlot__Group_4__3__Impl ;
    public final void rule__DecimalReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7344:1: ( rule__DecimalReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7345:2: rule__DecimalReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7351:1: rule__DecimalReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7355:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7356:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7356:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7357:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__0"
    // InternalEtlParser.g:7367:1: rule__EtlCardinality__Group__0 : rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 ;
    public final void rule__EtlCardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7371:1: ( rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 )
            // InternalEtlParser.g:7372:2: rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__EtlCardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0"


    // $ANTLR start "rule__EtlCardinality__Group__0__Impl"
    // InternalEtlParser.g:7379:1: rule__EtlCardinality__Group__0__Impl : ( ( RULE_TILDE )? ) ;
    public final void rule__EtlCardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7383:1: ( ( ( RULE_TILDE )? ) )
            // InternalEtlParser.g:7384:1: ( ( RULE_TILDE )? )
            {
            // InternalEtlParser.g:7384:1: ( ( RULE_TILDE )? )
            // InternalEtlParser.g:7385:2: ( RULE_TILDE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }
            // InternalEtlParser.g:7386:2: ( RULE_TILDE )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==RULE_TILDE) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalEtlParser.g:7386:3: RULE_TILDE
                    {
                    match(input,RULE_TILDE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__1"
    // InternalEtlParser.g:7394:1: rule__EtlCardinality__Group__1 : rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 ;
    public final void rule__EtlCardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7398:1: ( rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 )
            // InternalEtlParser.g:7399:2: rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__EtlCardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1"


    // $ANTLR start "rule__EtlCardinality__Group__1__Impl"
    // InternalEtlParser.g:7406:1: rule__EtlCardinality__Group__1__Impl : ( ( rule__EtlCardinality__MinAssignment_1 ) ) ;
    public final void rule__EtlCardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7410:1: ( ( ( rule__EtlCardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:7411:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:7411:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:7412:2: ( rule__EtlCardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:7413:2: ( rule__EtlCardinality__MinAssignment_1 )
            // InternalEtlParser.g:7413:3: rule__EtlCardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__2"
    // InternalEtlParser.g:7421:1: rule__EtlCardinality__Group__2 : rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 ;
    public final void rule__EtlCardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7425:1: ( rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 )
            // InternalEtlParser.g:7426:2: rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__EtlCardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2"


    // $ANTLR start "rule__EtlCardinality__Group__2__Impl"
    // InternalEtlParser.g:7433:1: rule__EtlCardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__EtlCardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7437:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7438:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7438:1: ( RULE_TO )
            // InternalEtlParser.g:7439:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__3"
    // InternalEtlParser.g:7448:1: rule__EtlCardinality__Group__3 : rule__EtlCardinality__Group__3__Impl ;
    public final void rule__EtlCardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7452:1: ( rule__EtlCardinality__Group__3__Impl )
            // InternalEtlParser.g:7453:2: rule__EtlCardinality__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3"


    // $ANTLR start "rule__EtlCardinality__Group__3__Impl"
    // InternalEtlParser.g:7459:1: rule__EtlCardinality__Group__3__Impl : ( ( rule__EtlCardinality__MaxAssignment_3 ) ) ;
    public final void rule__EtlCardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7463:1: ( ( ( rule__EtlCardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:7464:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:7464:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:7465:2: ( rule__EtlCardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:7466:2: ( rule__EtlCardinality__MaxAssignment_3 )
            // InternalEtlParser.g:7466:3: rule__EtlCardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__0"
    // InternalEtlParser.g:7475:1: rule__ConceptReference__Group_1__0 : rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 ;
    public final void rule__ConceptReference__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7479:1: ( rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 )
            // InternalEtlParser.g:7480:2: rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__ConceptReference__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0"


    // $ANTLR start "rule__ConceptReference__Group_1__0__Impl"
    // InternalEtlParser.g:7487:1: rule__ConceptReference__Group_1__0__Impl : ( ( rule__ConceptReference__IdAssignment_1_0 ) ) ;
    public final void rule__ConceptReference__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7491:1: ( ( ( rule__ConceptReference__IdAssignment_1_0 ) ) )
            // InternalEtlParser.g:7492:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            {
            // InternalEtlParser.g:7492:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            // InternalEtlParser.g:7493:2: ( rule__ConceptReference__IdAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }
            // InternalEtlParser.g:7494:2: ( rule__ConceptReference__IdAssignment_1_0 )
            // InternalEtlParser.g:7494:3: rule__ConceptReference__IdAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__IdAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__1"
    // InternalEtlParser.g:7502:1: rule__ConceptReference__Group_1__1 : rule__ConceptReference__Group_1__1__Impl ;
    public final void rule__ConceptReference__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7506:1: ( rule__ConceptReference__Group_1__1__Impl )
            // InternalEtlParser.g:7507:2: rule__ConceptReference__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1"


    // $ANTLR start "rule__ConceptReference__Group_1__1__Impl"
    // InternalEtlParser.g:7513:1: rule__ConceptReference__Group_1__1__Impl : ( ( rule__ConceptReference__TermAssignment_1_1 )? ) ;
    public final void rule__ConceptReference__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7517:1: ( ( ( rule__ConceptReference__TermAssignment_1_1 )? ) )
            // InternalEtlParser.g:7518:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            {
            // InternalEtlParser.g:7518:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            // InternalEtlParser.g:7519:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }
            // InternalEtlParser.g:7520:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalEtlParser.g:7520:3: rule__ConceptReference__TermAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__TermAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1__Impl"


    // $ANTLR start "rule__IntegerValue__Group__0"
    // InternalEtlParser.g:7529:1: rule__IntegerValue__Group__0 : rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 ;
    public final void rule__IntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7533:1: ( rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 )
            // InternalEtlParser.g:7534:2: rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0"


    // $ANTLR start "rule__IntegerValue__Group__0__Impl"
    // InternalEtlParser.g:7541:1: rule__IntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7545:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7546:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7546:1: ( RULE_HASH )
            // InternalEtlParser.g:7547:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0__Impl"


    // $ANTLR start "rule__IntegerValue__Group__1"
    // InternalEtlParser.g:7556:1: rule__IntegerValue__Group__1 : rule__IntegerValue__Group__1__Impl ;
    public final void rule__IntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7560:1: ( rule__IntegerValue__Group__1__Impl )
            // InternalEtlParser.g:7561:2: rule__IntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1"


    // $ANTLR start "rule__IntegerValue__Group__1__Impl"
    // InternalEtlParser.g:7567:1: rule__IntegerValue__Group__1__Impl : ( ( rule__IntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__IntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7571:1: ( ( ( rule__IntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7572:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7572:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7573:2: ( rule__IntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7574:2: ( rule__IntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:7574:3: rule__IntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1__Impl"


    // $ANTLR start "rule__DecimalValue__Group__0"
    // InternalEtlParser.g:7583:1: rule__DecimalValue__Group__0 : rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 ;
    public final void rule__DecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7587:1: ( rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 )
            // InternalEtlParser.g:7588:2: rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0"


    // $ANTLR start "rule__DecimalValue__Group__0__Impl"
    // InternalEtlParser.g:7595:1: rule__DecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7599:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7600:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7600:1: ( RULE_HASH )
            // InternalEtlParser.g:7601:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0__Impl"


    // $ANTLR start "rule__DecimalValue__Group__1"
    // InternalEtlParser.g:7610:1: rule__DecimalValue__Group__1 : rule__DecimalValue__Group__1__Impl ;
    public final void rule__DecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7614:1: ( rule__DecimalValue__Group__1__Impl )
            // InternalEtlParser.g:7615:2: rule__DecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1"


    // $ANTLR start "rule__DecimalValue__Group__1__Impl"
    // InternalEtlParser.g:7621:1: rule__DecimalValue__Group__1__Impl : ( ( rule__DecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__DecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7625:1: ( ( ( rule__DecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7626:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7626:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7627:2: ( rule__DecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7628:2: ( rule__DecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:7628:3: rule__DecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__0"
    // InternalEtlParser.g:7637:1: rule__SlotIntegerValue__Group__0 : rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 ;
    public final void rule__SlotIntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7641:1: ( rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 )
            // InternalEtlParser.g:7642:2: rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0"


    // $ANTLR start "rule__SlotIntegerValue__Group__0__Impl"
    // InternalEtlParser.g:7649:1: rule__SlotIntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7653:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7654:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7654:1: ( RULE_HASH )
            // InternalEtlParser.g:7655:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__1"
    // InternalEtlParser.g:7664:1: rule__SlotIntegerValue__Group__1 : rule__SlotIntegerValue__Group__1__Impl ;
    public final void rule__SlotIntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7668:1: ( rule__SlotIntegerValue__Group__1__Impl )
            // InternalEtlParser.g:7669:2: rule__SlotIntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1"


    // $ANTLR start "rule__SlotIntegerValue__Group__1__Impl"
    // InternalEtlParser.g:7675:1: rule__SlotIntegerValue__Group__1__Impl : ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotIntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7679:1: ( ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7680:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7680:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7681:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7682:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:7682:3: rule__SlotIntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0"
    // InternalEtlParser.g:7691:1: rule__SlotIntegerRange__Group_0__0 : rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 ;
    public final void rule__SlotIntegerRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7695:1: ( rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 )
            // InternalEtlParser.g:7696:2: rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotIntegerRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0__Impl"
    // InternalEtlParser.g:7703:1: rule__SlotIntegerRange__Group_0__0__Impl : ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotIntegerRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7707:1: ( ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:7708:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:7708:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:7709:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:7710:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:7710:3: rule__SlotIntegerRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1"
    // InternalEtlParser.g:7718:1: rule__SlotIntegerRange__Group_0__1 : rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 ;
    public final void rule__SlotIntegerRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7722:1: ( rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 )
            // InternalEtlParser.g:7723:2: rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1__Impl"
    // InternalEtlParser.g:7730:1: rule__SlotIntegerRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7734:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7735:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7735:1: ( RULE_TO )
            // InternalEtlParser.g:7736:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2"
    // InternalEtlParser.g:7745:1: rule__SlotIntegerRange__Group_0__2 : rule__SlotIntegerRange__Group_0__2__Impl ;
    public final void rule__SlotIntegerRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7749:1: ( rule__SlotIntegerRange__Group_0__2__Impl )
            // InternalEtlParser.g:7750:2: rule__SlotIntegerRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2__Impl"
    // InternalEtlParser.g:7756:1: rule__SlotIntegerRange__Group_0__2__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotIntegerRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7760:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:7761:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:7761:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:7762:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:7763:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_LT) ) {
                alt83=1;
            }
            else if ( (LA83_0==RULE_HASH) ) {
                int LA83_2 = input.LA(2);

                if ( (LA83_2==RULE_DIGIT_NONZERO) ) {
                    int LA83_4 = input.LA(3);

                    if ( (synpred160_InternalEtlParser()) ) {
                        alt83=1;
                    }
                }
                else if ( (LA83_2==RULE_DIGIT_ZERO) ) {
                    int LA83_5 = input.LA(3);

                    if ( (synpred160_InternalEtlParser()) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalEtlParser.g:7763:3: rule__SlotIntegerRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0"
    // InternalEtlParser.g:7772:1: rule__SlotIntegerRange__Group_1__0 : rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 ;
    public final void rule__SlotIntegerRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7776:1: ( rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 )
            // InternalEtlParser.g:7777:2: rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0__Impl"
    // InternalEtlParser.g:7784:1: rule__SlotIntegerRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7788:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7789:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7789:1: ( RULE_TO )
            // InternalEtlParser.g:7790:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1"
    // InternalEtlParser.g:7799:1: rule__SlotIntegerRange__Group_1__1 : rule__SlotIntegerRange__Group_1__1__Impl ;
    public final void rule__SlotIntegerRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7803:1: ( rule__SlotIntegerRange__Group_1__1__Impl )
            // InternalEtlParser.g:7804:2: rule__SlotIntegerRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1__Impl"
    // InternalEtlParser.g:7810:1: rule__SlotIntegerRange__Group_1__1__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotIntegerRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7814:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:7815:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:7815:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:7816:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:7817:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:7817:3: rule__SlotIntegerRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0"
    // InternalEtlParser.g:7826:1: rule__SlotIntegerMinimumValue__Group__0 : rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 ;
    public final void rule__SlotIntegerMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7830:1: ( rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 )
            // InternalEtlParser.g:7831:2: rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotIntegerMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:7838:1: rule__SlotIntegerMinimumValue__Group__0__Impl : ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7842:1: ( ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7843:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7843:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7844:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7845:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_GT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalEtlParser.g:7845:3: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1"
    // InternalEtlParser.g:7853:1: rule__SlotIntegerMinimumValue__Group__1 : rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 ;
    public final void rule__SlotIntegerMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7857:1: ( rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 )
            // InternalEtlParser.g:7858:2: rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:7865:1: rule__SlotIntegerMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7869:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7870:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7870:1: ( RULE_HASH )
            // InternalEtlParser.g:7871:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2"
    // InternalEtlParser.g:7880:1: rule__SlotIntegerMinimumValue__Group__2 : rule__SlotIntegerMinimumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7884:1: ( rule__SlotIntegerMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:7885:2: rule__SlotIntegerMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:7891:1: rule__SlotIntegerMinimumValue__Group__2__Impl : ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7895:1: ( ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7896:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7896:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7897:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7898:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7898:3: rule__SlotIntegerMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0"
    // InternalEtlParser.g:7907:1: rule__SlotIntegerMaximumValue__Group__0 : rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 ;
    public final void rule__SlotIntegerMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7911:1: ( rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 )
            // InternalEtlParser.g:7912:2: rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:7919:1: rule__SlotIntegerMaximumValue__Group__0__Impl : ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7923:1: ( ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7924:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7924:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7925:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7926:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_LT) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalEtlParser.g:7926:3: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1"
    // InternalEtlParser.g:7934:1: rule__SlotIntegerMaximumValue__Group__1 : rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 ;
    public final void rule__SlotIntegerMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7938:1: ( rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 )
            // InternalEtlParser.g:7939:2: rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:7946:1: rule__SlotIntegerMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7950:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7951:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7951:1: ( RULE_HASH )
            // InternalEtlParser.g:7952:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2"
    // InternalEtlParser.g:7961:1: rule__SlotIntegerMaximumValue__Group__2 : rule__SlotIntegerMaximumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7965:1: ( rule__SlotIntegerMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:7966:2: rule__SlotIntegerMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:7972:1: rule__SlotIntegerMaximumValue__Group__2__Impl : ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7976:1: ( ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7977:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7977:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7978:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7979:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7979:3: rule__SlotIntegerMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__0"
    // InternalEtlParser.g:7988:1: rule__SlotDecimalValue__Group__0 : rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 ;
    public final void rule__SlotDecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7992:1: ( rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 )
            // InternalEtlParser.g:7993:2: rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0"


    // $ANTLR start "rule__SlotDecimalValue__Group__0__Impl"
    // InternalEtlParser.g:8000:1: rule__SlotDecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8004:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8005:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8005:1: ( RULE_HASH )
            // InternalEtlParser.g:8006:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__1"
    // InternalEtlParser.g:8015:1: rule__SlotDecimalValue__Group__1 : rule__SlotDecimalValue__Group__1__Impl ;
    public final void rule__SlotDecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8019:1: ( rule__SlotDecimalValue__Group__1__Impl )
            // InternalEtlParser.g:8020:2: rule__SlotDecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1"


    // $ANTLR start "rule__SlotDecimalValue__Group__1__Impl"
    // InternalEtlParser.g:8026:1: rule__SlotDecimalValue__Group__1__Impl : ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotDecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8030:1: ( ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:8031:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:8031:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:8032:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:8033:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:8033:3: rule__SlotDecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0"
    // InternalEtlParser.g:8042:1: rule__SlotDecimalRange__Group_0__0 : rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 ;
    public final void rule__SlotDecimalRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8046:1: ( rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 )
            // InternalEtlParser.g:8047:2: rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotDecimalRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0__Impl"
    // InternalEtlParser.g:8054:1: rule__SlotDecimalRange__Group_0__0__Impl : ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotDecimalRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8058:1: ( ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:8059:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:8059:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:8060:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:8061:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:8061:3: rule__SlotDecimalRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1"
    // InternalEtlParser.g:8069:1: rule__SlotDecimalRange__Group_0__1 : rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 ;
    public final void rule__SlotDecimalRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8073:1: ( rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 )
            // InternalEtlParser.g:8074:2: rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1__Impl"
    // InternalEtlParser.g:8081:1: rule__SlotDecimalRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8085:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8086:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8086:1: ( RULE_TO )
            // InternalEtlParser.g:8087:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2"
    // InternalEtlParser.g:8096:1: rule__SlotDecimalRange__Group_0__2 : rule__SlotDecimalRange__Group_0__2__Impl ;
    public final void rule__SlotDecimalRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8100:1: ( rule__SlotDecimalRange__Group_0__2__Impl )
            // InternalEtlParser.g:8101:2: rule__SlotDecimalRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2__Impl"
    // InternalEtlParser.g:8107:1: rule__SlotDecimalRange__Group_0__2__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotDecimalRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8111:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:8112:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:8112:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:8113:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:8114:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalEtlParser.g:8114:3: rule__SlotDecimalRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0"
    // InternalEtlParser.g:8123:1: rule__SlotDecimalRange__Group_1__0 : rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 ;
    public final void rule__SlotDecimalRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8127:1: ( rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 )
            // InternalEtlParser.g:8128:2: rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0__Impl"
    // InternalEtlParser.g:8135:1: rule__SlotDecimalRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8139:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8140:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8140:1: ( RULE_TO )
            // InternalEtlParser.g:8141:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1"
    // InternalEtlParser.g:8150:1: rule__SlotDecimalRange__Group_1__1 : rule__SlotDecimalRange__Group_1__1__Impl ;
    public final void rule__SlotDecimalRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8154:1: ( rule__SlotDecimalRange__Group_1__1__Impl )
            // InternalEtlParser.g:8155:2: rule__SlotDecimalRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1__Impl"
    // InternalEtlParser.g:8161:1: rule__SlotDecimalRange__Group_1__1__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotDecimalRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8165:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:8166:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:8166:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:8167:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:8168:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:8168:3: rule__SlotDecimalRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0"
    // InternalEtlParser.g:8177:1: rule__SlotDecimalMinimumValue__Group__0 : rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 ;
    public final void rule__SlotDecimalMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8181:1: ( rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 )
            // InternalEtlParser.g:8182:2: rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotDecimalMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:8189:1: rule__SlotDecimalMinimumValue__Group__0__Impl : ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8193:1: ( ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8194:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8194:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8195:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8196:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_GT) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalEtlParser.g:8196:3: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1"
    // InternalEtlParser.g:8204:1: rule__SlotDecimalMinimumValue__Group__1 : rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 ;
    public final void rule__SlotDecimalMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8208:1: ( rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 )
            // InternalEtlParser.g:8209:2: rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:8216:1: rule__SlotDecimalMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8220:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8221:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8221:1: ( RULE_HASH )
            // InternalEtlParser.g:8222:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2"
    // InternalEtlParser.g:8231:1: rule__SlotDecimalMinimumValue__Group__2 : rule__SlotDecimalMinimumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8235:1: ( rule__SlotDecimalMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:8236:2: rule__SlotDecimalMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:8242:1: rule__SlotDecimalMinimumValue__Group__2__Impl : ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8246:1: ( ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8247:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8247:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8248:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8249:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8249:3: rule__SlotDecimalMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0"
    // InternalEtlParser.g:8258:1: rule__SlotDecimalMaximumValue__Group__0 : rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 ;
    public final void rule__SlotDecimalMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8262:1: ( rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 )
            // InternalEtlParser.g:8263:2: rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:8270:1: rule__SlotDecimalMaximumValue__Group__0__Impl : ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8274:1: ( ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8275:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8275:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8276:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8277:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==RULE_LT) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalEtlParser.g:8277:3: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1"
    // InternalEtlParser.g:8285:1: rule__SlotDecimalMaximumValue__Group__1 : rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 ;
    public final void rule__SlotDecimalMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8289:1: ( rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 )
            // InternalEtlParser.g:8290:2: rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:8297:1: rule__SlotDecimalMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8301:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8302:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8302:1: ( RULE_HASH )
            // InternalEtlParser.g:8303:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2"
    // InternalEtlParser.g:8312:1: rule__SlotDecimalMaximumValue__Group__2 : rule__SlotDecimalMaximumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8316:1: ( rule__SlotDecimalMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:8317:2: rule__SlotDecimalMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:8323:1: rule__SlotDecimalMaximumValue__Group__2__Impl : ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8327:1: ( ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8328:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8328:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8329:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8330:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8330:3: rule__SlotDecimalMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEtlParser.g:8339:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8343:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8344:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8351:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8355:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:8356:1: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:8356:1: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:8357:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEtlParser.g:8366:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8370:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8371:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8377:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8381:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8382:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8382:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8383:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8384:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA89_5 = input.LA(2);

                    if ( (synpred166_InternalEtlParser()) ) {
                        alt89=1;
                    }


                }


                switch (alt89) {
            	case 1 :
            	    // InternalEtlParser.g:8384:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8393:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8397:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8398:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8405:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8409:1: ( ( () ) )
            // InternalEtlParser.g:8410:1: ( () )
            {
            // InternalEtlParser.g:8410:1: ( () )
            // InternalEtlParser.g:8411:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8412:2: ()
            // InternalEtlParser.g:8412:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8420:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8424:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8425:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8432:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8436:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:8437:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:8437:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:8438:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8447:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8451:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8452:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8458:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8462:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8463:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8463:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8464:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8465:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8465:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEtlParser.g:8474:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8478:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8479:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8486:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8490:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:8491:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:8491:1: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:8492:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEtlParser.g:8501:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8505:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8506:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8512:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8516:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8517:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8517:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8518:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8519:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA90_4 = input.LA(2);

                    if ( (synpred167_InternalEtlParser()) ) {
                        alt90=1;
                    }


                }
                else if ( (LA90_0==RULE_COMMA) ) {
                    int LA90_5 = input.LA(2);

                    if ( (synpred167_InternalEtlParser()) ) {
                        alt90=1;
                    }


                }


                switch (alt90) {
            	case 1 :
            	    // InternalEtlParser.g:8519:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8528:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8532:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8533:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8540:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8544:1: ( ( () ) )
            // InternalEtlParser.g:8545:1: ( () )
            {
            // InternalEtlParser.g:8545:1: ( () )
            // InternalEtlParser.g:8546:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8547:2: ()
            // InternalEtlParser.g:8547:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8555:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8559:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8560:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8567:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8571:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:8572:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:8572:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEtlParser.g:8573:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:8574:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEtlParser.g:8574:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8582:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8586:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8587:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8593:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8597:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8598:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8598:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8599:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8600:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8600:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEtlParser.g:8609:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8613:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8614:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8621:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8625:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:8626:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:8626:1: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:8627:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEtlParser.g:8636:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8640:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8641:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8647:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8651:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:8652:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:8652:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:8653:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8654:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_EXCLUSION_KEYWORD) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalEtlParser.g:8654:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8663:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8667:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8668:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8675:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8679:1: ( ( () ) )
            // InternalEtlParser.g:8680:1: ( () )
            {
            // InternalEtlParser.g:8680:1: ( () )
            // InternalEtlParser.g:8681:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8682:2: ()
            // InternalEtlParser.g:8682:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8690:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8694:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8695:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8702:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION_KEYWORD ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8706:1: ( ( RULE_EXCLUSION_KEYWORD ) )
            // InternalEtlParser.g:8707:1: ( RULE_EXCLUSION_KEYWORD )
            {
            // InternalEtlParser.g:8707:1: ( RULE_EXCLUSION_KEYWORD )
            // InternalEtlParser.g:8708:2: RULE_EXCLUSION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8717:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8721:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8722:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8728:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8732:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8733:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8733:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8734:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8735:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8735:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEtlParser.g:8744:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8748:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8749:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8756:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8760:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEtlParser.g:8761:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEtlParser.g:8761:1: ( ruleDottedExpressionConstraint )
            // InternalEtlParser.g:8762:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEtlParser.g:8771:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8775:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8776:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8782:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8786:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:8787:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:8787:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:8788:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8789:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_COLON) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalEtlParser.g:8789:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8798:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8802:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8803:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8810:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8814:1: ( ( () ) )
            // InternalEtlParser.g:8815:1: ( () )
            {
            // InternalEtlParser.g:8815:1: ( () )
            // InternalEtlParser.g:8816:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:8817:2: ()
            // InternalEtlParser.g:8817:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8825:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8829:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8830:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8837:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8841:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:8842:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:8842:1: ( RULE_COLON )
            // InternalEtlParser.g:8843:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8852:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8856:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8857:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8863:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8867:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEtlParser.g:8868:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8868:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEtlParser.g:8869:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEtlParser.g:8870:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEtlParser.g:8870:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEtlParser.g:8879:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8883:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8884:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8891:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8895:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:8896:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:8896:1: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:8897:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEtlParser.g:8906:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8910:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8911:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8917:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8921:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8922:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8922:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8923:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8924:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==RULE_DOT) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalEtlParser.g:8924:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8933:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8937:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8938:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8945:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8949:1: ( ( () ) )
            // InternalEtlParser.g:8950:1: ( () )
            {
            // InternalEtlParser.g:8950:1: ( () )
            // InternalEtlParser.g:8951:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:8952:2: ()
            // InternalEtlParser.g:8952:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8960:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8964:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8965:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8972:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8976:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:8977:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:8977:1: ( RULE_DOT )
            // InternalEtlParser.g:8978:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8987:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8991:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8992:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8998:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9002:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEtlParser.g:9003:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9003:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEtlParser.g:9004:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEtlParser.g:9005:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEtlParser.g:9005:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEtlParser.g:9014:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9018:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEtlParser.g:9019:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:9026:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9030:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:9031:1: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:9031:1: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:9032:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEtlParser.g:9041:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9045:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:9046:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:9052:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9056:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:9057:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:9057:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:9058:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9059:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalEtlParser.g:9059:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9068:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9072:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9073:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9080:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9084:1: ( ( () ) )
            // InternalEtlParser.g:9085:1: ( () )
            {
            // InternalEtlParser.g:9085:1: ( () )
            // InternalEtlParser.g:9086:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9087:2: ()
            // InternalEtlParser.g:9087:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9095:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9099:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEtlParser.g:9100:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9106:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9110:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEtlParser.g:9111:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEtlParser.g:9111:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEtlParser.g:9112:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEtlParser.g:9113:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEtlParser.g:9113:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEtlParser.g:9122:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9126:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEtlParser.g:9127:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEtlParser.g:9134:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9138:1: ( ( RULE_LT_EM ) )
            // InternalEtlParser.g:9139:1: ( RULE_LT_EM )
            {
            // InternalEtlParser.g:9139:1: ( RULE_LT_EM )
            // InternalEtlParser.g:9140:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEtlParser.g:9149:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9153:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEtlParser.g:9154:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEtlParser.g:9160:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9164:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9165:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9165:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9166:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9167:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9167:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEtlParser.g:9176:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9180:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEtlParser.g:9181:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9188:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9192:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEtlParser.g:9193:1: ( RULE_DBL_LT_EM )
            {
            // InternalEtlParser.g:9193:1: ( RULE_DBL_LT_EM )
            // InternalEtlParser.g:9194:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEtlParser.g:9203:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9207:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9208:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9214:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9218:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9219:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9219:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9220:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9221:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9221:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEtlParser.g:9230:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9234:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEtlParser.g:9235:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEtlParser.g:9242:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9246:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:9247:1: ( RULE_LT )
            {
            // InternalEtlParser.g:9247:1: ( RULE_LT )
            // InternalEtlParser.g:9248:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEtlParser.g:9257:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9261:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEtlParser.g:9262:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEtlParser.g:9268:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9272:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9273:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9273:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9274:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9275:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9275:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEtlParser.g:9284:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9288:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEtlParser.g:9289:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9296:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9300:1: ( ( RULE_DBL_LT ) )
            // InternalEtlParser.g:9301:1: ( RULE_DBL_LT )
            {
            // InternalEtlParser.g:9301:1: ( RULE_DBL_LT )
            // InternalEtlParser.g:9302:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEtlParser.g:9311:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9315:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9316:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9322:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9326:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9327:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9327:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9328:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9329:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9329:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEtlParser.g:9338:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9342:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEtlParser.g:9343:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEtlParser.g:9350:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9354:1: ( ( RULE_GT_EM ) )
            // InternalEtlParser.g:9355:1: ( RULE_GT_EM )
            {
            // InternalEtlParser.g:9355:1: ( RULE_GT_EM )
            // InternalEtlParser.g:9356:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEtlParser.g:9365:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9369:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEtlParser.g:9370:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEtlParser.g:9376:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9380:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9381:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9381:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9382:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9383:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9383:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEtlParser.g:9392:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9396:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEtlParser.g:9397:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9404:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9408:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEtlParser.g:9409:1: ( RULE_DBL_GT_EM )
            {
            // InternalEtlParser.g:9409:1: ( RULE_DBL_GT_EM )
            // InternalEtlParser.g:9410:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEtlParser.g:9419:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9423:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9424:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9430:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9434:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9435:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9435:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9436:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9437:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9437:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEtlParser.g:9446:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9450:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEtlParser.g:9451:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEtlParser.g:9458:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9462:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:9463:1: ( RULE_GT )
            {
            // InternalEtlParser.g:9463:1: ( RULE_GT )
            // InternalEtlParser.g:9464:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEtlParser.g:9473:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9477:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEtlParser.g:9478:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEtlParser.g:9484:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9488:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9489:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9489:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9490:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9491:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9491:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEtlParser.g:9500:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9504:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEtlParser.g:9505:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9512:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9516:1: ( ( RULE_DBL_GT ) )
            // InternalEtlParser.g:9517:1: ( RULE_DBL_GT )
            {
            // InternalEtlParser.g:9517:1: ( RULE_DBL_GT )
            // InternalEtlParser.g:9518:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEtlParser.g:9527:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9531:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9532:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9538:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9542:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9543:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9543:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9544:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9545:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9545:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEtlParser.g:9554:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9558:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEtlParser.g:9559:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEtlParser.g:9566:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9570:1: ( ( RULE_CARET ) )
            // InternalEtlParser.g:9571:1: ( RULE_CARET )
            {
            // InternalEtlParser.g:9571:1: ( RULE_CARET )
            // InternalEtlParser.g:9572:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEtlParser.g:9581:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9585:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEtlParser.g:9586:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEtlParser.g:9592:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9596:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9597:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9597:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9598:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9599:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9599:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEtlParser.g:9608:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9612:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEtlParser.g:9613:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEtlParser.g:9620:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9624:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEtlParser.g:9625:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEtlParser.g:9625:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEtlParser.g:9626:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEtlParser.g:9627:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEtlParser.g:9627:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEtlParser.g:9635:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9639:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEtlParser.g:9640:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEtlParser.g:9646:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9650:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEtlParser.g:9651:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEtlParser.g:9651:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEtlParser.g:9652:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEtlParser.g:9653:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalEtlParser.g:9653:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEtlParser.g:9662:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9666:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEtlParser.g:9667:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEtlParser.g:9674:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9678:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:9679:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:9679:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:9680:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEtlParser.g:9689:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9693:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEtlParser.g:9694:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEtlParser.g:9701:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9705:1: ( ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) )
            // InternalEtlParser.g:9706:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            {
            // InternalEtlParser.g:9706:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            // InternalEtlParser.g:9707:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            {
            // InternalEtlParser.g:9707:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEtlParser.g:9708:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:9709:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEtlParser.g:9709:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }

            // InternalEtlParser.g:9712:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            // InternalEtlParser.g:9713:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:9714:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( ((LA96_0>=RULE_DIGIT_ZERO && LA96_0<=RULE_DIGIT_NONZERO)) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalEtlParser.g:9714:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEtlParser.g:9723:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9727:1: ( rule__EclConceptReferenceSet__Group__2__Impl )
            // InternalEtlParser.g:9728:2: rule__EclConceptReferenceSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEtlParser.g:9734:1: rule__EclConceptReferenceSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9738:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:9739:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:9739:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:9740:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEtlParser.g:9750:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9754:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEtlParser.g:9755:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEtlParser.g:9762:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9766:1: ( ( RULE_WILDCARD ) )
            // InternalEtlParser.g:9767:1: ( RULE_WILDCARD )
            {
            // InternalEtlParser.g:9767:1: ( RULE_WILDCARD )
            // InternalEtlParser.g:9768:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEtlParser.g:9777:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9781:1: ( rule__Any__Group__1__Impl )
            // InternalEtlParser.g:9782:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEtlParser.g:9788:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9792:1: ( ( () ) )
            // InternalEtlParser.g:9793:1: ( () )
            {
            // InternalEtlParser.g:9793:1: ( () )
            // InternalEtlParser.g:9794:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEtlParser.g:9795:2: ()
            // InternalEtlParser.g:9795:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEtlParser.g:9804:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9808:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEtlParser.g:9809:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEtlParser.g:9816:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9820:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:9821:1: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:9821:1: ( ruleAndRefinement )
            // InternalEtlParser.g:9822:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEtlParser.g:9831:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9835:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEtlParser.g:9836:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEtlParser.g:9842:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9846:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:9847:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:9847:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEtlParser.g:9848:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9849:2: ( rule__OrRefinement__Group_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA97_5 = input.LA(2);

                    if ( (synpred174_InternalEtlParser()) ) {
                        alt97=1;
                    }


                }


                switch (alt97) {
            	case 1 :
            	    // InternalEtlParser.g:9849:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEtlParser.g:9858:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9862:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:9863:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:9869:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9873:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:9874:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:9874:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:9875:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:9876:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEtlParser.g:9876:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEtlParser.g:9885:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9889:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEtlParser.g:9890:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:9897:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9901:1: ( ( () ) )
            // InternalEtlParser.g:9902:1: ( () )
            {
            // InternalEtlParser.g:9902:1: ( () )
            // InternalEtlParser.g:9903:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:9904:2: ()
            // InternalEtlParser.g:9904:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEtlParser.g:9912:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9916:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEtlParser.g:9917:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:9924:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9928:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:9929:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:9929:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:9930:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEtlParser.g:9939:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9943:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:9944:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:9950:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9954:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:9955:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:9955:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:9956:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:9957:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:9957:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEtlParser.g:9966:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9970:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEtlParser.g:9971:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEtlParser.g:9978:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9982:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:9983:1: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:9983:1: ( ruleSubRefinement )
            // InternalEtlParser.g:9984:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEtlParser.g:9993:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9997:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEtlParser.g:9998:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEtlParser.g:10004:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10008:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:10009:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:10009:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEtlParser.g:10010:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10011:2: ( rule__AndRefinement__Group_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA98_4 = input.LA(2);

                    if ( (synpred175_InternalEtlParser()) ) {
                        alt98=1;
                    }


                }
                else if ( (LA98_0==RULE_COMMA) ) {
                    int LA98_5 = input.LA(2);

                    if ( (synpred175_InternalEtlParser()) ) {
                        alt98=1;
                    }


                }


                switch (alt98) {
            	case 1 :
            	    // InternalEtlParser.g:10011:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEtlParser.g:10020:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10024:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:10025:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:10031:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10035:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:10036:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:10036:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:10037:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:10038:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEtlParser.g:10038:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEtlParser.g:10047:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10051:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEtlParser.g:10052:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:10059:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10063:1: ( ( () ) )
            // InternalEtlParser.g:10064:1: ( () )
            {
            // InternalEtlParser.g:10064:1: ( () )
            // InternalEtlParser.g:10065:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:10066:2: ()
            // InternalEtlParser.g:10066:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEtlParser.g:10074:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10078:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEtlParser.g:10079:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:10086:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10090:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEtlParser.g:10091:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEtlParser.g:10091:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEtlParser.g:10092:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEtlParser.g:10093:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEtlParser.g:10093:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEtlParser.g:10101:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10105:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:10106:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:10112:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10116:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:10117:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:10117:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:10118:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:10119:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:10119:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEtlParser.g:10128:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10132:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEtlParser.g:10133:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEtlParser.g:10140:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10144:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10145:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10145:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10146:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEtlParser.g:10155:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10159:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEtlParser.g:10160:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEtlParser.g:10167:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10171:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:10172:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:10172:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEtlParser.g:10173:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:10174:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEtlParser.g:10174:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEtlParser.g:10182:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10186:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEtlParser.g:10187:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEtlParser.g:10193:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10197:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10198:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10198:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10199:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEtlParser.g:10209:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10213:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEtlParser.g:10214:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:10221:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10225:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:10226:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:10226:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:10227:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:10228:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_SQUARE_OPEN) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalEtlParser.g:10228:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEtlParser.g:10236:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10240:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEtlParser.g:10241:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:10248:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10252:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:10253:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:10253:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:10254:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEtlParser.g:10263:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10267:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEtlParser.g:10268:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:10275:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10279:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEtlParser.g:10280:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEtlParser.g:10280:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEtlParser.g:10281:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEtlParser.g:10282:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEtlParser.g:10282:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEtlParser.g:10290:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10294:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEtlParser.g:10295:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:10301:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10305:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:10306:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:10306:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:10307:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEtlParser.g:10317:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10321:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEtlParser.g:10322:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10329:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10333:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:10334:1: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:10334:1: ( ruleAndAttributeSet )
            // InternalEtlParser.g:10335:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEtlParser.g:10344:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10348:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:10349:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10355:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10359:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:10360:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:10360:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:10361:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10362:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalEtlParser.g:10362:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEtlParser.g:10371:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10375:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEtlParser.g:10376:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:10383:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10387:1: ( ( () ) )
            // InternalEtlParser.g:10388:1: ( () )
            {
            // InternalEtlParser.g:10388:1: ( () )
            // InternalEtlParser.g:10389:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:10390:2: ()
            // InternalEtlParser.g:10390:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEtlParser.g:10398:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10402:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEtlParser.g:10403:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:10410:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10414:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:10415:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:10415:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:10416:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEtlParser.g:10425:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10429:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:10430:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:10436:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10440:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:10441:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:10441:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:10442:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:10443:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:10443:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEtlParser.g:10452:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10456:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEtlParser.g:10457:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10464:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10468:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:10469:1: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:10469:1: ( ruleSubAttributeSet )
            // InternalEtlParser.g:10470:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEtlParser.g:10479:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10483:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:10484:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10490:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10494:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:10495:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:10495:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:10496:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10497:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==RULE_CONJUNCTION_KEYWORD||LA101_0==RULE_COMMA) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalEtlParser.g:10497:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEtlParser.g:10506:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10510:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEtlParser.g:10511:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:10518:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10522:1: ( ( () ) )
            // InternalEtlParser.g:10523:1: ( () )
            {
            // InternalEtlParser.g:10523:1: ( () )
            // InternalEtlParser.g:10524:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:10525:2: ()
            // InternalEtlParser.g:10525:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEtlParser.g:10533:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10537:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEtlParser.g:10538:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:10545:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10549:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:10550:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:10550:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEtlParser.g:10551:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:10552:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEtlParser.g:10552:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEtlParser.g:10560:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10564:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:10565:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:10571:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10575:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:10576:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:10576:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:10577:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:10578:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:10578:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEtlParser.g:10587:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10591:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEtlParser.g:10592:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10599:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10603:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10604:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10604:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10605:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEtlParser.g:10614:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10618:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEtlParser.g:10619:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10626:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10630:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:10631:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:10631:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEtlParser.g:10632:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:10633:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEtlParser.g:10633:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEtlParser.g:10641:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10645:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEtlParser.g:10646:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEtlParser.g:10652:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10656:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10657:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10657:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10658:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEtlParser.g:10668:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10672:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEtlParser.g:10673:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEtlParser.g:10680:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10684:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:10685:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:10685:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:10686:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:10687:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_SQUARE_OPEN) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalEtlParser.g:10687:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEtlParser.g:10695:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10699:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEtlParser.g:10700:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEtlParser.g:10707:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10711:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEtlParser.g:10712:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEtlParser.g:10712:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEtlParser.g:10713:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEtlParser.g:10714:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_REVERSED) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalEtlParser.g:10714:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEtlParser.g:10722:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10726:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEtlParser.g:10727:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEtlParser.g:10734:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10738:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEtlParser.g:10739:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEtlParser.g:10739:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEtlParser.g:10740:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEtlParser.g:10741:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEtlParser.g:10741:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEtlParser.g:10749:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10753:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEtlParser.g:10754:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEtlParser.g:10760:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10764:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEtlParser.g:10765:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEtlParser.g:10765:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEtlParser.g:10766:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEtlParser.g:10767:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=RULE_GTE && LA104_0<=RULE_LTE)||(LA104_0>=RULE_EQUAL && LA104_0<=RULE_GT)) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalEtlParser.g:10767:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEtlParser.g:10776:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10780:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEtlParser.g:10781:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEtlParser.g:10788:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10792:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEtlParser.g:10793:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:10793:1: ( RULE_SQUARE_OPEN )
            // InternalEtlParser.g:10794:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEtlParser.g:10803:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10807:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEtlParser.g:10808:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEtlParser.g:10815:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10819:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:10820:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:10820:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:10821:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:10822:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEtlParser.g:10822:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEtlParser.g:10830:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10834:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEtlParser.g:10835:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEtlParser.g:10842:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10846:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:10847:1: ( RULE_TO )
            {
            // InternalEtlParser.g:10847:1: ( RULE_TO )
            // InternalEtlParser.g:10848:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEtlParser.g:10857:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10861:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEtlParser.g:10862:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEtlParser.g:10869:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10873:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:10874:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:10874:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:10875:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:10876:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEtlParser.g:10876:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEtlParser.g:10884:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10888:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEtlParser.g:10889:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEtlParser.g:10895:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10899:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:10900:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:10900:1: ( RULE_SQUARE_CLOSE )
            // InternalEtlParser.g:10901:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEtlParser.g:10911:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10915:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEtlParser.g:10916:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEtlParser.g:10923:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10927:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:10928:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:10928:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:10929:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:10930:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEtlParser.g:10930:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEtlParser.g:10938:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10942:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEtlParser.g:10943:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEtlParser.g:10949:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10953:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:10954:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:10954:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:10955:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:10956:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEtlParser.g:10956:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEtlParser.g:10965:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10969:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEtlParser.g:10970:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEtlParser.g:10977:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10981:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:10982:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:10982:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:10983:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:10984:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:10984:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEtlParser.g:10992:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10996:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEtlParser.g:10997:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11003:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11007:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:11008:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:11008:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:11009:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:11010:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:11010:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEtlParser.g:11019:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11023:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEtlParser.g:11024:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11031:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11035:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11036:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11036:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11037:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11038:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11038:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEtlParser.g:11046:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11050:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEtlParser.g:11051:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11057:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11061:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:11062:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:11062:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:11063:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:11064:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:11064:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEtlParser.g:11073:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11077:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEtlParser.g:11078:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11085:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11089:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11090:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11090:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11091:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11092:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11092:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEtlParser.g:11100:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11104:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEtlParser.g:11105:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11112:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11116:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:11117:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:11117:1: ( RULE_HASH )
            // InternalEtlParser.g:11118:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEtlParser.g:11127:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11131:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEtlParser.g:11132:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEtlParser.g:11138:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11142:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:11143:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:11143:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:11144:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:11145:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:11145:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEtlParser.g:11154:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11158:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEtlParser.g:11159:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11166:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11170:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11171:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11171:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11172:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11173:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11173:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEtlParser.g:11181:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11185:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEtlParser.g:11186:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11193:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11197:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:11198:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:11198:1: ( RULE_HASH )
            // InternalEtlParser.g:11199:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEtlParser.g:11208:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11212:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEtlParser.g:11213:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEtlParser.g:11219:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11223:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:11224:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:11224:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:11225:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:11226:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:11226:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEtlParser.g:11235:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11239:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEtlParser.g:11240:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEtlParser.g:11247:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11251:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11252:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11252:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11253:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEtlParser.g:11262:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11266:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEtlParser.g:11267:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEtlParser.g:11274:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11278:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11279:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11279:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEtlParser.g:11280:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11281:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEtlParser.g:11281:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEtlParser.g:11289:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11293:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEtlParser.g:11294:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEtlParser.g:11300:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11304:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11305:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11305:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11306:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEtlParser.g:11316:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11320:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEtlParser.g:11321:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEtlParser.g:11328:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11332:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEtlParser.g:11333:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEtlParser.g:11333:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEtlParser.g:11334:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEtlParser.g:11343:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11347:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEtlParser.g:11348:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEtlParser.g:11355:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11359:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:11360:1: ( ruleFilter )
            {
            // InternalEtlParser.g:11360:1: ( ruleFilter )
            // InternalEtlParser.g:11361:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEtlParser.g:11370:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11374:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEtlParser.g:11375:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEtlParser.g:11381:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11385:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEtlParser.g:11386:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:11386:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEtlParser.g:11387:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEtlParser.g:11397:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11401:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEtlParser.g:11402:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:11409:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11413:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:11414:1: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:11414:1: ( ruleConjunctionFilter )
            // InternalEtlParser.g:11415:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEtlParser.g:11424:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11428:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:11429:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:11435:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11439:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:11440:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:11440:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:11441:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11442:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalEtlParser.g:11442:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEtlParser.g:11451:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11455:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:11456:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:11463:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11467:1: ( ( () ) )
            // InternalEtlParser.g:11468:1: ( () )
            {
            // InternalEtlParser.g:11468:1: ( () )
            // InternalEtlParser.g:11469:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11470:2: ()
            // InternalEtlParser.g:11470:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEtlParser.g:11478:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11482:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:11483:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:11490:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11494:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:11495:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:11495:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:11496:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEtlParser.g:11505:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11509:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:11510:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:11516:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11520:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11521:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11521:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11522:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11523:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:11523:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEtlParser.g:11532:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11536:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEtlParser.g:11537:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:11544:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11548:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:11549:1: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:11549:1: ( rulePropertyFilter )
            // InternalEtlParser.g:11550:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEtlParser.g:11559:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11563:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:11564:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:11570:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11574:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:11575:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:11575:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:11576:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11577:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_CONJUNCTION_KEYWORD||LA106_0==RULE_COMMA) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalEtlParser.g:11577:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEtlParser.g:11586:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11590:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:11591:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:11598:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11602:1: ( ( () ) )
            // InternalEtlParser.g:11603:1: ( () )
            {
            // InternalEtlParser.g:11603:1: ( () )
            // InternalEtlParser.g:11604:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11605:2: ()
            // InternalEtlParser.g:11605:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEtlParser.g:11613:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11617:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:11618:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:11625:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11629:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:11630:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:11630:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEtlParser.g:11631:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:11632:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEtlParser.g:11632:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEtlParser.g:11640:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11644:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:11645:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:11651:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11655:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11656:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11656:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11657:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11658:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:11658:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEtlParser.g:11667:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11671:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEtlParser.g:11672:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEtlParser.g:11679:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11683:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11684:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11684:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11685:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEtlParser.g:11694:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11698:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEtlParser.g:11699:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEtlParser.g:11706:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11710:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11711:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11711:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEtlParser.g:11712:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11713:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEtlParser.g:11713:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEtlParser.g:11721:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11725:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEtlParser.g:11726:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEtlParser.g:11732:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11736:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11737:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11737:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11738:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEtlParser.g:11748:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11752:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEtlParser.g:11753:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEtlParser.g:11760:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11764:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEtlParser.g:11765:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEtlParser.g:11765:1: ( RULE_TERM_KEYWORD )
            // InternalEtlParser.g:11766:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEtlParser.g:11775:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11779:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEtlParser.g:11780:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEtlParser.g:11786:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11790:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEtlParser.g:11791:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEtlParser.g:11791:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEtlParser.g:11792:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEtlParser.g:11793:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEtlParser.g:11793:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEtlParser.g:11802:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11806:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEtlParser.g:11807:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEtlParser.g:11814:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11818:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11819:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11819:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEtlParser.g:11820:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11821:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEtlParser.g:11821:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEtlParser.g:11829:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11833:1: ( rule__TypedTermFilter__Group__1__Impl )
            // InternalEtlParser.g:11834:2: rule__TypedTermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEtlParser.g:11840:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__ClauseAssignment_1 ) ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11844:1: ( ( ( rule__TypedTermFilter__ClauseAssignment_1 ) ) )
            // InternalEtlParser.g:11845:1: ( ( rule__TypedTermFilter__ClauseAssignment_1 ) )
            {
            // InternalEtlParser.g:11845:1: ( ( rule__TypedTermFilter__ClauseAssignment_1 ) )
            // InternalEtlParser.g:11846:2: ( rule__TypedTermFilter__ClauseAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getClauseAssignment_1()); 
            }
            // InternalEtlParser.g:11847:2: ( rule__TypedTermFilter__ClauseAssignment_1 )
            // InternalEtlParser.g:11847:3: rule__TypedTermFilter__ClauseAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__ClauseAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getClauseAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEtlParser.g:11856:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11860:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEtlParser.g:11861:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEtlParser.g:11868:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11872:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11873:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11873:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEtlParser.g:11874:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11875:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEtlParser.g:11875:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEtlParser.g:11883:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11887:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEtlParser.g:11888:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEtlParser.g:11895:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11899:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11900:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11900:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11901:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEtlParser.g:11910:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11914:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEtlParser.g:11915:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEtlParser.g:11922:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11926:1: ( ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) ) )
            // InternalEtlParser.g:11927:1: ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) )
            {
            // InternalEtlParser.g:11927:1: ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) )
            // InternalEtlParser.g:11928:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* )
            {
            // InternalEtlParser.g:11928:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) )
            // InternalEtlParser.g:11929:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }
            // InternalEtlParser.g:11930:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )
            // InternalEtlParser.g:11930:4: rule__TypedTermFilterSet__ClausesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__TypedTermFilterSet__ClausesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }

            }

            // InternalEtlParser.g:11933:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* )
            // InternalEtlParser.g:11934:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }
            // InternalEtlParser.g:11935:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==RULE_STRING||LA107_0==RULE_EXACT_KEYWORD||(LA107_0>=RULE_MATCH_KEYWORD && LA107_0<=RULE_REGEX_KEYWORD)||LA107_0==RULE_WILD_KEYWORD) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalEtlParser.g:11935:4: rule__TypedTermFilterSet__ClausesAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__TypedTermFilterSet__ClausesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEtlParser.g:11944:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11948:1: ( rule__TypedTermFilterSet__Group__3__Impl )
            // InternalEtlParser.g:11949:2: rule__TypedTermFilterSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEtlParser.g:11955:1: rule__TypedTermFilterSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11959:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11960:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11960:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11961:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__0"
    // InternalEtlParser.g:11971:1: rule__TypedTermFilterClause__Group_0__0 : rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1 ;
    public final void rule__TypedTermFilterClause__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11975:1: ( rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1 )
            // InternalEtlParser.g:11976:2: rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__TypedTermFilterClause__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__0"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__0__Impl"
    // InternalEtlParser.g:11983:1: rule__TypedTermFilterClause__Group_0__0__Impl : ( ( rule__TypedTermFilterClause__Group_0_0__0 )? ) ;
    public final void rule__TypedTermFilterClause__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11987:1: ( ( ( rule__TypedTermFilterClause__Group_0_0__0 )? ) )
            // InternalEtlParser.g:11988:1: ( ( rule__TypedTermFilterClause__Group_0_0__0 )? )
            {
            // InternalEtlParser.g:11988:1: ( ( rule__TypedTermFilterClause__Group_0_0__0 )? )
            // InternalEtlParser.g:11989:2: ( rule__TypedTermFilterClause__Group_0_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0_0()); 
            }
            // InternalEtlParser.g:11990:2: ( rule__TypedTermFilterClause__Group_0_0__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==RULE_EXACT_KEYWORD||LA108_0==RULE_MATCH_KEYWORD||LA108_0==RULE_WILD_KEYWORD) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalEtlParser.g:11990:3: rule__TypedTermFilterClause__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilterClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__0__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__1"
    // InternalEtlParser.g:11998:1: rule__TypedTermFilterClause__Group_0__1 : rule__TypedTermFilterClause__Group_0__1__Impl ;
    public final void rule__TypedTermFilterClause__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12002:1: ( rule__TypedTermFilterClause__Group_0__1__Impl )
            // InternalEtlParser.g:12003:2: rule__TypedTermFilterClause__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__1"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__1__Impl"
    // InternalEtlParser.g:12009:1: rule__TypedTermFilterClause__Group_0__1__Impl : ( ( rule__TypedTermFilterClause__TermAssignment_0_1 ) ) ;
    public final void rule__TypedTermFilterClause__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12013:1: ( ( ( rule__TypedTermFilterClause__TermAssignment_0_1 ) ) )
            // InternalEtlParser.g:12014:1: ( ( rule__TypedTermFilterClause__TermAssignment_0_1 ) )
            {
            // InternalEtlParser.g:12014:1: ( ( rule__TypedTermFilterClause__TermAssignment_0_1 ) )
            // InternalEtlParser.g:12015:2: ( rule__TypedTermFilterClause__TermAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_0_1()); 
            }
            // InternalEtlParser.g:12016:2: ( rule__TypedTermFilterClause__TermAssignment_0_1 )
            // InternalEtlParser.g:12016:3: rule__TypedTermFilterClause__TermAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__TermAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__1__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0_0__0"
    // InternalEtlParser.g:12025:1: rule__TypedTermFilterClause__Group_0_0__0 : rule__TypedTermFilterClause__Group_0_0__0__Impl rule__TypedTermFilterClause__Group_0_0__1 ;
    public final void rule__TypedTermFilterClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12029:1: ( rule__TypedTermFilterClause__Group_0_0__0__Impl rule__TypedTermFilterClause__Group_0_0__1 )
            // InternalEtlParser.g:12030:2: rule__TypedTermFilterClause__Group_0_0__0__Impl rule__TypedTermFilterClause__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TypedTermFilterClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0_0__0"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0_0__0__Impl"
    // InternalEtlParser.g:12037:1: rule__TypedTermFilterClause__Group_0_0__0__Impl : ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 ) ) ;
    public final void rule__TypedTermFilterClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12041:1: ( ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:12042:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:12042:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 ) )
            // InternalEtlParser.g:12043:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:12044:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 )
            // InternalEtlParser.g:12044:3: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0_0__1"
    // InternalEtlParser.g:12052:1: rule__TypedTermFilterClause__Group_0_0__1 : rule__TypedTermFilterClause__Group_0_0__1__Impl ;
    public final void rule__TypedTermFilterClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12056:1: ( rule__TypedTermFilterClause__Group_0_0__1__Impl )
            // InternalEtlParser.g:12057:2: rule__TypedTermFilterClause__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0_0__1"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0_0__1__Impl"
    // InternalEtlParser.g:12063:1: rule__TypedTermFilterClause__Group_0_0__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilterClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12067:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:12068:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:12068:1: ( RULE_COLON )
            // InternalEtlParser.g:12069:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__0"
    // InternalEtlParser.g:12079:1: rule__TypedTermFilterClause__Group_1__0 : rule__TypedTermFilterClause__Group_1__0__Impl rule__TypedTermFilterClause__Group_1__1 ;
    public final void rule__TypedTermFilterClause__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12083:1: ( rule__TypedTermFilterClause__Group_1__0__Impl rule__TypedTermFilterClause__Group_1__1 )
            // InternalEtlParser.g:12084:2: rule__TypedTermFilterClause__Group_1__0__Impl rule__TypedTermFilterClause__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TypedTermFilterClause__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__0"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__0__Impl"
    // InternalEtlParser.g:12091:1: rule__TypedTermFilterClause__Group_1__0__Impl : ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedTermFilterClause__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12095:1: ( ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEtlParser.g:12096:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEtlParser.g:12096:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEtlParser.g:12097:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEtlParser.g:12098:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 )
            // InternalEtlParser.g:12098:3: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__1"
    // InternalEtlParser.g:12106:1: rule__TypedTermFilterClause__Group_1__1 : rule__TypedTermFilterClause__Group_1__1__Impl rule__TypedTermFilterClause__Group_1__2 ;
    public final void rule__TypedTermFilterClause__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12110:1: ( rule__TypedTermFilterClause__Group_1__1__Impl rule__TypedTermFilterClause__Group_1__2 )
            // InternalEtlParser.g:12111:2: rule__TypedTermFilterClause__Group_1__1__Impl rule__TypedTermFilterClause__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__TypedTermFilterClause__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__1"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__1__Impl"
    // InternalEtlParser.g:12118:1: rule__TypedTermFilterClause__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilterClause__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12122:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:12123:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:12123:1: ( RULE_COLON )
            // InternalEtlParser.g:12124:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__2"
    // InternalEtlParser.g:12133:1: rule__TypedTermFilterClause__Group_1__2 : rule__TypedTermFilterClause__Group_1__2__Impl ;
    public final void rule__TypedTermFilterClause__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12137:1: ( rule__TypedTermFilterClause__Group_1__2__Impl )
            // InternalEtlParser.g:12138:2: rule__TypedTermFilterClause__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__2"


    // $ANTLR start "rule__TypedTermFilterClause__Group_1__2__Impl"
    // InternalEtlParser.g:12144:1: rule__TypedTermFilterClause__Group_1__2__Impl : ( ( rule__TypedTermFilterClause__TermAssignment_1_2 ) ) ;
    public final void rule__TypedTermFilterClause__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12148:1: ( ( ( rule__TypedTermFilterClause__TermAssignment_1_2 ) ) )
            // InternalEtlParser.g:12149:1: ( ( rule__TypedTermFilterClause__TermAssignment_1_2 ) )
            {
            // InternalEtlParser.g:12149:1: ( ( rule__TypedTermFilterClause__TermAssignment_1_2 ) )
            // InternalEtlParser.g:12150:2: ( rule__TypedTermFilterClause__TermAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_1_2()); 
            }
            // InternalEtlParser.g:12151:2: ( rule__TypedTermFilterClause__TermAssignment_1_2 )
            // InternalEtlParser.g:12151:3: rule__TypedTermFilterClause__TermAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__TermAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_1__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEtlParser.g:12160:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12164:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEtlParser.g:12165:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEtlParser.g:12172:1: rule__LanguageFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12176:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEtlParser.g:12177:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEtlParser.g:12177:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEtlParser.g:12178:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEtlParser.g:12187:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12191:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEtlParser.g:12192:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEtlParser.g:12199:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12203:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12204:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12204:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12205:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12206:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEtlParser.g:12206:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEtlParser.g:12214:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12218:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEtlParser.g:12219:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEtlParser.g:12225:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12229:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12230:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12230:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12231:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12232:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEtlParser.g:12232:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEtlParser.g:12241:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12245:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEtlParser.g:12246:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12253:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12257:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12258:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12258:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12259:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEtlParser.g:12268:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12272:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEtlParser.g:12273:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12280:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12284:1: ( ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12285:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12285:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12286:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12286:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEtlParser.g:12287:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12288:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEtlParser.g:12288:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12291:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            // InternalEtlParser.g:12292:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12293:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( ((LA109_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA109_0<=RULE_KEYWORD)) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalEtlParser.g:12293:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEtlParser.g:12302:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12306:1: ( rule__LanguageFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12307:2: rule__LanguageFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12313:1: rule__LanguageFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12317:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12318:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12318:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12319:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEtlParser.g:12329:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12333:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEtlParser.g:12334:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEtlParser.g:12341:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12345:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEtlParser.g:12346:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEtlParser.g:12346:1: ( RULE_TYPEID_KEYWORD )
            // InternalEtlParser.g:12347:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEtlParser.g:12356:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12360:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEtlParser.g:12361:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEtlParser.g:12368:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12372:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12373:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12373:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12374:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12375:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:12375:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEtlParser.g:12383:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12387:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEtlParser.g:12388:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEtlParser.g:12394:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12398:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEtlParser.g:12399:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEtlParser.g:12399:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEtlParser.g:12400:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEtlParser.g:12401:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEtlParser.g:12401:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEtlParser.g:12410:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12414:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEtlParser.g:12415:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEtlParser.g:12422:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12426:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEtlParser.g:12427:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEtlParser.g:12427:1: ( RULE_TYPE_KEYWORD )
            // InternalEtlParser.g:12428:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEtlParser.g:12437:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12441:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEtlParser.g:12442:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEtlParser.g:12449:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12453:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12454:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12454:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12455:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12456:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEtlParser.g:12456:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEtlParser.g:12464:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12468:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEtlParser.g:12469:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEtlParser.g:12475:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12479:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12480:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12480:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12481:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12482:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEtlParser.g:12482:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEtlParser.g:12491:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12495:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEtlParser.g:12496:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12503:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12507:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12508:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12508:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12509:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEtlParser.g:12518:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12522:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEtlParser.g:12523:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12530:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12534:1: ( ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12535:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12535:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12536:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12536:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEtlParser.g:12537:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12538:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEtlParser.g:12538:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12541:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            // InternalEtlParser.g:12542:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12543:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA110_0<=RULE_KEYWORD)) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalEtlParser.g:12543:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEtlParser.g:12552:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12556:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12557:2: rule__TypeTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12563:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12567:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12568:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12568:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12569:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEtlParser.g:12579:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12583:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEtlParser.g:12584:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEtlParser.g:12591:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12595:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEtlParser.g:12596:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEtlParser.g:12596:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEtlParser.g:12597:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEtlParser.g:12606:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12610:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEtlParser.g:12611:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEtlParser.g:12618:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12622:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12623:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12623:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12624:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12625:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:12625:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEtlParser.g:12633:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12637:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEtlParser.g:12638:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEtlParser.g:12644:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12648:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12649:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12649:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12650:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12651:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEtlParser.g:12651:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEtlParser.g:12660:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12664:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEtlParser.g:12665:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12672:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12676:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12677:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12677:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12678:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEtlParser.g:12687:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12691:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEtlParser.g:12692:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12699:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12703:1: ( ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12704:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12704:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12705:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12705:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:12706:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12707:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:12707:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12710:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:12711:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12712:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( ((LA111_0>=RULE_DIGIT_ZERO && LA111_0<=RULE_DIGIT_NONZERO)) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalEtlParser.g:12712:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEtlParser.g:12721:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12725:1: ( rule__DialectIdFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12726:2: rule__DialectIdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12732:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12736:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12737:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12737:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12738:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEtlParser.g:12748:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12752:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEtlParser.g:12753:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEtlParser.g:12760:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12764:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEtlParser.g:12765:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEtlParser.g:12765:1: ( RULE_DIALECT_KEYWORD )
            // InternalEtlParser.g:12766:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEtlParser.g:12775:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12779:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEtlParser.g:12780:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEtlParser.g:12787:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12791:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12792:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12792:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12793:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12794:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEtlParser.g:12794:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEtlParser.g:12802:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12806:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEtlParser.g:12807:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEtlParser.g:12813:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12817:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12818:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12818:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12819:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12820:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEtlParser.g:12820:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEtlParser.g:12829:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12833:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEtlParser.g:12834:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12841:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12845:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12846:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12846:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12847:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEtlParser.g:12856:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12860:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEtlParser.g:12861:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12868:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12872:1: ( ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12873:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12873:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12874:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12874:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:12875:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12876:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:12876:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12879:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:12880:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12881:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( ((LA112_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA112_0<=RULE_KEYWORD)||(LA112_0>=RULE_DIGIT_ZERO && LA112_0<=RULE_DIGIT_NONZERO)||LA112_0==RULE_DASH) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalEtlParser.g:12881:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEtlParser.g:12890:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12894:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12895:2: rule__DialectAliasFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12901:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12905:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12906:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12906:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12907:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEtlParser.g:12917:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12921:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEtlParser.g:12922:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEtlParser.g:12929:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12933:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEtlParser.g:12934:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEtlParser.g:12934:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEtlParser.g:12935:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEtlParser.g:12936:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEtlParser.g:12936:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEtlParser.g:12944:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12948:1: ( rule__Dialect__Group__1__Impl )
            // InternalEtlParser.g:12949:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEtlParser.g:12955:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12959:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEtlParser.g:12960:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEtlParser.g:12960:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEtlParser.g:12961:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEtlParser.g:12962:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_ROUND_OPEN) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalEtlParser.g:12962:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEtlParser.g:12971:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12975:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEtlParser.g:12976:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEtlParser.g:12983:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12987:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEtlParser.g:12988:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEtlParser.g:12988:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEtlParser.g:12989:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEtlParser.g:12990:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEtlParser.g:12990:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEtlParser.g:12998:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13002:1: ( rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 )
            // InternalEtlParser.g:13003:2: rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEtlParser.g:13010:1: rule__DialectAlias__Group__1__Impl : ( ( RULE_WS )* ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13014:1: ( ( ( RULE_WS )* ) )
            // InternalEtlParser.g:13015:1: ( ( RULE_WS )* )
            {
            // InternalEtlParser.g:13015:1: ( ( RULE_WS )* )
            // InternalEtlParser.g:13016:2: ( RULE_WS )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalEtlParser.g:13017:2: ( RULE_WS )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_WS) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalEtlParser.g:13017:3: RULE_WS
            	    {
            	    match(input,RULE_WS,FollowSets000.FOLLOW_78); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__2"
    // InternalEtlParser.g:13025:1: rule__DialectAlias__Group__2 : rule__DialectAlias__Group__2__Impl ;
    public final void rule__DialectAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13029:1: ( rule__DialectAlias__Group__2__Impl )
            // InternalEtlParser.g:13030:2: rule__DialectAlias__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2"


    // $ANTLR start "rule__DialectAlias__Group__2__Impl"
    // InternalEtlParser.g:13036:1: rule__DialectAlias__Group__2__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) ;
    public final void rule__DialectAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13040:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) )
            // InternalEtlParser.g:13041:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            {
            // InternalEtlParser.g:13041:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            // InternalEtlParser.g:13042:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }
            // InternalEtlParser.g:13043:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==RULE_ROUND_OPEN) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalEtlParser.g:13043:3: rule__DialectAlias__AcceptabilityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEtlParser.g:13052:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13056:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEtlParser.g:13057:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEtlParser.g:13064:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13068:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:13069:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:13069:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:13070:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEtlParser.g:13079:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13083:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEtlParser.g:13084:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEtlParser.g:13091:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13095:1: ( ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) )
            // InternalEtlParser.g:13096:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            {
            // InternalEtlParser.g:13096:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            // InternalEtlParser.g:13097:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            {
            // InternalEtlParser.g:13097:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEtlParser.g:13098:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEtlParser.g:13099:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEtlParser.g:13099:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }

            // InternalEtlParser.g:13102:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            // InternalEtlParser.g:13103:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEtlParser.g:13104:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( ((LA116_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA116_0<=RULE_KEYWORD)) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalEtlParser.g:13104:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_73);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEtlParser.g:13113:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13117:1: ( rule__AcceptabilityTokenSet__Group__2__Impl )
            // InternalEtlParser.g:13118:2: rule__AcceptabilityTokenSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEtlParser.g:13124:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13128:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:13129:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:13129:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:13130:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEtlParser.g:13140:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13144:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEtlParser.g:13145:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEtlParser.g:13152:1: rule__ActiveFilter__Group__0__Impl : ( ( rule__ActiveFilter__Group_0__0 )? ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13156:1: ( ( ( rule__ActiveFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13157:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13157:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            // InternalEtlParser.g:13158:2: ( rule__ActiveFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13159:2: ( rule__ActiveFilter__Group_0__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_DESCRIPTION_KEYWORD||LA117_0==RULE_CONCEPT_KEYWORD) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalEtlParser.g:13159:3: rule__ActiveFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ActiveFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEtlParser.g:13167:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13171:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEtlParser.g:13172:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEtlParser.g:13179:1: rule__ActiveFilter__Group__1__Impl : ( RULE_ACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13183:1: ( ( RULE_ACTIVE_KEYWORD ) )
            // InternalEtlParser.g:13184:1: ( RULE_ACTIVE_KEYWORD )
            {
            // InternalEtlParser.g:13184:1: ( RULE_ACTIVE_KEYWORD )
            // InternalEtlParser.g:13185:2: RULE_ACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEtlParser.g:13194:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13198:1: ( rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 )
            // InternalEtlParser.g:13199:2: rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEtlParser.g:13206:1: rule__ActiveFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13210:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13211:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13211:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13212:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__3"
    // InternalEtlParser.g:13221:1: rule__ActiveFilter__Group__3 : rule__ActiveFilter__Group__3__Impl ;
    public final void rule__ActiveFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13225:1: ( rule__ActiveFilter__Group__3__Impl )
            // InternalEtlParser.g:13226:2: rule__ActiveFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3"


    // $ANTLR start "rule__ActiveFilter__Group__3__Impl"
    // InternalEtlParser.g:13232:1: rule__ActiveFilter__Group__3__Impl : ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) ;
    public final void rule__ActiveFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13236:1: ( ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) )
            // InternalEtlParser.g:13237:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            {
            // InternalEtlParser.g:13237:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            // InternalEtlParser.g:13238:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }
            // InternalEtlParser.g:13239:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            // InternalEtlParser.g:13239:3: rule__ActiveFilter__ActiveAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__0"
    // InternalEtlParser.g:13248:1: rule__ActiveFilter__Group_0__0 : rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 ;
    public final void rule__ActiveFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13252:1: ( rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 )
            // InternalEtlParser.g:13253:2: rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__ActiveFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0"


    // $ANTLR start "rule__ActiveFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13260:1: rule__ActiveFilter__Group_0__0__Impl : ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ActiveFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13264:1: ( ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13265:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13265:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13266:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13267:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13267:3: rule__ActiveFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__1"
    // InternalEtlParser.g:13275:1: rule__ActiveFilter__Group_0__1 : rule__ActiveFilter__Group_0__1__Impl ;
    public final void rule__ActiveFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13279:1: ( rule__ActiveFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13280:2: rule__ActiveFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1"


    // $ANTLR start "rule__ActiveFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13286:1: rule__ActiveFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ActiveFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13290:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13291:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13291:1: ( RULE_DOT )
            // InternalEtlParser.g:13292:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEtlParser.g:13302:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13306:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEtlParser.g:13307:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEtlParser.g:13314:1: rule__ModuleFilter__Group__0__Impl : ( ( rule__ModuleFilter__Group_0__0 )? ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13318:1: ( ( ( rule__ModuleFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13319:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13319:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            // InternalEtlParser.g:13320:2: ( rule__ModuleFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13321:2: ( rule__ModuleFilter__Group_0__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_DESCRIPTION_KEYWORD||LA118_0==RULE_CONCEPT_KEYWORD) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalEtlParser.g:13321:3: rule__ModuleFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ModuleFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEtlParser.g:13329:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13333:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEtlParser.g:13334:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEtlParser.g:13341:1: rule__ModuleFilter__Group__1__Impl : ( RULE_MODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13345:1: ( ( RULE_MODULEID_KEYWORD ) )
            // InternalEtlParser.g:13346:1: ( RULE_MODULEID_KEYWORD )
            {
            // InternalEtlParser.g:13346:1: ( RULE_MODULEID_KEYWORD )
            // InternalEtlParser.g:13347:2: RULE_MODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEtlParser.g:13356:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13360:1: ( rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 )
            // InternalEtlParser.g:13361:2: rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEtlParser.g:13368:1: rule__ModuleFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13372:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13373:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13373:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13374:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__3"
    // InternalEtlParser.g:13383:1: rule__ModuleFilter__Group__3 : rule__ModuleFilter__Group__3__Impl ;
    public final void rule__ModuleFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13387:1: ( rule__ModuleFilter__Group__3__Impl )
            // InternalEtlParser.g:13388:2: rule__ModuleFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3"


    // $ANTLR start "rule__ModuleFilter__Group__3__Impl"
    // InternalEtlParser.g:13394:1: rule__ModuleFilter__Group__3__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) ;
    public final void rule__ModuleFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13398:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) )
            // InternalEtlParser.g:13399:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            {
            // InternalEtlParser.g:13399:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            // InternalEtlParser.g:13400:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }
            // InternalEtlParser.g:13401:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            // InternalEtlParser.g:13401:3: rule__ModuleFilter__ModuleIdAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__0"
    // InternalEtlParser.g:13410:1: rule__ModuleFilter__Group_0__0 : rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 ;
    public final void rule__ModuleFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13414:1: ( rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 )
            // InternalEtlParser.g:13415:2: rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__ModuleFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0"


    // $ANTLR start "rule__ModuleFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13422:1: rule__ModuleFilter__Group_0__0__Impl : ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ModuleFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13426:1: ( ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13427:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13427:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13428:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13429:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13429:3: rule__ModuleFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__1"
    // InternalEtlParser.g:13437:1: rule__ModuleFilter__Group_0__1 : rule__ModuleFilter__Group_0__1__Impl ;
    public final void rule__ModuleFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13441:1: ( rule__ModuleFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13442:2: rule__ModuleFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1"


    // $ANTLR start "rule__ModuleFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13448:1: rule__ModuleFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ModuleFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13452:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13453:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13453:1: ( RULE_DOT )
            // InternalEtlParser.g:13454:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEtlParser.g:13464:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13468:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEtlParser.g:13469:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEtlParser.g:13476:1: rule__SemanticTagFilter__Group__0__Impl : ( ( rule__SemanticTagFilter__Group_0__0 )? ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13480:1: ( ( ( rule__SemanticTagFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13481:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13481:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            // InternalEtlParser.g:13482:2: ( rule__SemanticTagFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13483:2: ( rule__SemanticTagFilter__Group_0__0 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==RULE_DESCRIPTION_KEYWORD||LA119_0==RULE_CONCEPT_KEYWORD) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalEtlParser.g:13483:3: rule__SemanticTagFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SemanticTagFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEtlParser.g:13491:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13495:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEtlParser.g:13496:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEtlParser.g:13503:1: rule__SemanticTagFilter__Group__1__Impl : ( RULE_SEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13507:1: ( ( RULE_SEMANTIC_TAG_KEYWORD ) )
            // InternalEtlParser.g:13508:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            {
            // InternalEtlParser.g:13508:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            // InternalEtlParser.g:13509:2: RULE_SEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEtlParser.g:13518:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13522:1: ( rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 )
            // InternalEtlParser.g:13523:2: rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEtlParser.g:13530:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13534:1: ( ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) )
            // InternalEtlParser.g:13535:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            {
            // InternalEtlParser.g:13535:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            // InternalEtlParser.g:13536:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }
            // InternalEtlParser.g:13537:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            // InternalEtlParser.g:13537:3: rule__SemanticTagFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__3"
    // InternalEtlParser.g:13545:1: rule__SemanticTagFilter__Group__3 : rule__SemanticTagFilter__Group__3__Impl ;
    public final void rule__SemanticTagFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13549:1: ( rule__SemanticTagFilter__Group__3__Impl )
            // InternalEtlParser.g:13550:2: rule__SemanticTagFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3"


    // $ANTLR start "rule__SemanticTagFilter__Group__3__Impl"
    // InternalEtlParser.g:13556:1: rule__SemanticTagFilter__Group__3__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) ;
    public final void rule__SemanticTagFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13560:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) )
            // InternalEtlParser.g:13561:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            {
            // InternalEtlParser.g:13561:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            // InternalEtlParser.g:13562:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }
            // InternalEtlParser.g:13563:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            // InternalEtlParser.g:13563:3: rule__SemanticTagFilter__SemanticTagAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0"
    // InternalEtlParser.g:13572:1: rule__SemanticTagFilter__Group_0__0 : rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 ;
    public final void rule__SemanticTagFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13576:1: ( rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 )
            // InternalEtlParser.g:13577:2: rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SemanticTagFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13584:1: rule__SemanticTagFilter__Group_0__0__Impl : ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__SemanticTagFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13588:1: ( ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13589:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13589:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13590:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13591:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13591:3: rule__SemanticTagFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1"
    // InternalEtlParser.g:13599:1: rule__SemanticTagFilter__Group_0__1 : rule__SemanticTagFilter__Group_0__1__Impl ;
    public final void rule__SemanticTagFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13603:1: ( rule__SemanticTagFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13604:2: rule__SemanticTagFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13610:1: rule__SemanticTagFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__SemanticTagFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13614:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13615:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13615:1: ( RULE_DOT )
            // InternalEtlParser.g:13616:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEtlParser.g:13626:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13630:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEtlParser.g:13631:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEtlParser.g:13638:1: rule__EffectiveTimeFilter__Group__0__Impl : ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13642:1: ( ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13643:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13643:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            // InternalEtlParser.g:13644:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13645:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_DESCRIPTION_KEYWORD||LA120_0==RULE_CONCEPT_KEYWORD) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalEtlParser.g:13645:3: rule__EffectiveTimeFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EffectiveTimeFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEtlParser.g:13653:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13657:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEtlParser.g:13658:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEtlParser.g:13665:1: rule__EffectiveTimeFilter__Group__1__Impl : ( RULE_EFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13669:1: ( ( RULE_EFFECTIVE_TIME_KEYWORD ) )
            // InternalEtlParser.g:13670:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            {
            // InternalEtlParser.g:13670:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            // InternalEtlParser.g:13671:2: RULE_EFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEtlParser.g:13680:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13684:1: ( rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 )
            // InternalEtlParser.g:13685:2: rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEtlParser.g:13692:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13696:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) )
            // InternalEtlParser.g:13697:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            {
            // InternalEtlParser.g:13697:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            // InternalEtlParser.g:13698:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }
            // InternalEtlParser.g:13699:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            // InternalEtlParser.g:13699:3: rule__EffectiveTimeFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3"
    // InternalEtlParser.g:13707:1: rule__EffectiveTimeFilter__Group__3 : rule__EffectiveTimeFilter__Group__3__Impl ;
    public final void rule__EffectiveTimeFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13711:1: ( rule__EffectiveTimeFilter__Group__3__Impl )
            // InternalEtlParser.g:13712:2: rule__EffectiveTimeFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3__Impl"
    // InternalEtlParser.g:13718:1: rule__EffectiveTimeFilter__Group__3__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13722:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) )
            // InternalEtlParser.g:13723:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            {
            // InternalEtlParser.g:13723:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            // InternalEtlParser.g:13724:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }
            // InternalEtlParser.g:13725:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            // InternalEtlParser.g:13725:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0"
    // InternalEtlParser.g:13734:1: rule__EffectiveTimeFilter__Group_0__0 : rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 ;
    public final void rule__EffectiveTimeFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13738:1: ( rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 )
            // InternalEtlParser.g:13739:2: rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__EffectiveTimeFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13746:1: rule__EffectiveTimeFilter__Group_0__0__Impl : ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__EffectiveTimeFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13750:1: ( ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13751:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13751:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13752:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13753:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13753:3: rule__EffectiveTimeFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1"
    // InternalEtlParser.g:13761:1: rule__EffectiveTimeFilter__Group_0__1 : rule__EffectiveTimeFilter__Group_0__1__Impl ;
    public final void rule__EffectiveTimeFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13765:1: ( rule__EffectiveTimeFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13766:2: rule__EffectiveTimeFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13772:1: rule__EffectiveTimeFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__EffectiveTimeFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13776:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13777:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13777:1: ( RULE_DOT )
            // InternalEtlParser.g:13778:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEtlParser.g:13788:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13792:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEtlParser.g:13793:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEtlParser.g:13800:1: rule__PreferredInFilter__Group__0__Impl : ( RULE_PREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13804:1: ( ( RULE_PREFERRED_IN_KEYWORD ) )
            // InternalEtlParser.g:13805:1: ( RULE_PREFERRED_IN_KEYWORD )
            {
            // InternalEtlParser.g:13805:1: ( RULE_PREFERRED_IN_KEYWORD )
            // InternalEtlParser.g:13806:2: RULE_PREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEtlParser.g:13815:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13819:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEtlParser.g:13820:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEtlParser.g:13827:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13831:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13832:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13832:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13833:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEtlParser.g:13842:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13846:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEtlParser.g:13847:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEtlParser.g:13853:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13857:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:13858:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13858:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:13859:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:13860:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:13860:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEtlParser.g:13869:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13873:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEtlParser.g:13874:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEtlParser.g:13881:1: rule__AcceptableInFilter__Group__0__Impl : ( RULE_ACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13885:1: ( ( RULE_ACCEPTABLE_IN_KEYWORD ) )
            // InternalEtlParser.g:13886:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            {
            // InternalEtlParser.g:13886:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            // InternalEtlParser.g:13887:2: RULE_ACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEtlParser.g:13896:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13900:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEtlParser.g:13901:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEtlParser.g:13908:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13912:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13913:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13913:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13914:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEtlParser.g:13923:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13927:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEtlParser.g:13928:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEtlParser.g:13934:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13938:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:13939:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13939:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:13940:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:13941:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:13941:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEtlParser.g:13950:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13954:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEtlParser.g:13955:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEtlParser.g:13962:1: rule__LanguageRefSetFilter__Group__0__Impl : ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13966:1: ( ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEtlParser.g:13967:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEtlParser.g:13967:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            // InternalEtlParser.g:13968:2: RULE_LANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEtlParser.g:13977:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13981:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEtlParser.g:13982:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEtlParser.g:13989:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13993:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13994:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13994:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13995:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEtlParser.g:14004:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14008:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEtlParser.g:14009:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEtlParser.g:14015:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14019:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:14020:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14020:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:14021:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:14022:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:14022:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEtlParser.g:14031:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14035:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEtlParser.g:14036:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEtlParser.g:14043:1: rule__CaseSignificanceFilter__Group__0__Impl : ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14047:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEtlParser.g:14048:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEtlParser.g:14048:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEtlParser.g:14049:2: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEtlParser.g:14058:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14062:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEtlParser.g:14063:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEtlParser.g:14070:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14074:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:14075:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:14075:1: ( RULE_EQUAL )
            // InternalEtlParser.g:14076:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEtlParser.g:14085:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14089:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEtlParser.g:14090:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEtlParser.g:14096:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14100:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEtlParser.g:14101:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEtlParser.g:14101:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEtlParser.g:14102:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEtlParser.g:14103:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEtlParser.g:14103:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEtlParser.g:14112:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14116:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEtlParser.g:14117:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEtlParser.g:14124:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14128:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14129:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14129:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14130:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEtlParser.g:14139:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14143:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEtlParser.g:14144:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEtlParser.g:14151:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14155:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:14156:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:14156:1: ( RULE_DOT )
            // InternalEtlParser.g:14157:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEtlParser.g:14166:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14170:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEtlParser.g:14171:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEtlParser.g:14177:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14181:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEtlParser.g:14182:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEtlParser.g:14182:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEtlParser.g:14183:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:14184:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( ((LA121_0>=RULE_DIGIT_ZERO && LA121_0<=RULE_DIGIT_NONZERO)) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalEtlParser.g:14184:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEtlParser.g:14193:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14197:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEtlParser.g:14198:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEtlParser.g:14205:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14209:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEtlParser.g:14210:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEtlParser.g:14210:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEtlParser.g:14211:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:14212:2: ( rule__Integer__Alternatives_0 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_PLUS && LA122_0<=RULE_DASH)) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalEtlParser.g:14212:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEtlParser.g:14220:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14224:1: ( rule__Integer__Group__1__Impl )
            // InternalEtlParser.g:14225:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEtlParser.g:14231:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14235:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14236:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14236:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14237:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEtlParser.g:14247:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14251:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEtlParser.g:14252:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEtlParser.g:14259:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14263:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEtlParser.g:14264:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEtlParser.g:14264:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEtlParser.g:14265:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:14266:2: ( rule__Decimal__Alternatives_0 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( ((LA123_0>=RULE_PLUS && LA123_0<=RULE_DASH)) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalEtlParser.g:14266:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEtlParser.g:14274:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14278:1: ( rule__Decimal__Group__1__Impl )
            // InternalEtlParser.g:14279:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEtlParser.g:14285:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14289:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:14290:1: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:14290:1: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:14291:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"
    // InternalEtlParser.g:14301:1: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 : ( RULE_SUBTYPE_OF ) ;
    public final void rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14305:1: ( ( RULE_SUBTYPE_OF ) )
            // InternalEtlParser.g:14306:2: ( RULE_SUBTYPE_OF )
            {
            // InternalEtlParser.g:14306:2: ( RULE_SUBTYPE_OF )
            // InternalEtlParser.g:14307:3: RULE_SUBTYPE_OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }
            match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"


    // $ANTLR start "rule__ExpressionTemplate__SlotAssignment_1_0_1"
    // InternalEtlParser.g:14316:1: rule__ExpressionTemplate__SlotAssignment_1_0_1 : ( ruleTokenReplacementSlot ) ;
    public final void rule__ExpressionTemplate__SlotAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14320:1: ( ( ruleTokenReplacementSlot ) )
            // InternalEtlParser.g:14321:2: ( ruleTokenReplacementSlot )
            {
            // InternalEtlParser.g:14321:2: ( ruleTokenReplacementSlot )
            // InternalEtlParser.g:14322:3: ruleTokenReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__SlotAssignment_1_0_1"


    // $ANTLR start "rule__ExpressionTemplate__ExpressionAssignment_1_1"
    // InternalEtlParser.g:14331:1: rule__ExpressionTemplate__ExpressionAssignment_1_1 : ( ruleSubExpression ) ;
    public final void rule__ExpressionTemplate__ExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14335:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:14336:2: ( ruleSubExpression )
            {
            // InternalEtlParser.g:14336:2: ( ruleSubExpression )
            // InternalEtlParser.g:14337:3: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__ExpressionAssignment_1_1"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_0"
    // InternalEtlParser.g:14346:1: rule__SubExpression__FocusConceptsAssignment_0 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14350:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:14351:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:14351:2: ( ruleFocusConcept )
            // InternalEtlParser.g:14352:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_0"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_1_1"
    // InternalEtlParser.g:14361:1: rule__SubExpression__FocusConceptsAssignment_1_1 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14365:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:14366:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:14366:2: ( ruleFocusConcept )
            // InternalEtlParser.g:14367:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_1_1"


    // $ANTLR start "rule__SubExpression__RefinementAssignment_2_1"
    // InternalEtlParser.g:14376:1: rule__SubExpression__RefinementAssignment_2_1 : ( ruleRefinement ) ;
    public final void rule__SubExpression__RefinementAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14380:1: ( ( ruleRefinement ) )
            // InternalEtlParser.g:14381:2: ( ruleRefinement )
            {
            // InternalEtlParser.g:14381:2: ( ruleRefinement )
            // InternalEtlParser.g:14382:3: ruleRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__RefinementAssignment_2_1"


    // $ANTLR start "rule__FocusConcept__SlotAssignment_0"
    // InternalEtlParser.g:14391:1: rule__FocusConcept__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__FocusConcept__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14395:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14396:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14396:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14397:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__SlotAssignment_0"


    // $ANTLR start "rule__FocusConcept__ConceptAssignment_1"
    // InternalEtlParser.g:14406:1: rule__FocusConcept__ConceptAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__FocusConcept__ConceptAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14410:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:14411:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:14411:2: ( ruleConceptReference )
            // InternalEtlParser.g:14412:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__ConceptAssignment_1"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_0"
    // InternalEtlParser.g:14421:1: rule__Refinement__AttributesAssignment_0_0_0 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14425:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14426:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14426:2: ( ruleAttribute )
            // InternalEtlParser.g:14427:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_0"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_1_1"
    // InternalEtlParser.g:14436:1: rule__Refinement__AttributesAssignment_0_0_1_1 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14440:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14441:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14441:2: ( ruleAttribute )
            // InternalEtlParser.g:14442:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_1_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_0_1"
    // InternalEtlParser.g:14451:1: rule__Refinement__GroupsAssignment_0_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14455:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:14456:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:14456:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:14457:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_0_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_1_1"
    // InternalEtlParser.g:14466:1: rule__Refinement__GroupsAssignment_1_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14470:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:14471:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:14471:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:14472:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_1_1"


    // $ANTLR start "rule__AttributeGroup__SlotAssignment_0"
    // InternalEtlParser.g:14481:1: rule__AttributeGroup__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__AttributeGroup__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14485:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14486:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14486:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14487:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__SlotAssignment_0"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_2"
    // InternalEtlParser.g:14496:1: rule__AttributeGroup__AttributesAssignment_2 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14500:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14501:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14501:2: ( ruleAttribute )
            // InternalEtlParser.g:14502:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_2"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_3_1"
    // InternalEtlParser.g:14511:1: rule__AttributeGroup__AttributesAssignment_3_1 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14515:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14516:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14516:2: ( ruleAttribute )
            // InternalEtlParser.g:14517:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_3_1"


    // $ANTLR start "rule__Attribute__SlotAssignment_0"
    // InternalEtlParser.g:14526:1: rule__Attribute__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__Attribute__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14530:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14531:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14531:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14532:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__SlotAssignment_0"


    // $ANTLR start "rule__Attribute__NameAssignment_1"
    // InternalEtlParser.g:14541:1: rule__Attribute__NameAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__Attribute__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14545:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:14546:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:14546:2: ( ruleConceptReference )
            // InternalEtlParser.g:14547:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__NameAssignment_1"


    // $ANTLR start "rule__Attribute__ValueAssignment_3"
    // InternalEtlParser.g:14556:1: rule__Attribute__ValueAssignment_3 : ( ruleAttributeValue ) ;
    public final void rule__Attribute__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14560:1: ( ( ruleAttributeValue ) )
            // InternalEtlParser.g:14561:2: ( ruleAttributeValue )
            {
            // InternalEtlParser.g:14561:2: ( ruleAttributeValue )
            // InternalEtlParser.g:14562:3: ruleAttributeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__ValueAssignment_3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:14571:1: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14575:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:14576:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:14576:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:14577:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14586:1: rule__ConceptIdReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ConceptIdReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14590:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14591:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14591:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14592:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:14601:1: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ExpressionReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14605:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:14606:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:14606:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:14607:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ExpressionReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14616:1: rule__ExpressionReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ExpressionReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14620:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14621:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14621:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14622:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_1"
    // InternalEtlParser.g:14631:1: rule__TokenReplacementSlot__TokensAssignment_4_1 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14635:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:14636:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:14636:2: ( ruleSlotToken )
            // InternalEtlParser.g:14637:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_1"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_2"
    // InternalEtlParser.g:14646:1: rule__TokenReplacementSlot__TokensAssignment_4_2 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14650:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:14651:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:14651:2: ( ruleSlotToken )
            // InternalEtlParser.g:14652:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_2"


    // $ANTLR start "rule__TokenReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14661:1: rule__TokenReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TokenReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14665:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14666:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14666:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14667:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TemplateInformationSlot__CardinalityAssignment_2"
    // InternalEtlParser.g:14676:1: rule__TemplateInformationSlot__CardinalityAssignment_2 : ( ruleEtlCardinality ) ;
    public final void rule__TemplateInformationSlot__CardinalityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14680:1: ( ( ruleEtlCardinality ) )
            // InternalEtlParser.g:14681:2: ( ruleEtlCardinality )
            {
            // InternalEtlParser.g:14681:2: ( ruleEtlCardinality )
            // InternalEtlParser.g:14682:3: ruleEtlCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__CardinalityAssignment_2"


    // $ANTLR start "rule__TemplateInformationSlot__NameAssignment_3"
    // InternalEtlParser.g:14691:1: rule__TemplateInformationSlot__NameAssignment_3 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TemplateInformationSlot__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14695:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14696:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14696:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14697:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__NameAssignment_3"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14706:1: rule__StringReplacementSlot__ValuesAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14710:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14711:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14711:2: ( RULE_STRING )
            // InternalEtlParser.g:14712:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14721:1: rule__StringReplacementSlot__ValuesAssignment_4_2 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14725:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14726:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14726:2: ( RULE_STRING )
            // InternalEtlParser.g:14727:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__StringReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14736:1: rule__StringReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__StringReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14740:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14741:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14741:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14742:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14751:1: rule__IntegerReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14755:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:14756:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:14756:2: ( ruleSlotInteger )
            // InternalEtlParser.g:14757:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14766:1: rule__IntegerReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14770:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:14771:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:14771:2: ( ruleSlotInteger )
            // InternalEtlParser.g:14772:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__IntegerReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14781:1: rule__IntegerReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__IntegerReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14785:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14786:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14786:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14787:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14796:1: rule__DecimalReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14800:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:14801:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:14801:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:14802:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14811:1: rule__DecimalReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14815:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:14816:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:14816:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:14817:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__DecimalReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14826:1: rule__DecimalReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__DecimalReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14830:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14831:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14831:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14832:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__EtlCardinality__MinAssignment_1"
    // InternalEtlParser.g:14841:1: rule__EtlCardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__EtlCardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14845:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14846:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14846:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14847:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MinAssignment_1"


    // $ANTLR start "rule__EtlCardinality__MaxAssignment_3"
    // InternalEtlParser.g:14856:1: rule__EtlCardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__EtlCardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14860:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:14861:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:14861:2: ( ruleMaxValue )
            // InternalEtlParser.g:14862:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MaxAssignment_3"


    // $ANTLR start "rule__ConceptReference__SlotAssignment_0"
    // InternalEtlParser.g:14871:1: rule__ConceptReference__SlotAssignment_0 : ( ruleConceptReplacementSlot ) ;
    public final void rule__ConceptReference__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14875:1: ( ( ruleConceptReplacementSlot ) )
            // InternalEtlParser.g:14876:2: ( ruleConceptReplacementSlot )
            {
            // InternalEtlParser.g:14876:2: ( ruleConceptReplacementSlot )
            // InternalEtlParser.g:14877:3: ruleConceptReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__SlotAssignment_0"


    // $ANTLR start "rule__ConceptReference__IdAssignment_1_0"
    // InternalEtlParser.g:14886:1: rule__ConceptReference__IdAssignment_1_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__ConceptReference__IdAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14890:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:14891:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:14891:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:14892:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__IdAssignment_1_0"


    // $ANTLR start "rule__ConceptReference__TermAssignment_1_1"
    // InternalEtlParser.g:14901:1: rule__ConceptReference__TermAssignment_1_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__ConceptReference__TermAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14905:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:14906:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:14906:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:14907:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__TermAssignment_1_1"


    // $ANTLR start "rule__StringValue__ValueAssignment"
    // InternalEtlParser.g:14916:1: rule__StringValue__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14920:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14921:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14921:2: ( RULE_STRING )
            // InternalEtlParser.g:14922:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValueAssignment"


    // $ANTLR start "rule__IntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:14931:1: rule__IntegerValue__ValueAssignment_1 : ( ruleInteger ) ;
    public final void rule__IntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14935:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:14936:2: ( ruleInteger )
            {
            // InternalEtlParser.g:14936:2: ( ruleInteger )
            // InternalEtlParser.g:14937:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__DecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:14946:1: rule__DecimalValue__ValueAssignment_1 : ( ruleDecimal ) ;
    public final void rule__DecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14950:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:14951:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:14951:2: ( ruleDecimal )
            // InternalEtlParser.g:14952:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:14961:1: rule__SlotIntegerValue__ValueAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14965:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14966:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14966:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14967:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:14976:1: rule__SlotIntegerRange__MinimumAssignment_0_0 : ( ruleSlotIntegerMinimumValue ) ;
    public final void rule__SlotIntegerRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14980:1: ( ( ruleSlotIntegerMinimumValue ) )
            // InternalEtlParser.g:14981:2: ( ruleSlotIntegerMinimumValue )
            {
            // InternalEtlParser.g:14981:2: ( ruleSlotIntegerMinimumValue )
            // InternalEtlParser.g:14982:3: ruleSlotIntegerMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:14991:1: rule__SlotIntegerRange__MaximumAssignment_0_2 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14995:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:14996:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:14996:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:14997:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:15006:1: rule__SlotIntegerRange__MaximumAssignment_1_1 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15010:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:15011:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:15011:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:15012:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:15021:1: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotIntegerMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15025:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:15026:2: ( RULE_GT )
            {
            // InternalEtlParser.g:15026:2: ( RULE_GT )
            // InternalEtlParser.g:15027:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:15036:1: rule__SlotIntegerMinimumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15040:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15041:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15041:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15042:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:15051:1: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotIntegerMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15055:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:15056:2: ( RULE_LT )
            {
            // InternalEtlParser.g:15056:2: ( RULE_LT )
            // InternalEtlParser.g:15057:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:15066:1: rule__SlotIntegerMaximumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15070:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15071:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15071:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15072:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:15081:1: rule__SlotDecimalValue__ValueAssignment_1 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15085:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:15086:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:15086:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:15087:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotDecimalRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:15096:1: rule__SlotDecimalRange__MinimumAssignment_0_0 : ( ruleSlotDecimalMinimumValue ) ;
    public final void rule__SlotDecimalRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15100:1: ( ( ruleSlotDecimalMinimumValue ) )
            // InternalEtlParser.g:15101:2: ( ruleSlotDecimalMinimumValue )
            {
            // InternalEtlParser.g:15101:2: ( ruleSlotDecimalMinimumValue )
            // InternalEtlParser.g:15102:3: ruleSlotDecimalMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:15111:1: rule__SlotDecimalRange__MaximumAssignment_0_2 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15115:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:15116:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:15116:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:15117:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:15126:1: rule__SlotDecimalRange__MaximumAssignment_1_1 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15130:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:15131:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:15131:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:15132:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:15141:1: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotDecimalMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15145:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:15146:2: ( RULE_GT )
            {
            // InternalEtlParser.g:15146:2: ( RULE_GT )
            // InternalEtlParser.g:15147:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:15156:1: rule__SlotDecimalMinimumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15160:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:15161:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:15161:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:15162:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:15171:1: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotDecimalMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15175:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:15176:2: ( RULE_LT )
            {
            // InternalEtlParser.g:15176:2: ( RULE_LT )
            // InternalEtlParser.g:15177:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:15186:1: rule__SlotDecimalMaximumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15190:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:15191:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:15191:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:15192:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15201:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15205:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:15206:2: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:15206:2: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:15207:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15216:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15220:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:15221:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:15221:2: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:15222:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15231:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15235:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:15236:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:15236:2: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:15237:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEtlParser.g:15246:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15250:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:15251:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:15251:2: ( ruleEclRefinement )
            // InternalEtlParser.g:15252:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEtlParser.g:15261:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15265:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15266:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15266:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15267:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEtlParser.g:15276:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15280:1: ( ( ruleFilterConstraint ) )
            // InternalEtlParser.g:15281:2: ( ruleFilterConstraint )
            {
            // InternalEtlParser.g:15281:2: ( ruleFilterConstraint )
            // InternalEtlParser.g:15282:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15291:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15295:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15296:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15296:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15297:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15306:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15310:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15311:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15311:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15312:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15321:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15325:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15326:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15326:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15327:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15336:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15340:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15341:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15341:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15342:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15351:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15355:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15356:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15356:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15357:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15366:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15370:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15371:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15371:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15372:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15381:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15385:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15386:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15386:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15387:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15396:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15400:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15401:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15401:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15402:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15411:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15415:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEtlParser.g:15416:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEtlParser.g:15416:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEtlParser.g:15417:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEtlParser.g:15418:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEtlParser.g:15418:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEtlParser.g:15426:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15430:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:15431:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:15431:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:15432:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEtlParser.g:15441:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15445:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:15446:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:15446:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:15447:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEtlParser.g:15456:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15460:1: ( ( ruleEclConceptReference ) )
            // InternalEtlParser.g:15461:2: ( ruleEclConceptReference )
            {
            // InternalEtlParser.g:15461:2: ( ruleEclConceptReference )
            // InternalEtlParser.g:15462:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:15471:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15475:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:15476:2: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:15476:2: ( ruleAndRefinement )
            // InternalEtlParser.g:15477:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:15486:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15490:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:15491:2: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:15491:2: ( ruleSubRefinement )
            // InternalEtlParser.g:15492:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEtlParser.g:15501:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15505:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:15506:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:15506:2: ( ruleEclRefinement )
            // InternalEtlParser.g:15507:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEtlParser.g:15516:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15520:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:15521:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:15521:2: ( ruleCardinality )
            // InternalEtlParser.g:15522:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEtlParser.g:15531:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15535:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:15536:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:15536:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:15537:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:15546:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15550:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:15551:2: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:15551:2: ( ruleAndAttributeSet )
            // InternalEtlParser.g:15552:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:15561:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15565:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:15566:2: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:15566:2: ( ruleSubAttributeSet )
            // InternalEtlParser.g:15567:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEtlParser.g:15576:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15580:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:15581:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:15581:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:15582:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEtlParser.g:15591:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15595:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:15596:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:15596:2: ( ruleCardinality )
            // InternalEtlParser.g:15597:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEtlParser.g:15606:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15610:1: ( ( RULE_REVERSED ) )
            // InternalEtlParser.g:15611:2: ( RULE_REVERSED )
            {
            // InternalEtlParser.g:15611:2: ( RULE_REVERSED )
            // InternalEtlParser.g:15612:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEtlParser.g:15621:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15625:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15626:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15626:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15627:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEtlParser.g:15636:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15640:1: ( ( ruleComparison ) )
            // InternalEtlParser.g:15641:2: ( ruleComparison )
            {
            // InternalEtlParser.g:15641:2: ( ruleComparison )
            // InternalEtlParser.g:15642:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEtlParser.g:15651:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15655:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15656:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15656:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15657:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEtlParser.g:15666:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15670:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:15671:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:15671:2: ( ruleMaxValue )
            // InternalEtlParser.g:15672:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEtlParser.g:15681:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15685:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15686:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15686:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15687:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEtlParser.g:15696:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15700:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15701:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15701:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15702:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15711:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15715:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15716:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15716:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15717:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:15726:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15730:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:15731:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:15731:2: ( ruleBoolean )
            // InternalEtlParser.g:15732:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15741:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15745:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15746:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15746:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15747:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:15756:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15760:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15761:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15761:2: ( RULE_STRING )
            // InternalEtlParser.g:15762:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15771:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15775:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15776:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15776:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:15777:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:15786:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15790:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:15791:2: ( ruleInteger )
            {
            // InternalEtlParser.g:15791:2: ( ruleInteger )
            // InternalEtlParser.g:15792:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15801:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15805:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15806:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15806:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:15807:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:15816:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15820:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:15821:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:15821:2: ( ruleDecimal )
            // InternalEtlParser.g:15822:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEtlParser.g:15831:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15835:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:15836:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:15836:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:15837:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:15846:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15850:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:15851:2: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:15851:2: ( ruleConjunctionFilter )
            // InternalEtlParser.g:15852:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:15861:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15865:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:15866:2: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:15866:2: ( rulePropertyFilter )
            // InternalEtlParser.g:15867:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEtlParser.g:15876:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15880:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:15881:2: ( ruleFilter )
            {
            // InternalEtlParser.g:15881:2: ( ruleFilter )
            // InternalEtlParser.g:15882:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEtlParser.g:15891:1: rule__TypedTermFilter__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15895:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15896:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15896:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15897:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__ClauseAssignment_1"
    // InternalEtlParser.g:15906:1: rule__TypedTermFilter__ClauseAssignment_1 : ( ruleTypedTermFilterClause ) ;
    public final void rule__TypedTermFilter__ClauseAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15910:1: ( ( ruleTypedTermFilterClause ) )
            // InternalEtlParser.g:15911:2: ( ruleTypedTermFilterClause )
            {
            // InternalEtlParser.g:15911:2: ( ruleTypedTermFilterClause )
            // InternalEtlParser.g:15912:3: ruleTypedTermFilterClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getClauseTypedTermFilterClauseParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getClauseTypedTermFilterClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__ClauseAssignment_1"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEtlParser.g:15921:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15925:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15926:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15926:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15927:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__ClausesAssignment_2"
    // InternalEtlParser.g:15936:1: rule__TypedTermFilterSet__ClausesAssignment_2 : ( ruleTypedTermFilterClause ) ;
    public final void rule__TypedTermFilterSet__ClausesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15940:1: ( ( ruleTypedTermFilterClause ) )
            // InternalEtlParser.g:15941:2: ( ruleTypedTermFilterClause )
            {
            // InternalEtlParser.g:15941:2: ( ruleTypedTermFilterClause )
            // InternalEtlParser.g:15942:3: ruleTypedTermFilterClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesTypedTermFilterClauseParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesTypedTermFilterClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__ClausesAssignment_2"


    // $ANTLR start "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0"
    // InternalEtlParser.g:15951:1: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15955:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEtlParser.g:15956:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEtlParser.g:15956:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEtlParser.g:15957:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0_0"


    // $ANTLR start "rule__TypedTermFilterClause__TermAssignment_0_1"
    // InternalEtlParser.g:15966:1: rule__TypedTermFilterClause__TermAssignment_0_1 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilterClause__TermAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15970:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15971:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15971:2: ( RULE_STRING )
            // InternalEtlParser.g:15972:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__TermAssignment_0_1"


    // $ANTLR start "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0"
    // InternalEtlParser.g:15981:1: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0 : ( RULE_REGEX_KEYWORD ) ;
    public final void rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15985:1: ( ( RULE_REGEX_KEYWORD ) )
            // InternalEtlParser.g:15986:2: ( RULE_REGEX_KEYWORD )
            {
            // InternalEtlParser.g:15986:2: ( RULE_REGEX_KEYWORD )
            // InternalEtlParser.g:15987:3: RULE_REGEX_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedTermFilterClause__TermAssignment_1_2"
    // InternalEtlParser.g:15996:1: rule__TypedTermFilterClause__TermAssignment_1_2 : ( ruleRegularExpression ) ;
    public final void rule__TypedTermFilterClause__TermAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16000:1: ( ( ruleRegularExpression ) )
            // InternalEtlParser.g:16001:2: ( ruleRegularExpression )
            {
            // InternalEtlParser.g:16001:2: ( ruleRegularExpression )
            // InternalEtlParser.g:16002:3: ruleRegularExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__TermAssignment_1_2"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEtlParser.g:16011:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16015:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16016:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16016:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16017:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEtlParser.g:16026:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16030:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16031:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16031:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16032:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEtlParser.g:16041:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16045:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16046:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16046:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16047:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEtlParser.g:16056:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16060:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16061:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16061:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16062:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEtlParser.g:16071:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16075:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEtlParser.g:16076:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEtlParser.g:16076:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEtlParser.g:16077:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEtlParser.g:16078:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEtlParser.g:16078:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEtlParser.g:16086:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16090:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16091:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16091:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16092:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEtlParser.g:16101:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16105:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16106:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16106:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16107:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEtlParser.g:16116:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16120:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16121:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16121:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16122:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEtlParser.g:16131:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16135:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16136:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16136:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16137:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:16146:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16150:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:16151:2: ( ruleDialect )
            {
            // InternalEtlParser.g:16151:2: ( ruleDialect )
            // InternalEtlParser.g:16152:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:16161:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16165:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:16166:2: ( ruleDialect )
            {
            // InternalEtlParser.g:16166:2: ( ruleDialect )
            // InternalEtlParser.g:16167:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEtlParser.g:16176:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16180:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16181:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16181:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16182:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:16191:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16195:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:16196:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:16196:2: ( ruleDialectAlias )
            // InternalEtlParser.g:16197:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:16206:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16210:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:16211:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:16211:2: ( ruleDialectAlias )
            // InternalEtlParser.g:16212:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEtlParser.g:16221:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16225:1: ( ( ruleEclConceptReference ) )
            // InternalEtlParser.g:16226:2: ( ruleEclConceptReference )
            {
            // InternalEtlParser.g:16226:2: ( ruleEclConceptReference )
            // InternalEtlParser.g:16227:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEtlParser.g:16236:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16240:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:16241:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:16241:2: ( ruleAcceptability )
            // InternalEtlParser.g:16242:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEtlParser.g:16251:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16255:1: ( ( ruleDialectAliasValue ) )
            // InternalEtlParser.g:16256:2: ( ruleDialectAliasValue )
            {
            // InternalEtlParser.g:16256:2: ( ruleDialectAliasValue )
            // InternalEtlParser.g:16257:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_2"
    // InternalEtlParser.g:16266:1: rule__DialectAlias__AcceptabilityAssignment_2 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16270:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:16271:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:16271:2: ( ruleAcceptability )
            // InternalEtlParser.g:16272:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_2"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEtlParser.g:16281:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16285:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEtlParser.g:16286:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEtlParser.g:16286:2: ( ruleEclConceptReferenceSet )
            // InternalEtlParser.g:16287:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEtlParser.g:16296:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleUnquotedString ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16300:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16301:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16301:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16302:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__ActiveFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16311:1: rule__ActiveFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ActiveFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16315:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16316:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16316:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16317:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_3"
    // InternalEtlParser.g:16326:1: rule__ActiveFilter__ActiveAssignment_3 : ( ruleBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16330:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:16331:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:16331:2: ( ruleBoolean )
            // InternalEtlParser.g:16332:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_3"


    // $ANTLR start "rule__ModuleFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16341:1: rule__ModuleFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ModuleFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16345:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16346:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16346:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16347:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_3"
    // InternalEtlParser.g:16356:1: rule__ModuleFilter__ModuleIdAssignment_3 : ( ruleExpressionConstraint ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16360:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16361:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16361:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16362:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_3"


    // $ANTLR start "rule__SemanticTagFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16371:1: rule__SemanticTagFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__SemanticTagFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16375:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16376:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16376:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16377:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_2"
    // InternalEtlParser.g:16386:1: rule__SemanticTagFilter__OpAssignment_2 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16390:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16391:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16391:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16392:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_3"
    // InternalEtlParser.g:16401:1: rule__SemanticTagFilter__SemanticTagAssignment_3 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16405:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:16406:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:16406:2: ( RULE_STRING )
            // InternalEtlParser.g:16407:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_3"


    // $ANTLR start "rule__EffectiveTimeFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16416:1: rule__EffectiveTimeFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__EffectiveTimeFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16420:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16421:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16421:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16422:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_2"
    // InternalEtlParser.g:16431:1: rule__EffectiveTimeFilter__OpAssignment_2 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16435:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16436:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16436:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:16437:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"
    // InternalEtlParser.g:16446:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16450:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:16451:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:16451:2: ( RULE_STRING )
            // InternalEtlParser.g:16452:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16461:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16465:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16466:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16466:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16467:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16476:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16480:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16481:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16481:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16482:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16491:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16495:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16496:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16496:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16497:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEtlParser.g:16506:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16510:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16511:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16511:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16512:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"

    // $ANTLR start synpred1_InternalEtlParser
    public final void synpred1_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2730:5: ( rule__SnomedIdentifier__Alternatives )
        // InternalEtlParser.g:2730:5: rule__SnomedIdentifier__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEtlParser

    // $ANTLR start synpred3_InternalEtlParser
    public final void synpred3_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3000:5: ( rule__DialectAliasValue__Alternatives )
        // InternalEtlParser.g:3000:5: rule__DialectAliasValue__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalEtlParser

    // $ANTLR start synpred33_InternalEtlParser
    public final void synpred33_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3409:2: ( ( ruleSlotIntegerRange ) )
        // InternalEtlParser.g:3409:2: ( ruleSlotIntegerRange )
        {
        // InternalEtlParser.g:3409:2: ( ruleSlotIntegerRange )
        // InternalEtlParser.g:3410:3: ruleSlotIntegerRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotIntegerRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEtlParser

    // $ANTLR start synpred35_InternalEtlParser
    public final void synpred35_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3451:2: ( ( ruleSlotDecimalRange ) )
        // InternalEtlParser.g:3451:2: ( ruleSlotDecimalRange )
        {
        // InternalEtlParser.g:3451:2: ( ruleSlotDecimalRange )
        // InternalEtlParser.g:3452:3: ruleSlotDecimalRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotDecimalRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred35_InternalEtlParser

    // $ANTLR start synpred52_InternalEtlParser
    public final void synpred52_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3658:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3658:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3658:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3659:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalEtlParser

    // $ANTLR start synpred53_InternalEtlParser
    public final void synpred53_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3664:2: ( ( ruleEclAttributeGroup ) )
        // InternalEtlParser.g:3664:2: ( ruleEclAttributeGroup )
        {
        // InternalEtlParser.g:3664:2: ( ruleEclAttributeGroup )
        // InternalEtlParser.g:3665:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred53_InternalEtlParser

    // $ANTLR start synpred55_InternalEtlParser
    public final void synpred55_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3706:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3706:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3706:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3707:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalEtlParser

    // $ANTLR start synpred160_InternalEtlParser
    public final void synpred160_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:7763:3: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:7763:3: rule__SlotIntegerRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotIntegerRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred160_InternalEtlParser

    // $ANTLR start synpred163_InternalEtlParser
    public final void synpred163_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8114:3: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:8114:3: rule__SlotDecimalRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotDecimalRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalEtlParser

    // $ANTLR start synpred166_InternalEtlParser
    public final void synpred166_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8384:3: ( rule__OrExpressionConstraint__Group_1__0 )
        // InternalEtlParser.g:8384:3: rule__OrExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalEtlParser

    // $ANTLR start synpred167_InternalEtlParser
    public final void synpred167_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8519:3: ( rule__AndExpressionConstraint__Group_1__0 )
        // InternalEtlParser.g:8519:3: rule__AndExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred167_InternalEtlParser

    // $ANTLR start synpred174_InternalEtlParser
    public final void synpred174_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:9849:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEtlParser.g:9849:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_InternalEtlParser

    // $ANTLR start synpred175_InternalEtlParser
    public final void synpred175_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:10011:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEtlParser.g:10011:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred175_InternalEtlParser

    // Delegated rules

    public final boolean synpred167_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA86 dfa86 = new DFA86(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\1\1\40\uffff";
    static final String dfa_3s = "\1\21\1\uffff\36\0\1\uffff";
    static final String dfa_4s = "\1\105\1\uffff\36\0\1\uffff";
    static final String dfa_5s = "\1\uffff\1\2\36\uffff\1\1";
    static final String dfa_6s = "\2\uffff\1\35\1\33\1\13\1\10\1\23\1\3\1\20\1\0\1\15\1\31\1\12\1\25\1\5\1\22\1\2\1\17\1\34\1\14\1\30\1\11\1\24\1\4\1\21\1\1\1\16\1\32\1\6\1\26\1\7\1\27\1\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\3\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\2\1\3\1\34\1\35\11\uffff\1\1\2\uffff\1\1\1\36\1\37\3\uffff\2\1\1\uffff\1\4",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 3000:4: ( rule__DialectAliasValue__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_9 = input.LA(1);

                         
                        int index3_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_25 = input.LA(1);

                         
                        int index3_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_16 = input.LA(1);

                         
                        int index3_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_16);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA3_7 = input.LA(1);

                         
                        int index3_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA3_23 = input.LA(1);

                         
                        int index3_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA3_14 = input.LA(1);

                         
                        int index3_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_14);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA3_28 = input.LA(1);

                         
                        int index3_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA3_30 = input.LA(1);

                         
                        int index3_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA3_5 = input.LA(1);

                         
                        int index3_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_5);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA3_21 = input.LA(1);

                         
                        int index3_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA3_12 = input.LA(1);

                         
                        int index3_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA3_19 = input.LA(1);

                         
                        int index3_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA3_10 = input.LA(1);

                         
                        int index3_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_10);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA3_26 = input.LA(1);

                         
                        int index3_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA3_17 = input.LA(1);

                         
                        int index3_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA3_8 = input.LA(1);

                         
                        int index3_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_8);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA3_24 = input.LA(1);

                         
                        int index3_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA3_15 = input.LA(1);

                         
                        int index3_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_15);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA3_6 = input.LA(1);

                         
                        int index3_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_6);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA3_22 = input.LA(1);

                         
                        int index3_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA3_13 = input.LA(1);

                         
                        int index3_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_13);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA3_29 = input.LA(1);

                         
                        int index3_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA3_31 = input.LA(1);

                         
                        int index3_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_31);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA3_20 = input.LA(1);

                         
                        int index3_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_20);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA3_11 = input.LA(1);

                         
                        int index3_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_11);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA3_27 = input.LA(1);

                         
                        int index3_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA3_18 = input.LA(1);

                         
                        int index3_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_18);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA3_2 = input.LA(1);

                         
                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\21\uffff";
    static final String dfa_9s = "\1\4\1\5\2\uffff\1\75\2\73\1\5\1\4\2\73\1\75\5\5";
    static final String dfa_10s = "\1\100\1\104\2\uffff\3\76\1\5\1\100\2\76\1\110\2\76\1\24\2\76";
    static final String dfa_11s = "\2\uffff\1\1\1\2\15\uffff";
    static final String dfa_12s = "\21\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\70\uffff\2\2\1\uffff\1\3",
            "\1\10\1\4\15\uffff\1\7\50\uffff\1\6\1\5\5\uffff\1\2",
            "",
            "",
            "\1\6\1\5",
            "\1\13\1\uffff\1\12\1\11",
            "\1\13\1\uffff\1\12\1\11",
            "\1\10",
            "\1\2\70\uffff\2\2\1\uffff\1\3",
            "\1\13\1\uffff\1\12\1\11",
            "\1\13\1\uffff\1\12\1\11",
            "\1\15\1\14\11\uffff\1\16",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3152:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_14s = "\20\uffff";
    static final String dfa_15s = "\11\uffff\2\16\1\uffff\2\16\2\uffff";
    static final String dfa_16s = "\1\4\1\104\3\uffff\1\75\1\5\2\75\2\4\1\uffff\2\4\2\uffff";
    static final String dfa_17s = "\1\115\1\104\3\uffff\1\105\1\102\2\76\2\107\1\uffff\2\107\2\uffff";
    static final String dfa_18s = "\2\uffff\1\1\1\2\1\3\6\uffff\1\6\2\uffff\1\4\1\5";
    static final String dfa_19s = "\20\uffff}>";
    static final String[] dfa_20s = {
            "\1\1\13\uffff\1\4\54\uffff\2\2\3\uffff\1\3\12\uffff\1\5",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\7\1\10",
            "\1\2\2\uffff\2\2\1\uffff\3\13\6\uffff\1\2\55\uffff\1\2",
            "\1\12\1\11",
            "\1\12\1\11",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "3173:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );";
        }
    }
    static final String dfa_21s = "\3\uffff\4\7\1\uffff\1\1\7\uffff";
    static final String dfa_22s = "\1\73\1\uffff\1\75\4\73\1\uffff\1\73\1\115\2\75\4\0";
    static final String dfa_23s = "\1\115\1\uffff\1\76\4\115\1\uffff\2\115\2\76\4\0";
    static final String dfa_24s = "\1\uffff\1\1\5\uffff\1\2\10\uffff";
    static final String dfa_25s = "\14\uffff\1\3\1\2\1\0\1\1}>";
    static final String[] dfa_26s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\4\1\3",
            "\1\10\1\uffff\1\6\1\5\4\uffff\1\7\10\uffff\2\7",
            "\1\10\1\uffff\1\6\1\5\4\uffff\1\7\10\uffff\2\7",
            "\1\10\1\uffff\1\6\1\5\4\uffff\1\7\10\uffff\2\7",
            "\1\10\1\uffff\1\6\1\5\4\uffff\1\7\10\uffff\2\7",
            "",
            "\1\1\7\uffff\1\1\7\uffff\1\11\1\1\1\12",
            "\1\13",
            "\1\15\1\14",
            "\1\17\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_14;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "3404:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_14 = input.LA(1);

                         
                        int index12_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index12_14);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA12_15 = input.LA(1);

                         
                        int index12_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index12_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA12_13 = input.LA(1);

                         
                        int index12_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index12_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA12_12 = input.LA(1);

                         
                        int index12_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index12_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\31\uffff";
    static final String dfa_28s = "\7\uffff\3\13\1\1\16\uffff";
    static final String dfa_29s = "\1\73\1\uffff\5\75\4\73\1\uffff\1\115\10\75\1\0\2\75\1\0";
    static final String dfa_30s = "\1\115\1\uffff\1\76\4\107\4\115\1\uffff\1\115\2\76\6\107\1\0\2\107\1\0";
    static final String dfa_31s = "\1\uffff\1\1\11\uffff\1\2\15\uffff";
    static final String dfa_32s = "\25\uffff\1\0\2\uffff\1\1}>";
    static final String[] dfa_33s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\4\1\3",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\1\7\uffff\1\1\7\uffff\1\14\1\1\1\15",
            "",
            "\1\16",
            "\1\20\1\17",
            "\1\22\1\21",
            "\1\24\1\23\10\uffff\1\25",
            "\1\24\1\23\10\uffff\1\25",
            "\1\27\1\26\10\uffff\1\30",
            "\1\27\1\26\10\uffff\1\30",
            "\1\24\1\23\10\uffff\1\25",
            "\1\24\1\23\10\uffff\1\25",
            "\1\uffff",
            "\1\27\1\26\10\uffff\1\30",
            "\1\27\1\26\10\uffff\1\30",
            "\1\uffff"
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3446:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_21 = input.LA(1);

                         
                        int index14_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index14_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_24 = input.LA(1);

                         
                        int index14_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index14_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\22\uffff";
    static final String dfa_35s = "\1\22\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_36s = "\1\114\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_37s = "\2\uffff\1\1\15\uffff\1\2\1\3";
    static final String dfa_38s = "\1\uffff\1\0\15\uffff\1\1\2\uffff}>";
    static final String[] dfa_39s = {
            "\1\1\33\uffff\1\2\1\uffff\6\2\7\uffff\2\2\1\uffff\1\20\1\uffff\1\17\3\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3653:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEtlParser()) ) {s = 2;}

                        else if ( (synpred53_InternalEtlParser()) ) {s = 16;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_15 = input.LA(1);

                         
                        int index21_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEtlParser()) ) {s = 2;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index21_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\22\16\uffff\1\0\1\uffff";
    static final String dfa_41s = "\1\114\16\uffff\1\0\1\uffff";
    static final String dfa_42s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_43s = "\17\uffff\1\0\1\uffff}>";
    static final String[] dfa_44s = {
            "\1\1\33\uffff\1\1\1\uffff\6\1\7\uffff\2\1\3\uffff\1\17\3\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3701:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_15 = input.LA(1);

                         
                        int index23_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index23_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\14\uffff\4\20\2\uffff";
    static final String dfa_46s = "\1\66\2\20\4\115\2\uffff\3\75\4\43\2\uffff";
    static final String dfa_47s = "\1\114\6\115\2\uffff\1\105\2\76\4\107\2\uffff";
    static final String dfa_48s = "\7\uffff\1\1\1\2\7\uffff\1\3\1\4";
    static final String dfa_49s = "\22\uffff}>";
    static final String[] dfa_50s = {
            "\1\5\1\6\21\uffff\1\1\1\2\1\4\1\3",
            "\1\10\24\uffff\1\7\3\uffff\1\7\43\uffff\1\11",
            "\1\10\24\uffff\1\7\3\uffff\1\7\43\uffff\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "",
            "",
            "\1\15\1\14\5\uffff\1\12\1\13",
            "\1\15\1\14",
            "\1\15\1\14",
            "\1\20\10\uffff\2\20\13\uffff\1\20\2\uffff\1\20\1\17\1\16\2\uffff\1\20\1\uffff\1\20\3\uffff\1\21",
            "\1\20\10\uffff\2\20\13\uffff\1\20\2\uffff\1\20\1\17\1\16\2\uffff\1\20\1\uffff\1\20\3\uffff\1\21",
            "\1\20\10\uffff\2\20\13\uffff\1\20\2\uffff\1\20\1\17\1\16\2\uffff\1\20\1\uffff\1\20\3\uffff\1\21",
            "\1\20\10\uffff\2\20\13\uffff\1\20\2\uffff\1\20\1\17\1\16\2\uffff\1\20\1\uffff\1\20\3\uffff\1\21",
            "",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_34;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "3743:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_51s = "\1\25\4\uffff\2\107\11\uffff\1\27";
    static final String dfa_52s = "\1\102\4\uffff\2\107\11\uffff\1\41";
    static final String dfa_53s = "\1\uffff\1\1\1\2\1\3\1\4\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff";
    static final String[] dfa_54s = {
            "\1\16\1\12\1\15\1\11\1\6\1\10\1\14\1\4\1\2\1\13\1\5\1\4\1\7\1\3\5\uffff\1\1\1\uffff\1\3\27\uffff\1\17",
            "",
            "",
            "",
            "",
            "\1\20",
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\15\3\uffff\1\14\2\uffff\1\13\2\uffff\1\7"
    };
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_12;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "3797:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );";
        }
    }
    static final String dfa_55s = "\1\2\21\uffff";
    static final String dfa_56s = "\2\4\1\uffff\1\5\1\uffff\1\75\2\73\1\5\1\4\2\73\1\75\5\5";
    static final String dfa_57s = "\1\103\1\100\1\uffff\1\104\1\uffff\3\76\1\5\1\100\2\76\1\110\2\76\1\24\2\76";
    static final String dfa_58s = "\2\uffff\1\2\1\uffff\1\1\15\uffff";
    static final String[] dfa_59s = {
            "\1\2\67\uffff\1\1\3\uffff\1\2\2\uffff\1\2",
            "\1\3\70\uffff\2\4\1\uffff\1\2",
            "",
            "\1\11\1\5\15\uffff\1\10\50\uffff\1\7\1\6\5\uffff\1\4",
            "",
            "\1\7\1\6",
            "\1\14\1\uffff\1\13\1\12",
            "\1\14\1\uffff\1\13\1\12",
            "\1\11",
            "\1\4\70\uffff\2\4\1\uffff\1\2",
            "\1\14\1\uffff\1\13\1\12",
            "\1\14\1\uffff\1\13\1\12",
            "\1\16\1\15\11\uffff\1\17",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20"
    };
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_34;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_49;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "()* loopback of 5009:2: ( rule__Refinement__Group_0_0_1__0 )*";
        }
    }
    static final String dfa_60s = "\11\uffff";
    static final String dfa_61s = "\1\3\10\uffff";
    static final String dfa_62s = "\1\73\1\uffff\1\75\1\uffff\4\75\1\0";
    static final String dfa_63s = "\1\115\1\uffff\1\76\1\uffff\4\107\1\0";
    static final String dfa_64s = "\1\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_65s = "\10\uffff\1\0}>";
    static final String[] dfa_66s = {
            "\1\3\7\uffff\1\3\7\uffff\1\1\1\3\1\2",
            "",
            "\1\5\1\4",
            "",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\uffff"
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "8114:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_8 = input.LA(1);

                         
                        int index86_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x6000000000000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x6000FFFFFFE00002L,0x0000000000000020L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x600000000000C010L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x600000000000C010L,0x0000000000000001L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x700000000000C010L,0x0000000000000001L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x700000000000C012L,0x0000000000000001L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x600000000001C010L,0x0000000000002004L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000100020L,0x0000000000000004L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x603F00000000C010L,0x0000000000001944L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000100220L,0x0000000000000004L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000000000000C010L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x10FC70080000C000L,0x0000000000001E40L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x10FC70080000C000L,0x0000000000001E48L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x10FC70080000C002L,0x0000000000001E40L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x6000000000100060L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000008L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0800000000000000L,0x0000000000003000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0800000000000000L,0x0000000000003008L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0800000000000002L,0x0000000000003000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000002000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x6000000000000040L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x6000000000000040L,0x0000000000000100L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x6000000000000040L,0x0000000000000030L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002800L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000100000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x1000100000000002L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x603F40000004C010L,0x0000000000001945L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x600000000000C012L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000001L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x603F40000004C010L,0x0000000000001944L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00C0000000000000L,0x0000000000001E00L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000022000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00000507FFE00000L,0x0000000000000004L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000600L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x000008D000010000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x000008D000010002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000085000010000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000FFFFFFE00000L,0x0000000000000004L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000FFFFFFE00000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000FFFFFFE00002L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x600000000000C010L,0x0000000000000004L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x6000FFFFFFE00000L,0x0000000000000024L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x6000FFFFFFE00000L,0x0000000000000020L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x600000000002C010L,0x0000000000000004L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000020002L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000282000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x00000000C2000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x000000008A000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000082800000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x6000000000000000L});
    }


}