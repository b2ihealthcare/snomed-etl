package com.b2international.snomed.etl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.etl.services.EtlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEtlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "False", "True", "RULE_DOUBLE_SQUARE_OPEN", "RULE_DOUBLE_SQUARE_CLOSE", "RULE_TILDE", "RULE_AT", "RULE_ID", "RULE_SCG", "RULE_TOK", "RULE_STR", "RULE_INT", "RULE_DEC", "RULE_EQUIVALENT_TO", "RULE_SUBTYPE_OF", "RULE_STRING", "RULE_WS", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_SLOTNAME_STRING", "RULE_TERM_STRING", "RULE_REVERSED", "RULE_TO", "RULE_COMMA", "RULE_CONJUNCTION", "RULE_DISJUNCTION", "RULE_EXCLUSION", "RULE_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_HASH", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIGIT_NONZERO=31;
    public static final int RULE_CURLY_OPEN=33;
    public static final int RULE_TO=25;
    public static final int RULE_ROUND_CLOSE=36;
    public static final int RULE_DBL_GT=47;
    public static final int True=5;
    public static final int RULE_GT=45;
    public static final int False=4;
    public static final int RULE_SLOTNAME_STRING=22;
    public static final int RULE_SCG=11;
    public static final int RULE_GTE=52;
    public static final int RULE_DOUBLE_SQUARE_OPEN=6;
    public static final int RULE_EQUIVALENT_TO=16;
    public static final int RULE_ROUND_OPEN=35;
    public static final int RULE_DBL_LT=46;
    public static final int RULE_NOT_EQUAL=43;
    public static final int RULE_SQUARE_CLOSE=21;
    public static final int RULE_ID=10;
    public static final int RULE_SQUARE_OPEN=20;
    public static final int RULE_EQUAL=42;
    public static final int RULE_DEC=15;
    public static final int RULE_COMMA=26;
    public static final int RULE_LT_EM=48;
    public static final int RULE_CURLY_CLOSE=34;
    public static final int RULE_ZERO=30;
    public static final int RULE_DBL_GT_EM=51;
    public static final int RULE_COLON=32;
    public static final int RULE_TILDE=8;
    public static final int RULE_LT=44;
    public static final int RULE_INT=14;
    public static final int RULE_ML_COMMENT=55;
    public static final int RULE_DOUBLE_SQUARE_CLOSE=7;
    public static final int RULE_LTE=53;
    public static final int RULE_STRING=18;
    public static final int RULE_AT=9;
    public static final int RULE_REVERSED=24;
    public static final int RULE_SL_COMMENT=56;
    public static final int RULE_HASH=54;
    public static final int RULE_TOK=12;
    public static final int RULE_DASH=38;
    public static final int RULE_PLUS=37;
    public static final int RULE_DOT=40;
    public static final int EOF=-1;
    public static final int RULE_SUBTYPE_OF=17;
    public static final int RULE_WS=19;
    public static final int RULE_GT_EM=50;
    public static final int RULE_EXCLUSION=29;
    public static final int RULE_CARET=39;
    public static final int RULE_CONJUNCTION=27;
    public static final int RULE_STR=13;
    public static final int RULE_WILDCARD=41;
    public static final int RULE_DISJUNCTION=28;
    public static final int RULE_TERM_STRING=23;
    public static final int RULE_DBL_LT_EM=49;

    // delegates
    // delegators


        public InternalEtlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEtlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEtlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEtlParser.g"; }


    	private EtlGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("True", "'true'");
    		tokenNameToValue.put("False", "'false'");
    	}

    	public void setGrammarAccess(EtlGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleExpressionTemplate"
    // InternalEtlParser.g:70:1: entryRuleExpressionTemplate : ruleExpressionTemplate EOF ;
    public final void entryRuleExpressionTemplate() throws RecognitionException {
        try {
            // InternalEtlParser.g:71:1: ( ruleExpressionTemplate EOF )
            // InternalEtlParser.g:72:1: ruleExpressionTemplate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionTemplate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionTemplate"


    // $ANTLR start "ruleExpressionTemplate"
    // InternalEtlParser.g:79:1: ruleExpressionTemplate : ( ( rule__ExpressionTemplate__Group__0 ) ) ;
    public final void ruleExpressionTemplate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:83:2: ( ( ( rule__ExpressionTemplate__Group__0 ) ) )
            // InternalEtlParser.g:84:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            {
            // InternalEtlParser.g:84:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            // InternalEtlParser.g:85:3: ( rule__ExpressionTemplate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }
            // InternalEtlParser.g:86:3: ( rule__ExpressionTemplate__Group__0 )
            // InternalEtlParser.g:86:4: rule__ExpressionTemplate__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionTemplate"


    // $ANTLR start "entryRuleSubExpression"
    // InternalEtlParser.g:95:1: entryRuleSubExpression : ruleSubExpression EOF ;
    public final void entryRuleSubExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:96:1: ( ruleSubExpression EOF )
            // InternalEtlParser.g:97:1: ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalEtlParser.g:104:1: ruleSubExpression : ( ( rule__SubExpression__Group__0 ) ) ;
    public final void ruleSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:108:2: ( ( ( rule__SubExpression__Group__0 ) ) )
            // InternalEtlParser.g:109:2: ( ( rule__SubExpression__Group__0 ) )
            {
            // InternalEtlParser.g:109:2: ( ( rule__SubExpression__Group__0 ) )
            // InternalEtlParser.g:110:3: ( rule__SubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:111:3: ( rule__SubExpression__Group__0 )
            // InternalEtlParser.g:111:4: rule__SubExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleFocusConcept"
    // InternalEtlParser.g:120:1: entryRuleFocusConcept : ruleFocusConcept EOF ;
    public final void entryRuleFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:121:1: ( ruleFocusConcept EOF )
            // InternalEtlParser.g:122:1: ruleFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFocusConcept"


    // $ANTLR start "ruleFocusConcept"
    // InternalEtlParser.g:129:1: ruleFocusConcept : ( ( rule__FocusConcept__Group__0 ) ) ;
    public final void ruleFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:133:2: ( ( ( rule__FocusConcept__Group__0 ) ) )
            // InternalEtlParser.g:134:2: ( ( rule__FocusConcept__Group__0 ) )
            {
            // InternalEtlParser.g:134:2: ( ( rule__FocusConcept__Group__0 ) )
            // InternalEtlParser.g:135:3: ( rule__FocusConcept__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getGroup()); 
            }
            // InternalEtlParser.g:136:3: ( rule__FocusConcept__Group__0 )
            // InternalEtlParser.g:136:4: rule__FocusConcept__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFocusConcept"


    // $ANTLR start "entryRuleRefinement"
    // InternalEtlParser.g:145:1: entryRuleRefinement : ruleRefinement EOF ;
    public final void entryRuleRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:146:1: ( ruleRefinement EOF )
            // InternalEtlParser.g:147:1: ruleRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinement"


    // $ANTLR start "ruleRefinement"
    // InternalEtlParser.g:154:1: ruleRefinement : ( ( rule__Refinement__Group__0 ) ) ;
    public final void ruleRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:158:2: ( ( ( rule__Refinement__Group__0 ) ) )
            // InternalEtlParser.g:159:2: ( ( rule__Refinement__Group__0 ) )
            {
            // InternalEtlParser.g:159:2: ( ( rule__Refinement__Group__0 ) )
            // InternalEtlParser.g:160:3: ( rule__Refinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:161:3: ( rule__Refinement__Group__0 )
            // InternalEtlParser.g:161:4: rule__Refinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinement"


    // $ANTLR start "entryRuleAttributeGroup"
    // InternalEtlParser.g:170:1: entryRuleAttributeGroup : ruleAttributeGroup EOF ;
    public final void entryRuleAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:171:1: ( ruleAttributeGroup EOF )
            // InternalEtlParser.g:172:1: ruleAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeGroup"


    // $ANTLR start "ruleAttributeGroup"
    // InternalEtlParser.g:179:1: ruleAttributeGroup : ( ( rule__AttributeGroup__Group__0 ) ) ;
    public final void ruleAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:183:2: ( ( ( rule__AttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:184:2: ( ( rule__AttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:184:2: ( ( rule__AttributeGroup__Group__0 ) )
            // InternalEtlParser.g:185:3: ( rule__AttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:186:3: ( rule__AttributeGroup__Group__0 )
            // InternalEtlParser.g:186:4: rule__AttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeGroup"


    // $ANTLR start "entryRuleAttribute"
    // InternalEtlParser.g:195:1: entryRuleAttribute : ruleAttribute EOF ;
    public final void entryRuleAttribute() throws RecognitionException {
        try {
            // InternalEtlParser.g:196:1: ( ruleAttribute EOF )
            // InternalEtlParser.g:197:1: ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalEtlParser.g:204:1: ruleAttribute : ( ( rule__Attribute__Group__0 ) ) ;
    public final void ruleAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:208:2: ( ( ( rule__Attribute__Group__0 ) ) )
            // InternalEtlParser.g:209:2: ( ( rule__Attribute__Group__0 ) )
            {
            // InternalEtlParser.g:209:2: ( ( rule__Attribute__Group__0 ) )
            // InternalEtlParser.g:210:3: ( rule__Attribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getGroup()); 
            }
            // InternalEtlParser.g:211:3: ( rule__Attribute__Group__0 )
            // InternalEtlParser.g:211:4: rule__Attribute__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleAttributeValue"
    // InternalEtlParser.g:220:1: entryRuleAttributeValue : ruleAttributeValue EOF ;
    public final void entryRuleAttributeValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:221:1: ( ruleAttributeValue EOF )
            // InternalEtlParser.g:222:1: ruleAttributeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValue"


    // $ANTLR start "ruleAttributeValue"
    // InternalEtlParser.g:229:1: ruleAttributeValue : ( ( rule__AttributeValue__Alternatives ) ) ;
    public final void ruleAttributeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:233:2: ( ( ( rule__AttributeValue__Alternatives ) ) )
            // InternalEtlParser.g:234:2: ( ( rule__AttributeValue__Alternatives ) )
            {
            // InternalEtlParser.g:234:2: ( ( rule__AttributeValue__Alternatives ) )
            // InternalEtlParser.g:235:3: ( rule__AttributeValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:236:3: ( rule__AttributeValue__Alternatives )
            // InternalEtlParser.g:236:4: rule__AttributeValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValue"


    // $ANTLR start "entryRuleConceptIdReplacementSlot"
    // InternalEtlParser.g:245:1: entryRuleConceptIdReplacementSlot : ruleConceptIdReplacementSlot EOF ;
    public final void entryRuleConceptIdReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:246:1: ( ruleConceptIdReplacementSlot EOF )
            // InternalEtlParser.g:247:1: ruleConceptIdReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptIdReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptIdReplacementSlot"


    // $ANTLR start "ruleConceptIdReplacementSlot"
    // InternalEtlParser.g:254:1: ruleConceptIdReplacementSlot : ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) ;
    public final void ruleConceptIdReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:258:2: ( ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:259:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:259:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:260:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:261:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            // InternalEtlParser.g:261:4: rule__ConceptIdReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptIdReplacementSlot"


    // $ANTLR start "entryRuleExpressionReplacementSlot"
    // InternalEtlParser.g:270:1: entryRuleExpressionReplacementSlot : ruleExpressionReplacementSlot EOF ;
    public final void entryRuleExpressionReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:271:1: ( ruleExpressionReplacementSlot EOF )
            // InternalEtlParser.g:272:1: ruleExpressionReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionReplacementSlot"


    // $ANTLR start "ruleExpressionReplacementSlot"
    // InternalEtlParser.g:279:1: ruleExpressionReplacementSlot : ( ( rule__ExpressionReplacementSlot__Group__0 ) ) ;
    public final void ruleExpressionReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:283:2: ( ( ( rule__ExpressionReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:284:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:284:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:285:3: ( rule__ExpressionReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:286:3: ( rule__ExpressionReplacementSlot__Group__0 )
            // InternalEtlParser.g:286:4: rule__ExpressionReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionReplacementSlot"


    // $ANTLR start "entryRuleTokenReplacementSlot"
    // InternalEtlParser.g:295:1: entryRuleTokenReplacementSlot : ruleTokenReplacementSlot EOF ;
    public final void entryRuleTokenReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:296:1: ( ruleTokenReplacementSlot EOF )
            // InternalEtlParser.g:297:1: ruleTokenReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTokenReplacementSlot"


    // $ANTLR start "ruleTokenReplacementSlot"
    // InternalEtlParser.g:304:1: ruleTokenReplacementSlot : ( ( rule__TokenReplacementSlot__Group__0 ) ) ;
    public final void ruleTokenReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:308:2: ( ( ( rule__TokenReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:309:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:309:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:310:3: ( rule__TokenReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:311:3: ( rule__TokenReplacementSlot__Group__0 )
            // InternalEtlParser.g:311:4: rule__TokenReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTokenReplacementSlot"


    // $ANTLR start "entryRuleTemplateInformationSlot"
    // InternalEtlParser.g:320:1: entryRuleTemplateInformationSlot : ruleTemplateInformationSlot EOF ;
    public final void entryRuleTemplateInformationSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:321:1: ( ruleTemplateInformationSlot EOF )
            // InternalEtlParser.g:322:1: ruleTemplateInformationSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateInformationSlot"


    // $ANTLR start "ruleTemplateInformationSlot"
    // InternalEtlParser.g:329:1: ruleTemplateInformationSlot : ( ( rule__TemplateInformationSlot__Group__0 ) ) ;
    public final void ruleTemplateInformationSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:333:2: ( ( ( rule__TemplateInformationSlot__Group__0 ) ) )
            // InternalEtlParser.g:334:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            {
            // InternalEtlParser.g:334:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            // InternalEtlParser.g:335:3: ( rule__TemplateInformationSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:336:3: ( rule__TemplateInformationSlot__Group__0 )
            // InternalEtlParser.g:336:4: rule__TemplateInformationSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateInformationSlot"


    // $ANTLR start "entryRuleConcreteValueReplacementSlot"
    // InternalEtlParser.g:345:1: entryRuleConcreteValueReplacementSlot : ruleConcreteValueReplacementSlot EOF ;
    public final void entryRuleConcreteValueReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:346:1: ( ruleConcreteValueReplacementSlot EOF )
            // InternalEtlParser.g:347:1: ruleConcreteValueReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConcreteValueReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConcreteValueReplacementSlot"


    // $ANTLR start "ruleConcreteValueReplacementSlot"
    // InternalEtlParser.g:354:1: ruleConcreteValueReplacementSlot : ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) ;
    public final void ruleConcreteValueReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:358:2: ( ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:359:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:359:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:360:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:361:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            // InternalEtlParser.g:361:4: rule__ConcreteValueReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConcreteValueReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConcreteValueReplacementSlot"


    // $ANTLR start "entryRuleStringReplacementSlot"
    // InternalEtlParser.g:370:1: entryRuleStringReplacementSlot : ruleStringReplacementSlot EOF ;
    public final void entryRuleStringReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:371:1: ( ruleStringReplacementSlot EOF )
            // InternalEtlParser.g:372:1: ruleStringReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringReplacementSlot"


    // $ANTLR start "ruleStringReplacementSlot"
    // InternalEtlParser.g:379:1: ruleStringReplacementSlot : ( ( rule__StringReplacementSlot__Group__0 ) ) ;
    public final void ruleStringReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:383:2: ( ( ( rule__StringReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:384:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:384:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:385:3: ( rule__StringReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:386:3: ( rule__StringReplacementSlot__Group__0 )
            // InternalEtlParser.g:386:4: rule__StringReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringReplacementSlot"


    // $ANTLR start "entryRuleIntegerReplacementSlot"
    // InternalEtlParser.g:395:1: entryRuleIntegerReplacementSlot : ruleIntegerReplacementSlot EOF ;
    public final void entryRuleIntegerReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:396:1: ( ruleIntegerReplacementSlot EOF )
            // InternalEtlParser.g:397:1: ruleIntegerReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerReplacementSlot"


    // $ANTLR start "ruleIntegerReplacementSlot"
    // InternalEtlParser.g:404:1: ruleIntegerReplacementSlot : ( ( rule__IntegerReplacementSlot__Group__0 ) ) ;
    public final void ruleIntegerReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:408:2: ( ( ( rule__IntegerReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:409:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:409:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:410:3: ( rule__IntegerReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:411:3: ( rule__IntegerReplacementSlot__Group__0 )
            // InternalEtlParser.g:411:4: rule__IntegerReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerReplacementSlot"


    // $ANTLR start "entryRuleDecimalReplacementSlot"
    // InternalEtlParser.g:420:1: entryRuleDecimalReplacementSlot : ruleDecimalReplacementSlot EOF ;
    public final void entryRuleDecimalReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:421:1: ( ruleDecimalReplacementSlot EOF )
            // InternalEtlParser.g:422:1: ruleDecimalReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalReplacementSlot"


    // $ANTLR start "ruleDecimalReplacementSlot"
    // InternalEtlParser.g:429:1: ruleDecimalReplacementSlot : ( ( rule__DecimalReplacementSlot__Group__0 ) ) ;
    public final void ruleDecimalReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:433:2: ( ( ( rule__DecimalReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:434:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:434:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:435:3: ( rule__DecimalReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:436:3: ( rule__DecimalReplacementSlot__Group__0 )
            // InternalEtlParser.g:436:4: rule__DecimalReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalReplacementSlot"


    // $ANTLR start "entryRuleEtlCardinality"
    // InternalEtlParser.g:445:1: entryRuleEtlCardinality : ruleEtlCardinality EOF ;
    public final void entryRuleEtlCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:446:1: ( ruleEtlCardinality EOF )
            // InternalEtlParser.g:447:1: ruleEtlCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEtlCardinality"


    // $ANTLR start "ruleEtlCardinality"
    // InternalEtlParser.g:454:1: ruleEtlCardinality : ( ( rule__EtlCardinality__Group__0 ) ) ;
    public final void ruleEtlCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:458:2: ( ( ( rule__EtlCardinality__Group__0 ) ) )
            // InternalEtlParser.g:459:2: ( ( rule__EtlCardinality__Group__0 ) )
            {
            // InternalEtlParser.g:459:2: ( ( rule__EtlCardinality__Group__0 ) )
            // InternalEtlParser.g:460:3: ( rule__EtlCardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:461:3: ( rule__EtlCardinality__Group__0 )
            // InternalEtlParser.g:461:4: rule__EtlCardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEtlCardinality"


    // $ANTLR start "entryRuleConceptReplacementSlot"
    // InternalEtlParser.g:470:1: entryRuleConceptReplacementSlot : ruleConceptReplacementSlot EOF ;
    public final void entryRuleConceptReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:471:1: ( ruleConceptReplacementSlot EOF )
            // InternalEtlParser.g:472:1: ruleConceptReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReplacementSlot"


    // $ANTLR start "ruleConceptReplacementSlot"
    // InternalEtlParser.g:479:1: ruleConceptReplacementSlot : ( ( rule__ConceptReplacementSlot__Alternatives ) ) ;
    public final void ruleConceptReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:483:2: ( ( ( rule__ConceptReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:484:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:484:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:485:3: ( rule__ConceptReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:486:3: ( rule__ConceptReplacementSlot__Alternatives )
            // InternalEtlParser.g:486:4: rule__ConceptReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReplacementSlot"


    // $ANTLR start "entryRuleConceptReference"
    // InternalEtlParser.g:495:1: entryRuleConceptReference : ruleConceptReference EOF ;
    public final void entryRuleConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:496:1: ( ruleConceptReference EOF )
            // InternalEtlParser.g:497:1: ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalEtlParser.g:504:1: ruleConceptReference : ( ( rule__ConceptReference__Alternatives ) ) ;
    public final void ruleConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:508:2: ( ( ( rule__ConceptReference__Alternatives ) ) )
            // InternalEtlParser.g:509:2: ( ( rule__ConceptReference__Alternatives ) )
            {
            // InternalEtlParser.g:509:2: ( ( rule__ConceptReference__Alternatives ) )
            // InternalEtlParser.g:510:3: ( rule__ConceptReference__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:511:3: ( rule__ConceptReference__Alternatives )
            // InternalEtlParser.g:511:4: rule__ConceptReference__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleSlotToken"
    // InternalEtlParser.g:520:1: entryRuleSlotToken : ruleSlotToken EOF ;
    public final void entryRuleSlotToken() throws RecognitionException {
        try {
            // InternalEtlParser.g:521:1: ( ruleSlotToken EOF )
            // InternalEtlParser.g:522:1: ruleSlotToken EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotToken"


    // $ANTLR start "ruleSlotToken"
    // InternalEtlParser.g:529:1: ruleSlotToken : ( ( rule__SlotToken__Alternatives ) ) ;
    public final void ruleSlotToken() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:533:2: ( ( ( rule__SlotToken__Alternatives ) ) )
            // InternalEtlParser.g:534:2: ( ( rule__SlotToken__Alternatives ) )
            {
            // InternalEtlParser.g:534:2: ( ( rule__SlotToken__Alternatives ) )
            // InternalEtlParser.g:535:3: ( rule__SlotToken__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:536:3: ( rule__SlotToken__Alternatives )
            // InternalEtlParser.g:536:4: rule__SlotToken__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotToken__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotToken"


    // $ANTLR start "entryRuleStringValue"
    // InternalEtlParser.g:545:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:546:1: ( ruleStringValue EOF )
            // InternalEtlParser.g:547:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalEtlParser.g:554:1: ruleStringValue : ( ( rule__StringValue__ValueAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:558:2: ( ( ( rule__StringValue__ValueAssignment ) ) )
            // InternalEtlParser.g:559:2: ( ( rule__StringValue__ValueAssignment ) )
            {
            // InternalEtlParser.g:559:2: ( ( rule__StringValue__ValueAssignment ) )
            // InternalEtlParser.g:560:3: ( rule__StringValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }
            // InternalEtlParser.g:561:3: ( rule__StringValue__ValueAssignment )
            // InternalEtlParser.g:561:4: rule__StringValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalEtlParser.g:570:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:571:1: ( ruleIntegerValue EOF )
            // InternalEtlParser.g:572:1: ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalEtlParser.g:579:1: ruleIntegerValue : ( ( rule__IntegerValue__Group__0 ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:583:2: ( ( ( rule__IntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:584:2: ( ( rule__IntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:584:2: ( ( rule__IntegerValue__Group__0 ) )
            // InternalEtlParser.g:585:3: ( rule__IntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:586:3: ( rule__IntegerValue__Group__0 )
            // InternalEtlParser.g:586:4: rule__IntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleDecimalValue"
    // InternalEtlParser.g:595:1: entryRuleDecimalValue : ruleDecimalValue EOF ;
    public final void entryRuleDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:596:1: ( ruleDecimalValue EOF )
            // InternalEtlParser.g:597:1: ruleDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValue"


    // $ANTLR start "ruleDecimalValue"
    // InternalEtlParser.g:604:1: ruleDecimalValue : ( ( rule__DecimalValue__Group__0 ) ) ;
    public final void ruleDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:608:2: ( ( ( rule__DecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:609:2: ( ( rule__DecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:609:2: ( ( rule__DecimalValue__Group__0 ) )
            // InternalEtlParser.g:610:3: ( rule__DecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:611:3: ( rule__DecimalValue__Group__0 )
            // InternalEtlParser.g:611:4: rule__DecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValue"


    // $ANTLR start "entryRuleSlotInteger"
    // InternalEtlParser.g:620:1: entryRuleSlotInteger : ruleSlotInteger EOF ;
    public final void entryRuleSlotInteger() throws RecognitionException {
        try {
            // InternalEtlParser.g:621:1: ( ruleSlotInteger EOF )
            // InternalEtlParser.g:622:1: ruleSlotInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotInteger"


    // $ANTLR start "ruleSlotInteger"
    // InternalEtlParser.g:629:1: ruleSlotInteger : ( ( rule__SlotInteger__Alternatives ) ) ;
    public final void ruleSlotInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:633:2: ( ( ( rule__SlotInteger__Alternatives ) ) )
            // InternalEtlParser.g:634:2: ( ( rule__SlotInteger__Alternatives ) )
            {
            // InternalEtlParser.g:634:2: ( ( rule__SlotInteger__Alternatives ) )
            // InternalEtlParser.g:635:3: ( rule__SlotInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:636:3: ( rule__SlotInteger__Alternatives )
            // InternalEtlParser.g:636:4: rule__SlotInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotInteger"


    // $ANTLR start "entryRuleSlotIntegerValue"
    // InternalEtlParser.g:645:1: entryRuleSlotIntegerValue : ruleSlotIntegerValue EOF ;
    public final void entryRuleSlotIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:646:1: ( ruleSlotIntegerValue EOF )
            // InternalEtlParser.g:647:1: ruleSlotIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerValue"


    // $ANTLR start "ruleSlotIntegerValue"
    // InternalEtlParser.g:654:1: ruleSlotIntegerValue : ( ( rule__SlotIntegerValue__Group__0 ) ) ;
    public final void ruleSlotIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:658:2: ( ( ( rule__SlotIntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:659:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:659:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            // InternalEtlParser.g:660:3: ( rule__SlotIntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:661:3: ( rule__SlotIntegerValue__Group__0 )
            // InternalEtlParser.g:661:4: rule__SlotIntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerValue"


    // $ANTLR start "entryRuleSlotIntegerRange"
    // InternalEtlParser.g:670:1: entryRuleSlotIntegerRange : ruleSlotIntegerRange EOF ;
    public final void entryRuleSlotIntegerRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:671:1: ( ruleSlotIntegerRange EOF )
            // InternalEtlParser.g:672:1: ruleSlotIntegerRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerRange"


    // $ANTLR start "ruleSlotIntegerRange"
    // InternalEtlParser.g:679:1: ruleSlotIntegerRange : ( ( rule__SlotIntegerRange__Alternatives ) ) ;
    public final void ruleSlotIntegerRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:683:2: ( ( ( rule__SlotIntegerRange__Alternatives ) ) )
            // InternalEtlParser.g:684:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            {
            // InternalEtlParser.g:684:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            // InternalEtlParser.g:685:3: ( rule__SlotIntegerRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:686:3: ( rule__SlotIntegerRange__Alternatives )
            // InternalEtlParser.g:686:4: rule__SlotIntegerRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerRange"


    // $ANTLR start "entryRuleSlotIntegerMinimumValue"
    // InternalEtlParser.g:695:1: entryRuleSlotIntegerMinimumValue : ruleSlotIntegerMinimumValue EOF ;
    public final void entryRuleSlotIntegerMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:696:1: ( ruleSlotIntegerMinimumValue EOF )
            // InternalEtlParser.g:697:1: ruleSlotIntegerMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMinimumValue"


    // $ANTLR start "ruleSlotIntegerMinimumValue"
    // InternalEtlParser.g:704:1: ruleSlotIntegerMinimumValue : ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:708:2: ( ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:709:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:709:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            // InternalEtlParser.g:710:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:711:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            // InternalEtlParser.g:711:4: rule__SlotIntegerMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMinimumValue"


    // $ANTLR start "entryRuleSlotIntegerMaximumValue"
    // InternalEtlParser.g:720:1: entryRuleSlotIntegerMaximumValue : ruleSlotIntegerMaximumValue EOF ;
    public final void entryRuleSlotIntegerMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:721:1: ( ruleSlotIntegerMaximumValue EOF )
            // InternalEtlParser.g:722:1: ruleSlotIntegerMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMaximumValue"


    // $ANTLR start "ruleSlotIntegerMaximumValue"
    // InternalEtlParser.g:729:1: ruleSlotIntegerMaximumValue : ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:733:2: ( ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:734:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:734:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            // InternalEtlParser.g:735:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:736:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            // InternalEtlParser.g:736:4: rule__SlotIntegerMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMaximumValue"


    // $ANTLR start "entryRuleSlotDecimal"
    // InternalEtlParser.g:745:1: entryRuleSlotDecimal : ruleSlotDecimal EOF ;
    public final void entryRuleSlotDecimal() throws RecognitionException {
        try {
            // InternalEtlParser.g:746:1: ( ruleSlotDecimal EOF )
            // InternalEtlParser.g:747:1: ruleSlotDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimal"


    // $ANTLR start "ruleSlotDecimal"
    // InternalEtlParser.g:754:1: ruleSlotDecimal : ( ( rule__SlotDecimal__Alternatives ) ) ;
    public final void ruleSlotDecimal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:758:2: ( ( ( rule__SlotDecimal__Alternatives ) ) )
            // InternalEtlParser.g:759:2: ( ( rule__SlotDecimal__Alternatives ) )
            {
            // InternalEtlParser.g:759:2: ( ( rule__SlotDecimal__Alternatives ) )
            // InternalEtlParser.g:760:3: ( rule__SlotDecimal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:761:3: ( rule__SlotDecimal__Alternatives )
            // InternalEtlParser.g:761:4: rule__SlotDecimal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimal"


    // $ANTLR start "entryRuleSlotDecimalValue"
    // InternalEtlParser.g:770:1: entryRuleSlotDecimalValue : ruleSlotDecimalValue EOF ;
    public final void entryRuleSlotDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:771:1: ( ruleSlotDecimalValue EOF )
            // InternalEtlParser.g:772:1: ruleSlotDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalValue"


    // $ANTLR start "ruleSlotDecimalValue"
    // InternalEtlParser.g:779:1: ruleSlotDecimalValue : ( ( rule__SlotDecimalValue__Group__0 ) ) ;
    public final void ruleSlotDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:783:2: ( ( ( rule__SlotDecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:784:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:784:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            // InternalEtlParser.g:785:3: ( rule__SlotDecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:786:3: ( rule__SlotDecimalValue__Group__0 )
            // InternalEtlParser.g:786:4: rule__SlotDecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalValue"


    // $ANTLR start "entryRuleSlotDecimalRange"
    // InternalEtlParser.g:795:1: entryRuleSlotDecimalRange : ruleSlotDecimalRange EOF ;
    public final void entryRuleSlotDecimalRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:796:1: ( ruleSlotDecimalRange EOF )
            // InternalEtlParser.g:797:1: ruleSlotDecimalRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalRange"


    // $ANTLR start "ruleSlotDecimalRange"
    // InternalEtlParser.g:804:1: ruleSlotDecimalRange : ( ( rule__SlotDecimalRange__Alternatives ) ) ;
    public final void ruleSlotDecimalRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:808:2: ( ( ( rule__SlotDecimalRange__Alternatives ) ) )
            // InternalEtlParser.g:809:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            {
            // InternalEtlParser.g:809:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            // InternalEtlParser.g:810:3: ( rule__SlotDecimalRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:811:3: ( rule__SlotDecimalRange__Alternatives )
            // InternalEtlParser.g:811:4: rule__SlotDecimalRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalRange"


    // $ANTLR start "entryRuleSlotDecimalMinimumValue"
    // InternalEtlParser.g:820:1: entryRuleSlotDecimalMinimumValue : ruleSlotDecimalMinimumValue EOF ;
    public final void entryRuleSlotDecimalMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:821:1: ( ruleSlotDecimalMinimumValue EOF )
            // InternalEtlParser.g:822:1: ruleSlotDecimalMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMinimumValue"


    // $ANTLR start "ruleSlotDecimalMinimumValue"
    // InternalEtlParser.g:829:1: ruleSlotDecimalMinimumValue : ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:833:2: ( ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:834:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:834:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            // InternalEtlParser.g:835:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:836:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            // InternalEtlParser.g:836:4: rule__SlotDecimalMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMinimumValue"


    // $ANTLR start "entryRuleSlotDecimalMaximumValue"
    // InternalEtlParser.g:845:1: entryRuleSlotDecimalMaximumValue : ruleSlotDecimalMaximumValue EOF ;
    public final void entryRuleSlotDecimalMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:846:1: ( ruleSlotDecimalMaximumValue EOF )
            // InternalEtlParser.g:847:1: ruleSlotDecimalMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMaximumValue"


    // $ANTLR start "ruleSlotDecimalMaximumValue"
    // InternalEtlParser.g:854:1: ruleSlotDecimalMaximumValue : ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:858:2: ( ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:859:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:859:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            // InternalEtlParser.g:860:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:861:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            // InternalEtlParser.g:861:4: rule__SlotDecimalMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMaximumValue"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEtlParser.g:870:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:871:1: ( ruleExpressionConstraint EOF )
            // InternalEtlParser.g:872:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEtlParser.g:879:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:883:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEtlParser.g:884:2: ( ruleOrExpressionConstraint )
            {
            // InternalEtlParser.g:884:2: ( ruleOrExpressionConstraint )
            // InternalEtlParser.g:885:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEtlParser.g:895:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:896:1: ( ruleOrExpressionConstraint EOF )
            // InternalEtlParser.g:897:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEtlParser.g:904:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:908:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:909:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:909:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:910:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:911:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEtlParser.g:911:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEtlParser.g:920:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:921:1: ( ruleAndExpressionConstraint EOF )
            // InternalEtlParser.g:922:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEtlParser.g:929:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:933:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:934:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:934:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:935:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:936:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEtlParser.g:936:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEtlParser.g:945:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:946:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEtlParser.g:947:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEtlParser.g:954:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:958:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:959:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:959:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:960:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:961:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEtlParser.g:961:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEtlParser.g:970:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:971:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEtlParser.g:972:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEtlParser.g:979:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:983:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:984:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:984:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:985:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:986:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:986:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEtlParser.g:995:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:996:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEtlParser.g:997:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEtlParser.g:1004:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1008:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1009:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1009:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1010:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1011:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1011:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEtlParser.g:1020:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1021:1: ( ruleSubExpressionConstraint EOF )
            // InternalEtlParser.g:1022:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEtlParser.g:1029:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1033:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEtlParser.g:1034:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEtlParser.g:1034:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEtlParser.g:1035:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1036:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEtlParser.g:1036:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEtlParser.g:1045:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:1046:1: ( ruleEclFocusConcept EOF )
            // InternalEtlParser.g:1047:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEtlParser.g:1054:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1058:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEtlParser.g:1059:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEtlParser.g:1059:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEtlParser.g:1060:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1061:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEtlParser.g:1061:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEtlParser.g:1070:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1071:1: ( ruleChildOf EOF )
            // InternalEtlParser.g:1072:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEtlParser.g:1079:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1083:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEtlParser.g:1084:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEtlParser.g:1084:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEtlParser.g:1085:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1086:3: ( rule__ChildOf__Group__0 )
            // InternalEtlParser.g:1086:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEtlParser.g:1095:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1096:1: ( ruleChildOrSelfOf EOF )
            // InternalEtlParser.g:1097:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEtlParser.g:1104:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1108:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1109:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1109:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1110:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1111:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEtlParser.g:1111:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEtlParser.g:1120:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1121:1: ( ruleDescendantOf EOF )
            // InternalEtlParser.g:1122:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEtlParser.g:1129:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1133:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEtlParser.g:1134:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEtlParser.g:1134:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEtlParser.g:1135:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1136:3: ( rule__DescendantOf__Group__0 )
            // InternalEtlParser.g:1136:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEtlParser.g:1145:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1146:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEtlParser.g:1147:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEtlParser.g:1154:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1158:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1159:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1159:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1160:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1161:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEtlParser.g:1161:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEtlParser.g:1170:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1171:1: ( ruleParentOf EOF )
            // InternalEtlParser.g:1172:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEtlParser.g:1179:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1183:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEtlParser.g:1184:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEtlParser.g:1184:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEtlParser.g:1185:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1186:3: ( rule__ParentOf__Group__0 )
            // InternalEtlParser.g:1186:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEtlParser.g:1195:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1196:1: ( ruleParentOrSelfOf EOF )
            // InternalEtlParser.g:1197:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEtlParser.g:1204:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1208:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1209:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1209:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1210:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1211:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEtlParser.g:1211:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEtlParser.g:1220:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1221:1: ( ruleAncestorOf EOF )
            // InternalEtlParser.g:1222:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEtlParser.g:1229:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1233:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEtlParser.g:1234:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEtlParser.g:1234:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEtlParser.g:1235:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1236:3: ( rule__AncestorOf__Group__0 )
            // InternalEtlParser.g:1236:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEtlParser.g:1245:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1246:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEtlParser.g:1247:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEtlParser.g:1254:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1258:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1259:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1259:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1260:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1261:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEtlParser.g:1261:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEtlParser.g:1270:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1271:1: ( ruleMemberOf EOF )
            // InternalEtlParser.g:1272:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEtlParser.g:1279:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1283:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEtlParser.g:1284:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEtlParser.g:1284:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEtlParser.g:1285:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1286:3: ( rule__MemberOf__Group__0 )
            // InternalEtlParser.g:1286:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEtlParser.g:1295:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:1296:1: ( ruleEclConceptReference EOF )
            // InternalEtlParser.g:1297:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEtlParser.g:1304:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1308:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEtlParser.g:1309:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEtlParser.g:1309:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEtlParser.g:1310:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEtlParser.g:1311:3: ( rule__EclConceptReference__Group__0 )
            // InternalEtlParser.g:1311:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleAny"
    // InternalEtlParser.g:1320:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEtlParser.g:1321:1: ( ruleAny EOF )
            // InternalEtlParser.g:1322:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEtlParser.g:1329:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1333:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEtlParser.g:1334:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEtlParser.g:1334:2: ( ( rule__Any__Group__0 ) )
            // InternalEtlParser.g:1335:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEtlParser.g:1336:3: ( rule__Any__Group__0 )
            // InternalEtlParser.g:1336:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEtlParser.g:1345:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1346:1: ( ruleEclRefinement EOF )
            // InternalEtlParser.g:1347:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEtlParser.g:1354:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1358:2: ( ( ruleOrRefinement ) )
            // InternalEtlParser.g:1359:2: ( ruleOrRefinement )
            {
            // InternalEtlParser.g:1359:2: ( ruleOrRefinement )
            // InternalEtlParser.g:1360:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEtlParser.g:1370:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1371:1: ( ruleOrRefinement EOF )
            // InternalEtlParser.g:1372:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEtlParser.g:1379:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1383:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1384:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1384:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEtlParser.g:1385:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1386:3: ( rule__OrRefinement__Group__0 )
            // InternalEtlParser.g:1386:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEtlParser.g:1395:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1396:1: ( ruleAndRefinement EOF )
            // InternalEtlParser.g:1397:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEtlParser.g:1404:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1408:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1409:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1409:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEtlParser.g:1410:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1411:3: ( rule__AndRefinement__Group__0 )
            // InternalEtlParser.g:1411:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEtlParser.g:1420:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1421:1: ( ruleSubRefinement EOF )
            // InternalEtlParser.g:1422:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEtlParser.g:1429:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1433:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEtlParser.g:1434:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEtlParser.g:1434:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEtlParser.g:1435:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1436:3: ( rule__SubRefinement__Alternatives )
            // InternalEtlParser.g:1436:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEtlParser.g:1445:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1446:1: ( ruleNestedRefinement EOF )
            // InternalEtlParser.g:1447:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEtlParser.g:1454:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1458:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1459:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1459:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEtlParser.g:1460:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1461:3: ( rule__NestedRefinement__Group__0 )
            // InternalEtlParser.g:1461:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEtlParser.g:1470:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:1471:1: ( ruleEclAttributeGroup EOF )
            // InternalEtlParser.g:1472:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEtlParser.g:1479:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1483:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:1484:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:1484:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEtlParser.g:1485:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:1486:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEtlParser.g:1486:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEtlParser.g:1495:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1496:1: ( ruleEclAttributeSet EOF )
            // InternalEtlParser.g:1497:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEtlParser.g:1504:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1508:2: ( ( ruleOrAttributeSet ) )
            // InternalEtlParser.g:1509:2: ( ruleOrAttributeSet )
            {
            // InternalEtlParser.g:1509:2: ( ruleOrAttributeSet )
            // InternalEtlParser.g:1510:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEtlParser.g:1520:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1521:1: ( ruleOrAttributeSet EOF )
            // InternalEtlParser.g:1522:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEtlParser.g:1529:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1533:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1534:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1534:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1535:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1536:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEtlParser.g:1536:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEtlParser.g:1545:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1546:1: ( ruleAndAttributeSet EOF )
            // InternalEtlParser.g:1547:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEtlParser.g:1554:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1558:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1559:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1559:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1560:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1561:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEtlParser.g:1561:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEtlParser.g:1570:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1571:1: ( ruleSubAttributeSet EOF )
            // InternalEtlParser.g:1572:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEtlParser.g:1579:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1583:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEtlParser.g:1584:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEtlParser.g:1584:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEtlParser.g:1585:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1586:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEtlParser.g:1586:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEtlParser.g:1595:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1596:1: ( ruleNestedAttributeSet EOF )
            // InternalEtlParser.g:1597:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEtlParser.g:1604:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1608:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1609:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1609:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1610:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1611:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEtlParser.g:1611:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEtlParser.g:1620:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1621:1: ( ruleAttributeConstraint EOF )
            // InternalEtlParser.g:1622:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEtlParser.g:1629:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1633:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1634:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1634:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEtlParser.g:1635:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1636:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEtlParser.g:1636:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEtlParser.g:1645:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:1646:1: ( ruleCardinality EOF )
            // InternalEtlParser.g:1647:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEtlParser.g:1654:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1658:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEtlParser.g:1659:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEtlParser.g:1659:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEtlParser.g:1660:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:1661:3: ( rule__Cardinality__Group__0 )
            // InternalEtlParser.g:1661:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEtlParser.g:1670:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1671:1: ( ruleComparison EOF )
            // InternalEtlParser.g:1672:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEtlParser.g:1679:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1683:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEtlParser.g:1684:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEtlParser.g:1684:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEtlParser.g:1685:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1686:3: ( rule__Comparison__Alternatives )
            // InternalEtlParser.g:1686:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEtlParser.g:1695:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1696:1: ( ruleAttributeComparison EOF )
            // InternalEtlParser.g:1697:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEtlParser.g:1704:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Alternatives ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1708:2: ( ( ( rule__AttributeComparison__Alternatives ) ) )
            // InternalEtlParser.g:1709:2: ( ( rule__AttributeComparison__Alternatives ) )
            {
            // InternalEtlParser.g:1709:2: ( ( rule__AttributeComparison__Alternatives ) )
            // InternalEtlParser.g:1710:3: ( rule__AttributeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1711:3: ( rule__AttributeComparison__Alternatives )
            // InternalEtlParser.g:1711:4: rule__AttributeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEtlParser.g:1720:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1721:1: ( ruleDataTypeComparison EOF )
            // InternalEtlParser.g:1722:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEtlParser.g:1729:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1733:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEtlParser.g:1734:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEtlParser.g:1734:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEtlParser.g:1735:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1736:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEtlParser.g:1736:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleAttributeValueEquals"
    // InternalEtlParser.g:1745:1: entryRuleAttributeValueEquals : ruleAttributeValueEquals EOF ;
    public final void entryRuleAttributeValueEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1746:1: ( ruleAttributeValueEquals EOF )
            // InternalEtlParser.g:1747:1: ruleAttributeValueEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValueEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValueEquals"


    // $ANTLR start "ruleAttributeValueEquals"
    // InternalEtlParser.g:1754:1: ruleAttributeValueEquals : ( ( rule__AttributeValueEquals__Group__0 ) ) ;
    public final void ruleAttributeValueEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1758:2: ( ( ( rule__AttributeValueEquals__Group__0 ) ) )
            // InternalEtlParser.g:1759:2: ( ( rule__AttributeValueEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1759:2: ( ( rule__AttributeValueEquals__Group__0 ) )
            // InternalEtlParser.g:1760:3: ( rule__AttributeValueEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1761:3: ( rule__AttributeValueEquals__Group__0 )
            // InternalEtlParser.g:1761:4: rule__AttributeValueEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValueEquals"


    // $ANTLR start "entryRuleAttributeValueNotEquals"
    // InternalEtlParser.g:1770:1: entryRuleAttributeValueNotEquals : ruleAttributeValueNotEquals EOF ;
    public final void entryRuleAttributeValueNotEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1771:1: ( ruleAttributeValueNotEquals EOF )
            // InternalEtlParser.g:1772:1: ruleAttributeValueNotEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueNotEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValueNotEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueNotEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValueNotEquals"


    // $ANTLR start "ruleAttributeValueNotEquals"
    // InternalEtlParser.g:1779:1: ruleAttributeValueNotEquals : ( ( rule__AttributeValueNotEquals__Group__0 ) ) ;
    public final void ruleAttributeValueNotEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1783:2: ( ( ( rule__AttributeValueNotEquals__Group__0 ) ) )
            // InternalEtlParser.g:1784:2: ( ( rule__AttributeValueNotEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1784:2: ( ( rule__AttributeValueNotEquals__Group__0 ) )
            // InternalEtlParser.g:1785:3: ( rule__AttributeValueNotEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueNotEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1786:3: ( rule__AttributeValueNotEquals__Group__0 )
            // InternalEtlParser.g:1786:4: rule__AttributeValueNotEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueNotEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueNotEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValueNotEquals"


    // $ANTLR start "entryRuleBooleanValueEquals"
    // InternalEtlParser.g:1795:1: entryRuleBooleanValueEquals : ruleBooleanValueEquals EOF ;
    public final void entryRuleBooleanValueEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1796:1: ( ruleBooleanValueEquals EOF )
            // InternalEtlParser.g:1797:1: ruleBooleanValueEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueEquals"


    // $ANTLR start "ruleBooleanValueEquals"
    // InternalEtlParser.g:1804:1: ruleBooleanValueEquals : ( ( rule__BooleanValueEquals__Group__0 ) ) ;
    public final void ruleBooleanValueEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1808:2: ( ( ( rule__BooleanValueEquals__Group__0 ) ) )
            // InternalEtlParser.g:1809:2: ( ( rule__BooleanValueEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1809:2: ( ( rule__BooleanValueEquals__Group__0 ) )
            // InternalEtlParser.g:1810:3: ( rule__BooleanValueEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1811:3: ( rule__BooleanValueEquals__Group__0 )
            // InternalEtlParser.g:1811:4: rule__BooleanValueEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueEquals"


    // $ANTLR start "entryRuleBooleanValueNotEquals"
    // InternalEtlParser.g:1820:1: entryRuleBooleanValueNotEquals : ruleBooleanValueNotEquals EOF ;
    public final void entryRuleBooleanValueNotEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1821:1: ( ruleBooleanValueNotEquals EOF )
            // InternalEtlParser.g:1822:1: ruleBooleanValueNotEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueNotEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueNotEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueNotEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueNotEquals"


    // $ANTLR start "ruleBooleanValueNotEquals"
    // InternalEtlParser.g:1829:1: ruleBooleanValueNotEquals : ( ( rule__BooleanValueNotEquals__Group__0 ) ) ;
    public final void ruleBooleanValueNotEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1833:2: ( ( ( rule__BooleanValueNotEquals__Group__0 ) ) )
            // InternalEtlParser.g:1834:2: ( ( rule__BooleanValueNotEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1834:2: ( ( rule__BooleanValueNotEquals__Group__0 ) )
            // InternalEtlParser.g:1835:3: ( rule__BooleanValueNotEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueNotEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1836:3: ( rule__BooleanValueNotEquals__Group__0 )
            // InternalEtlParser.g:1836:4: rule__BooleanValueNotEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueNotEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueNotEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueNotEquals"


    // $ANTLR start "entryRuleStringValueEquals"
    // InternalEtlParser.g:1845:1: entryRuleStringValueEquals : ruleStringValueEquals EOF ;
    public final void entryRuleStringValueEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1846:1: ( ruleStringValueEquals EOF )
            // InternalEtlParser.g:1847:1: ruleStringValueEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueEquals"


    // $ANTLR start "ruleStringValueEquals"
    // InternalEtlParser.g:1854:1: ruleStringValueEquals : ( ( rule__StringValueEquals__Group__0 ) ) ;
    public final void ruleStringValueEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1858:2: ( ( ( rule__StringValueEquals__Group__0 ) ) )
            // InternalEtlParser.g:1859:2: ( ( rule__StringValueEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1859:2: ( ( rule__StringValueEquals__Group__0 ) )
            // InternalEtlParser.g:1860:3: ( rule__StringValueEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1861:3: ( rule__StringValueEquals__Group__0 )
            // InternalEtlParser.g:1861:4: rule__StringValueEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueEquals"


    // $ANTLR start "entryRuleStringValueNotEquals"
    // InternalEtlParser.g:1870:1: entryRuleStringValueNotEquals : ruleStringValueNotEquals EOF ;
    public final void entryRuleStringValueNotEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1871:1: ( ruleStringValueNotEquals EOF )
            // InternalEtlParser.g:1872:1: ruleStringValueNotEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueNotEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueNotEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueNotEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueNotEquals"


    // $ANTLR start "ruleStringValueNotEquals"
    // InternalEtlParser.g:1879:1: ruleStringValueNotEquals : ( ( rule__StringValueNotEquals__Group__0 ) ) ;
    public final void ruleStringValueNotEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1883:2: ( ( ( rule__StringValueNotEquals__Group__0 ) ) )
            // InternalEtlParser.g:1884:2: ( ( rule__StringValueNotEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1884:2: ( ( rule__StringValueNotEquals__Group__0 ) )
            // InternalEtlParser.g:1885:3: ( rule__StringValueNotEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueNotEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1886:3: ( rule__StringValueNotEquals__Group__0 )
            // InternalEtlParser.g:1886:4: rule__StringValueNotEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueNotEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueNotEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueNotEquals"


    // $ANTLR start "entryRuleIntegerValueEquals"
    // InternalEtlParser.g:1895:1: entryRuleIntegerValueEquals : ruleIntegerValueEquals EOF ;
    public final void entryRuleIntegerValueEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1896:1: ( ruleIntegerValueEquals EOF )
            // InternalEtlParser.g:1897:1: ruleIntegerValueEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueEquals"


    // $ANTLR start "ruleIntegerValueEquals"
    // InternalEtlParser.g:1904:1: ruleIntegerValueEquals : ( ( rule__IntegerValueEquals__Group__0 ) ) ;
    public final void ruleIntegerValueEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1908:2: ( ( ( rule__IntegerValueEquals__Group__0 ) ) )
            // InternalEtlParser.g:1909:2: ( ( rule__IntegerValueEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1909:2: ( ( rule__IntegerValueEquals__Group__0 ) )
            // InternalEtlParser.g:1910:3: ( rule__IntegerValueEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1911:3: ( rule__IntegerValueEquals__Group__0 )
            // InternalEtlParser.g:1911:4: rule__IntegerValueEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueEquals"


    // $ANTLR start "entryRuleIntegerValueNotEquals"
    // InternalEtlParser.g:1920:1: entryRuleIntegerValueNotEquals : ruleIntegerValueNotEquals EOF ;
    public final void entryRuleIntegerValueNotEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1921:1: ( ruleIntegerValueNotEquals EOF )
            // InternalEtlParser.g:1922:1: ruleIntegerValueNotEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueNotEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueNotEquals"


    // $ANTLR start "ruleIntegerValueNotEquals"
    // InternalEtlParser.g:1929:1: ruleIntegerValueNotEquals : ( ( rule__IntegerValueNotEquals__Group__0 ) ) ;
    public final void ruleIntegerValueNotEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1933:2: ( ( ( rule__IntegerValueNotEquals__Group__0 ) ) )
            // InternalEtlParser.g:1934:2: ( ( rule__IntegerValueNotEquals__Group__0 ) )
            {
            // InternalEtlParser.g:1934:2: ( ( rule__IntegerValueNotEquals__Group__0 ) )
            // InternalEtlParser.g:1935:3: ( rule__IntegerValueNotEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:1936:3: ( rule__IntegerValueNotEquals__Group__0 )
            // InternalEtlParser.g:1936:4: rule__IntegerValueNotEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueNotEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueNotEquals"


    // $ANTLR start "entryRuleIntegerValueGreaterThan"
    // InternalEtlParser.g:1945:1: entryRuleIntegerValueGreaterThan : ruleIntegerValueGreaterThan EOF ;
    public final void entryRuleIntegerValueGreaterThan() throws RecognitionException {
        try {
            // InternalEtlParser.g:1946:1: ( ruleIntegerValueGreaterThan EOF )
            // InternalEtlParser.g:1947:1: ruleIntegerValueGreaterThan EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueGreaterThan();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueGreaterThan"


    // $ANTLR start "ruleIntegerValueGreaterThan"
    // InternalEtlParser.g:1954:1: ruleIntegerValueGreaterThan : ( ( rule__IntegerValueGreaterThan__Group__0 ) ) ;
    public final void ruleIntegerValueGreaterThan() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1958:2: ( ( ( rule__IntegerValueGreaterThan__Group__0 ) ) )
            // InternalEtlParser.g:1959:2: ( ( rule__IntegerValueGreaterThan__Group__0 ) )
            {
            // InternalEtlParser.g:1959:2: ( ( rule__IntegerValueGreaterThan__Group__0 ) )
            // InternalEtlParser.g:1960:3: ( rule__IntegerValueGreaterThan__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanAccess().getGroup()); 
            }
            // InternalEtlParser.g:1961:3: ( rule__IntegerValueGreaterThan__Group__0 )
            // InternalEtlParser.g:1961:4: rule__IntegerValueGreaterThan__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThan__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueGreaterThan"


    // $ANTLR start "entryRuleIntegerValueLessThan"
    // InternalEtlParser.g:1970:1: entryRuleIntegerValueLessThan : ruleIntegerValueLessThan EOF ;
    public final void entryRuleIntegerValueLessThan() throws RecognitionException {
        try {
            // InternalEtlParser.g:1971:1: ( ruleIntegerValueLessThan EOF )
            // InternalEtlParser.g:1972:1: ruleIntegerValueLessThan EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueLessThan();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueLessThan"


    // $ANTLR start "ruleIntegerValueLessThan"
    // InternalEtlParser.g:1979:1: ruleIntegerValueLessThan : ( ( rule__IntegerValueLessThan__Group__0 ) ) ;
    public final void ruleIntegerValueLessThan() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1983:2: ( ( ( rule__IntegerValueLessThan__Group__0 ) ) )
            // InternalEtlParser.g:1984:2: ( ( rule__IntegerValueLessThan__Group__0 ) )
            {
            // InternalEtlParser.g:1984:2: ( ( rule__IntegerValueLessThan__Group__0 ) )
            // InternalEtlParser.g:1985:3: ( rule__IntegerValueLessThan__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanAccess().getGroup()); 
            }
            // InternalEtlParser.g:1986:3: ( rule__IntegerValueLessThan__Group__0 )
            // InternalEtlParser.g:1986:4: rule__IntegerValueLessThan__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThan__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueLessThan"


    // $ANTLR start "entryRuleIntegerValueGreaterThanEquals"
    // InternalEtlParser.g:1995:1: entryRuleIntegerValueGreaterThanEquals : ruleIntegerValueGreaterThanEquals EOF ;
    public final void entryRuleIntegerValueGreaterThanEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:1996:1: ( ruleIntegerValueGreaterThanEquals EOF )
            // InternalEtlParser.g:1997:1: ruleIntegerValueGreaterThanEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueGreaterThanEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueGreaterThanEquals"


    // $ANTLR start "ruleIntegerValueGreaterThanEquals"
    // InternalEtlParser.g:2004:1: ruleIntegerValueGreaterThanEquals : ( ( rule__IntegerValueGreaterThanEquals__Group__0 ) ) ;
    public final void ruleIntegerValueGreaterThanEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2008:2: ( ( ( rule__IntegerValueGreaterThanEquals__Group__0 ) ) )
            // InternalEtlParser.g:2009:2: ( ( rule__IntegerValueGreaterThanEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2009:2: ( ( rule__IntegerValueGreaterThanEquals__Group__0 ) )
            // InternalEtlParser.g:2010:3: ( rule__IntegerValueGreaterThanEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2011:3: ( rule__IntegerValueGreaterThanEquals__Group__0 )
            // InternalEtlParser.g:2011:4: rule__IntegerValueGreaterThanEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThanEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueGreaterThanEquals"


    // $ANTLR start "entryRuleIntegerValueLessThanEquals"
    // InternalEtlParser.g:2020:1: entryRuleIntegerValueLessThanEquals : ruleIntegerValueLessThanEquals EOF ;
    public final void entryRuleIntegerValueLessThanEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:2021:1: ( ruleIntegerValueLessThanEquals EOF )
            // InternalEtlParser.g:2022:1: ruleIntegerValueLessThanEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueLessThanEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueLessThanEquals"


    // $ANTLR start "ruleIntegerValueLessThanEquals"
    // InternalEtlParser.g:2029:1: ruleIntegerValueLessThanEquals : ( ( rule__IntegerValueLessThanEquals__Group__0 ) ) ;
    public final void ruleIntegerValueLessThanEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2033:2: ( ( ( rule__IntegerValueLessThanEquals__Group__0 ) ) )
            // InternalEtlParser.g:2034:2: ( ( rule__IntegerValueLessThanEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2034:2: ( ( rule__IntegerValueLessThanEquals__Group__0 ) )
            // InternalEtlParser.g:2035:3: ( rule__IntegerValueLessThanEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2036:3: ( rule__IntegerValueLessThanEquals__Group__0 )
            // InternalEtlParser.g:2036:4: rule__IntegerValueLessThanEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThanEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueLessThanEquals"


    // $ANTLR start "entryRuleDecimalValueEquals"
    // InternalEtlParser.g:2045:1: entryRuleDecimalValueEquals : ruleDecimalValueEquals EOF ;
    public final void entryRuleDecimalValueEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:2046:1: ( ruleDecimalValueEquals EOF )
            // InternalEtlParser.g:2047:1: ruleDecimalValueEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueEquals"


    // $ANTLR start "ruleDecimalValueEquals"
    // InternalEtlParser.g:2054:1: ruleDecimalValueEquals : ( ( rule__DecimalValueEquals__Group__0 ) ) ;
    public final void ruleDecimalValueEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2058:2: ( ( ( rule__DecimalValueEquals__Group__0 ) ) )
            // InternalEtlParser.g:2059:2: ( ( rule__DecimalValueEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2059:2: ( ( rule__DecimalValueEquals__Group__0 ) )
            // InternalEtlParser.g:2060:3: ( rule__DecimalValueEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2061:3: ( rule__DecimalValueEquals__Group__0 )
            // InternalEtlParser.g:2061:4: rule__DecimalValueEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueEquals"


    // $ANTLR start "entryRuleDecimalValueNotEquals"
    // InternalEtlParser.g:2070:1: entryRuleDecimalValueNotEquals : ruleDecimalValueNotEquals EOF ;
    public final void entryRuleDecimalValueNotEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:2071:1: ( ruleDecimalValueNotEquals EOF )
            // InternalEtlParser.g:2072:1: ruleDecimalValueNotEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueNotEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueNotEquals"


    // $ANTLR start "ruleDecimalValueNotEquals"
    // InternalEtlParser.g:2079:1: ruleDecimalValueNotEquals : ( ( rule__DecimalValueNotEquals__Group__0 ) ) ;
    public final void ruleDecimalValueNotEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2083:2: ( ( ( rule__DecimalValueNotEquals__Group__0 ) ) )
            // InternalEtlParser.g:2084:2: ( ( rule__DecimalValueNotEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2084:2: ( ( rule__DecimalValueNotEquals__Group__0 ) )
            // InternalEtlParser.g:2085:3: ( rule__DecimalValueNotEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2086:3: ( rule__DecimalValueNotEquals__Group__0 )
            // InternalEtlParser.g:2086:4: rule__DecimalValueNotEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueNotEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueNotEquals"


    // $ANTLR start "entryRuleDecimalValueGreaterThan"
    // InternalEtlParser.g:2095:1: entryRuleDecimalValueGreaterThan : ruleDecimalValueGreaterThan EOF ;
    public final void entryRuleDecimalValueGreaterThan() throws RecognitionException {
        try {
            // InternalEtlParser.g:2096:1: ( ruleDecimalValueGreaterThan EOF )
            // InternalEtlParser.g:2097:1: ruleDecimalValueGreaterThan EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueGreaterThan();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueGreaterThan"


    // $ANTLR start "ruleDecimalValueGreaterThan"
    // InternalEtlParser.g:2104:1: ruleDecimalValueGreaterThan : ( ( rule__DecimalValueGreaterThan__Group__0 ) ) ;
    public final void ruleDecimalValueGreaterThan() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2108:2: ( ( ( rule__DecimalValueGreaterThan__Group__0 ) ) )
            // InternalEtlParser.g:2109:2: ( ( rule__DecimalValueGreaterThan__Group__0 ) )
            {
            // InternalEtlParser.g:2109:2: ( ( rule__DecimalValueGreaterThan__Group__0 ) )
            // InternalEtlParser.g:2110:3: ( rule__DecimalValueGreaterThan__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanAccess().getGroup()); 
            }
            // InternalEtlParser.g:2111:3: ( rule__DecimalValueGreaterThan__Group__0 )
            // InternalEtlParser.g:2111:4: rule__DecimalValueGreaterThan__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThan__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueGreaterThan"


    // $ANTLR start "entryRuleDecimalValueLessThan"
    // InternalEtlParser.g:2120:1: entryRuleDecimalValueLessThan : ruleDecimalValueLessThan EOF ;
    public final void entryRuleDecimalValueLessThan() throws RecognitionException {
        try {
            // InternalEtlParser.g:2121:1: ( ruleDecimalValueLessThan EOF )
            // InternalEtlParser.g:2122:1: ruleDecimalValueLessThan EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueLessThan();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueLessThan"


    // $ANTLR start "ruleDecimalValueLessThan"
    // InternalEtlParser.g:2129:1: ruleDecimalValueLessThan : ( ( rule__DecimalValueLessThan__Group__0 ) ) ;
    public final void ruleDecimalValueLessThan() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2133:2: ( ( ( rule__DecimalValueLessThan__Group__0 ) ) )
            // InternalEtlParser.g:2134:2: ( ( rule__DecimalValueLessThan__Group__0 ) )
            {
            // InternalEtlParser.g:2134:2: ( ( rule__DecimalValueLessThan__Group__0 ) )
            // InternalEtlParser.g:2135:3: ( rule__DecimalValueLessThan__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanAccess().getGroup()); 
            }
            // InternalEtlParser.g:2136:3: ( rule__DecimalValueLessThan__Group__0 )
            // InternalEtlParser.g:2136:4: rule__DecimalValueLessThan__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThan__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueLessThan"


    // $ANTLR start "entryRuleDecimalValueGreaterThanEquals"
    // InternalEtlParser.g:2145:1: entryRuleDecimalValueGreaterThanEquals : ruleDecimalValueGreaterThanEquals EOF ;
    public final void entryRuleDecimalValueGreaterThanEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:2146:1: ( ruleDecimalValueGreaterThanEquals EOF )
            // InternalEtlParser.g:2147:1: ruleDecimalValueGreaterThanEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueGreaterThanEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueGreaterThanEquals"


    // $ANTLR start "ruleDecimalValueGreaterThanEquals"
    // InternalEtlParser.g:2154:1: ruleDecimalValueGreaterThanEquals : ( ( rule__DecimalValueGreaterThanEquals__Group__0 ) ) ;
    public final void ruleDecimalValueGreaterThanEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2158:2: ( ( ( rule__DecimalValueGreaterThanEquals__Group__0 ) ) )
            // InternalEtlParser.g:2159:2: ( ( rule__DecimalValueGreaterThanEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2159:2: ( ( rule__DecimalValueGreaterThanEquals__Group__0 ) )
            // InternalEtlParser.g:2160:3: ( rule__DecimalValueGreaterThanEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2161:3: ( rule__DecimalValueGreaterThanEquals__Group__0 )
            // InternalEtlParser.g:2161:4: rule__DecimalValueGreaterThanEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThanEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueGreaterThanEquals"


    // $ANTLR start "entryRuleDecimalValueLessThanEquals"
    // InternalEtlParser.g:2170:1: entryRuleDecimalValueLessThanEquals : ruleDecimalValueLessThanEquals EOF ;
    public final void entryRuleDecimalValueLessThanEquals() throws RecognitionException {
        try {
            // InternalEtlParser.g:2171:1: ( ruleDecimalValueLessThanEquals EOF )
            // InternalEtlParser.g:2172:1: ruleDecimalValueLessThanEquals EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueLessThanEquals();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueLessThanEquals"


    // $ANTLR start "ruleDecimalValueLessThanEquals"
    // InternalEtlParser.g:2179:1: ruleDecimalValueLessThanEquals : ( ( rule__DecimalValueLessThanEquals__Group__0 ) ) ;
    public final void ruleDecimalValueLessThanEquals() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2183:2: ( ( ( rule__DecimalValueLessThanEquals__Group__0 ) ) )
            // InternalEtlParser.g:2184:2: ( ( rule__DecimalValueLessThanEquals__Group__0 ) )
            {
            // InternalEtlParser.g:2184:2: ( ( rule__DecimalValueLessThanEquals__Group__0 ) )
            // InternalEtlParser.g:2185:3: ( rule__DecimalValueLessThanEquals__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsAccess().getGroup()); 
            }
            // InternalEtlParser.g:2186:3: ( rule__DecimalValueLessThanEquals__Group__0 )
            // InternalEtlParser.g:2186:4: rule__DecimalValueLessThanEquals__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThanEquals__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueLessThanEquals"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEtlParser.g:2195:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:2196:1: ( ruleNestedExpression EOF )
            // InternalEtlParser.g:2197:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEtlParser.g:2204:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2208:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEtlParser.g:2209:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEtlParser.g:2209:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEtlParser.g:2210:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:2211:3: ( rule__NestedExpression__Group__0 )
            // InternalEtlParser.g:2211:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEtlParser.g:2220:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2224:1: ( ruleSnomedIdentifier EOF )
            // InternalEtlParser.g:2225:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEtlParser.g:2235:1: ruleSnomedIdentifier : ( ( rule__SnomedIdentifier__Group__0 ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2240:2: ( ( ( rule__SnomedIdentifier__Group__0 ) ) )
            // InternalEtlParser.g:2241:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            {
            // InternalEtlParser.g:2241:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            // InternalEtlParser.g:2242:3: ( rule__SnomedIdentifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }
            // InternalEtlParser.g:2243:3: ( rule__SnomedIdentifier__Group__0 )
            // InternalEtlParser.g:2243:4: rule__SnomedIdentifier__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEtlParser.g:2253:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2257:1: ( ruleNonNegativeInteger EOF )
            // InternalEtlParser.g:2258:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEtlParser.g:2268:1: ruleNonNegativeInteger : ( ( rule__NonNegativeInteger__Alternatives ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2273:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) )
            // InternalEtlParser.g:2274:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            {
            // InternalEtlParser.g:2274:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEtlParser.g:2275:3: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2276:3: ( rule__NonNegativeInteger__Alternatives )
            // InternalEtlParser.g:2276:4: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEtlParser.g:2286:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2290:1: ( ruleMaxValue EOF )
            // InternalEtlParser.g:2291:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEtlParser.g:2301:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2306:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEtlParser.g:2307:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEtlParser.g:2307:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEtlParser.g:2308:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2309:3: ( rule__MaxValue__Alternatives )
            // InternalEtlParser.g:2309:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEtlParser.g:2319:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2323:1: ( ruleInteger EOF )
            // InternalEtlParser.g:2324:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEtlParser.g:2334:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2339:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEtlParser.g:2340:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEtlParser.g:2340:2: ( ( rule__Integer__Group__0 ) )
            // InternalEtlParser.g:2341:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEtlParser.g:2342:3: ( rule__Integer__Group__0 )
            // InternalEtlParser.g:2342:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEtlParser.g:2352:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2356:1: ( ruleDecimal EOF )
            // InternalEtlParser.g:2357:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEtlParser.g:2367:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2372:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEtlParser.g:2373:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEtlParser.g:2373:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEtlParser.g:2374:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2375:3: ( rule__Decimal__Group__0 )
            // InternalEtlParser.g:2375:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEtlParser.g:2385:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2389:1: ( ruleNonNegativeDecimal EOF )
            // InternalEtlParser.g:2390:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEtlParser.g:2400:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2405:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEtlParser.g:2406:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEtlParser.g:2406:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEtlParser.g:2407:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2408:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEtlParser.g:2408:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEtlParser.g:2418:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2422:1: ( ruleBoolean EOF )
            // InternalEtlParser.g:2423:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEtlParser.g:2433:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2438:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEtlParser.g:2439:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEtlParser.g:2439:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEtlParser.g:2440:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2441:3: ( rule__Boolean__Alternatives )
            // InternalEtlParser.g:2441:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0"
    // InternalEtlParser.g:2450:1: rule__ExpressionTemplate__Alternatives_1_0 : ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2454:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( ((LA1_0>=RULE_EQUIVALENT_TO && LA1_0<=RULE_SUBTYPE_OF)) ) {
                alt1=1;
            }
            else if ( (LA1_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalEtlParser.g:2455:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    {
                    // InternalEtlParser.g:2455:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    // InternalEtlParser.g:2456:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }
                    // InternalEtlParser.g:2457:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    // InternalEtlParser.g:2457:4: rule__ExpressionTemplate__Alternatives_1_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2461:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    {
                    // InternalEtlParser.g:2461:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    // InternalEtlParser.g:2462:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }
                    // InternalEtlParser.g:2463:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    // InternalEtlParser.g:2463:4: rule__ExpressionTemplate__SlotAssignment_1_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__SlotAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0_0"
    // InternalEtlParser.g:2471:1: rule__ExpressionTemplate__Alternatives_1_0_0 : ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2475:1: ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_SUBTYPE_OF) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_EQUIVALENT_TO) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalEtlParser.g:2476:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    {
                    // InternalEtlParser.g:2476:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    // InternalEtlParser.g:2477:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }
                    // InternalEtlParser.g:2478:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    // InternalEtlParser.g:2478:4: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2482:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:2482:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:2483:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0_0"


    // $ANTLR start "rule__Refinement__Alternatives_0"
    // InternalEtlParser.g:2492:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );
    public final void rule__Refinement__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2496:1: ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) )
            int alt3=2;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalEtlParser.g:2497:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    {
                    // InternalEtlParser.g:2497:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    // InternalEtlParser.g:2498:3: ( rule__Refinement__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }
                    // InternalEtlParser.g:2499:3: ( rule__Refinement__Group_0_0__0 )
                    // InternalEtlParser.g:2499:4: rule__Refinement__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2503:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    {
                    // InternalEtlParser.g:2503:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    // InternalEtlParser.g:2504:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }
                    // InternalEtlParser.g:2505:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    // InternalEtlParser.g:2505:4: rule__Refinement__GroupsAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__GroupsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Alternatives_0"


    // $ANTLR start "rule__AttributeValue__Alternatives"
    // InternalEtlParser.g:2513:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );
    public final void rule__AttributeValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2517:1: ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) )
            int alt4=6;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalEtlParser.g:2518:2: ( ruleConceptReference )
                    {
                    // InternalEtlParser.g:2518:2: ( ruleConceptReference )
                    // InternalEtlParser.g:2519:3: ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2524:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:2524:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    // InternalEtlParser.g:2525:3: ( rule__AttributeValue__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:2526:3: ( rule__AttributeValue__Group_1__0 )
                    // InternalEtlParser.g:2526:4: rule__AttributeValue__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeValue__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2530:2: ( ruleStringValue )
                    {
                    // InternalEtlParser.g:2530:2: ( ruleStringValue )
                    // InternalEtlParser.g:2531:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:2536:2: ( ruleIntegerValue )
                    {
                    // InternalEtlParser.g:2536:2: ( ruleIntegerValue )
                    // InternalEtlParser.g:2537:3: ruleIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:2542:2: ( ruleDecimalValue )
                    {
                    // InternalEtlParser.g:2542:2: ( ruleDecimalValue )
                    // InternalEtlParser.g:2543:3: ruleDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:2548:2: ( ruleConcreteValueReplacementSlot )
                    {
                    // InternalEtlParser.g:2548:2: ( ruleConcreteValueReplacementSlot )
                    // InternalEtlParser.g:2549:3: ruleConcreteValueReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConcreteValueReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Alternatives"


    // $ANTLR start "rule__ConcreteValueReplacementSlot__Alternatives"
    // InternalEtlParser.g:2558:1: rule__ConcreteValueReplacementSlot__Alternatives : ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) );
    public final void rule__ConcreteValueReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2562:1: ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) )
            int alt5=3;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==RULE_PLUS) ) {
                    switch ( input.LA(3) ) {
                    case RULE_STR:
                        {
                        alt5=1;
                        }
                        break;
                    case RULE_DEC:
                        {
                        alt5=3;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt5=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalEtlParser.g:2563:2: ( ruleStringReplacementSlot )
                    {
                    // InternalEtlParser.g:2563:2: ( ruleStringReplacementSlot )
                    // InternalEtlParser.g:2564:3: ruleStringReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2569:2: ( ruleIntegerReplacementSlot )
                    {
                    // InternalEtlParser.g:2569:2: ( ruleIntegerReplacementSlot )
                    // InternalEtlParser.g:2570:3: ruleIntegerReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2575:2: ( ruleDecimalReplacementSlot )
                    {
                    // InternalEtlParser.g:2575:2: ( ruleDecimalReplacementSlot )
                    // InternalEtlParser.g:2576:3: ruleDecimalReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConcreteValueReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReplacementSlot__Alternatives"
    // InternalEtlParser.g:2585:1: rule__ConceptReplacementSlot__Alternatives : ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) );
    public final void rule__ConceptReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2589:1: ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA6_1 = input.LA(2);

                if ( (LA6_1==RULE_PLUS) ) {
                    int LA6_2 = input.LA(3);

                    if ( (LA6_2==RULE_ID) ) {
                        alt6=1;
                    }
                    else if ( (LA6_2==RULE_DOUBLE_SQUARE_CLOSE||LA6_2==RULE_SCG||LA6_2==RULE_SLOTNAME_STRING||LA6_2==RULE_ROUND_OPEN) ) {
                        alt6=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 6, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalEtlParser.g:2590:2: ( ruleConceptIdReplacementSlot )
                    {
                    // InternalEtlParser.g:2590:2: ( ruleConceptIdReplacementSlot )
                    // InternalEtlParser.g:2591:3: ruleConceptIdReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptIdReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2596:2: ( ruleExpressionReplacementSlot )
                    {
                    // InternalEtlParser.g:2596:2: ( ruleExpressionReplacementSlot )
                    // InternalEtlParser.g:2597:3: ruleExpressionReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpressionReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReference__Alternatives"
    // InternalEtlParser.g:2606:1: rule__ConceptReference__Alternatives : ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) );
    public final void rule__ConceptReference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2610:1: ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_DIGIT_NONZERO) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalEtlParser.g:2611:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    {
                    // InternalEtlParser.g:2611:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    // InternalEtlParser.g:2612:3: ( rule__ConceptReference__SlotAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }
                    // InternalEtlParser.g:2613:3: ( rule__ConceptReference__SlotAssignment_0 )
                    // InternalEtlParser.g:2613:4: rule__ConceptReference__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2617:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:2617:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    // InternalEtlParser.g:2618:3: ( rule__ConceptReference__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:2619:3: ( rule__ConceptReference__Group_1__0 )
                    // InternalEtlParser.g:2619:4: rule__ConceptReference__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Alternatives"


    // $ANTLR start "rule__SlotToken__Alternatives"
    // InternalEtlParser.g:2627:1: rule__SlotToken__Alternatives : ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION ) | ( RULE_DISJUNCTION ) | ( RULE_EXCLUSION ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__SlotToken__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2631:1: ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION ) | ( RULE_DISJUNCTION ) | ( RULE_EXCLUSION ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt8=18;
            switch ( input.LA(1) ) {
            case RULE_EQUIVALENT_TO:
                {
                alt8=1;
                }
                break;
            case RULE_SUBTYPE_OF:
                {
                alt8=2;
                }
                break;
            case RULE_COMMA:
                {
                alt8=3;
                }
                break;
            case RULE_CONJUNCTION:
                {
                alt8=4;
                }
                break;
            case RULE_DISJUNCTION:
                {
                alt8=5;
                }
                break;
            case RULE_EXCLUSION:
                {
                alt8=6;
                }
                break;
            case RULE_REVERSED:
                {
                alt8=7;
                }
                break;
            case RULE_CARET:
                {
                alt8=8;
                }
                break;
            case RULE_LT:
                {
                alt8=9;
                }
                break;
            case RULE_LTE:
                {
                alt8=10;
                }
                break;
            case RULE_DBL_LT:
                {
                alt8=11;
                }
                break;
            case RULE_LT_EM:
                {
                alt8=12;
                }
                break;
            case RULE_GT:
                {
                alt8=13;
                }
                break;
            case RULE_GTE:
                {
                alt8=14;
                }
                break;
            case RULE_DBL_GT:
                {
                alt8=15;
                }
                break;
            case RULE_GT_EM:
                {
                alt8=16;
                }
                break;
            case RULE_EQUAL:
                {
                alt8=17;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt8=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalEtlParser.g:2632:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:2632:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:2633:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2638:2: ( RULE_SUBTYPE_OF )
                    {
                    // InternalEtlParser.g:2638:2: ( RULE_SUBTYPE_OF )
                    // InternalEtlParser.g:2639:3: RULE_SUBTYPE_OF
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2644:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:2644:2: ( RULE_COMMA )
                    // InternalEtlParser.g:2645:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:2650:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEtlParser.g:2650:2: ( RULE_CONJUNCTION )
                    // InternalEtlParser.g:2651:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCONJUNCTIONTerminalRuleCall_3()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCONJUNCTIONTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:2656:2: ( RULE_DISJUNCTION )
                    {
                    // InternalEtlParser.g:2656:2: ( RULE_DISJUNCTION )
                    // InternalEtlParser.g:2657:3: RULE_DISJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDISJUNCTIONTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDISJUNCTIONTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:2662:2: ( RULE_EXCLUSION )
                    {
                    // InternalEtlParser.g:2662:2: ( RULE_EXCLUSION )
                    // InternalEtlParser.g:2663:3: RULE_EXCLUSION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEXCLUSIONTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EXCLUSION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEXCLUSIONTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:2668:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:2668:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:2669:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:2674:2: ( RULE_CARET )
                    {
                    // InternalEtlParser.g:2674:2: ( RULE_CARET )
                    // InternalEtlParser.g:2675:3: RULE_CARET
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }
                    match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:2680:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:2680:2: ( RULE_LT )
                    // InternalEtlParser.g:2681:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:2686:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:2686:2: ( RULE_LTE )
                    // InternalEtlParser.g:2687:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:2692:2: ( RULE_DBL_LT )
                    {
                    // InternalEtlParser.g:2692:2: ( RULE_DBL_LT )
                    // InternalEtlParser.g:2693:3: RULE_DBL_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }
                    match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:2698:2: ( RULE_LT_EM )
                    {
                    // InternalEtlParser.g:2698:2: ( RULE_LT_EM )
                    // InternalEtlParser.g:2699:3: RULE_LT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }
                    match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:2704:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:2704:2: ( RULE_GT )
                    // InternalEtlParser.g:2705:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:2710:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:2710:2: ( RULE_GTE )
                    // InternalEtlParser.g:2711:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:2716:2: ( RULE_DBL_GT )
                    {
                    // InternalEtlParser.g:2716:2: ( RULE_DBL_GT )
                    // InternalEtlParser.g:2717:3: RULE_DBL_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }
                    match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:2722:2: ( RULE_GT_EM )
                    {
                    // InternalEtlParser.g:2722:2: ( RULE_GT_EM )
                    // InternalEtlParser.g:2723:3: RULE_GT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }
                    match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:2728:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:2728:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:2729:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:2734:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:2734:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:2735:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotToken__Alternatives"


    // $ANTLR start "rule__SlotInteger__Alternatives"
    // InternalEtlParser.g:2744:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );
    public final void rule__SlotInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2748:1: ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) )
            int alt9=2;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalEtlParser.g:2749:2: ( ruleSlotIntegerRange )
                    {
                    // InternalEtlParser.g:2749:2: ( ruleSlotIntegerRange )
                    // InternalEtlParser.g:2750:3: ruleSlotIntegerRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2755:2: ( ruleSlotIntegerValue )
                    {
                    // InternalEtlParser.g:2755:2: ( ruleSlotIntegerValue )
                    // InternalEtlParser.g:2756:3: ruleSlotIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotInteger__Alternatives"


    // $ANTLR start "rule__SlotIntegerRange__Alternatives"
    // InternalEtlParser.g:2765:1: rule__SlotIntegerRange__Alternatives : ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) );
    public final void rule__SlotIntegerRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2769:1: ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_GT||LA10_0==RULE_HASH) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_TO) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalEtlParser.g:2770:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:2770:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    // InternalEtlParser.g:2771:3: ( rule__SlotIntegerRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:2772:3: ( rule__SlotIntegerRange__Group_0__0 )
                    // InternalEtlParser.g:2772:4: rule__SlotIntegerRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2776:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:2776:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    // InternalEtlParser.g:2777:3: ( rule__SlotIntegerRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:2778:3: ( rule__SlotIntegerRange__Group_1__0 )
                    // InternalEtlParser.g:2778:4: rule__SlotIntegerRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Alternatives"


    // $ANTLR start "rule__SlotDecimal__Alternatives"
    // InternalEtlParser.g:2786:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );
    public final void rule__SlotDecimal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2790:1: ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) )
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalEtlParser.g:2791:2: ( ruleSlotDecimalRange )
                    {
                    // InternalEtlParser.g:2791:2: ( ruleSlotDecimalRange )
                    // InternalEtlParser.g:2792:3: ruleSlotDecimalRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2797:2: ( ruleSlotDecimalValue )
                    {
                    // InternalEtlParser.g:2797:2: ( ruleSlotDecimalValue )
                    // InternalEtlParser.g:2798:3: ruleSlotDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimal__Alternatives"


    // $ANTLR start "rule__SlotDecimalRange__Alternatives"
    // InternalEtlParser.g:2807:1: rule__SlotDecimalRange__Alternatives : ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) );
    public final void rule__SlotDecimalRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2811:1: ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_GT||LA12_0==RULE_HASH) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_TO) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalEtlParser.g:2812:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:2812:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    // InternalEtlParser.g:2813:3: ( rule__SlotDecimalRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:2814:3: ( rule__SlotDecimalRange__Group_0__0 )
                    // InternalEtlParser.g:2814:4: rule__SlotDecimalRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2818:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:2818:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    // InternalEtlParser.g:2819:3: ( rule__SlotDecimalRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:2820:3: ( rule__SlotDecimalRange__Group_1__0 )
                    // InternalEtlParser.g:2820:4: rule__SlotDecimalRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Alternatives"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEtlParser.g:2828:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2832:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_CONJUNCTION) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_COMMA) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEtlParser.g:2833:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEtlParser.g:2833:2: ( RULE_CONJUNCTION )
                    // InternalEtlParser.g:2834:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2839:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:2839:2: ( RULE_COMMA )
                    // InternalEtlParser.g:2840:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEtlParser.g:2849:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2853:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt14=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt14=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt14=2;
                }
                break;
            case RULE_LT:
                {
                alt14=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt14=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt14=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt14=6;
                }
                break;
            case RULE_GT:
                {
                alt14=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt14=8;
                }
                break;
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt14=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalEtlParser.g:2854:2: ( ruleChildOf )
                    {
                    // InternalEtlParser.g:2854:2: ( ruleChildOf )
                    // InternalEtlParser.g:2855:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2860:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEtlParser.g:2860:2: ( ruleChildOrSelfOf )
                    // InternalEtlParser.g:2861:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2866:2: ( ruleDescendantOf )
                    {
                    // InternalEtlParser.g:2866:2: ( ruleDescendantOf )
                    // InternalEtlParser.g:2867:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:2872:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEtlParser.g:2872:2: ( ruleDescendantOrSelfOf )
                    // InternalEtlParser.g:2873:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:2878:2: ( ruleParentOf )
                    {
                    // InternalEtlParser.g:2878:2: ( ruleParentOf )
                    // InternalEtlParser.g:2879:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:2884:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEtlParser.g:2884:2: ( ruleParentOrSelfOf )
                    // InternalEtlParser.g:2885:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:2890:2: ( ruleAncestorOf )
                    {
                    // InternalEtlParser.g:2890:2: ( ruleAncestorOf )
                    // InternalEtlParser.g:2891:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:2896:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEtlParser.g:2896:2: ( ruleAncestorOrSelfOf )
                    // InternalEtlParser.g:2897:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:2902:2: ( ruleEclFocusConcept )
                    {
                    // InternalEtlParser.g:2902:2: ( ruleEclFocusConcept )
                    // InternalEtlParser.g:2903:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEtlParser.g:2912:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2916:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt15=1;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt15=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt15=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt15=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalEtlParser.g:2917:2: ( ruleMemberOf )
                    {
                    // InternalEtlParser.g:2917:2: ( ruleMemberOf )
                    // InternalEtlParser.g:2918:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2923:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:2923:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:2924:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2929:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:2929:2: ( ruleAny )
                    // InternalEtlParser.g:2930:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:2935:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:2935:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:2936:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEtlParser.g:2945:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2949:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_NONZERO:
                {
                alt16=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt16=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalEtlParser.g:2950:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:2950:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:2951:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2956:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:2956:2: ( ruleAny )
                    // InternalEtlParser.g:2957:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:2962:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:2962:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:2963:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEtlParser.g:2972:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2976:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_CONJUNCTION) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_COMMA) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEtlParser.g:2977:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEtlParser.g:2977:2: ( RULE_CONJUNCTION )
                    // InternalEtlParser.g:2978:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTIONTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTIONTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:2983:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:2983:2: ( RULE_COMMA )
                    // InternalEtlParser.g:2984:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEtlParser.g:2993:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2997:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt18=3;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalEtlParser.g:2998:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:2998:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:2999:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3004:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEtlParser.g:3004:2: ( ruleEclAttributeGroup )
                    // InternalEtlParser.g:3005:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3010:2: ( ruleNestedRefinement )
                    {
                    // InternalEtlParser.g:3010:2: ( ruleNestedRefinement )
                    // InternalEtlParser.g:3011:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEtlParser.g:3020:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3024:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_CONJUNCTION) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_COMMA) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEtlParser.g:3025:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEtlParser.g:3025:2: ( RULE_CONJUNCTION )
                    // InternalEtlParser.g:3026:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3031:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3031:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3032:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEtlParser.g:3041:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3045:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalEtlParser.g:3046:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3046:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3047:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3052:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEtlParser.g:3052:2: ( ruleNestedAttributeSet )
                    // InternalEtlParser.g:3053:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEtlParser.g:3062:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3066:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt21=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==RULE_DIGIT_NONZERO||LA21_1==RULE_ROUND_OPEN||LA21_1==RULE_CARET||LA21_1==RULE_WILDCARD||(LA21_1>=RULE_LT && LA21_1<=RULE_DBL_GT_EM)) ) {
                    alt21=1;
                }
                else if ( ((LA21_1>=False && LA21_1<=True)||LA21_1==RULE_STRING||LA21_1==RULE_HASH) ) {
                    alt21=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA21_2 = input.LA(2);

                if ( ((LA21_2>=False && LA21_2<=True)||LA21_2==RULE_STRING||LA21_2==RULE_HASH) ) {
                    alt21=2;
                }
                else if ( (LA21_2==RULE_DIGIT_NONZERO||LA21_2==RULE_ROUND_OPEN||LA21_2==RULE_CARET||LA21_2==RULE_WILDCARD||(LA21_2>=RULE_LT && LA21_2<=RULE_DBL_GT_EM)) ) {
                    alt21=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LT:
            case RULE_GT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt21=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalEtlParser.g:3067:2: ( ruleAttributeComparison )
                    {
                    // InternalEtlParser.g:3067:2: ( ruleAttributeComparison )
                    // InternalEtlParser.g:3068:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3073:2: ( ruleDataTypeComparison )
                    {
                    // InternalEtlParser.g:3073:2: ( ruleDataTypeComparison )
                    // InternalEtlParser.g:3074:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__AttributeComparison__Alternatives"
    // InternalEtlParser.g:3083:1: rule__AttributeComparison__Alternatives : ( ( ruleAttributeValueEquals ) | ( ruleAttributeValueNotEquals ) );
    public final void rule__AttributeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3087:1: ( ( ruleAttributeValueEquals ) | ( ruleAttributeValueNotEquals ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_EQUAL) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_NOT_EQUAL) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEtlParser.g:3088:2: ( ruleAttributeValueEquals )
                    {
                    // InternalEtlParser.g:3088:2: ( ruleAttributeValueEquals )
                    // InternalEtlParser.g:3089:3: ruleAttributeValueEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeComparisonAccess().getAttributeValueEqualsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeValueEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeComparisonAccess().getAttributeValueEqualsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3094:2: ( ruleAttributeValueNotEquals )
                    {
                    // InternalEtlParser.g:3094:2: ( ruleAttributeValueNotEquals )
                    // InternalEtlParser.g:3095:3: ruleAttributeValueNotEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeComparisonAccess().getAttributeValueNotEqualsParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeValueNotEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeComparisonAccess().getAttributeValueNotEqualsParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEtlParser.g:3104:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueEquals ) | ( ruleBooleanValueNotEquals ) | ( ruleStringValueEquals ) | ( ruleStringValueNotEquals ) | ( ruleIntegerValueEquals ) | ( ruleIntegerValueNotEquals ) | ( ruleIntegerValueGreaterThan ) | ( ruleIntegerValueGreaterThanEquals ) | ( ruleIntegerValueLessThan ) | ( ruleIntegerValueLessThanEquals ) | ( ruleDecimalValueEquals ) | ( ruleDecimalValueNotEquals ) | ( ruleDecimalValueGreaterThan ) | ( ruleDecimalValueGreaterThanEquals ) | ( ruleDecimalValueLessThan ) | ( ruleDecimalValueLessThanEquals ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3108:1: ( ( ruleBooleanValueEquals ) | ( ruleBooleanValueNotEquals ) | ( ruleStringValueEquals ) | ( ruleStringValueNotEquals ) | ( ruleIntegerValueEquals ) | ( ruleIntegerValueNotEquals ) | ( ruleIntegerValueGreaterThan ) | ( ruleIntegerValueGreaterThanEquals ) | ( ruleIntegerValueLessThan ) | ( ruleIntegerValueLessThanEquals ) | ( ruleDecimalValueEquals ) | ( ruleDecimalValueNotEquals ) | ( ruleDecimalValueGreaterThan ) | ( ruleDecimalValueGreaterThanEquals ) | ( ruleDecimalValueLessThan ) | ( ruleDecimalValueLessThanEquals ) )
            int alt23=16;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalEtlParser.g:3109:2: ( ruleBooleanValueEquals )
                    {
                    // InternalEtlParser.g:3109:2: ( ruleBooleanValueEquals )
                    // InternalEtlParser.g:3110:3: ruleBooleanValueEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueEqualsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueEqualsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3115:2: ( ruleBooleanValueNotEquals )
                    {
                    // InternalEtlParser.g:3115:2: ( ruleBooleanValueNotEquals )
                    // InternalEtlParser.g:3116:3: ruleBooleanValueNotEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueNotEqualsParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueNotEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueNotEqualsParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3121:2: ( ruleStringValueEquals )
                    {
                    // InternalEtlParser.g:3121:2: ( ruleStringValueEquals )
                    // InternalEtlParser.g:3122:3: ruleStringValueEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueEqualsParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueEqualsParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3127:2: ( ruleStringValueNotEquals )
                    {
                    // InternalEtlParser.g:3127:2: ( ruleStringValueNotEquals )
                    // InternalEtlParser.g:3128:3: ruleStringValueNotEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueNotEqualsParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueNotEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueNotEqualsParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3133:2: ( ruleIntegerValueEquals )
                    {
                    // InternalEtlParser.g:3133:2: ( ruleIntegerValueEquals )
                    // InternalEtlParser.g:3134:3: ruleIntegerValueEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueEqualsParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueEqualsParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3139:2: ( ruleIntegerValueNotEquals )
                    {
                    // InternalEtlParser.g:3139:2: ( ruleIntegerValueNotEquals )
                    // InternalEtlParser.g:3140:3: ruleIntegerValueNotEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueNotEqualsParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueNotEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueNotEqualsParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3145:2: ( ruleIntegerValueGreaterThan )
                    {
                    // InternalEtlParser.g:3145:2: ( ruleIntegerValueGreaterThan )
                    // InternalEtlParser.g:3146:3: ruleIntegerValueGreaterThan
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueGreaterThanParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueGreaterThan();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueGreaterThanParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3151:2: ( ruleIntegerValueGreaterThanEquals )
                    {
                    // InternalEtlParser.g:3151:2: ( ruleIntegerValueGreaterThanEquals )
                    // InternalEtlParser.g:3152:3: ruleIntegerValueGreaterThanEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueGreaterThanEqualsParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueGreaterThanEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueGreaterThanEqualsParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3157:2: ( ruleIntegerValueLessThan )
                    {
                    // InternalEtlParser.g:3157:2: ( ruleIntegerValueLessThan )
                    // InternalEtlParser.g:3158:3: ruleIntegerValueLessThan
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueLessThanParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueLessThan();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueLessThanParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3163:2: ( ruleIntegerValueLessThanEquals )
                    {
                    // InternalEtlParser.g:3163:2: ( ruleIntegerValueLessThanEquals )
                    // InternalEtlParser.g:3164:3: ruleIntegerValueLessThanEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueLessThanEqualsParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueLessThanEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueLessThanEqualsParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3169:2: ( ruleDecimalValueEquals )
                    {
                    // InternalEtlParser.g:3169:2: ( ruleDecimalValueEquals )
                    // InternalEtlParser.g:3170:3: ruleDecimalValueEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueEqualsParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueEqualsParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3175:2: ( ruleDecimalValueNotEquals )
                    {
                    // InternalEtlParser.g:3175:2: ( ruleDecimalValueNotEquals )
                    // InternalEtlParser.g:3176:3: ruleDecimalValueNotEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueNotEqualsParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueNotEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueNotEqualsParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3181:2: ( ruleDecimalValueGreaterThan )
                    {
                    // InternalEtlParser.g:3181:2: ( ruleDecimalValueGreaterThan )
                    // InternalEtlParser.g:3182:3: ruleDecimalValueGreaterThan
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueGreaterThanParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueGreaterThan();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueGreaterThanParserRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:3187:2: ( ruleDecimalValueGreaterThanEquals )
                    {
                    // InternalEtlParser.g:3187:2: ( ruleDecimalValueGreaterThanEquals )
                    // InternalEtlParser.g:3188:3: ruleDecimalValueGreaterThanEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueGreaterThanEqualsParserRuleCall_13()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueGreaterThanEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueGreaterThanEqualsParserRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:3193:2: ( ruleDecimalValueLessThan )
                    {
                    // InternalEtlParser.g:3193:2: ( ruleDecimalValueLessThan )
                    // InternalEtlParser.g:3194:3: ruleDecimalValueLessThan
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueLessThanParserRuleCall_14()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueLessThan();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueLessThanParserRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:3199:2: ( ruleDecimalValueLessThanEquals )
                    {
                    // InternalEtlParser.g:3199:2: ( ruleDecimalValueLessThanEquals )
                    // InternalEtlParser.g:3200:3: ruleDecimalValueLessThanEquals
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueLessThanEqualsParserRuleCall_15()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueLessThanEquals();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueLessThanEqualsParserRuleCall_15()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_1"
    // InternalEtlParser.g:3209:1: rule__SnomedIdentifier__Alternatives_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3213:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_DIGIT_NONZERO) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_ZERO) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEtlParser.g:3214:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3214:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3215:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3220:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3220:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3221:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_1"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_2"
    // InternalEtlParser.g:3230:1: rule__SnomedIdentifier__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3234:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_DIGIT_NONZERO) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_ZERO) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEtlParser.g:3235:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3235:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3236:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3241:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3241:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3242:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_2"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_3"
    // InternalEtlParser.g:3251:1: rule__SnomedIdentifier__Alternatives_3 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3255:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_DIGIT_NONZERO) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ZERO) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEtlParser.g:3256:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3256:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3257:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3262:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3262:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3263:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_3"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_4"
    // InternalEtlParser.g:3272:1: rule__SnomedIdentifier__Alternatives_4 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3276:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_DIGIT_NONZERO) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_ZERO) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEtlParser.g:3277:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3277:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3278:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3283:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3283:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3284:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_4"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_5"
    // InternalEtlParser.g:3293:1: rule__SnomedIdentifier__Alternatives_5 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3297:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_DIGIT_NONZERO) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ZERO) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEtlParser.g:3298:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3298:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3299:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3304:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3304:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3305:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_5"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEtlParser.g:3314:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3318:1: ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_ZERO) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_DIGIT_NONZERO) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEtlParser.g:3319:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3319:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3320:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3325:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3325:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    // InternalEtlParser.g:3326:3: ( rule__NonNegativeInteger__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3327:3: ( rule__NonNegativeInteger__Group_1__0 )
                    // InternalEtlParser.g:3327:4: rule__NonNegativeInteger__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NonNegativeInteger__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives_1_1"
    // InternalEtlParser.g:3335:1: rule__NonNegativeInteger__Alternatives_1_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3339:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_DIGIT_NONZERO) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ZERO) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEtlParser.g:3340:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3340:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3341:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3346:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3346:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3347:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives_1_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEtlParser.g:3356:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3360:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=RULE_ZERO && LA31_0<=RULE_DIGIT_NONZERO)) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_WILDCARD) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEtlParser.g:3361:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEtlParser.g:3361:2: ( ruleNonNegativeInteger )
                    // InternalEtlParser.g:3362:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3367:2: ( RULE_WILDCARD )
                    {
                    // InternalEtlParser.g:3367:2: ( RULE_WILDCARD )
                    // InternalEtlParser.g:3368:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEtlParser.g:3377:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3381:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_PLUS) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_DASH) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEtlParser.g:3382:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:3382:2: ( RULE_PLUS )
                    // InternalEtlParser.g:3383:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3388:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:3388:2: ( RULE_DASH )
                    // InternalEtlParser.g:3389:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEtlParser.g:3398:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3402:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_PLUS) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_DASH) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEtlParser.g:3403:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:3403:2: ( RULE_PLUS )
                    // InternalEtlParser.g:3404:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3409:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:3409:2: ( RULE_DASH )
                    // InternalEtlParser.g:3410:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEtlParser.g:3419:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3423:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DIGIT_NONZERO) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_ZERO) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEtlParser.g:3424:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:3424:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:3425:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3430:2: ( RULE_ZERO )
                    {
                    // InternalEtlParser.g:3430:2: ( RULE_ZERO )
                    // InternalEtlParser.g:3431:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEtlParser.g:3440:1: rule__Boolean__Alternatives : ( ( True ) | ( False ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3444:1: ( ( True ) | ( False ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==True) ) {
                alt35=1;
            }
            else if ( (LA35_0==False) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEtlParser.g:3445:2: ( True )
                    {
                    // InternalEtlParser.g:3445:2: ( True )
                    // InternalEtlParser.g:3446:3: True
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3451:2: ( False )
                    {
                    // InternalEtlParser.g:3451:2: ( False )
                    // InternalEtlParser.g:3452:3: False
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__ExpressionTemplate__Group__0"
    // InternalEtlParser.g:3461:1: rule__ExpressionTemplate__Group__0 : rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 ;
    public final void rule__ExpressionTemplate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3465:1: ( rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 )
            // InternalEtlParser.g:3466:2: rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__ExpressionTemplate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0"


    // $ANTLR start "rule__ExpressionTemplate__Group__0__Impl"
    // InternalEtlParser.g:3473:1: rule__ExpressionTemplate__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionTemplate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3477:1: ( ( () ) )
            // InternalEtlParser.g:3478:1: ( () )
            {
            // InternalEtlParser.g:3478:1: ( () )
            // InternalEtlParser.g:3479:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }
            // InternalEtlParser.g:3480:2: ()
            // InternalEtlParser.g:3480:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group__1"
    // InternalEtlParser.g:3488:1: rule__ExpressionTemplate__Group__1 : rule__ExpressionTemplate__Group__1__Impl ;
    public final void rule__ExpressionTemplate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3492:1: ( rule__ExpressionTemplate__Group__1__Impl )
            // InternalEtlParser.g:3493:2: rule__ExpressionTemplate__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1"


    // $ANTLR start "rule__ExpressionTemplate__Group__1__Impl"
    // InternalEtlParser.g:3499:1: rule__ExpressionTemplate__Group__1__Impl : ( ( rule__ExpressionTemplate__Group_1__0 )? ) ;
    public final void rule__ExpressionTemplate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3503:1: ( ( ( rule__ExpressionTemplate__Group_1__0 )? ) )
            // InternalEtlParser.g:3504:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            {
            // InternalEtlParser.g:3504:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            // InternalEtlParser.g:3505:2: ( rule__ExpressionTemplate__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:3506:2: ( rule__ExpressionTemplate__Group_1__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_DOUBLE_SQUARE_OPEN||(LA36_0>=RULE_EQUIVALENT_TO && LA36_0<=RULE_SUBTYPE_OF)||LA36_0==RULE_DIGIT_NONZERO) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalEtlParser.g:3506:3: rule__ExpressionTemplate__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0"
    // InternalEtlParser.g:3515:1: rule__ExpressionTemplate__Group_1__0 : rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 ;
    public final void rule__ExpressionTemplate__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3519:1: ( rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 )
            // InternalEtlParser.g:3520:2: rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__ExpressionTemplate__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0__Impl"
    // InternalEtlParser.g:3527:1: rule__ExpressionTemplate__Group_1__0__Impl : ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) ;
    public final void rule__ExpressionTemplate__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3531:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) )
            // InternalEtlParser.g:3532:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            {
            // InternalEtlParser.g:3532:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            // InternalEtlParser.g:3533:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }
            // InternalEtlParser.g:3534:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=RULE_EQUIVALENT_TO && LA37_0<=RULE_SUBTYPE_OF)) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA37_2 = input.LA(2);

                if ( (LA37_2==RULE_PLUS) ) {
                    int LA37_4 = input.LA(3);

                    if ( (LA37_4==RULE_TOK) ) {
                        alt37=1;
                    }
                }
            }
            switch (alt37) {
                case 1 :
                    // InternalEtlParser.g:3534:3: rule__ExpressionTemplate__Alternatives_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1"
    // InternalEtlParser.g:3542:1: rule__ExpressionTemplate__Group_1__1 : rule__ExpressionTemplate__Group_1__1__Impl ;
    public final void rule__ExpressionTemplate__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3546:1: ( rule__ExpressionTemplate__Group_1__1__Impl )
            // InternalEtlParser.g:3547:2: rule__ExpressionTemplate__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1__Impl"
    // InternalEtlParser.g:3553:1: rule__ExpressionTemplate__Group_1__1__Impl : ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) ;
    public final void rule__ExpressionTemplate__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3557:1: ( ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) )
            // InternalEtlParser.g:3558:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            {
            // InternalEtlParser.g:3558:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            // InternalEtlParser.g:3559:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }
            // InternalEtlParser.g:3560:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            // InternalEtlParser.g:3560:3: rule__ExpressionTemplate__ExpressionAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__ExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__0"
    // InternalEtlParser.g:3569:1: rule__SubExpression__Group__0 : rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 ;
    public final void rule__SubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3573:1: ( rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 )
            // InternalEtlParser.g:3574:2: rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0"


    // $ANTLR start "rule__SubExpression__Group__0__Impl"
    // InternalEtlParser.g:3581:1: rule__SubExpression__Group__0__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) ;
    public final void rule__SubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3585:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) )
            // InternalEtlParser.g:3586:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            {
            // InternalEtlParser.g:3586:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            // InternalEtlParser.g:3587:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }
            // InternalEtlParser.g:3588:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            // InternalEtlParser.g:3588:3: rule__SubExpression__FocusConceptsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0__Impl"


    // $ANTLR start "rule__SubExpression__Group__1"
    // InternalEtlParser.g:3596:1: rule__SubExpression__Group__1 : rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 ;
    public final void rule__SubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3600:1: ( rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 )
            // InternalEtlParser.g:3601:2: rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1"


    // $ANTLR start "rule__SubExpression__Group__1__Impl"
    // InternalEtlParser.g:3608:1: rule__SubExpression__Group__1__Impl : ( ( rule__SubExpression__Group_1__0 )* ) ;
    public final void rule__SubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3612:1: ( ( ( rule__SubExpression__Group_1__0 )* ) )
            // InternalEtlParser.g:3613:1: ( ( rule__SubExpression__Group_1__0 )* )
            {
            // InternalEtlParser.g:3613:1: ( ( rule__SubExpression__Group_1__0 )* )
            // InternalEtlParser.g:3614:2: ( rule__SubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:3615:2: ( rule__SubExpression__Group_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_PLUS) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalEtlParser.g:3615:3: rule__SubExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    rule__SubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__2"
    // InternalEtlParser.g:3623:1: rule__SubExpression__Group__2 : rule__SubExpression__Group__2__Impl ;
    public final void rule__SubExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3627:1: ( rule__SubExpression__Group__2__Impl )
            // InternalEtlParser.g:3628:2: rule__SubExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2"


    // $ANTLR start "rule__SubExpression__Group__2__Impl"
    // InternalEtlParser.g:3634:1: rule__SubExpression__Group__2__Impl : ( ( rule__SubExpression__Group_2__0 )? ) ;
    public final void rule__SubExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3638:1: ( ( ( rule__SubExpression__Group_2__0 )? ) )
            // InternalEtlParser.g:3639:1: ( ( rule__SubExpression__Group_2__0 )? )
            {
            // InternalEtlParser.g:3639:1: ( ( rule__SubExpression__Group_2__0 )? )
            // InternalEtlParser.g:3640:2: ( rule__SubExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }
            // InternalEtlParser.g:3641:2: ( rule__SubExpression__Group_2__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_COLON) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalEtlParser.g:3641:3: rule__SubExpression__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__0"
    // InternalEtlParser.g:3650:1: rule__SubExpression__Group_1__0 : rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 ;
    public final void rule__SubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3654:1: ( rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 )
            // InternalEtlParser.g:3655:2: rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__SubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0"


    // $ANTLR start "rule__SubExpression__Group_1__0__Impl"
    // InternalEtlParser.g:3662:1: rule__SubExpression__Group_1__0__Impl : ( RULE_PLUS ) ;
    public final void rule__SubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3666:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:3667:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:3667:1: ( RULE_PLUS )
            // InternalEtlParser.g:3668:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__1"
    // InternalEtlParser.g:3677:1: rule__SubExpression__Group_1__1 : rule__SubExpression__Group_1__1__Impl ;
    public final void rule__SubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3681:1: ( rule__SubExpression__Group_1__1__Impl )
            // InternalEtlParser.g:3682:2: rule__SubExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1"


    // $ANTLR start "rule__SubExpression__Group_1__1__Impl"
    // InternalEtlParser.g:3688:1: rule__SubExpression__Group_1__1__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) ;
    public final void rule__SubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3692:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) )
            // InternalEtlParser.g:3693:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:3693:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            // InternalEtlParser.g:3694:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }
            // InternalEtlParser.g:3695:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            // InternalEtlParser.g:3695:3: rule__SubExpression__FocusConceptsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__0"
    // InternalEtlParser.g:3704:1: rule__SubExpression__Group_2__0 : rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 ;
    public final void rule__SubExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3708:1: ( rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 )
            // InternalEtlParser.g:3709:2: rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0"


    // $ANTLR start "rule__SubExpression__Group_2__0__Impl"
    // InternalEtlParser.g:3716:1: rule__SubExpression__Group_2__0__Impl : ( RULE_COLON ) ;
    public final void rule__SubExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3720:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:3721:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:3721:1: ( RULE_COLON )
            // InternalEtlParser.g:3722:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__1"
    // InternalEtlParser.g:3731:1: rule__SubExpression__Group_2__1 : rule__SubExpression__Group_2__1__Impl ;
    public final void rule__SubExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3735:1: ( rule__SubExpression__Group_2__1__Impl )
            // InternalEtlParser.g:3736:2: rule__SubExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1"


    // $ANTLR start "rule__SubExpression__Group_2__1__Impl"
    // InternalEtlParser.g:3742:1: rule__SubExpression__Group_2__1__Impl : ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) ;
    public final void rule__SubExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3746:1: ( ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) )
            // InternalEtlParser.g:3747:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            {
            // InternalEtlParser.g:3747:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            // InternalEtlParser.g:3748:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }
            // InternalEtlParser.g:3749:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            // InternalEtlParser.g:3749:3: rule__SubExpression__RefinementAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__RefinementAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1__Impl"


    // $ANTLR start "rule__FocusConcept__Group__0"
    // InternalEtlParser.g:3758:1: rule__FocusConcept__Group__0 : rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 ;
    public final void rule__FocusConcept__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3762:1: ( rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 )
            // InternalEtlParser.g:3763:2: rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__FocusConcept__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0"


    // $ANTLR start "rule__FocusConcept__Group__0__Impl"
    // InternalEtlParser.g:3770:1: rule__FocusConcept__Group__0__Impl : ( ( rule__FocusConcept__SlotAssignment_0 )? ) ;
    public final void rule__FocusConcept__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3774:1: ( ( ( rule__FocusConcept__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:3775:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:3775:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            // InternalEtlParser.g:3776:2: ( rule__FocusConcept__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:3777:2: ( rule__FocusConcept__SlotAssignment_0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA40_1 = input.LA(2);

                if ( ((LA40_1>=RULE_DOUBLE_SQUARE_CLOSE && LA40_1<=RULE_TILDE)||LA40_1==RULE_SLOTNAME_STRING||(LA40_1>=RULE_ZERO && LA40_1<=RULE_DIGIT_NONZERO)) ) {
                    alt40=1;
                }
            }
            switch (alt40) {
                case 1 :
                    // InternalEtlParser.g:3777:3: rule__FocusConcept__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FocusConcept__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0__Impl"


    // $ANTLR start "rule__FocusConcept__Group__1"
    // InternalEtlParser.g:3785:1: rule__FocusConcept__Group__1 : rule__FocusConcept__Group__1__Impl ;
    public final void rule__FocusConcept__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3789:1: ( rule__FocusConcept__Group__1__Impl )
            // InternalEtlParser.g:3790:2: rule__FocusConcept__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1"


    // $ANTLR start "rule__FocusConcept__Group__1__Impl"
    // InternalEtlParser.g:3796:1: rule__FocusConcept__Group__1__Impl : ( ( rule__FocusConcept__ConceptAssignment_1 ) ) ;
    public final void rule__FocusConcept__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3800:1: ( ( ( rule__FocusConcept__ConceptAssignment_1 ) ) )
            // InternalEtlParser.g:3801:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            {
            // InternalEtlParser.g:3801:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            // InternalEtlParser.g:3802:2: ( rule__FocusConcept__ConceptAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }
            // InternalEtlParser.g:3803:2: ( rule__FocusConcept__ConceptAssignment_1 )
            // InternalEtlParser.g:3803:3: rule__FocusConcept__ConceptAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__ConceptAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group__0"
    // InternalEtlParser.g:3812:1: rule__Refinement__Group__0 : rule__Refinement__Group__0__Impl rule__Refinement__Group__1 ;
    public final void rule__Refinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3816:1: ( rule__Refinement__Group__0__Impl rule__Refinement__Group__1 )
            // InternalEtlParser.g:3817:2: rule__Refinement__Group__0__Impl rule__Refinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__Refinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0"


    // $ANTLR start "rule__Refinement__Group__0__Impl"
    // InternalEtlParser.g:3824:1: rule__Refinement__Group__0__Impl : ( ( rule__Refinement__Alternatives_0 ) ) ;
    public final void rule__Refinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3828:1: ( ( ( rule__Refinement__Alternatives_0 ) ) )
            // InternalEtlParser.g:3829:1: ( ( rule__Refinement__Alternatives_0 ) )
            {
            // InternalEtlParser.g:3829:1: ( ( rule__Refinement__Alternatives_0 ) )
            // InternalEtlParser.g:3830:2: ( rule__Refinement__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:3831:2: ( rule__Refinement__Alternatives_0 )
            // InternalEtlParser.g:3831:3: rule__Refinement__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0__Impl"


    // $ANTLR start "rule__Refinement__Group__1"
    // InternalEtlParser.g:3839:1: rule__Refinement__Group__1 : rule__Refinement__Group__1__Impl ;
    public final void rule__Refinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3843:1: ( rule__Refinement__Group__1__Impl )
            // InternalEtlParser.g:3844:2: rule__Refinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1"


    // $ANTLR start "rule__Refinement__Group__1__Impl"
    // InternalEtlParser.g:3850:1: rule__Refinement__Group__1__Impl : ( ( rule__Refinement__Group_1__0 )* ) ;
    public final void rule__Refinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3854:1: ( ( ( rule__Refinement__Group_1__0 )* ) )
            // InternalEtlParser.g:3855:1: ( ( rule__Refinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:3855:1: ( ( rule__Refinement__Group_1__0 )* )
            // InternalEtlParser.g:3856:2: ( rule__Refinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:3857:2: ( rule__Refinement__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_DOUBLE_SQUARE_OPEN||LA41_0==RULE_COMMA||LA41_0==RULE_CURLY_OPEN) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalEtlParser.g:3857:3: rule__Refinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__Refinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__0"
    // InternalEtlParser.g:3866:1: rule__Refinement__Group_0_0__0 : rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 ;
    public final void rule__Refinement__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3870:1: ( rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 )
            // InternalEtlParser.g:3871:2: rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0"


    // $ANTLR start "rule__Refinement__Group_0_0__0__Impl"
    // InternalEtlParser.g:3878:1: rule__Refinement__Group_0_0__0__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) ;
    public final void rule__Refinement__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3882:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:3883:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:3883:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            // InternalEtlParser.g:3884:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:3885:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            // InternalEtlParser.g:3885:3: rule__Refinement__AttributesAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__1"
    // InternalEtlParser.g:3893:1: rule__Refinement__Group_0_0__1 : rule__Refinement__Group_0_0__1__Impl ;
    public final void rule__Refinement__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3897:1: ( rule__Refinement__Group_0_0__1__Impl )
            // InternalEtlParser.g:3898:2: rule__Refinement__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1"


    // $ANTLR start "rule__Refinement__Group_0_0__1__Impl"
    // InternalEtlParser.g:3904:1: rule__Refinement__Group_0_0__1__Impl : ( ( rule__Refinement__Group_0_0_1__0 )* ) ;
    public final void rule__Refinement__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3908:1: ( ( ( rule__Refinement__Group_0_0_1__0 )* ) )
            // InternalEtlParser.g:3909:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            {
            // InternalEtlParser.g:3909:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            // InternalEtlParser.g:3910:2: ( rule__Refinement__Group_0_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }
            // InternalEtlParser.g:3911:2: ( rule__Refinement__Group_0_0_1__0 )*
            loop42:
            do {
                int alt42=2;
                alt42 = dfa42.predict(input);
                switch (alt42) {
            	case 1 :
            	    // InternalEtlParser.g:3911:3: rule__Refinement__Group_0_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__Refinement__Group_0_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0"
    // InternalEtlParser.g:3920:1: rule__Refinement__Group_0_0_1__0 : rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 ;
    public final void rule__Refinement__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3924:1: ( rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 )
            // InternalEtlParser.g:3925:2: rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__Refinement__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0__Impl"
    // InternalEtlParser.g:3932:1: rule__Refinement__Group_0_0_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__Refinement__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3936:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:3937:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:3937:1: ( RULE_COMMA )
            // InternalEtlParser.g:3938:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1"
    // InternalEtlParser.g:3947:1: rule__Refinement__Group_0_0_1__1 : rule__Refinement__Group_0_0_1__1__Impl ;
    public final void rule__Refinement__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3951:1: ( rule__Refinement__Group_0_0_1__1__Impl )
            // InternalEtlParser.g:3952:2: rule__Refinement__Group_0_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1__Impl"
    // InternalEtlParser.g:3958:1: rule__Refinement__Group_0_0_1__1__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) ;
    public final void rule__Refinement__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3962:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) )
            // InternalEtlParser.g:3963:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            {
            // InternalEtlParser.g:3963:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            // InternalEtlParser.g:3964:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }
            // InternalEtlParser.g:3965:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            // InternalEtlParser.g:3965:3: rule__Refinement__AttributesAssignment_0_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__Refinement__Group_1__0"
    // InternalEtlParser.g:3974:1: rule__Refinement__Group_1__0 : rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 ;
    public final void rule__Refinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3978:1: ( rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 )
            // InternalEtlParser.g:3979:2: rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__Refinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0"


    // $ANTLR start "rule__Refinement__Group_1__0__Impl"
    // InternalEtlParser.g:3986:1: rule__Refinement__Group_1__0__Impl : ( ( RULE_COMMA )? ) ;
    public final void rule__Refinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3990:1: ( ( ( RULE_COMMA )? ) )
            // InternalEtlParser.g:3991:1: ( ( RULE_COMMA )? )
            {
            // InternalEtlParser.g:3991:1: ( ( RULE_COMMA )? )
            // InternalEtlParser.g:3992:2: ( RULE_COMMA )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }
            // InternalEtlParser.g:3993:2: ( RULE_COMMA )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_COMMA) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalEtlParser.g:3993:3: RULE_COMMA
                    {
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_1__1"
    // InternalEtlParser.g:4001:1: rule__Refinement__Group_1__1 : rule__Refinement__Group_1__1__Impl ;
    public final void rule__Refinement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4005:1: ( rule__Refinement__Group_1__1__Impl )
            // InternalEtlParser.g:4006:2: rule__Refinement__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1"


    // $ANTLR start "rule__Refinement__Group_1__1__Impl"
    // InternalEtlParser.g:4012:1: rule__Refinement__Group_1__1__Impl : ( ( rule__Refinement__GroupsAssignment_1_1 ) ) ;
    public final void rule__Refinement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4016:1: ( ( ( rule__Refinement__GroupsAssignment_1_1 ) ) )
            // InternalEtlParser.g:4017:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:4017:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            // InternalEtlParser.g:4018:2: ( rule__Refinement__GroupsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }
            // InternalEtlParser.g:4019:2: ( rule__Refinement__GroupsAssignment_1_1 )
            // InternalEtlParser.g:4019:3: rule__Refinement__GroupsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__GroupsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__0"
    // InternalEtlParser.g:4028:1: rule__AttributeGroup__Group__0 : rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 ;
    public final void rule__AttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4032:1: ( rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 )
            // InternalEtlParser.g:4033:2: rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__AttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0"


    // $ANTLR start "rule__AttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:4040:1: rule__AttributeGroup__Group__0__Impl : ( ( rule__AttributeGroup__SlotAssignment_0 )? ) ;
    public final void rule__AttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4044:1: ( ( ( rule__AttributeGroup__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:4045:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:4045:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            // InternalEtlParser.g:4046:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:4047:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalEtlParser.g:4047:3: rule__AttributeGroup__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeGroup__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__1"
    // InternalEtlParser.g:4055:1: rule__AttributeGroup__Group__1 : rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 ;
    public final void rule__AttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4059:1: ( rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 )
            // InternalEtlParser.g:4060:2: rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__AttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1"


    // $ANTLR start "rule__AttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:4067:1: rule__AttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__AttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4071:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:4072:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:4072:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:4073:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__2"
    // InternalEtlParser.g:4082:1: rule__AttributeGroup__Group__2 : rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 ;
    public final void rule__AttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4086:1: ( rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 )
            // InternalEtlParser.g:4087:2: rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__AttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2"


    // $ANTLR start "rule__AttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:4094:1: rule__AttributeGroup__Group__2__Impl : ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) ;
    public final void rule__AttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4098:1: ( ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) )
            // InternalEtlParser.g:4099:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            {
            // InternalEtlParser.g:4099:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            // InternalEtlParser.g:4100:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }
            // InternalEtlParser.g:4101:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            // InternalEtlParser.g:4101:3: rule__AttributeGroup__AttributesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__3"
    // InternalEtlParser.g:4109:1: rule__AttributeGroup__Group__3 : rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 ;
    public final void rule__AttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4113:1: ( rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 )
            // InternalEtlParser.g:4114:2: rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__AttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3"


    // $ANTLR start "rule__AttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:4121:1: rule__AttributeGroup__Group__3__Impl : ( ( rule__AttributeGroup__Group_3__0 )* ) ;
    public final void rule__AttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4125:1: ( ( ( rule__AttributeGroup__Group_3__0 )* ) )
            // InternalEtlParser.g:4126:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            {
            // InternalEtlParser.g:4126:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            // InternalEtlParser.g:4127:2: ( rule__AttributeGroup__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }
            // InternalEtlParser.g:4128:2: ( rule__AttributeGroup__Group_3__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_COMMA) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalEtlParser.g:4128:3: rule__AttributeGroup__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__AttributeGroup__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__4"
    // InternalEtlParser.g:4136:1: rule__AttributeGroup__Group__4 : rule__AttributeGroup__Group__4__Impl ;
    public final void rule__AttributeGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4140:1: ( rule__AttributeGroup__Group__4__Impl )
            // InternalEtlParser.g:4141:2: rule__AttributeGroup__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4"


    // $ANTLR start "rule__AttributeGroup__Group__4__Impl"
    // InternalEtlParser.g:4147:1: rule__AttributeGroup__Group__4__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__AttributeGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4151:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:4152:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:4152:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:4153:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__0"
    // InternalEtlParser.g:4163:1: rule__AttributeGroup__Group_3__0 : rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 ;
    public final void rule__AttributeGroup__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4167:1: ( rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 )
            // InternalEtlParser.g:4168:2: rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__AttributeGroup__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0"


    // $ANTLR start "rule__AttributeGroup__Group_3__0__Impl"
    // InternalEtlParser.g:4175:1: rule__AttributeGroup__Group_3__0__Impl : ( RULE_COMMA ) ;
    public final void rule__AttributeGroup__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4179:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:4180:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:4180:1: ( RULE_COMMA )
            // InternalEtlParser.g:4181:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__1"
    // InternalEtlParser.g:4190:1: rule__AttributeGroup__Group_3__1 : rule__AttributeGroup__Group_3__1__Impl ;
    public final void rule__AttributeGroup__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4194:1: ( rule__AttributeGroup__Group_3__1__Impl )
            // InternalEtlParser.g:4195:2: rule__AttributeGroup__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1"


    // $ANTLR start "rule__AttributeGroup__Group_3__1__Impl"
    // InternalEtlParser.g:4201:1: rule__AttributeGroup__Group_3__1__Impl : ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) ;
    public final void rule__AttributeGroup__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4205:1: ( ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) )
            // InternalEtlParser.g:4206:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            {
            // InternalEtlParser.g:4206:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            // InternalEtlParser.g:4207:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }
            // InternalEtlParser.g:4208:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            // InternalEtlParser.g:4208:3: rule__AttributeGroup__AttributesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1__Impl"


    // $ANTLR start "rule__Attribute__Group__0"
    // InternalEtlParser.g:4217:1: rule__Attribute__Group__0 : rule__Attribute__Group__0__Impl rule__Attribute__Group__1 ;
    public final void rule__Attribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4221:1: ( rule__Attribute__Group__0__Impl rule__Attribute__Group__1 )
            // InternalEtlParser.g:4222:2: rule__Attribute__Group__0__Impl rule__Attribute__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__Attribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0"


    // $ANTLR start "rule__Attribute__Group__0__Impl"
    // InternalEtlParser.g:4229:1: rule__Attribute__Group__0__Impl : ( ( rule__Attribute__SlotAssignment_0 )? ) ;
    public final void rule__Attribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4233:1: ( ( ( rule__Attribute__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:4234:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:4234:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            // InternalEtlParser.g:4235:2: ( rule__Attribute__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:4236:2: ( rule__Attribute__SlotAssignment_0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA46_1 = input.LA(2);

                if ( ((LA46_1>=RULE_DOUBLE_SQUARE_CLOSE && LA46_1<=RULE_TILDE)||LA46_1==RULE_SLOTNAME_STRING||(LA46_1>=RULE_ZERO && LA46_1<=RULE_DIGIT_NONZERO)) ) {
                    alt46=1;
                }
            }
            switch (alt46) {
                case 1 :
                    // InternalEtlParser.g:4236:3: rule__Attribute__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Attribute__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0__Impl"


    // $ANTLR start "rule__Attribute__Group__1"
    // InternalEtlParser.g:4244:1: rule__Attribute__Group__1 : rule__Attribute__Group__1__Impl rule__Attribute__Group__2 ;
    public final void rule__Attribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4248:1: ( rule__Attribute__Group__1__Impl rule__Attribute__Group__2 )
            // InternalEtlParser.g:4249:2: rule__Attribute__Group__1__Impl rule__Attribute__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Attribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1"


    // $ANTLR start "rule__Attribute__Group__1__Impl"
    // InternalEtlParser.g:4256:1: rule__Attribute__Group__1__Impl : ( ( rule__Attribute__NameAssignment_1 ) ) ;
    public final void rule__Attribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4260:1: ( ( ( rule__Attribute__NameAssignment_1 ) ) )
            // InternalEtlParser.g:4261:1: ( ( rule__Attribute__NameAssignment_1 ) )
            {
            // InternalEtlParser.g:4261:1: ( ( rule__Attribute__NameAssignment_1 ) )
            // InternalEtlParser.g:4262:2: ( rule__Attribute__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }
            // InternalEtlParser.g:4263:2: ( rule__Attribute__NameAssignment_1 )
            // InternalEtlParser.g:4263:3: rule__Attribute__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1__Impl"


    // $ANTLR start "rule__Attribute__Group__2"
    // InternalEtlParser.g:4271:1: rule__Attribute__Group__2 : rule__Attribute__Group__2__Impl rule__Attribute__Group__3 ;
    public final void rule__Attribute__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4275:1: ( rule__Attribute__Group__2__Impl rule__Attribute__Group__3 )
            // InternalEtlParser.g:4276:2: rule__Attribute__Group__2__Impl rule__Attribute__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Attribute__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2"


    // $ANTLR start "rule__Attribute__Group__2__Impl"
    // InternalEtlParser.g:4283:1: rule__Attribute__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__Attribute__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4287:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:4288:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:4288:1: ( RULE_EQUAL )
            // InternalEtlParser.g:4289:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2__Impl"


    // $ANTLR start "rule__Attribute__Group__3"
    // InternalEtlParser.g:4298:1: rule__Attribute__Group__3 : rule__Attribute__Group__3__Impl ;
    public final void rule__Attribute__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4302:1: ( rule__Attribute__Group__3__Impl )
            // InternalEtlParser.g:4303:2: rule__Attribute__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3"


    // $ANTLR start "rule__Attribute__Group__3__Impl"
    // InternalEtlParser.g:4309:1: rule__Attribute__Group__3__Impl : ( ( rule__Attribute__ValueAssignment_3 ) ) ;
    public final void rule__Attribute__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4313:1: ( ( ( rule__Attribute__ValueAssignment_3 ) ) )
            // InternalEtlParser.g:4314:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            {
            // InternalEtlParser.g:4314:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            // InternalEtlParser.g:4315:2: ( rule__Attribute__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }
            // InternalEtlParser.g:4316:2: ( rule__Attribute__ValueAssignment_3 )
            // InternalEtlParser.g:4316:3: rule__Attribute__ValueAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__0"
    // InternalEtlParser.g:4325:1: rule__AttributeValue__Group_1__0 : rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 ;
    public final void rule__AttributeValue__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4329:1: ( rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 )
            // InternalEtlParser.g:4330:2: rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__AttributeValue__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0"


    // $ANTLR start "rule__AttributeValue__Group_1__0__Impl"
    // InternalEtlParser.g:4337:1: rule__AttributeValue__Group_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AttributeValue__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4341:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:4342:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:4342:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:4343:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__1"
    // InternalEtlParser.g:4352:1: rule__AttributeValue__Group_1__1 : rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 ;
    public final void rule__AttributeValue__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4356:1: ( rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 )
            // InternalEtlParser.g:4357:2: rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AttributeValue__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1"


    // $ANTLR start "rule__AttributeValue__Group_1__1__Impl"
    // InternalEtlParser.g:4364:1: rule__AttributeValue__Group_1__1__Impl : ( ruleSubExpression ) ;
    public final void rule__AttributeValue__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4368:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:4369:1: ( ruleSubExpression )
            {
            // InternalEtlParser.g:4369:1: ( ruleSubExpression )
            // InternalEtlParser.g:4370:2: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__2"
    // InternalEtlParser.g:4379:1: rule__AttributeValue__Group_1__2 : rule__AttributeValue__Group_1__2__Impl ;
    public final void rule__AttributeValue__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4383:1: ( rule__AttributeValue__Group_1__2__Impl )
            // InternalEtlParser.g:4384:2: rule__AttributeValue__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2"


    // $ANTLR start "rule__AttributeValue__Group_1__2__Impl"
    // InternalEtlParser.g:4390:1: rule__AttributeValue__Group_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AttributeValue__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4394:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:4395:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:4395:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:4396:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0"
    // InternalEtlParser.g:4406:1: rule__ConceptIdReplacementSlot__Group__0 : rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 ;
    public final void rule__ConceptIdReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4410:1: ( rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 )
            // InternalEtlParser.g:4411:2: rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ConceptIdReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:4418:1: rule__ConceptIdReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ConceptIdReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4422:1: ( ( () ) )
            // InternalEtlParser.g:4423:1: ( () )
            {
            // InternalEtlParser.g:4423:1: ( () )
            // InternalEtlParser.g:4424:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:4425:2: ()
            // InternalEtlParser.g:4425:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1"
    // InternalEtlParser.g:4433:1: rule__ConceptIdReplacementSlot__Group__1 : rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 ;
    public final void rule__ConceptIdReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4437:1: ( rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 )
            // InternalEtlParser.g:4438:2: rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ConceptIdReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:4445:1: rule__ConceptIdReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4449:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:4450:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:4450:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:4451:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2"
    // InternalEtlParser.g:4460:1: rule__ConceptIdReplacementSlot__Group__2 : rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 ;
    public final void rule__ConceptIdReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4464:1: ( rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 )
            // InternalEtlParser.g:4465:2: rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ConceptIdReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:4472:1: rule__ConceptIdReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ConceptIdReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4476:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:4477:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:4477:1: ( RULE_PLUS )
            // InternalEtlParser.g:4478:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3"
    // InternalEtlParser.g:4487:1: rule__ConceptIdReplacementSlot__Group__3 : rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 ;
    public final void rule__ConceptIdReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4491:1: ( rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 )
            // InternalEtlParser.g:4492:2: rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:4499:1: rule__ConceptIdReplacementSlot__Group__3__Impl : ( RULE_ID ) ;
    public final void rule__ConceptIdReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4503:1: ( ( RULE_ID ) )
            // InternalEtlParser.g:4504:1: ( RULE_ID )
            {
            // InternalEtlParser.g:4504:1: ( RULE_ID )
            // InternalEtlParser.g:4505:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4"
    // InternalEtlParser.g:4514:1: rule__ConceptIdReplacementSlot__Group__4 : rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 ;
    public final void rule__ConceptIdReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4518:1: ( rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 )
            // InternalEtlParser.g:4519:2: rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:4526:1: rule__ConceptIdReplacementSlot__Group__4__Impl : ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4530:1: ( ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:4531:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:4531:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:4532:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:4533:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ROUND_OPEN) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalEtlParser.g:4533:3: rule__ConceptIdReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5"
    // InternalEtlParser.g:4541:1: rule__ConceptIdReplacementSlot__Group__5 : rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 ;
    public final void rule__ConceptIdReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4545:1: ( rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 )
            // InternalEtlParser.g:4546:2: rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:4553:1: rule__ConceptIdReplacementSlot__Group__5__Impl : ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4557:1: ( ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:4558:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:4558:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:4559:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:4560:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_SLOTNAME_STRING) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalEtlParser.g:4560:3: rule__ConceptIdReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6"
    // InternalEtlParser.g:4568:1: rule__ConceptIdReplacementSlot__Group__6 : rule__ConceptIdReplacementSlot__Group__6__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4572:1: ( rule__ConceptIdReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:4573:2: rule__ConceptIdReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:4579:1: rule__ConceptIdReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4583:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:4584:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:4584:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:4585:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0"
    // InternalEtlParser.g:4595:1: rule__ConceptIdReplacementSlot__Group_4__0 : rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4599:1: ( rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:4600:2: rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ConceptIdReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:4607:1: rule__ConceptIdReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4611:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:4612:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:4612:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:4613:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1"
    // InternalEtlParser.g:4622:1: rule__ConceptIdReplacementSlot__Group_4__1 : rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4626:1: ( rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:4627:2: rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ConceptIdReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:4634:1: rule__ConceptIdReplacementSlot__Group_4__1__Impl : ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4638:1: ( ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:4639:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:4639:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:4640:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:4641:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:4641:3: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2"
    // InternalEtlParser.g:4649:1: rule__ConceptIdReplacementSlot__Group_4__2 : rule__ConceptIdReplacementSlot__Group_4__2__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4653:1: ( rule__ConceptIdReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:4654:2: rule__ConceptIdReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:4660:1: rule__ConceptIdReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4664:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:4665:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:4665:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:4666:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0"
    // InternalEtlParser.g:4676:1: rule__ExpressionReplacementSlot__Group__0 : rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 ;
    public final void rule__ExpressionReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4680:1: ( rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 )
            // InternalEtlParser.g:4681:2: rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ExpressionReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:4688:1: rule__ExpressionReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4692:1: ( ( () ) )
            // InternalEtlParser.g:4693:1: ( () )
            {
            // InternalEtlParser.g:4693:1: ( () )
            // InternalEtlParser.g:4694:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:4695:2: ()
            // InternalEtlParser.g:4695:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1"
    // InternalEtlParser.g:4703:1: rule__ExpressionReplacementSlot__Group__1 : rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 ;
    public final void rule__ExpressionReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4707:1: ( rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 )
            // InternalEtlParser.g:4708:2: rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ExpressionReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:4715:1: rule__ExpressionReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4719:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:4720:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:4720:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:4721:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2"
    // InternalEtlParser.g:4730:1: rule__ExpressionReplacementSlot__Group__2 : rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 ;
    public final void rule__ExpressionReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4734:1: ( rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 )
            // InternalEtlParser.g:4735:2: rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ExpressionReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:4742:1: rule__ExpressionReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ExpressionReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4746:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:4747:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:4747:1: ( RULE_PLUS )
            // InternalEtlParser.g:4748:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3"
    // InternalEtlParser.g:4757:1: rule__ExpressionReplacementSlot__Group__3 : rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 ;
    public final void rule__ExpressionReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4761:1: ( rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 )
            // InternalEtlParser.g:4762:2: rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ExpressionReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:4769:1: rule__ExpressionReplacementSlot__Group__3__Impl : ( ( RULE_SCG )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4773:1: ( ( ( RULE_SCG )? ) )
            // InternalEtlParser.g:4774:1: ( ( RULE_SCG )? )
            {
            // InternalEtlParser.g:4774:1: ( ( RULE_SCG )? )
            // InternalEtlParser.g:4775:2: ( RULE_SCG )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }
            // InternalEtlParser.g:4776:2: ( RULE_SCG )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_SCG) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalEtlParser.g:4776:3: RULE_SCG
                    {
                    match(input,RULE_SCG,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4"
    // InternalEtlParser.g:4784:1: rule__ExpressionReplacementSlot__Group__4 : rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 ;
    public final void rule__ExpressionReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4788:1: ( rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 )
            // InternalEtlParser.g:4789:2: rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ExpressionReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:4796:1: rule__ExpressionReplacementSlot__Group__4__Impl : ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4800:1: ( ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:4801:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:4801:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:4802:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:4803:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ROUND_OPEN) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalEtlParser.g:4803:3: rule__ExpressionReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5"
    // InternalEtlParser.g:4811:1: rule__ExpressionReplacementSlot__Group__5 : rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 ;
    public final void rule__ExpressionReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4815:1: ( rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 )
            // InternalEtlParser.g:4816:2: rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ExpressionReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:4823:1: rule__ExpressionReplacementSlot__Group__5__Impl : ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4827:1: ( ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:4828:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:4828:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:4829:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:4830:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_SLOTNAME_STRING) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalEtlParser.g:4830:3: rule__ExpressionReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6"
    // InternalEtlParser.g:4838:1: rule__ExpressionReplacementSlot__Group__6 : rule__ExpressionReplacementSlot__Group__6__Impl ;
    public final void rule__ExpressionReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4842:1: ( rule__ExpressionReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:4843:2: rule__ExpressionReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:4849:1: rule__ExpressionReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4853:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:4854:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:4854:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:4855:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0"
    // InternalEtlParser.g:4865:1: rule__ExpressionReplacementSlot__Group_4__0 : rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 ;
    public final void rule__ExpressionReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4869:1: ( rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:4870:2: rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ExpressionReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:4877:1: rule__ExpressionReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4881:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:4882:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:4882:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:4883:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1"
    // InternalEtlParser.g:4892:1: rule__ExpressionReplacementSlot__Group_4__1 : rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 ;
    public final void rule__ExpressionReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4896:1: ( rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:4897:2: rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ExpressionReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:4904:1: rule__ExpressionReplacementSlot__Group_4__1__Impl : ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4908:1: ( ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:4909:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:4909:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:4910:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:4911:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:4911:3: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2"
    // InternalEtlParser.g:4919:1: rule__ExpressionReplacementSlot__Group_4__2 : rule__ExpressionReplacementSlot__Group_4__2__Impl ;
    public final void rule__ExpressionReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4923:1: ( rule__ExpressionReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:4924:2: rule__ExpressionReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:4930:1: rule__ExpressionReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4934:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:4935:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:4935:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:4936:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0"
    // InternalEtlParser.g:4946:1: rule__TokenReplacementSlot__Group__0 : rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 ;
    public final void rule__TokenReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4950:1: ( rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 )
            // InternalEtlParser.g:4951:2: rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__TokenReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:4958:1: rule__TokenReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__TokenReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4962:1: ( ( () ) )
            // InternalEtlParser.g:4963:1: ( () )
            {
            // InternalEtlParser.g:4963:1: ( () )
            // InternalEtlParser.g:4964:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:4965:2: ()
            // InternalEtlParser.g:4965:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1"
    // InternalEtlParser.g:4973:1: rule__TokenReplacementSlot__Group__1 : rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 ;
    public final void rule__TokenReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4977:1: ( rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 )
            // InternalEtlParser.g:4978:2: rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TokenReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:4985:1: rule__TokenReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4989:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:4990:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:4990:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:4991:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2"
    // InternalEtlParser.g:5000:1: rule__TokenReplacementSlot__Group__2 : rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 ;
    public final void rule__TokenReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5004:1: ( rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 )
            // InternalEtlParser.g:5005:2: rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__TokenReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5012:1: rule__TokenReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__TokenReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5016:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5017:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5017:1: ( RULE_PLUS )
            // InternalEtlParser.g:5018:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3"
    // InternalEtlParser.g:5027:1: rule__TokenReplacementSlot__Group__3 : rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 ;
    public final void rule__TokenReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5031:1: ( rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 )
            // InternalEtlParser.g:5032:2: rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5039:1: rule__TokenReplacementSlot__Group__3__Impl : ( RULE_TOK ) ;
    public final void rule__TokenReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5043:1: ( ( RULE_TOK ) )
            // InternalEtlParser.g:5044:1: ( RULE_TOK )
            {
            // InternalEtlParser.g:5044:1: ( RULE_TOK )
            // InternalEtlParser.g:5045:2: RULE_TOK
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }
            match(input,RULE_TOK,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4"
    // InternalEtlParser.g:5054:1: rule__TokenReplacementSlot__Group__4 : rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 ;
    public final void rule__TokenReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5058:1: ( rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 )
            // InternalEtlParser.g:5059:2: rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5066:1: rule__TokenReplacementSlot__Group__4__Impl : ( ( rule__TokenReplacementSlot__Group_4__0 )? ) ;
    public final void rule__TokenReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5070:1: ( ( ( rule__TokenReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5071:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5071:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5072:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5073:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ROUND_OPEN) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEtlParser.g:5073:3: rule__TokenReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5"
    // InternalEtlParser.g:5081:1: rule__TokenReplacementSlot__Group__5 : rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 ;
    public final void rule__TokenReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5085:1: ( rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 )
            // InternalEtlParser.g:5086:2: rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5093:1: rule__TokenReplacementSlot__Group__5__Impl : ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__TokenReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5097:1: ( ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5098:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5098:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5099:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5100:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_SLOTNAME_STRING) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEtlParser.g:5100:3: rule__TokenReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6"
    // InternalEtlParser.g:5108:1: rule__TokenReplacementSlot__Group__6 : rule__TokenReplacementSlot__Group__6__Impl ;
    public final void rule__TokenReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5112:1: ( rule__TokenReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5113:2: rule__TokenReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5119:1: rule__TokenReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5123:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5124:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5124:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5125:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5135:1: rule__TokenReplacementSlot__Group_4__0 : rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 ;
    public final void rule__TokenReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5139:1: ( rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5140:2: rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__TokenReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5147:1: rule__TokenReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5151:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5152:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5152:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5153:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5162:1: rule__TokenReplacementSlot__Group_4__1 : rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 ;
    public final void rule__TokenReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5166:1: ( rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5167:2: rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TokenReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5174:1: rule__TokenReplacementSlot__Group_4__1__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) ;
    public final void rule__TokenReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5178:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) )
            // InternalEtlParser.g:5179:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5179:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            // InternalEtlParser.g:5180:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }
            // InternalEtlParser.g:5181:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            // InternalEtlParser.g:5181:3: rule__TokenReplacementSlot__TokensAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__TokensAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5189:1: rule__TokenReplacementSlot__Group_4__2 : rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 ;
    public final void rule__TokenReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5193:1: ( rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:5194:2: rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TokenReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5201:1: rule__TokenReplacementSlot__Group_4__2__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) ;
    public final void rule__TokenReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5205:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) )
            // InternalEtlParser.g:5206:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            {
            // InternalEtlParser.g:5206:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            // InternalEtlParser.g:5207:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }
            // InternalEtlParser.g:5208:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=RULE_EQUIVALENT_TO && LA54_0<=RULE_SUBTYPE_OF)||LA54_0==RULE_REVERSED||(LA54_0>=RULE_COMMA && LA54_0<=RULE_EXCLUSION)||LA54_0==RULE_CARET||(LA54_0>=RULE_EQUAL && LA54_0<=RULE_LT_EM)||LA54_0==RULE_GT_EM||(LA54_0>=RULE_GTE && LA54_0<=RULE_LTE)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalEtlParser.g:5208:3: rule__TokenReplacementSlot__TokensAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    rule__TokenReplacementSlot__TokensAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3"
    // InternalEtlParser.g:5216:1: rule__TokenReplacementSlot__Group_4__3 : rule__TokenReplacementSlot__Group_4__3__Impl ;
    public final void rule__TokenReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5220:1: ( rule__TokenReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:5221:2: rule__TokenReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:5227:1: rule__TokenReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5231:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5232:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5232:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5233:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0"
    // InternalEtlParser.g:5243:1: rule__TemplateInformationSlot__Group__0 : rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 ;
    public final void rule__TemplateInformationSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5247:1: ( rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 )
            // InternalEtlParser.g:5248:2: rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__TemplateInformationSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0__Impl"
    // InternalEtlParser.g:5255:1: rule__TemplateInformationSlot__Group__0__Impl : ( () ) ;
    public final void rule__TemplateInformationSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5259:1: ( ( () ) )
            // InternalEtlParser.g:5260:1: ( () )
            {
            // InternalEtlParser.g:5260:1: ( () )
            // InternalEtlParser.g:5261:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }
            // InternalEtlParser.g:5262:2: ()
            // InternalEtlParser.g:5262:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1"
    // InternalEtlParser.g:5270:1: rule__TemplateInformationSlot__Group__1 : rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 ;
    public final void rule__TemplateInformationSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5274:1: ( rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 )
            // InternalEtlParser.g:5275:2: rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TemplateInformationSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1__Impl"
    // InternalEtlParser.g:5282:1: rule__TemplateInformationSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TemplateInformationSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5286:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5287:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5287:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5288:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2"
    // InternalEtlParser.g:5297:1: rule__TemplateInformationSlot__Group__2 : rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 ;
    public final void rule__TemplateInformationSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5301:1: ( rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 )
            // InternalEtlParser.g:5302:2: rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TemplateInformationSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2__Impl"
    // InternalEtlParser.g:5309:1: rule__TemplateInformationSlot__Group__2__Impl : ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) ;
    public final void rule__TemplateInformationSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5313:1: ( ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) )
            // InternalEtlParser.g:5314:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            {
            // InternalEtlParser.g:5314:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            // InternalEtlParser.g:5315:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }
            // InternalEtlParser.g:5316:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_TILDE||(LA55_0>=RULE_ZERO && LA55_0<=RULE_DIGIT_NONZERO)) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalEtlParser.g:5316:3: rule__TemplateInformationSlot__CardinalityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__CardinalityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3"
    // InternalEtlParser.g:5324:1: rule__TemplateInformationSlot__Group__3 : rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 ;
    public final void rule__TemplateInformationSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5328:1: ( rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 )
            // InternalEtlParser.g:5329:2: rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TemplateInformationSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3__Impl"
    // InternalEtlParser.g:5336:1: rule__TemplateInformationSlot__Group__3__Impl : ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) ;
    public final void rule__TemplateInformationSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5340:1: ( ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) )
            // InternalEtlParser.g:5341:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            {
            // InternalEtlParser.g:5341:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            // InternalEtlParser.g:5342:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }
            // InternalEtlParser.g:5343:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_SLOTNAME_STRING) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalEtlParser.g:5343:3: rule__TemplateInformationSlot__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4"
    // InternalEtlParser.g:5351:1: rule__TemplateInformationSlot__Group__4 : rule__TemplateInformationSlot__Group__4__Impl ;
    public final void rule__TemplateInformationSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5355:1: ( rule__TemplateInformationSlot__Group__4__Impl )
            // InternalEtlParser.g:5356:2: rule__TemplateInformationSlot__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4__Impl"
    // InternalEtlParser.g:5362:1: rule__TemplateInformationSlot__Group__4__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TemplateInformationSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5366:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5367:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5367:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5368:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__0"
    // InternalEtlParser.g:5378:1: rule__StringReplacementSlot__Group__0 : rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 ;
    public final void rule__StringReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5382:1: ( rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 )
            // InternalEtlParser.g:5383:2: rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__StringReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0"


    // $ANTLR start "rule__StringReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5390:1: rule__StringReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__StringReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5394:1: ( ( () ) )
            // InternalEtlParser.g:5395:1: ( () )
            {
            // InternalEtlParser.g:5395:1: ( () )
            // InternalEtlParser.g:5396:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5397:2: ()
            // InternalEtlParser.g:5397:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__1"
    // InternalEtlParser.g:5405:1: rule__StringReplacementSlot__Group__1 : rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 ;
    public final void rule__StringReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5409:1: ( rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 )
            // InternalEtlParser.g:5410:2: rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__StringReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1"


    // $ANTLR start "rule__StringReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5417:1: rule__StringReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__StringReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5421:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5422:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5422:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5423:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__2"
    // InternalEtlParser.g:5432:1: rule__StringReplacementSlot__Group__2 : rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 ;
    public final void rule__StringReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5436:1: ( rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 )
            // InternalEtlParser.g:5437:2: rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__StringReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2"


    // $ANTLR start "rule__StringReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5444:1: rule__StringReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__StringReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5448:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5449:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5449:1: ( RULE_PLUS )
            // InternalEtlParser.g:5450:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__3"
    // InternalEtlParser.g:5459:1: rule__StringReplacementSlot__Group__3 : rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 ;
    public final void rule__StringReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5463:1: ( rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 )
            // InternalEtlParser.g:5464:2: rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3"


    // $ANTLR start "rule__StringReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5471:1: rule__StringReplacementSlot__Group__3__Impl : ( RULE_STR ) ;
    public final void rule__StringReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5475:1: ( ( RULE_STR ) )
            // InternalEtlParser.g:5476:1: ( RULE_STR )
            {
            // InternalEtlParser.g:5476:1: ( RULE_STR )
            // InternalEtlParser.g:5477:2: RULE_STR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }
            match(input,RULE_STR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__4"
    // InternalEtlParser.g:5486:1: rule__StringReplacementSlot__Group__4 : rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 ;
    public final void rule__StringReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5490:1: ( rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 )
            // InternalEtlParser.g:5491:2: rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4"


    // $ANTLR start "rule__StringReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5498:1: rule__StringReplacementSlot__Group__4__Impl : ( ( rule__StringReplacementSlot__Group_4__0 )? ) ;
    public final void rule__StringReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5502:1: ( ( ( rule__StringReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5503:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5503:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5504:2: ( rule__StringReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5505:2: ( rule__StringReplacementSlot__Group_4__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_ROUND_OPEN) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalEtlParser.g:5505:3: rule__StringReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__5"
    // InternalEtlParser.g:5513:1: rule__StringReplacementSlot__Group__5 : rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 ;
    public final void rule__StringReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5517:1: ( rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 )
            // InternalEtlParser.g:5518:2: rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5"


    // $ANTLR start "rule__StringReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5525:1: rule__StringReplacementSlot__Group__5__Impl : ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__StringReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5529:1: ( ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5530:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5530:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5531:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5532:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_SLOTNAME_STRING) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEtlParser.g:5532:3: rule__StringReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__6"
    // InternalEtlParser.g:5540:1: rule__StringReplacementSlot__Group__6 : rule__StringReplacementSlot__Group__6__Impl ;
    public final void rule__StringReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5544:1: ( rule__StringReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5545:2: rule__StringReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6"


    // $ANTLR start "rule__StringReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5551:1: rule__StringReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5555:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5556:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5556:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5557:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5567:1: rule__StringReplacementSlot__Group_4__0 : rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 ;
    public final void rule__StringReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5571:1: ( rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5572:2: rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__StringReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5579:1: rule__StringReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__StringReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5583:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5584:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5584:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5585:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5594:1: rule__StringReplacementSlot__Group_4__1 : rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 ;
    public final void rule__StringReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5598:1: ( rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5599:2: rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5606:1: rule__StringReplacementSlot__Group_4__1__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__StringReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5610:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:5611:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5611:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:5612:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:5613:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:5613:3: rule__StringReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5621:1: rule__StringReplacementSlot__Group_4__2 : rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 ;
    public final void rule__StringReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5625:1: ( rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:5626:2: rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5633:1: rule__StringReplacementSlot__Group_4__2__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__StringReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5637:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:5638:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:5638:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:5639:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:5640:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_STRING) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEtlParser.g:5640:3: rule__StringReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    rule__StringReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3"
    // InternalEtlParser.g:5648:1: rule__StringReplacementSlot__Group_4__3 : rule__StringReplacementSlot__Group_4__3__Impl ;
    public final void rule__StringReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5652:1: ( rule__StringReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:5653:2: rule__StringReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:5659:1: rule__StringReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5663:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5664:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5664:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5665:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0"
    // InternalEtlParser.g:5675:1: rule__IntegerReplacementSlot__Group__0 : rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 ;
    public final void rule__IntegerReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5679:1: ( rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 )
            // InternalEtlParser.g:5680:2: rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__IntegerReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5687:1: rule__IntegerReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__IntegerReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5691:1: ( ( () ) )
            // InternalEtlParser.g:5692:1: ( () )
            {
            // InternalEtlParser.g:5692:1: ( () )
            // InternalEtlParser.g:5693:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5694:2: ()
            // InternalEtlParser.g:5694:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1"
    // InternalEtlParser.g:5702:1: rule__IntegerReplacementSlot__Group__1 : rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 ;
    public final void rule__IntegerReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5706:1: ( rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 )
            // InternalEtlParser.g:5707:2: rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__IntegerReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5714:1: rule__IntegerReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5718:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5719:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5719:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5720:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2"
    // InternalEtlParser.g:5729:1: rule__IntegerReplacementSlot__Group__2 : rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 ;
    public final void rule__IntegerReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5733:1: ( rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 )
            // InternalEtlParser.g:5734:2: rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__IntegerReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5741:1: rule__IntegerReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__IntegerReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5745:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5746:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5746:1: ( RULE_PLUS )
            // InternalEtlParser.g:5747:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3"
    // InternalEtlParser.g:5756:1: rule__IntegerReplacementSlot__Group__3 : rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 ;
    public final void rule__IntegerReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5760:1: ( rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 )
            // InternalEtlParser.g:5761:2: rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5768:1: rule__IntegerReplacementSlot__Group__3__Impl : ( RULE_INT ) ;
    public final void rule__IntegerReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5772:1: ( ( RULE_INT ) )
            // InternalEtlParser.g:5773:1: ( RULE_INT )
            {
            // InternalEtlParser.g:5773:1: ( RULE_INT )
            // InternalEtlParser.g:5774:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4"
    // InternalEtlParser.g:5783:1: rule__IntegerReplacementSlot__Group__4 : rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 ;
    public final void rule__IntegerReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5787:1: ( rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 )
            // InternalEtlParser.g:5788:2: rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5795:1: rule__IntegerReplacementSlot__Group__4__Impl : ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5799:1: ( ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5800:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5800:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5801:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5802:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_ROUND_OPEN) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalEtlParser.g:5802:3: rule__IntegerReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5"
    // InternalEtlParser.g:5810:1: rule__IntegerReplacementSlot__Group__5 : rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 ;
    public final void rule__IntegerReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5814:1: ( rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 )
            // InternalEtlParser.g:5815:2: rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5822:1: rule__IntegerReplacementSlot__Group__5__Impl : ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5826:1: ( ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5827:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5827:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5828:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5829:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_SLOTNAME_STRING) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalEtlParser.g:5829:3: rule__IntegerReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6"
    // InternalEtlParser.g:5837:1: rule__IntegerReplacementSlot__Group__6 : rule__IntegerReplacementSlot__Group__6__Impl ;
    public final void rule__IntegerReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5841:1: ( rule__IntegerReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5842:2: rule__IntegerReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5848:1: rule__IntegerReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5852:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5853:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5853:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5854:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5864:1: rule__IntegerReplacementSlot__Group_4__0 : rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 ;
    public final void rule__IntegerReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5868:1: ( rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5869:2: rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__IntegerReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5876:1: rule__IntegerReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5880:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5881:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5881:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5882:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5891:1: rule__IntegerReplacementSlot__Group_4__1 : rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 ;
    public final void rule__IntegerReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5895:1: ( rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5896:2: rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__IntegerReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5903:1: rule__IntegerReplacementSlot__Group_4__1__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__IntegerReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5907:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:5908:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5908:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:5909:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:5910:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:5910:3: rule__IntegerReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5918:1: rule__IntegerReplacementSlot__Group_4__2 : rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 ;
    public final void rule__IntegerReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5922:1: ( rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:5923:2: rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__IntegerReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5930:1: rule__IntegerReplacementSlot__Group_4__2__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__IntegerReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5934:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:5935:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:5935:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:5936:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:5937:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_TO||LA62_0==RULE_GT||LA62_0==RULE_HASH) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalEtlParser.g:5937:3: rule__IntegerReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__IntegerReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3"
    // InternalEtlParser.g:5945:1: rule__IntegerReplacementSlot__Group_4__3 : rule__IntegerReplacementSlot__Group_4__3__Impl ;
    public final void rule__IntegerReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5949:1: ( rule__IntegerReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:5950:2: rule__IntegerReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:5956:1: rule__IntegerReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5960:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5961:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5961:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5962:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0"
    // InternalEtlParser.g:5972:1: rule__DecimalReplacementSlot__Group__0 : rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 ;
    public final void rule__DecimalReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5976:1: ( rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 )
            // InternalEtlParser.g:5977:2: rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DecimalReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5984:1: rule__DecimalReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__DecimalReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5988:1: ( ( () ) )
            // InternalEtlParser.g:5989:1: ( () )
            {
            // InternalEtlParser.g:5989:1: ( () )
            // InternalEtlParser.g:5990:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5991:2: ()
            // InternalEtlParser.g:5991:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1"
    // InternalEtlParser.g:5999:1: rule__DecimalReplacementSlot__Group__1 : rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 ;
    public final void rule__DecimalReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6003:1: ( rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 )
            // InternalEtlParser.g:6004:2: rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DecimalReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6011:1: rule__DecimalReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6015:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6016:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6016:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6017:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2"
    // InternalEtlParser.g:6026:1: rule__DecimalReplacementSlot__Group__2 : rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 ;
    public final void rule__DecimalReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6030:1: ( rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 )
            // InternalEtlParser.g:6031:2: rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6038:1: rule__DecimalReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__DecimalReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6042:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6043:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6043:1: ( RULE_PLUS )
            // InternalEtlParser.g:6044:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3"
    // InternalEtlParser.g:6053:1: rule__DecimalReplacementSlot__Group__3 : rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 ;
    public final void rule__DecimalReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6057:1: ( rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 )
            // InternalEtlParser.g:6058:2: rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6065:1: rule__DecimalReplacementSlot__Group__3__Impl : ( RULE_DEC ) ;
    public final void rule__DecimalReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6069:1: ( ( RULE_DEC ) )
            // InternalEtlParser.g:6070:1: ( RULE_DEC )
            {
            // InternalEtlParser.g:6070:1: ( RULE_DEC )
            // InternalEtlParser.g:6071:2: RULE_DEC
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }
            match(input,RULE_DEC,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4"
    // InternalEtlParser.g:6080:1: rule__DecimalReplacementSlot__Group__4 : rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 ;
    public final void rule__DecimalReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6084:1: ( rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 )
            // InternalEtlParser.g:6085:2: rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6092:1: rule__DecimalReplacementSlot__Group__4__Impl : ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6096:1: ( ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6097:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6097:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6098:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6099:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ROUND_OPEN) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEtlParser.g:6099:3: rule__DecimalReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5"
    // InternalEtlParser.g:6107:1: rule__DecimalReplacementSlot__Group__5 : rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 ;
    public final void rule__DecimalReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6111:1: ( rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 )
            // InternalEtlParser.g:6112:2: rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6119:1: rule__DecimalReplacementSlot__Group__5__Impl : ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6123:1: ( ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6124:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6124:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6125:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6126:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_SLOTNAME_STRING) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalEtlParser.g:6126:3: rule__DecimalReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6"
    // InternalEtlParser.g:6134:1: rule__DecimalReplacementSlot__Group__6 : rule__DecimalReplacementSlot__Group__6__Impl ;
    public final void rule__DecimalReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6138:1: ( rule__DecimalReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6139:2: rule__DecimalReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6145:1: rule__DecimalReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6149:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6150:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6150:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6151:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6161:1: rule__DecimalReplacementSlot__Group_4__0 : rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 ;
    public final void rule__DecimalReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6165:1: ( rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6166:2: rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__DecimalReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6173:1: rule__DecimalReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6177:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6178:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6178:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6179:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6188:1: rule__DecimalReplacementSlot__Group_4__1 : rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 ;
    public final void rule__DecimalReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6192:1: ( rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6193:2: rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__DecimalReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6200:1: rule__DecimalReplacementSlot__Group_4__1__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__DecimalReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6204:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:6205:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6205:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:6206:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:6207:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:6207:3: rule__DecimalReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6215:1: rule__DecimalReplacementSlot__Group_4__2 : rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 ;
    public final void rule__DecimalReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6219:1: ( rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6220:2: rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__DecimalReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6227:1: rule__DecimalReplacementSlot__Group_4__2__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__DecimalReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6231:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:6232:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6232:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:6233:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:6234:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_TO||LA65_0==RULE_GT||LA65_0==RULE_HASH) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalEtlParser.g:6234:3: rule__DecimalReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__DecimalReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6242:1: rule__DecimalReplacementSlot__Group_4__3 : rule__DecimalReplacementSlot__Group_4__3__Impl ;
    public final void rule__DecimalReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6246:1: ( rule__DecimalReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6247:2: rule__DecimalReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6253:1: rule__DecimalReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6257:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6258:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6258:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6259:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__0"
    // InternalEtlParser.g:6269:1: rule__EtlCardinality__Group__0 : rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 ;
    public final void rule__EtlCardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6273:1: ( rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 )
            // InternalEtlParser.g:6274:2: rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__EtlCardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0"


    // $ANTLR start "rule__EtlCardinality__Group__0__Impl"
    // InternalEtlParser.g:6281:1: rule__EtlCardinality__Group__0__Impl : ( ( RULE_TILDE )? ) ;
    public final void rule__EtlCardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6285:1: ( ( ( RULE_TILDE )? ) )
            // InternalEtlParser.g:6286:1: ( ( RULE_TILDE )? )
            {
            // InternalEtlParser.g:6286:1: ( ( RULE_TILDE )? )
            // InternalEtlParser.g:6287:2: ( RULE_TILDE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }
            // InternalEtlParser.g:6288:2: ( RULE_TILDE )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_TILDE) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEtlParser.g:6288:3: RULE_TILDE
                    {
                    match(input,RULE_TILDE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__1"
    // InternalEtlParser.g:6296:1: rule__EtlCardinality__Group__1 : rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 ;
    public final void rule__EtlCardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6300:1: ( rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 )
            // InternalEtlParser.g:6301:2: rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__EtlCardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1"


    // $ANTLR start "rule__EtlCardinality__Group__1__Impl"
    // InternalEtlParser.g:6308:1: rule__EtlCardinality__Group__1__Impl : ( ( rule__EtlCardinality__MinAssignment_1 ) ) ;
    public final void rule__EtlCardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6312:1: ( ( ( rule__EtlCardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:6313:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:6313:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:6314:2: ( rule__EtlCardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:6315:2: ( rule__EtlCardinality__MinAssignment_1 )
            // InternalEtlParser.g:6315:3: rule__EtlCardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__2"
    // InternalEtlParser.g:6323:1: rule__EtlCardinality__Group__2 : rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 ;
    public final void rule__EtlCardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6327:1: ( rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 )
            // InternalEtlParser.g:6328:2: rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__EtlCardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2"


    // $ANTLR start "rule__EtlCardinality__Group__2__Impl"
    // InternalEtlParser.g:6335:1: rule__EtlCardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__EtlCardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6339:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:6340:1: ( RULE_TO )
            {
            // InternalEtlParser.g:6340:1: ( RULE_TO )
            // InternalEtlParser.g:6341:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__3"
    // InternalEtlParser.g:6350:1: rule__EtlCardinality__Group__3 : rule__EtlCardinality__Group__3__Impl ;
    public final void rule__EtlCardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6354:1: ( rule__EtlCardinality__Group__3__Impl )
            // InternalEtlParser.g:6355:2: rule__EtlCardinality__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3"


    // $ANTLR start "rule__EtlCardinality__Group__3__Impl"
    // InternalEtlParser.g:6361:1: rule__EtlCardinality__Group__3__Impl : ( ( rule__EtlCardinality__MaxAssignment_3 ) ) ;
    public final void rule__EtlCardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6365:1: ( ( ( rule__EtlCardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:6366:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:6366:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:6367:2: ( rule__EtlCardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:6368:2: ( rule__EtlCardinality__MaxAssignment_3 )
            // InternalEtlParser.g:6368:3: rule__EtlCardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__0"
    // InternalEtlParser.g:6377:1: rule__ConceptReference__Group_1__0 : rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 ;
    public final void rule__ConceptReference__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6381:1: ( rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 )
            // InternalEtlParser.g:6382:2: rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ConceptReference__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0"


    // $ANTLR start "rule__ConceptReference__Group_1__0__Impl"
    // InternalEtlParser.g:6389:1: rule__ConceptReference__Group_1__0__Impl : ( ( rule__ConceptReference__IdAssignment_1_0 ) ) ;
    public final void rule__ConceptReference__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6393:1: ( ( ( rule__ConceptReference__IdAssignment_1_0 ) ) )
            // InternalEtlParser.g:6394:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            {
            // InternalEtlParser.g:6394:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            // InternalEtlParser.g:6395:2: ( rule__ConceptReference__IdAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }
            // InternalEtlParser.g:6396:2: ( rule__ConceptReference__IdAssignment_1_0 )
            // InternalEtlParser.g:6396:3: rule__ConceptReference__IdAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__IdAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__1"
    // InternalEtlParser.g:6404:1: rule__ConceptReference__Group_1__1 : rule__ConceptReference__Group_1__1__Impl ;
    public final void rule__ConceptReference__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6408:1: ( rule__ConceptReference__Group_1__1__Impl )
            // InternalEtlParser.g:6409:2: rule__ConceptReference__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1"


    // $ANTLR start "rule__ConceptReference__Group_1__1__Impl"
    // InternalEtlParser.g:6415:1: rule__ConceptReference__Group_1__1__Impl : ( ( rule__ConceptReference__TermAssignment_1_1 )? ) ;
    public final void rule__ConceptReference__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6419:1: ( ( ( rule__ConceptReference__TermAssignment_1_1 )? ) )
            // InternalEtlParser.g:6420:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            {
            // InternalEtlParser.g:6420:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            // InternalEtlParser.g:6421:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }
            // InternalEtlParser.g:6422:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_TERM_STRING) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEtlParser.g:6422:3: rule__ConceptReference__TermAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__TermAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1__Impl"


    // $ANTLR start "rule__IntegerValue__Group__0"
    // InternalEtlParser.g:6431:1: rule__IntegerValue__Group__0 : rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 ;
    public final void rule__IntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6435:1: ( rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 )
            // InternalEtlParser.g:6436:2: rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0"


    // $ANTLR start "rule__IntegerValue__Group__0__Impl"
    // InternalEtlParser.g:6443:1: rule__IntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6447:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6448:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6448:1: ( RULE_HASH )
            // InternalEtlParser.g:6449:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0__Impl"


    // $ANTLR start "rule__IntegerValue__Group__1"
    // InternalEtlParser.g:6458:1: rule__IntegerValue__Group__1 : rule__IntegerValue__Group__1__Impl ;
    public final void rule__IntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6462:1: ( rule__IntegerValue__Group__1__Impl )
            // InternalEtlParser.g:6463:2: rule__IntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1"


    // $ANTLR start "rule__IntegerValue__Group__1__Impl"
    // InternalEtlParser.g:6469:1: rule__IntegerValue__Group__1__Impl : ( ( rule__IntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__IntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6473:1: ( ( ( rule__IntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:6474:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:6474:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:6475:2: ( rule__IntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:6476:2: ( rule__IntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:6476:3: rule__IntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1__Impl"


    // $ANTLR start "rule__DecimalValue__Group__0"
    // InternalEtlParser.g:6485:1: rule__DecimalValue__Group__0 : rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 ;
    public final void rule__DecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6489:1: ( rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 )
            // InternalEtlParser.g:6490:2: rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0"


    // $ANTLR start "rule__DecimalValue__Group__0__Impl"
    // InternalEtlParser.g:6497:1: rule__DecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6501:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6502:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6502:1: ( RULE_HASH )
            // InternalEtlParser.g:6503:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0__Impl"


    // $ANTLR start "rule__DecimalValue__Group__1"
    // InternalEtlParser.g:6512:1: rule__DecimalValue__Group__1 : rule__DecimalValue__Group__1__Impl ;
    public final void rule__DecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6516:1: ( rule__DecimalValue__Group__1__Impl )
            // InternalEtlParser.g:6517:2: rule__DecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1"


    // $ANTLR start "rule__DecimalValue__Group__1__Impl"
    // InternalEtlParser.g:6523:1: rule__DecimalValue__Group__1__Impl : ( ( rule__DecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__DecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6527:1: ( ( ( rule__DecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:6528:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:6528:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:6529:2: ( rule__DecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:6530:2: ( rule__DecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:6530:3: rule__DecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__0"
    // InternalEtlParser.g:6539:1: rule__SlotIntegerValue__Group__0 : rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 ;
    public final void rule__SlotIntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6543:1: ( rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 )
            // InternalEtlParser.g:6544:2: rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__SlotIntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0"


    // $ANTLR start "rule__SlotIntegerValue__Group__0__Impl"
    // InternalEtlParser.g:6551:1: rule__SlotIntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6555:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6556:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6556:1: ( RULE_HASH )
            // InternalEtlParser.g:6557:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__1"
    // InternalEtlParser.g:6566:1: rule__SlotIntegerValue__Group__1 : rule__SlotIntegerValue__Group__1__Impl ;
    public final void rule__SlotIntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6570:1: ( rule__SlotIntegerValue__Group__1__Impl )
            // InternalEtlParser.g:6571:2: rule__SlotIntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1"


    // $ANTLR start "rule__SlotIntegerValue__Group__1__Impl"
    // InternalEtlParser.g:6577:1: rule__SlotIntegerValue__Group__1__Impl : ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotIntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6581:1: ( ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:6582:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:6582:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:6583:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:6584:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:6584:3: rule__SlotIntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0"
    // InternalEtlParser.g:6593:1: rule__SlotIntegerRange__Group_0__0 : rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 ;
    public final void rule__SlotIntegerRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6597:1: ( rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 )
            // InternalEtlParser.g:6598:2: rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__SlotIntegerRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0__Impl"
    // InternalEtlParser.g:6605:1: rule__SlotIntegerRange__Group_0__0__Impl : ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotIntegerRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6609:1: ( ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:6610:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:6610:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:6611:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:6612:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:6612:3: rule__SlotIntegerRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1"
    // InternalEtlParser.g:6620:1: rule__SlotIntegerRange__Group_0__1 : rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 ;
    public final void rule__SlotIntegerRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6624:1: ( rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 )
            // InternalEtlParser.g:6625:2: rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotIntegerRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1__Impl"
    // InternalEtlParser.g:6632:1: rule__SlotIntegerRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6636:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:6637:1: ( RULE_TO )
            {
            // InternalEtlParser.g:6637:1: ( RULE_TO )
            // InternalEtlParser.g:6638:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2"
    // InternalEtlParser.g:6647:1: rule__SlotIntegerRange__Group_0__2 : rule__SlotIntegerRange__Group_0__2__Impl ;
    public final void rule__SlotIntegerRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6651:1: ( rule__SlotIntegerRange__Group_0__2__Impl )
            // InternalEtlParser.g:6652:2: rule__SlotIntegerRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2__Impl"
    // InternalEtlParser.g:6658:1: rule__SlotIntegerRange__Group_0__2__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotIntegerRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6662:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:6663:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:6663:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:6664:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:6665:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_LT) ) {
                alt68=1;
            }
            else if ( (LA68_0==RULE_HASH) ) {
                int LA68_2 = input.LA(2);

                if ( (LA68_2==RULE_ZERO) ) {
                    int LA68_4 = input.LA(3);

                    if ( (synpred114_InternalEtlParser()) ) {
                        alt68=1;
                    }
                }
                else if ( (LA68_2==RULE_DIGIT_NONZERO) ) {
                    int LA68_5 = input.LA(3);

                    if ( (synpred114_InternalEtlParser()) ) {
                        alt68=1;
                    }
                }
            }
            switch (alt68) {
                case 1 :
                    // InternalEtlParser.g:6665:3: rule__SlotIntegerRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0"
    // InternalEtlParser.g:6674:1: rule__SlotIntegerRange__Group_1__0 : rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 ;
    public final void rule__SlotIntegerRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6678:1: ( rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 )
            // InternalEtlParser.g:6679:2: rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotIntegerRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0__Impl"
    // InternalEtlParser.g:6686:1: rule__SlotIntegerRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6690:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:6691:1: ( RULE_TO )
            {
            // InternalEtlParser.g:6691:1: ( RULE_TO )
            // InternalEtlParser.g:6692:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1"
    // InternalEtlParser.g:6701:1: rule__SlotIntegerRange__Group_1__1 : rule__SlotIntegerRange__Group_1__1__Impl ;
    public final void rule__SlotIntegerRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6705:1: ( rule__SlotIntegerRange__Group_1__1__Impl )
            // InternalEtlParser.g:6706:2: rule__SlotIntegerRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1__Impl"
    // InternalEtlParser.g:6712:1: rule__SlotIntegerRange__Group_1__1__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotIntegerRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6716:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:6717:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:6717:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:6718:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:6719:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:6719:3: rule__SlotIntegerRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0"
    // InternalEtlParser.g:6728:1: rule__SlotIntegerMinimumValue__Group__0 : rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 ;
    public final void rule__SlotIntegerMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6732:1: ( rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 )
            // InternalEtlParser.g:6733:2: rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotIntegerMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:6740:1: rule__SlotIntegerMinimumValue__Group__0__Impl : ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6744:1: ( ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:6745:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:6745:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:6746:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:6747:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_GT) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalEtlParser.g:6747:3: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1"
    // InternalEtlParser.g:6755:1: rule__SlotIntegerMinimumValue__Group__1 : rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 ;
    public final void rule__SlotIntegerMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6759:1: ( rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 )
            // InternalEtlParser.g:6760:2: rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__SlotIntegerMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:6767:1: rule__SlotIntegerMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6771:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6772:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6772:1: ( RULE_HASH )
            // InternalEtlParser.g:6773:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2"
    // InternalEtlParser.g:6782:1: rule__SlotIntegerMinimumValue__Group__2 : rule__SlotIntegerMinimumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6786:1: ( rule__SlotIntegerMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:6787:2: rule__SlotIntegerMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:6793:1: rule__SlotIntegerMinimumValue__Group__2__Impl : ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6797:1: ( ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:6798:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:6798:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:6799:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:6800:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:6800:3: rule__SlotIntegerMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0"
    // InternalEtlParser.g:6809:1: rule__SlotIntegerMaximumValue__Group__0 : rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 ;
    public final void rule__SlotIntegerMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6813:1: ( rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 )
            // InternalEtlParser.g:6814:2: rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotIntegerMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:6821:1: rule__SlotIntegerMaximumValue__Group__0__Impl : ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6825:1: ( ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:6826:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:6826:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:6827:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:6828:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_LT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEtlParser.g:6828:3: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1"
    // InternalEtlParser.g:6836:1: rule__SlotIntegerMaximumValue__Group__1 : rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 ;
    public final void rule__SlotIntegerMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6840:1: ( rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 )
            // InternalEtlParser.g:6841:2: rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__SlotIntegerMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:6848:1: rule__SlotIntegerMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6852:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6853:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6853:1: ( RULE_HASH )
            // InternalEtlParser.g:6854:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2"
    // InternalEtlParser.g:6863:1: rule__SlotIntegerMaximumValue__Group__2 : rule__SlotIntegerMaximumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6867:1: ( rule__SlotIntegerMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:6868:2: rule__SlotIntegerMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:6874:1: rule__SlotIntegerMaximumValue__Group__2__Impl : ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6878:1: ( ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:6879:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:6879:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:6880:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:6881:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:6881:3: rule__SlotIntegerMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__0"
    // InternalEtlParser.g:6890:1: rule__SlotDecimalValue__Group__0 : rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 ;
    public final void rule__SlotDecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6894:1: ( rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 )
            // InternalEtlParser.g:6895:2: rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__SlotDecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0"


    // $ANTLR start "rule__SlotDecimalValue__Group__0__Impl"
    // InternalEtlParser.g:6902:1: rule__SlotDecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6906:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:6907:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:6907:1: ( RULE_HASH )
            // InternalEtlParser.g:6908:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__1"
    // InternalEtlParser.g:6917:1: rule__SlotDecimalValue__Group__1 : rule__SlotDecimalValue__Group__1__Impl ;
    public final void rule__SlotDecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6921:1: ( rule__SlotDecimalValue__Group__1__Impl )
            // InternalEtlParser.g:6922:2: rule__SlotDecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1"


    // $ANTLR start "rule__SlotDecimalValue__Group__1__Impl"
    // InternalEtlParser.g:6928:1: rule__SlotDecimalValue__Group__1__Impl : ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotDecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6932:1: ( ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:6933:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:6933:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:6934:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:6935:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:6935:3: rule__SlotDecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0"
    // InternalEtlParser.g:6944:1: rule__SlotDecimalRange__Group_0__0 : rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 ;
    public final void rule__SlotDecimalRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6948:1: ( rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 )
            // InternalEtlParser.g:6949:2: rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__SlotDecimalRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0__Impl"
    // InternalEtlParser.g:6956:1: rule__SlotDecimalRange__Group_0__0__Impl : ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotDecimalRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6960:1: ( ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:6961:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:6961:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:6962:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:6963:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:6963:3: rule__SlotDecimalRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1"
    // InternalEtlParser.g:6971:1: rule__SlotDecimalRange__Group_0__1 : rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 ;
    public final void rule__SlotDecimalRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6975:1: ( rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 )
            // InternalEtlParser.g:6976:2: rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotDecimalRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1__Impl"
    // InternalEtlParser.g:6983:1: rule__SlotDecimalRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6987:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:6988:1: ( RULE_TO )
            {
            // InternalEtlParser.g:6988:1: ( RULE_TO )
            // InternalEtlParser.g:6989:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2"
    // InternalEtlParser.g:6998:1: rule__SlotDecimalRange__Group_0__2 : rule__SlotDecimalRange__Group_0__2__Impl ;
    public final void rule__SlotDecimalRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7002:1: ( rule__SlotDecimalRange__Group_0__2__Impl )
            // InternalEtlParser.g:7003:2: rule__SlotDecimalRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2__Impl"
    // InternalEtlParser.g:7009:1: rule__SlotDecimalRange__Group_0__2__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotDecimalRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7013:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:7014:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:7014:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:7015:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:7016:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalEtlParser.g:7016:3: rule__SlotDecimalRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0"
    // InternalEtlParser.g:7025:1: rule__SlotDecimalRange__Group_1__0 : rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 ;
    public final void rule__SlotDecimalRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7029:1: ( rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 )
            // InternalEtlParser.g:7030:2: rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotDecimalRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0__Impl"
    // InternalEtlParser.g:7037:1: rule__SlotDecimalRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7041:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7042:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7042:1: ( RULE_TO )
            // InternalEtlParser.g:7043:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1"
    // InternalEtlParser.g:7052:1: rule__SlotDecimalRange__Group_1__1 : rule__SlotDecimalRange__Group_1__1__Impl ;
    public final void rule__SlotDecimalRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7056:1: ( rule__SlotDecimalRange__Group_1__1__Impl )
            // InternalEtlParser.g:7057:2: rule__SlotDecimalRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1__Impl"
    // InternalEtlParser.g:7063:1: rule__SlotDecimalRange__Group_1__1__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotDecimalRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7067:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:7068:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:7068:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:7069:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:7070:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:7070:3: rule__SlotDecimalRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0"
    // InternalEtlParser.g:7079:1: rule__SlotDecimalMinimumValue__Group__0 : rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 ;
    public final void rule__SlotDecimalMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7083:1: ( rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 )
            // InternalEtlParser.g:7084:2: rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:7091:1: rule__SlotDecimalMinimumValue__Group__0__Impl : ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7095:1: ( ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7096:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7096:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7097:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7098:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_GT) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEtlParser.g:7098:3: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1"
    // InternalEtlParser.g:7106:1: rule__SlotDecimalMinimumValue__Group__1 : rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 ;
    public final void rule__SlotDecimalMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7110:1: ( rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 )
            // InternalEtlParser.g:7111:2: rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__SlotDecimalMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:7118:1: rule__SlotDecimalMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7122:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7123:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7123:1: ( RULE_HASH )
            // InternalEtlParser.g:7124:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2"
    // InternalEtlParser.g:7133:1: rule__SlotDecimalMinimumValue__Group__2 : rule__SlotDecimalMinimumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7137:1: ( rule__SlotDecimalMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:7138:2: rule__SlotDecimalMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:7144:1: rule__SlotDecimalMinimumValue__Group__2__Impl : ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7148:1: ( ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7149:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7149:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7150:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7151:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7151:3: rule__SlotDecimalMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0"
    // InternalEtlParser.g:7160:1: rule__SlotDecimalMaximumValue__Group__0 : rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 ;
    public final void rule__SlotDecimalMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7164:1: ( rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 )
            // InternalEtlParser.g:7165:2: rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__SlotDecimalMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:7172:1: rule__SlotDecimalMaximumValue__Group__0__Impl : ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7176:1: ( ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7177:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7177:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7178:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7179:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_LT) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalEtlParser.g:7179:3: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1"
    // InternalEtlParser.g:7187:1: rule__SlotDecimalMaximumValue__Group__1 : rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 ;
    public final void rule__SlotDecimalMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7191:1: ( rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 )
            // InternalEtlParser.g:7192:2: rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__SlotDecimalMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:7199:1: rule__SlotDecimalMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7203:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7204:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7204:1: ( RULE_HASH )
            // InternalEtlParser.g:7205:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2"
    // InternalEtlParser.g:7214:1: rule__SlotDecimalMaximumValue__Group__2 : rule__SlotDecimalMaximumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7218:1: ( rule__SlotDecimalMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:7219:2: rule__SlotDecimalMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:7225:1: rule__SlotDecimalMaximumValue__Group__2__Impl : ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7229:1: ( ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7230:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7230:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7231:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7232:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7232:3: rule__SlotDecimalMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEtlParser.g:7241:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7245:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEtlParser.g:7246:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:7253:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7257:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:7258:1: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:7258:1: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:7259:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEtlParser.g:7268:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7272:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:7273:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:7279:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7283:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:7284:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:7284:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:7285:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:7286:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_DISJUNCTION) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalEtlParser.g:7286:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:7295:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7299:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:7300:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:7307:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7311:1: ( ( () ) )
            // InternalEtlParser.g:7312:1: ( () )
            {
            // InternalEtlParser.g:7312:1: ( () )
            // InternalEtlParser.g:7313:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:7314:2: ()
            // InternalEtlParser.g:7314:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:7322:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7326:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:7327:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:7334:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7338:1: ( ( RULE_DISJUNCTION ) )
            // InternalEtlParser.g:7339:1: ( RULE_DISJUNCTION )
            {
            // InternalEtlParser.g:7339:1: ( RULE_DISJUNCTION )
            // InternalEtlParser.g:7340:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:7349:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7353:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:7354:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:7360:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7364:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:7365:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:7365:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:7366:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:7367:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:7367:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEtlParser.g:7376:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7380:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEtlParser.g:7381:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:7388:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7392:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:7393:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:7393:1: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:7394:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEtlParser.g:7403:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7407:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:7408:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:7414:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7418:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:7419:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:7419:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:7420:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:7421:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( ((LA75_0>=RULE_COMMA && LA75_0<=RULE_CONJUNCTION)) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalEtlParser.g:7421:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:7430:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7434:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:7435:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:7442:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7446:1: ( ( () ) )
            // InternalEtlParser.g:7447:1: ( () )
            {
            // InternalEtlParser.g:7447:1: ( () )
            // InternalEtlParser.g:7448:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:7449:2: ()
            // InternalEtlParser.g:7449:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:7457:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7461:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:7462:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:7469:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7473:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:7474:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:7474:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEtlParser.g:7475:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:7476:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEtlParser.g:7476:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:7484:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7488:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:7489:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:7495:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7499:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:7500:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:7500:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:7501:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:7502:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:7502:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEtlParser.g:7511:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7515:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEtlParser.g:7516:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:7523:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7527:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:7528:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:7528:1: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:7529:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEtlParser.g:7538:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7542:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:7543:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:7549:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7553:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:7554:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:7554:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:7555:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:7556:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_EXCLUSION) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalEtlParser.g:7556:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:7565:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7569:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:7570:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:7577:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7581:1: ( ( () ) )
            // InternalEtlParser.g:7582:1: ( () )
            {
            // InternalEtlParser.g:7582:1: ( () )
            // InternalEtlParser.g:7583:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:7584:2: ()
            // InternalEtlParser.g:7584:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:7592:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7596:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:7597:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:7604:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7608:1: ( ( RULE_EXCLUSION ) )
            // InternalEtlParser.g:7609:1: ( RULE_EXCLUSION )
            {
            // InternalEtlParser.g:7609:1: ( RULE_EXCLUSION )
            // InternalEtlParser.g:7610:2: RULE_EXCLUSION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:7619:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7623:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:7624:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:7630:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7634:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:7635:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:7635:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:7636:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:7637:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:7637:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEtlParser.g:7646:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7650:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:7651:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:7658:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7662:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEtlParser.g:7663:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEtlParser.g:7663:1: ( ruleDottedExpressionConstraint )
            // InternalEtlParser.g:7664:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEtlParser.g:7673:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7677:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:7678:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:7684:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7688:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:7689:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:7689:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:7690:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:7691:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_COLON) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalEtlParser.g:7691:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:7700:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7704:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:7705:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:7712:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7716:1: ( ( () ) )
            // InternalEtlParser.g:7717:1: ( () )
            {
            // InternalEtlParser.g:7717:1: ( () )
            // InternalEtlParser.g:7718:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:7719:2: ()
            // InternalEtlParser.g:7719:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:7727:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7731:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:7732:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:7739:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7743:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:7744:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:7744:1: ( RULE_COLON )
            // InternalEtlParser.g:7745:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:7754:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7758:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:7759:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:7765:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7769:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEtlParser.g:7770:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEtlParser.g:7770:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEtlParser.g:7771:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEtlParser.g:7772:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEtlParser.g:7772:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEtlParser.g:7781:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7785:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:7786:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:7793:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7797:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:7798:1: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:7798:1: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:7799:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEtlParser.g:7808:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7812:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:7813:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:7819:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7823:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:7824:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:7824:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:7825:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:7826:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_DOT) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalEtlParser.g:7826:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:7835:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7839:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:7840:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:7847:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7851:1: ( ( () ) )
            // InternalEtlParser.g:7852:1: ( () )
            {
            // InternalEtlParser.g:7852:1: ( () )
            // InternalEtlParser.g:7853:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:7854:2: ()
            // InternalEtlParser.g:7854:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:7862:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7866:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:7867:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:7874:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7878:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:7879:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:7879:1: ( RULE_DOT )
            // InternalEtlParser.g:7880:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:7889:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7893:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:7894:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:7900:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7904:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEtlParser.g:7905:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEtlParser.g:7905:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEtlParser.g:7906:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEtlParser.g:7907:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEtlParser.g:7907:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEtlParser.g:7916:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7920:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEtlParser.g:7921:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEtlParser.g:7928:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7932:1: ( ( RULE_LT_EM ) )
            // InternalEtlParser.g:7933:1: ( RULE_LT_EM )
            {
            // InternalEtlParser.g:7933:1: ( RULE_LT_EM )
            // InternalEtlParser.g:7934:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEtlParser.g:7943:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7947:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEtlParser.g:7948:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEtlParser.g:7954:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7958:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:7959:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:7959:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:7960:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:7961:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:7961:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEtlParser.g:7970:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7974:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEtlParser.g:7975:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:7982:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7986:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEtlParser.g:7987:1: ( RULE_DBL_LT_EM )
            {
            // InternalEtlParser.g:7987:1: ( RULE_DBL_LT_EM )
            // InternalEtlParser.g:7988:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEtlParser.g:7997:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8001:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:8002:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:8008:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8012:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8013:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8013:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8014:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8015:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8015:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEtlParser.g:8024:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8028:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEtlParser.g:8029:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEtlParser.g:8036:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8040:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:8041:1: ( RULE_LT )
            {
            // InternalEtlParser.g:8041:1: ( RULE_LT )
            // InternalEtlParser.g:8042:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEtlParser.g:8051:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8055:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEtlParser.g:8056:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEtlParser.g:8062:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8066:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8067:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8067:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8068:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8069:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8069:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEtlParser.g:8078:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8082:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEtlParser.g:8083:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:8090:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8094:1: ( ( RULE_DBL_LT ) )
            // InternalEtlParser.g:8095:1: ( RULE_DBL_LT )
            {
            // InternalEtlParser.g:8095:1: ( RULE_DBL_LT )
            // InternalEtlParser.g:8096:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEtlParser.g:8105:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8109:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:8110:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:8116:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8120:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8121:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8121:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8122:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8123:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8123:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEtlParser.g:8132:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8136:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEtlParser.g:8137:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEtlParser.g:8144:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8148:1: ( ( RULE_GT_EM ) )
            // InternalEtlParser.g:8149:1: ( RULE_GT_EM )
            {
            // InternalEtlParser.g:8149:1: ( RULE_GT_EM )
            // InternalEtlParser.g:8150:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEtlParser.g:8159:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8163:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEtlParser.g:8164:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEtlParser.g:8170:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8174:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8175:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8175:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8176:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8177:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8177:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEtlParser.g:8186:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8190:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEtlParser.g:8191:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:8198:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8202:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEtlParser.g:8203:1: ( RULE_DBL_GT_EM )
            {
            // InternalEtlParser.g:8203:1: ( RULE_DBL_GT_EM )
            // InternalEtlParser.g:8204:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEtlParser.g:8213:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8217:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:8218:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:8224:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8228:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8229:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8229:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8230:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8231:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8231:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEtlParser.g:8240:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8244:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEtlParser.g:8245:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEtlParser.g:8252:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8256:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:8257:1: ( RULE_GT )
            {
            // InternalEtlParser.g:8257:1: ( RULE_GT )
            // InternalEtlParser.g:8258:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEtlParser.g:8267:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8271:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEtlParser.g:8272:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEtlParser.g:8278:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8282:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8283:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8283:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8284:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8285:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8285:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEtlParser.g:8294:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8298:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEtlParser.g:8299:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:8306:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8310:1: ( ( RULE_DBL_GT ) )
            // InternalEtlParser.g:8311:1: ( RULE_DBL_GT )
            {
            // InternalEtlParser.g:8311:1: ( RULE_DBL_GT )
            // InternalEtlParser.g:8312:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEtlParser.g:8321:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8325:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:8326:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:8332:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8336:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8337:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8337:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8338:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8339:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8339:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEtlParser.g:8348:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8352:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEtlParser.g:8353:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEtlParser.g:8360:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8364:1: ( ( RULE_CARET ) )
            // InternalEtlParser.g:8365:1: ( RULE_CARET )
            {
            // InternalEtlParser.g:8365:1: ( RULE_CARET )
            // InternalEtlParser.g:8366:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEtlParser.g:8375:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8379:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEtlParser.g:8380:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEtlParser.g:8386:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8390:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:8391:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:8391:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:8392:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:8393:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:8393:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEtlParser.g:8402:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8406:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEtlParser.g:8407:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEtlParser.g:8414:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8418:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEtlParser.g:8419:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEtlParser.g:8419:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEtlParser.g:8420:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEtlParser.g:8421:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEtlParser.g:8421:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEtlParser.g:8429:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8433:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEtlParser.g:8434:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEtlParser.g:8440:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8444:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEtlParser.g:8445:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEtlParser.g:8445:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEtlParser.g:8446:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEtlParser.g:8447:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_TERM_STRING) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalEtlParser.g:8447:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEtlParser.g:8456:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8460:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEtlParser.g:8461:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEtlParser.g:8468:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8472:1: ( ( RULE_WILDCARD ) )
            // InternalEtlParser.g:8473:1: ( RULE_WILDCARD )
            {
            // InternalEtlParser.g:8473:1: ( RULE_WILDCARD )
            // InternalEtlParser.g:8474:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEtlParser.g:8483:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8487:1: ( rule__Any__Group__1__Impl )
            // InternalEtlParser.g:8488:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEtlParser.g:8494:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8498:1: ( ( () ) )
            // InternalEtlParser.g:8499:1: ( () )
            {
            // InternalEtlParser.g:8499:1: ( () )
            // InternalEtlParser.g:8500:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEtlParser.g:8501:2: ()
            // InternalEtlParser.g:8501:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEtlParser.g:8510:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8514:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEtlParser.g:8515:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEtlParser.g:8522:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8526:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:8527:1: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:8527:1: ( ruleAndRefinement )
            // InternalEtlParser.g:8528:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEtlParser.g:8537:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8541:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEtlParser.g:8542:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEtlParser.g:8548:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8552:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:8553:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:8553:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEtlParser.g:8554:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8555:2: ( rule__OrRefinement__Group_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==RULE_DISJUNCTION) ) {
                    int LA80_5 = input.LA(2);

                    if ( (synpred126_InternalEtlParser()) ) {
                        alt80=1;
                    }


                }


                switch (alt80) {
            	case 1 :
            	    // InternalEtlParser.g:8555:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEtlParser.g:8564:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8568:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:8569:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:8575:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8579:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:8580:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:8580:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:8581:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:8582:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEtlParser.g:8582:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEtlParser.g:8591:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8595:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEtlParser.g:8596:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:8603:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8607:1: ( ( () ) )
            // InternalEtlParser.g:8608:1: ( () )
            {
            // InternalEtlParser.g:8608:1: ( () )
            // InternalEtlParser.g:8609:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:8610:2: ()
            // InternalEtlParser.g:8610:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEtlParser.g:8618:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8622:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEtlParser.g:8623:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:8630:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8634:1: ( ( RULE_DISJUNCTION ) )
            // InternalEtlParser.g:8635:1: ( RULE_DISJUNCTION )
            {
            // InternalEtlParser.g:8635:1: ( RULE_DISJUNCTION )
            // InternalEtlParser.g:8636:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTIONTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTIONTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEtlParser.g:8645:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8649:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:8650:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:8656:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8660:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:8661:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:8661:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:8662:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:8663:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:8663:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEtlParser.g:8672:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8676:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEtlParser.g:8677:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEtlParser.g:8684:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8688:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:8689:1: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:8689:1: ( ruleSubRefinement )
            // InternalEtlParser.g:8690:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEtlParser.g:8699:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8703:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEtlParser.g:8704:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEtlParser.g:8710:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8714:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:8715:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:8715:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEtlParser.g:8716:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8717:2: ( rule__AndRefinement__Group_1__0 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==RULE_CONJUNCTION) ) {
                    int LA81_4 = input.LA(2);

                    if ( (synpred127_InternalEtlParser()) ) {
                        alt81=1;
                    }


                }
                else if ( (LA81_0==RULE_COMMA) ) {
                    int LA81_5 = input.LA(2);

                    if ( (synpred127_InternalEtlParser()) ) {
                        alt81=1;
                    }


                }


                switch (alt81) {
            	case 1 :
            	    // InternalEtlParser.g:8717:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEtlParser.g:8726:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8730:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:8731:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:8737:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8741:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:8742:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:8742:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:8743:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:8744:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEtlParser.g:8744:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEtlParser.g:8753:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8757:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEtlParser.g:8758:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:8765:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8769:1: ( ( () ) )
            // InternalEtlParser.g:8770:1: ( () )
            {
            // InternalEtlParser.g:8770:1: ( () )
            // InternalEtlParser.g:8771:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:8772:2: ()
            // InternalEtlParser.g:8772:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEtlParser.g:8780:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8784:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEtlParser.g:8785:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:8792:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8796:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEtlParser.g:8797:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEtlParser.g:8797:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEtlParser.g:8798:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEtlParser.g:8799:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEtlParser.g:8799:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEtlParser.g:8807:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8811:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:8812:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:8818:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8822:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:8823:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:8823:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:8824:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:8825:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:8825:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEtlParser.g:8834:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8838:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEtlParser.g:8839:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEtlParser.g:8846:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8850:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:8851:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:8851:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:8852:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEtlParser.g:8861:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8865:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEtlParser.g:8866:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEtlParser.g:8873:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8877:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:8878:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:8878:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEtlParser.g:8879:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:8880:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEtlParser.g:8880:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEtlParser.g:8888:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8892:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEtlParser.g:8893:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEtlParser.g:8899:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8903:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:8904:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:8904:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:8905:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEtlParser.g:8915:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8919:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEtlParser.g:8920:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:8927:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8931:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:8932:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:8932:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:8933:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:8934:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_SQUARE_OPEN) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalEtlParser.g:8934:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEtlParser.g:8942:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8946:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEtlParser.g:8947:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:8954:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8958:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:8959:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:8959:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:8960:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEtlParser.g:8969:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8973:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEtlParser.g:8974:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:8981:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8985:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEtlParser.g:8986:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEtlParser.g:8986:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEtlParser.g:8987:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEtlParser.g:8988:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEtlParser.g:8988:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEtlParser.g:8996:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9000:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEtlParser.g:9001:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:9007:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9011:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:9012:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:9012:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:9013:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEtlParser.g:9023:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9027:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEtlParser.g:9028:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:9035:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9039:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:9040:1: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:9040:1: ( ruleAndAttributeSet )
            // InternalEtlParser.g:9041:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEtlParser.g:9050:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9054:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:9055:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:9061:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9065:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:9066:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:9066:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:9067:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9068:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==RULE_DISJUNCTION) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalEtlParser.g:9068:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEtlParser.g:9077:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9081:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEtlParser.g:9082:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:9089:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9093:1: ( ( () ) )
            // InternalEtlParser.g:9094:1: ( () )
            {
            // InternalEtlParser.g:9094:1: ( () )
            // InternalEtlParser.g:9095:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:9096:2: ()
            // InternalEtlParser.g:9096:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEtlParser.g:9104:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9108:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEtlParser.g:9109:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:9116:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9120:1: ( ( RULE_DISJUNCTION ) )
            // InternalEtlParser.g:9121:1: ( RULE_DISJUNCTION )
            {
            // InternalEtlParser.g:9121:1: ( RULE_DISJUNCTION )
            // InternalEtlParser.g:9122:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEtlParser.g:9131:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9135:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:9136:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:9142:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9146:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:9147:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9147:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:9148:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:9149:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:9149:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEtlParser.g:9158:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9162:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEtlParser.g:9163:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:9170:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9174:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:9175:1: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:9175:1: ( ruleSubAttributeSet )
            // InternalEtlParser.g:9176:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEtlParser.g:9185:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9189:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:9190:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:9196:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9200:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:9201:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:9201:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:9202:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9203:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( ((LA84_0>=RULE_COMMA && LA84_0<=RULE_CONJUNCTION)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalEtlParser.g:9203:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEtlParser.g:9212:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9216:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEtlParser.g:9217:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:9224:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9228:1: ( ( () ) )
            // InternalEtlParser.g:9229:1: ( () )
            {
            // InternalEtlParser.g:9229:1: ( () )
            // InternalEtlParser.g:9230:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:9231:2: ()
            // InternalEtlParser.g:9231:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEtlParser.g:9239:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9243:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEtlParser.g:9244:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:9251:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9255:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:9256:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:9256:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEtlParser.g:9257:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:9258:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEtlParser.g:9258:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEtlParser.g:9266:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9270:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:9271:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:9277:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9281:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:9282:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:9282:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:9283:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:9284:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:9284:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEtlParser.g:9293:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9297:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEtlParser.g:9298:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:9305:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9309:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:9310:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:9310:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:9311:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEtlParser.g:9320:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9324:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEtlParser.g:9325:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:9332:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9336:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:9337:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:9337:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEtlParser.g:9338:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:9339:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEtlParser.g:9339:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEtlParser.g:9347:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9351:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEtlParser.g:9352:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEtlParser.g:9358:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9362:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:9363:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:9363:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:9364:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEtlParser.g:9374:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9378:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEtlParser.g:9379:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEtlParser.g:9386:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9390:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:9391:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:9391:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:9392:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:9393:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==RULE_SQUARE_OPEN) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalEtlParser.g:9393:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEtlParser.g:9401:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9405:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEtlParser.g:9406:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEtlParser.g:9413:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9417:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEtlParser.g:9418:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEtlParser.g:9418:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEtlParser.g:9419:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEtlParser.g:9420:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_REVERSED) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalEtlParser.g:9420:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEtlParser.g:9428:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9432:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEtlParser.g:9433:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEtlParser.g:9440:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9444:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEtlParser.g:9445:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEtlParser.g:9445:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEtlParser.g:9446:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEtlParser.g:9447:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEtlParser.g:9447:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEtlParser.g:9455:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9459:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEtlParser.g:9460:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEtlParser.g:9466:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9470:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) )
            // InternalEtlParser.g:9471:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            {
            // InternalEtlParser.g:9471:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            // InternalEtlParser.g:9472:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEtlParser.g:9473:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            // InternalEtlParser.g:9473:3: rule__AttributeConstraint__ComparisonAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__ComparisonAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEtlParser.g:9482:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9486:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEtlParser.g:9487:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEtlParser.g:9494:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9498:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEtlParser.g:9499:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:9499:1: ( RULE_SQUARE_OPEN )
            // InternalEtlParser.g:9500:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEtlParser.g:9509:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9513:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEtlParser.g:9514:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEtlParser.g:9521:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9525:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:9526:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:9526:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:9527:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:9528:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEtlParser.g:9528:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEtlParser.g:9536:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9540:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEtlParser.g:9541:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEtlParser.g:9548:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9552:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:9553:1: ( RULE_TO )
            {
            // InternalEtlParser.g:9553:1: ( RULE_TO )
            // InternalEtlParser.g:9554:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEtlParser.g:9563:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9567:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEtlParser.g:9568:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEtlParser.g:9575:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9579:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:9580:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:9580:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:9581:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:9582:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEtlParser.g:9582:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEtlParser.g:9590:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9594:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEtlParser.g:9595:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEtlParser.g:9601:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9605:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:9606:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:9606:1: ( RULE_SQUARE_CLOSE )
            // InternalEtlParser.g:9607:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeValueEquals__Group__0"
    // InternalEtlParser.g:9617:1: rule__AttributeValueEquals__Group__0 : rule__AttributeValueEquals__Group__0__Impl rule__AttributeValueEquals__Group__1 ;
    public final void rule__AttributeValueEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9621:1: ( rule__AttributeValueEquals__Group__0__Impl rule__AttributeValueEquals__Group__1 )
            // InternalEtlParser.g:9622:2: rule__AttributeValueEquals__Group__0__Impl rule__AttributeValueEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AttributeValueEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueEquals__Group__0"


    // $ANTLR start "rule__AttributeValueEquals__Group__0__Impl"
    // InternalEtlParser.g:9629:1: rule__AttributeValueEquals__Group__0__Impl : ( RULE_EQUAL ) ;
    public final void rule__AttributeValueEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9633:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:9634:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:9634:1: ( RULE_EQUAL )
            // InternalEtlParser.g:9635:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueEquals__Group__0__Impl"


    // $ANTLR start "rule__AttributeValueEquals__Group__1"
    // InternalEtlParser.g:9644:1: rule__AttributeValueEquals__Group__1 : rule__AttributeValueEquals__Group__1__Impl ;
    public final void rule__AttributeValueEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9648:1: ( rule__AttributeValueEquals__Group__1__Impl )
            // InternalEtlParser.g:9649:2: rule__AttributeValueEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueEquals__Group__1"


    // $ANTLR start "rule__AttributeValueEquals__Group__1__Impl"
    // InternalEtlParser.g:9655:1: rule__AttributeValueEquals__Group__1__Impl : ( ( rule__AttributeValueEquals__ConstraintAssignment_1 ) ) ;
    public final void rule__AttributeValueEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9659:1: ( ( ( rule__AttributeValueEquals__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9660:1: ( ( rule__AttributeValueEquals__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9660:1: ( ( rule__AttributeValueEquals__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9661:2: ( rule__AttributeValueEquals__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueEqualsAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9662:2: ( rule__AttributeValueEquals__ConstraintAssignment_1 )
            // InternalEtlParser.g:9662:3: rule__AttributeValueEquals__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueEquals__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueEqualsAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueEquals__Group__1__Impl"


    // $ANTLR start "rule__AttributeValueNotEquals__Group__0"
    // InternalEtlParser.g:9671:1: rule__AttributeValueNotEquals__Group__0 : rule__AttributeValueNotEquals__Group__0__Impl rule__AttributeValueNotEquals__Group__1 ;
    public final void rule__AttributeValueNotEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9675:1: ( rule__AttributeValueNotEquals__Group__0__Impl rule__AttributeValueNotEquals__Group__1 )
            // InternalEtlParser.g:9676:2: rule__AttributeValueNotEquals__Group__0__Impl rule__AttributeValueNotEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AttributeValueNotEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueNotEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueNotEquals__Group__0"


    // $ANTLR start "rule__AttributeValueNotEquals__Group__0__Impl"
    // InternalEtlParser.g:9683:1: rule__AttributeValueNotEquals__Group__0__Impl : ( RULE_NOT_EQUAL ) ;
    public final void rule__AttributeValueNotEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9687:1: ( ( RULE_NOT_EQUAL ) )
            // InternalEtlParser.g:9688:1: ( RULE_NOT_EQUAL )
            {
            // InternalEtlParser.g:9688:1: ( RULE_NOT_EQUAL )
            // InternalEtlParser.g:9689:2: RULE_NOT_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueNotEquals__Group__0__Impl"


    // $ANTLR start "rule__AttributeValueNotEquals__Group__1"
    // InternalEtlParser.g:9698:1: rule__AttributeValueNotEquals__Group__1 : rule__AttributeValueNotEquals__Group__1__Impl ;
    public final void rule__AttributeValueNotEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9702:1: ( rule__AttributeValueNotEquals__Group__1__Impl )
            // InternalEtlParser.g:9703:2: rule__AttributeValueNotEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueNotEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueNotEquals__Group__1"


    // $ANTLR start "rule__AttributeValueNotEquals__Group__1__Impl"
    // InternalEtlParser.g:9709:1: rule__AttributeValueNotEquals__Group__1__Impl : ( ( rule__AttributeValueNotEquals__ConstraintAssignment_1 ) ) ;
    public final void rule__AttributeValueNotEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9713:1: ( ( ( rule__AttributeValueNotEquals__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9714:1: ( ( rule__AttributeValueNotEquals__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9714:1: ( ( rule__AttributeValueNotEquals__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9715:2: ( rule__AttributeValueNotEquals__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueNotEqualsAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9716:2: ( rule__AttributeValueNotEquals__ConstraintAssignment_1 )
            // InternalEtlParser.g:9716:3: rule__AttributeValueNotEquals__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValueNotEquals__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueNotEqualsAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueNotEquals__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueEquals__Group__0"
    // InternalEtlParser.g:9725:1: rule__BooleanValueEquals__Group__0 : rule__BooleanValueEquals__Group__0__Impl rule__BooleanValueEquals__Group__1 ;
    public final void rule__BooleanValueEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9729:1: ( rule__BooleanValueEquals__Group__0__Impl rule__BooleanValueEquals__Group__1 )
            // InternalEtlParser.g:9730:2: rule__BooleanValueEquals__Group__0__Impl rule__BooleanValueEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__BooleanValueEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueEquals__Group__0"


    // $ANTLR start "rule__BooleanValueEquals__Group__0__Impl"
    // InternalEtlParser.g:9737:1: rule__BooleanValueEquals__Group__0__Impl : ( RULE_EQUAL ) ;
    public final void rule__BooleanValueEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9741:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:9742:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:9742:1: ( RULE_EQUAL )
            // InternalEtlParser.g:9743:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueEquals__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueEquals__Group__1"
    // InternalEtlParser.g:9752:1: rule__BooleanValueEquals__Group__1 : rule__BooleanValueEquals__Group__1__Impl ;
    public final void rule__BooleanValueEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9756:1: ( rule__BooleanValueEquals__Group__1__Impl )
            // InternalEtlParser.g:9757:2: rule__BooleanValueEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueEquals__Group__1"


    // $ANTLR start "rule__BooleanValueEquals__Group__1__Impl"
    // InternalEtlParser.g:9763:1: rule__BooleanValueEquals__Group__1__Impl : ( ( rule__BooleanValueEquals__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9767:1: ( ( ( rule__BooleanValueEquals__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:9768:1: ( ( rule__BooleanValueEquals__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:9768:1: ( ( rule__BooleanValueEquals__ValueAssignment_1 ) )
            // InternalEtlParser.g:9769:2: ( rule__BooleanValueEquals__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueEqualsAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:9770:2: ( rule__BooleanValueEquals__ValueAssignment_1 )
            // InternalEtlParser.g:9770:3: rule__BooleanValueEquals__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueEquals__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueEqualsAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueEquals__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueNotEquals__Group__0"
    // InternalEtlParser.g:9779:1: rule__BooleanValueNotEquals__Group__0 : rule__BooleanValueNotEquals__Group__0__Impl rule__BooleanValueNotEquals__Group__1 ;
    public final void rule__BooleanValueNotEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9783:1: ( rule__BooleanValueNotEquals__Group__0__Impl rule__BooleanValueNotEquals__Group__1 )
            // InternalEtlParser.g:9784:2: rule__BooleanValueNotEquals__Group__0__Impl rule__BooleanValueNotEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__BooleanValueNotEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueNotEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueNotEquals__Group__0"


    // $ANTLR start "rule__BooleanValueNotEquals__Group__0__Impl"
    // InternalEtlParser.g:9791:1: rule__BooleanValueNotEquals__Group__0__Impl : ( RULE_NOT_EQUAL ) ;
    public final void rule__BooleanValueNotEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9795:1: ( ( RULE_NOT_EQUAL ) )
            // InternalEtlParser.g:9796:1: ( RULE_NOT_EQUAL )
            {
            // InternalEtlParser.g:9796:1: ( RULE_NOT_EQUAL )
            // InternalEtlParser.g:9797:2: RULE_NOT_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueNotEquals__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueNotEquals__Group__1"
    // InternalEtlParser.g:9806:1: rule__BooleanValueNotEquals__Group__1 : rule__BooleanValueNotEquals__Group__1__Impl ;
    public final void rule__BooleanValueNotEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9810:1: ( rule__BooleanValueNotEquals__Group__1__Impl )
            // InternalEtlParser.g:9811:2: rule__BooleanValueNotEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueNotEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueNotEquals__Group__1"


    // $ANTLR start "rule__BooleanValueNotEquals__Group__1__Impl"
    // InternalEtlParser.g:9817:1: rule__BooleanValueNotEquals__Group__1__Impl : ( ( rule__BooleanValueNotEquals__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueNotEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9821:1: ( ( ( rule__BooleanValueNotEquals__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:9822:1: ( ( rule__BooleanValueNotEquals__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:9822:1: ( ( rule__BooleanValueNotEquals__ValueAssignment_1 ) )
            // InternalEtlParser.g:9823:2: ( rule__BooleanValueNotEquals__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueNotEqualsAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:9824:2: ( rule__BooleanValueNotEquals__ValueAssignment_1 )
            // InternalEtlParser.g:9824:3: rule__BooleanValueNotEquals__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueNotEquals__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueNotEqualsAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueNotEquals__Group__1__Impl"


    // $ANTLR start "rule__StringValueEquals__Group__0"
    // InternalEtlParser.g:9833:1: rule__StringValueEquals__Group__0 : rule__StringValueEquals__Group__0__Impl rule__StringValueEquals__Group__1 ;
    public final void rule__StringValueEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9837:1: ( rule__StringValueEquals__Group__0__Impl rule__StringValueEquals__Group__1 )
            // InternalEtlParser.g:9838:2: rule__StringValueEquals__Group__0__Impl rule__StringValueEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__StringValueEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueEquals__Group__0"


    // $ANTLR start "rule__StringValueEquals__Group__0__Impl"
    // InternalEtlParser.g:9845:1: rule__StringValueEquals__Group__0__Impl : ( RULE_EQUAL ) ;
    public final void rule__StringValueEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9849:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:9850:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:9850:1: ( RULE_EQUAL )
            // InternalEtlParser.g:9851:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueEquals__Group__0__Impl"


    // $ANTLR start "rule__StringValueEquals__Group__1"
    // InternalEtlParser.g:9860:1: rule__StringValueEquals__Group__1 : rule__StringValueEquals__Group__1__Impl ;
    public final void rule__StringValueEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9864:1: ( rule__StringValueEquals__Group__1__Impl )
            // InternalEtlParser.g:9865:2: rule__StringValueEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueEquals__Group__1"


    // $ANTLR start "rule__StringValueEquals__Group__1__Impl"
    // InternalEtlParser.g:9871:1: rule__StringValueEquals__Group__1__Impl : ( ( rule__StringValueEquals__ValueAssignment_1 ) ) ;
    public final void rule__StringValueEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9875:1: ( ( ( rule__StringValueEquals__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:9876:1: ( ( rule__StringValueEquals__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:9876:1: ( ( rule__StringValueEquals__ValueAssignment_1 ) )
            // InternalEtlParser.g:9877:2: ( rule__StringValueEquals__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueEqualsAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:9878:2: ( rule__StringValueEquals__ValueAssignment_1 )
            // InternalEtlParser.g:9878:3: rule__StringValueEquals__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueEquals__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueEqualsAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueEquals__Group__1__Impl"


    // $ANTLR start "rule__StringValueNotEquals__Group__0"
    // InternalEtlParser.g:9887:1: rule__StringValueNotEquals__Group__0 : rule__StringValueNotEquals__Group__0__Impl rule__StringValueNotEquals__Group__1 ;
    public final void rule__StringValueNotEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9891:1: ( rule__StringValueNotEquals__Group__0__Impl rule__StringValueNotEquals__Group__1 )
            // InternalEtlParser.g:9892:2: rule__StringValueNotEquals__Group__0__Impl rule__StringValueNotEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__StringValueNotEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueNotEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueNotEquals__Group__0"


    // $ANTLR start "rule__StringValueNotEquals__Group__0__Impl"
    // InternalEtlParser.g:9899:1: rule__StringValueNotEquals__Group__0__Impl : ( RULE_NOT_EQUAL ) ;
    public final void rule__StringValueNotEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9903:1: ( ( RULE_NOT_EQUAL ) )
            // InternalEtlParser.g:9904:1: ( RULE_NOT_EQUAL )
            {
            // InternalEtlParser.g:9904:1: ( RULE_NOT_EQUAL )
            // InternalEtlParser.g:9905:2: RULE_NOT_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueNotEquals__Group__0__Impl"


    // $ANTLR start "rule__StringValueNotEquals__Group__1"
    // InternalEtlParser.g:9914:1: rule__StringValueNotEquals__Group__1 : rule__StringValueNotEquals__Group__1__Impl ;
    public final void rule__StringValueNotEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9918:1: ( rule__StringValueNotEquals__Group__1__Impl )
            // InternalEtlParser.g:9919:2: rule__StringValueNotEquals__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueNotEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueNotEquals__Group__1"


    // $ANTLR start "rule__StringValueNotEquals__Group__1__Impl"
    // InternalEtlParser.g:9925:1: rule__StringValueNotEquals__Group__1__Impl : ( ( rule__StringValueNotEquals__ValueAssignment_1 ) ) ;
    public final void rule__StringValueNotEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9929:1: ( ( ( rule__StringValueNotEquals__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:9930:1: ( ( rule__StringValueNotEquals__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:9930:1: ( ( rule__StringValueNotEquals__ValueAssignment_1 ) )
            // InternalEtlParser.g:9931:2: ( rule__StringValueNotEquals__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueNotEqualsAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:9932:2: ( rule__StringValueNotEquals__ValueAssignment_1 )
            // InternalEtlParser.g:9932:3: rule__StringValueNotEquals__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueNotEquals__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueNotEqualsAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueNotEquals__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueEquals__Group__0"
    // InternalEtlParser.g:9941:1: rule__IntegerValueEquals__Group__0 : rule__IntegerValueEquals__Group__0__Impl rule__IntegerValueEquals__Group__1 ;
    public final void rule__IntegerValueEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9945:1: ( rule__IntegerValueEquals__Group__0__Impl rule__IntegerValueEquals__Group__1 )
            // InternalEtlParser.g:9946:2: rule__IntegerValueEquals__Group__0__Impl rule__IntegerValueEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__0"


    // $ANTLR start "rule__IntegerValueEquals__Group__0__Impl"
    // InternalEtlParser.g:9953:1: rule__IntegerValueEquals__Group__0__Impl : ( RULE_EQUAL ) ;
    public final void rule__IntegerValueEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9957:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:9958:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:9958:1: ( RULE_EQUAL )
            // InternalEtlParser.g:9959:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueEquals__Group__1"
    // InternalEtlParser.g:9968:1: rule__IntegerValueEquals__Group__1 : rule__IntegerValueEquals__Group__1__Impl rule__IntegerValueEquals__Group__2 ;
    public final void rule__IntegerValueEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9972:1: ( rule__IntegerValueEquals__Group__1__Impl rule__IntegerValueEquals__Group__2 )
            // InternalEtlParser.g:9973:2: rule__IntegerValueEquals__Group__1__Impl rule__IntegerValueEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__1"


    // $ANTLR start "rule__IntegerValueEquals__Group__1__Impl"
    // InternalEtlParser.g:9980:1: rule__IntegerValueEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9984:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:9985:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:9985:1: ( RULE_HASH )
            // InternalEtlParser.g:9986:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueEquals__Group__2"
    // InternalEtlParser.g:9995:1: rule__IntegerValueEquals__Group__2 : rule__IntegerValueEquals__Group__2__Impl ;
    public final void rule__IntegerValueEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9999:1: ( rule__IntegerValueEquals__Group__2__Impl )
            // InternalEtlParser.g:10000:2: rule__IntegerValueEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__2"


    // $ANTLR start "rule__IntegerValueEquals__Group__2__Impl"
    // InternalEtlParser.g:10006:1: rule__IntegerValueEquals__Group__2__Impl : ( ( rule__IntegerValueEquals__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10010:1: ( ( ( rule__IntegerValueEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10011:1: ( ( rule__IntegerValueEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10011:1: ( ( rule__IntegerValueEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10012:2: ( rule__IntegerValueEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10013:2: ( rule__IntegerValueEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10013:3: rule__IntegerValueEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__Group__2__Impl"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__0"
    // InternalEtlParser.g:10022:1: rule__IntegerValueNotEquals__Group__0 : rule__IntegerValueNotEquals__Group__0__Impl rule__IntegerValueNotEquals__Group__1 ;
    public final void rule__IntegerValueNotEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10026:1: ( rule__IntegerValueNotEquals__Group__0__Impl rule__IntegerValueNotEquals__Group__1 )
            // InternalEtlParser.g:10027:2: rule__IntegerValueNotEquals__Group__0__Impl rule__IntegerValueNotEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueNotEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueNotEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__0"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__0__Impl"
    // InternalEtlParser.g:10034:1: rule__IntegerValueNotEquals__Group__0__Impl : ( RULE_NOT_EQUAL ) ;
    public final void rule__IntegerValueNotEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10038:1: ( ( RULE_NOT_EQUAL ) )
            // InternalEtlParser.g:10039:1: ( RULE_NOT_EQUAL )
            {
            // InternalEtlParser.g:10039:1: ( RULE_NOT_EQUAL )
            // InternalEtlParser.g:10040:2: RULE_NOT_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__1"
    // InternalEtlParser.g:10049:1: rule__IntegerValueNotEquals__Group__1 : rule__IntegerValueNotEquals__Group__1__Impl rule__IntegerValueNotEquals__Group__2 ;
    public final void rule__IntegerValueNotEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10053:1: ( rule__IntegerValueNotEquals__Group__1__Impl rule__IntegerValueNotEquals__Group__2 )
            // InternalEtlParser.g:10054:2: rule__IntegerValueNotEquals__Group__1__Impl rule__IntegerValueNotEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueNotEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueNotEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__1"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__1__Impl"
    // InternalEtlParser.g:10061:1: rule__IntegerValueNotEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueNotEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10065:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10066:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10066:1: ( RULE_HASH )
            // InternalEtlParser.g:10067:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__2"
    // InternalEtlParser.g:10076:1: rule__IntegerValueNotEquals__Group__2 : rule__IntegerValueNotEquals__Group__2__Impl ;
    public final void rule__IntegerValueNotEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10080:1: ( rule__IntegerValueNotEquals__Group__2__Impl )
            // InternalEtlParser.g:10081:2: rule__IntegerValueNotEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueNotEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__2"


    // $ANTLR start "rule__IntegerValueNotEquals__Group__2__Impl"
    // InternalEtlParser.g:10087:1: rule__IntegerValueNotEquals__Group__2__Impl : ( ( rule__IntegerValueNotEquals__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueNotEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10091:1: ( ( ( rule__IntegerValueNotEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10092:1: ( ( rule__IntegerValueNotEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10092:1: ( ( rule__IntegerValueNotEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10093:2: ( rule__IntegerValueNotEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10094:2: ( rule__IntegerValueNotEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10094:3: rule__IntegerValueNotEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueNotEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__Group__2__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__0"
    // InternalEtlParser.g:10103:1: rule__IntegerValueGreaterThan__Group__0 : rule__IntegerValueGreaterThan__Group__0__Impl rule__IntegerValueGreaterThan__Group__1 ;
    public final void rule__IntegerValueGreaterThan__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10107:1: ( rule__IntegerValueGreaterThan__Group__0__Impl rule__IntegerValueGreaterThan__Group__1 )
            // InternalEtlParser.g:10108:2: rule__IntegerValueGreaterThan__Group__0__Impl rule__IntegerValueGreaterThan__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueGreaterThan__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThan__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__0"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__0__Impl"
    // InternalEtlParser.g:10115:1: rule__IntegerValueGreaterThan__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__IntegerValueGreaterThan__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10119:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:10120:1: ( RULE_GT )
            {
            // InternalEtlParser.g:10120:1: ( RULE_GT )
            // InternalEtlParser.g:10121:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__1"
    // InternalEtlParser.g:10130:1: rule__IntegerValueGreaterThan__Group__1 : rule__IntegerValueGreaterThan__Group__1__Impl rule__IntegerValueGreaterThan__Group__2 ;
    public final void rule__IntegerValueGreaterThan__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10134:1: ( rule__IntegerValueGreaterThan__Group__1__Impl rule__IntegerValueGreaterThan__Group__2 )
            // InternalEtlParser.g:10135:2: rule__IntegerValueGreaterThan__Group__1__Impl rule__IntegerValueGreaterThan__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueGreaterThan__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThan__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__1"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__1__Impl"
    // InternalEtlParser.g:10142:1: rule__IntegerValueGreaterThan__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueGreaterThan__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10146:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10147:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10147:1: ( RULE_HASH )
            // InternalEtlParser.g:10148:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__2"
    // InternalEtlParser.g:10157:1: rule__IntegerValueGreaterThan__Group__2 : rule__IntegerValueGreaterThan__Group__2__Impl ;
    public final void rule__IntegerValueGreaterThan__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10161:1: ( rule__IntegerValueGreaterThan__Group__2__Impl )
            // InternalEtlParser.g:10162:2: rule__IntegerValueGreaterThan__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThan__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__2"


    // $ANTLR start "rule__IntegerValueGreaterThan__Group__2__Impl"
    // InternalEtlParser.g:10168:1: rule__IntegerValueGreaterThan__Group__2__Impl : ( ( rule__IntegerValueGreaterThan__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueGreaterThan__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10172:1: ( ( ( rule__IntegerValueGreaterThan__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10173:1: ( ( rule__IntegerValueGreaterThan__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10173:1: ( ( rule__IntegerValueGreaterThan__ValueAssignment_2 ) )
            // InternalEtlParser.g:10174:2: ( rule__IntegerValueGreaterThan__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10175:2: ( rule__IntegerValueGreaterThan__ValueAssignment_2 )
            // InternalEtlParser.g:10175:3: rule__IntegerValueGreaterThan__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThan__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__Group__2__Impl"


    // $ANTLR start "rule__IntegerValueLessThan__Group__0"
    // InternalEtlParser.g:10184:1: rule__IntegerValueLessThan__Group__0 : rule__IntegerValueLessThan__Group__0__Impl rule__IntegerValueLessThan__Group__1 ;
    public final void rule__IntegerValueLessThan__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10188:1: ( rule__IntegerValueLessThan__Group__0__Impl rule__IntegerValueLessThan__Group__1 )
            // InternalEtlParser.g:10189:2: rule__IntegerValueLessThan__Group__0__Impl rule__IntegerValueLessThan__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueLessThan__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThan__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__0"


    // $ANTLR start "rule__IntegerValueLessThan__Group__0__Impl"
    // InternalEtlParser.g:10196:1: rule__IntegerValueLessThan__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__IntegerValueLessThan__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10200:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:10201:1: ( RULE_LT )
            {
            // InternalEtlParser.g:10201:1: ( RULE_LT )
            // InternalEtlParser.g:10202:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueLessThan__Group__1"
    // InternalEtlParser.g:10211:1: rule__IntegerValueLessThan__Group__1 : rule__IntegerValueLessThan__Group__1__Impl rule__IntegerValueLessThan__Group__2 ;
    public final void rule__IntegerValueLessThan__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10215:1: ( rule__IntegerValueLessThan__Group__1__Impl rule__IntegerValueLessThan__Group__2 )
            // InternalEtlParser.g:10216:2: rule__IntegerValueLessThan__Group__1__Impl rule__IntegerValueLessThan__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueLessThan__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThan__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__1"


    // $ANTLR start "rule__IntegerValueLessThan__Group__1__Impl"
    // InternalEtlParser.g:10223:1: rule__IntegerValueLessThan__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueLessThan__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10227:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10228:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10228:1: ( RULE_HASH )
            // InternalEtlParser.g:10229:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueLessThan__Group__2"
    // InternalEtlParser.g:10238:1: rule__IntegerValueLessThan__Group__2 : rule__IntegerValueLessThan__Group__2__Impl ;
    public final void rule__IntegerValueLessThan__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10242:1: ( rule__IntegerValueLessThan__Group__2__Impl )
            // InternalEtlParser.g:10243:2: rule__IntegerValueLessThan__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThan__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__2"


    // $ANTLR start "rule__IntegerValueLessThan__Group__2__Impl"
    // InternalEtlParser.g:10249:1: rule__IntegerValueLessThan__Group__2__Impl : ( ( rule__IntegerValueLessThan__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueLessThan__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10253:1: ( ( ( rule__IntegerValueLessThan__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10254:1: ( ( rule__IntegerValueLessThan__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10254:1: ( ( rule__IntegerValueLessThan__ValueAssignment_2 ) )
            // InternalEtlParser.g:10255:2: ( rule__IntegerValueLessThan__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10256:2: ( rule__IntegerValueLessThan__ValueAssignment_2 )
            // InternalEtlParser.g:10256:3: rule__IntegerValueLessThan__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThan__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__Group__2__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__0"
    // InternalEtlParser.g:10265:1: rule__IntegerValueGreaterThanEquals__Group__0 : rule__IntegerValueGreaterThanEquals__Group__0__Impl rule__IntegerValueGreaterThanEquals__Group__1 ;
    public final void rule__IntegerValueGreaterThanEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10269:1: ( rule__IntegerValueGreaterThanEquals__Group__0__Impl rule__IntegerValueGreaterThanEquals__Group__1 )
            // InternalEtlParser.g:10270:2: rule__IntegerValueGreaterThanEquals__Group__0__Impl rule__IntegerValueGreaterThanEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueGreaterThanEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThanEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__0"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__0__Impl"
    // InternalEtlParser.g:10277:1: rule__IntegerValueGreaterThanEquals__Group__0__Impl : ( RULE_GTE ) ;
    public final void rule__IntegerValueGreaterThanEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10281:1: ( ( RULE_GTE ) )
            // InternalEtlParser.g:10282:1: ( RULE_GTE )
            {
            // InternalEtlParser.g:10282:1: ( RULE_GTE )
            // InternalEtlParser.g:10283:2: RULE_GTE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getGTETerminalRuleCall_0()); 
            }
            match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getGTETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__1"
    // InternalEtlParser.g:10292:1: rule__IntegerValueGreaterThanEquals__Group__1 : rule__IntegerValueGreaterThanEquals__Group__1__Impl rule__IntegerValueGreaterThanEquals__Group__2 ;
    public final void rule__IntegerValueGreaterThanEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10296:1: ( rule__IntegerValueGreaterThanEquals__Group__1__Impl rule__IntegerValueGreaterThanEquals__Group__2 )
            // InternalEtlParser.g:10297:2: rule__IntegerValueGreaterThanEquals__Group__1__Impl rule__IntegerValueGreaterThanEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueGreaterThanEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThanEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__1"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__1__Impl"
    // InternalEtlParser.g:10304:1: rule__IntegerValueGreaterThanEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueGreaterThanEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10308:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10309:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10309:1: ( RULE_HASH )
            // InternalEtlParser.g:10310:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__2"
    // InternalEtlParser.g:10319:1: rule__IntegerValueGreaterThanEquals__Group__2 : rule__IntegerValueGreaterThanEquals__Group__2__Impl ;
    public final void rule__IntegerValueGreaterThanEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10323:1: ( rule__IntegerValueGreaterThanEquals__Group__2__Impl )
            // InternalEtlParser.g:10324:2: rule__IntegerValueGreaterThanEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThanEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__2"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__Group__2__Impl"
    // InternalEtlParser.g:10330:1: rule__IntegerValueGreaterThanEquals__Group__2__Impl : ( ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueGreaterThanEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10334:1: ( ( ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10335:1: ( ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10335:1: ( ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10336:2: ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10337:2: ( rule__IntegerValueGreaterThanEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10337:3: rule__IntegerValueGreaterThanEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueGreaterThanEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__Group__2__Impl"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__0"
    // InternalEtlParser.g:10346:1: rule__IntegerValueLessThanEquals__Group__0 : rule__IntegerValueLessThanEquals__Group__0__Impl rule__IntegerValueLessThanEquals__Group__1 ;
    public final void rule__IntegerValueLessThanEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10350:1: ( rule__IntegerValueLessThanEquals__Group__0__Impl rule__IntegerValueLessThanEquals__Group__1 )
            // InternalEtlParser.g:10351:2: rule__IntegerValueLessThanEquals__Group__0__Impl rule__IntegerValueLessThanEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__IntegerValueLessThanEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThanEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__0"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__0__Impl"
    // InternalEtlParser.g:10358:1: rule__IntegerValueLessThanEquals__Group__0__Impl : ( RULE_LTE ) ;
    public final void rule__IntegerValueLessThanEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10362:1: ( ( RULE_LTE ) )
            // InternalEtlParser.g:10363:1: ( RULE_LTE )
            {
            // InternalEtlParser.g:10363:1: ( RULE_LTE )
            // InternalEtlParser.g:10364:2: RULE_LTE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsAccess().getLTETerminalRuleCall_0()); 
            }
            match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsAccess().getLTETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__1"
    // InternalEtlParser.g:10373:1: rule__IntegerValueLessThanEquals__Group__1 : rule__IntegerValueLessThanEquals__Group__1__Impl rule__IntegerValueLessThanEquals__Group__2 ;
    public final void rule__IntegerValueLessThanEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10377:1: ( rule__IntegerValueLessThanEquals__Group__1__Impl rule__IntegerValueLessThanEquals__Group__2 )
            // InternalEtlParser.g:10378:2: rule__IntegerValueLessThanEquals__Group__1__Impl rule__IntegerValueLessThanEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__IntegerValueLessThanEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThanEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__1"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__1__Impl"
    // InternalEtlParser.g:10385:1: rule__IntegerValueLessThanEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueLessThanEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10389:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10390:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10390:1: ( RULE_HASH )
            // InternalEtlParser.g:10391:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__2"
    // InternalEtlParser.g:10400:1: rule__IntegerValueLessThanEquals__Group__2 : rule__IntegerValueLessThanEquals__Group__2__Impl ;
    public final void rule__IntegerValueLessThanEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10404:1: ( rule__IntegerValueLessThanEquals__Group__2__Impl )
            // InternalEtlParser.g:10405:2: rule__IntegerValueLessThanEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThanEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__2"


    // $ANTLR start "rule__IntegerValueLessThanEquals__Group__2__Impl"
    // InternalEtlParser.g:10411:1: rule__IntegerValueLessThanEquals__Group__2__Impl : ( ( rule__IntegerValueLessThanEquals__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueLessThanEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10415:1: ( ( ( rule__IntegerValueLessThanEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10416:1: ( ( rule__IntegerValueLessThanEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10416:1: ( ( rule__IntegerValueLessThanEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10417:2: ( rule__IntegerValueLessThanEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10418:2: ( rule__IntegerValueLessThanEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10418:3: rule__IntegerValueLessThanEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueLessThanEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueEquals__Group__0"
    // InternalEtlParser.g:10427:1: rule__DecimalValueEquals__Group__0 : rule__DecimalValueEquals__Group__0__Impl rule__DecimalValueEquals__Group__1 ;
    public final void rule__DecimalValueEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10431:1: ( rule__DecimalValueEquals__Group__0__Impl rule__DecimalValueEquals__Group__1 )
            // InternalEtlParser.g:10432:2: rule__DecimalValueEquals__Group__0__Impl rule__DecimalValueEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__0"


    // $ANTLR start "rule__DecimalValueEquals__Group__0__Impl"
    // InternalEtlParser.g:10439:1: rule__DecimalValueEquals__Group__0__Impl : ( RULE_EQUAL ) ;
    public final void rule__DecimalValueEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10443:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:10444:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:10444:1: ( RULE_EQUAL )
            // InternalEtlParser.g:10445:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsAccess().getEQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueEquals__Group__1"
    // InternalEtlParser.g:10454:1: rule__DecimalValueEquals__Group__1 : rule__DecimalValueEquals__Group__1__Impl rule__DecimalValueEquals__Group__2 ;
    public final void rule__DecimalValueEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10458:1: ( rule__DecimalValueEquals__Group__1__Impl rule__DecimalValueEquals__Group__2 )
            // InternalEtlParser.g:10459:2: rule__DecimalValueEquals__Group__1__Impl rule__DecimalValueEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__1"


    // $ANTLR start "rule__DecimalValueEquals__Group__1__Impl"
    // InternalEtlParser.g:10466:1: rule__DecimalValueEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10470:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10471:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10471:1: ( RULE_HASH )
            // InternalEtlParser.g:10472:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueEquals__Group__2"
    // InternalEtlParser.g:10481:1: rule__DecimalValueEquals__Group__2 : rule__DecimalValueEquals__Group__2__Impl ;
    public final void rule__DecimalValueEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10485:1: ( rule__DecimalValueEquals__Group__2__Impl )
            // InternalEtlParser.g:10486:2: rule__DecimalValueEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__2"


    // $ANTLR start "rule__DecimalValueEquals__Group__2__Impl"
    // InternalEtlParser.g:10492:1: rule__DecimalValueEquals__Group__2__Impl : ( ( rule__DecimalValueEquals__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10496:1: ( ( ( rule__DecimalValueEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10497:1: ( ( rule__DecimalValueEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10497:1: ( ( rule__DecimalValueEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10498:2: ( rule__DecimalValueEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10499:2: ( rule__DecimalValueEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10499:3: rule__DecimalValueEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__0"
    // InternalEtlParser.g:10508:1: rule__DecimalValueNotEquals__Group__0 : rule__DecimalValueNotEquals__Group__0__Impl rule__DecimalValueNotEquals__Group__1 ;
    public final void rule__DecimalValueNotEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10512:1: ( rule__DecimalValueNotEquals__Group__0__Impl rule__DecimalValueNotEquals__Group__1 )
            // InternalEtlParser.g:10513:2: rule__DecimalValueNotEquals__Group__0__Impl rule__DecimalValueNotEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueNotEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueNotEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__0"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__0__Impl"
    // InternalEtlParser.g:10520:1: rule__DecimalValueNotEquals__Group__0__Impl : ( RULE_NOT_EQUAL ) ;
    public final void rule__DecimalValueNotEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10524:1: ( ( RULE_NOT_EQUAL ) )
            // InternalEtlParser.g:10525:1: ( RULE_NOT_EQUAL )
            {
            // InternalEtlParser.g:10525:1: ( RULE_NOT_EQUAL )
            // InternalEtlParser.g:10526:2: RULE_NOT_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }
            match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsAccess().getNOT_EQUALTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__1"
    // InternalEtlParser.g:10535:1: rule__DecimalValueNotEquals__Group__1 : rule__DecimalValueNotEquals__Group__1__Impl rule__DecimalValueNotEquals__Group__2 ;
    public final void rule__DecimalValueNotEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10539:1: ( rule__DecimalValueNotEquals__Group__1__Impl rule__DecimalValueNotEquals__Group__2 )
            // InternalEtlParser.g:10540:2: rule__DecimalValueNotEquals__Group__1__Impl rule__DecimalValueNotEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueNotEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueNotEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__1"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__1__Impl"
    // InternalEtlParser.g:10547:1: rule__DecimalValueNotEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueNotEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10551:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10552:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10552:1: ( RULE_HASH )
            // InternalEtlParser.g:10553:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__2"
    // InternalEtlParser.g:10562:1: rule__DecimalValueNotEquals__Group__2 : rule__DecimalValueNotEquals__Group__2__Impl ;
    public final void rule__DecimalValueNotEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10566:1: ( rule__DecimalValueNotEquals__Group__2__Impl )
            // InternalEtlParser.g:10567:2: rule__DecimalValueNotEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueNotEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__2"


    // $ANTLR start "rule__DecimalValueNotEquals__Group__2__Impl"
    // InternalEtlParser.g:10573:1: rule__DecimalValueNotEquals__Group__2__Impl : ( ( rule__DecimalValueNotEquals__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueNotEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10577:1: ( ( ( rule__DecimalValueNotEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10578:1: ( ( rule__DecimalValueNotEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10578:1: ( ( rule__DecimalValueNotEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10579:2: ( rule__DecimalValueNotEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10580:2: ( rule__DecimalValueNotEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10580:3: rule__DecimalValueNotEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueNotEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__0"
    // InternalEtlParser.g:10589:1: rule__DecimalValueGreaterThan__Group__0 : rule__DecimalValueGreaterThan__Group__0__Impl rule__DecimalValueGreaterThan__Group__1 ;
    public final void rule__DecimalValueGreaterThan__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10593:1: ( rule__DecimalValueGreaterThan__Group__0__Impl rule__DecimalValueGreaterThan__Group__1 )
            // InternalEtlParser.g:10594:2: rule__DecimalValueGreaterThan__Group__0__Impl rule__DecimalValueGreaterThan__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueGreaterThan__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThan__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__0"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__0__Impl"
    // InternalEtlParser.g:10601:1: rule__DecimalValueGreaterThan__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__DecimalValueGreaterThan__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10605:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:10606:1: ( RULE_GT )
            {
            // InternalEtlParser.g:10606:1: ( RULE_GT )
            // InternalEtlParser.g:10607:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__1"
    // InternalEtlParser.g:10616:1: rule__DecimalValueGreaterThan__Group__1 : rule__DecimalValueGreaterThan__Group__1__Impl rule__DecimalValueGreaterThan__Group__2 ;
    public final void rule__DecimalValueGreaterThan__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10620:1: ( rule__DecimalValueGreaterThan__Group__1__Impl rule__DecimalValueGreaterThan__Group__2 )
            // InternalEtlParser.g:10621:2: rule__DecimalValueGreaterThan__Group__1__Impl rule__DecimalValueGreaterThan__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueGreaterThan__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThan__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__1"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__1__Impl"
    // InternalEtlParser.g:10628:1: rule__DecimalValueGreaterThan__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueGreaterThan__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10632:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10633:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10633:1: ( RULE_HASH )
            // InternalEtlParser.g:10634:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__2"
    // InternalEtlParser.g:10643:1: rule__DecimalValueGreaterThan__Group__2 : rule__DecimalValueGreaterThan__Group__2__Impl ;
    public final void rule__DecimalValueGreaterThan__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10647:1: ( rule__DecimalValueGreaterThan__Group__2__Impl )
            // InternalEtlParser.g:10648:2: rule__DecimalValueGreaterThan__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThan__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__2"


    // $ANTLR start "rule__DecimalValueGreaterThan__Group__2__Impl"
    // InternalEtlParser.g:10654:1: rule__DecimalValueGreaterThan__Group__2__Impl : ( ( rule__DecimalValueGreaterThan__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueGreaterThan__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10658:1: ( ( ( rule__DecimalValueGreaterThan__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10659:1: ( ( rule__DecimalValueGreaterThan__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10659:1: ( ( rule__DecimalValueGreaterThan__ValueAssignment_2 ) )
            // InternalEtlParser.g:10660:2: ( rule__DecimalValueGreaterThan__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10661:2: ( rule__DecimalValueGreaterThan__ValueAssignment_2 )
            // InternalEtlParser.g:10661:3: rule__DecimalValueGreaterThan__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThan__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueLessThan__Group__0"
    // InternalEtlParser.g:10670:1: rule__DecimalValueLessThan__Group__0 : rule__DecimalValueLessThan__Group__0__Impl rule__DecimalValueLessThan__Group__1 ;
    public final void rule__DecimalValueLessThan__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10674:1: ( rule__DecimalValueLessThan__Group__0__Impl rule__DecimalValueLessThan__Group__1 )
            // InternalEtlParser.g:10675:2: rule__DecimalValueLessThan__Group__0__Impl rule__DecimalValueLessThan__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueLessThan__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThan__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__0"


    // $ANTLR start "rule__DecimalValueLessThan__Group__0__Impl"
    // InternalEtlParser.g:10682:1: rule__DecimalValueLessThan__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DecimalValueLessThan__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10686:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:10687:1: ( RULE_LT )
            {
            // InternalEtlParser.g:10687:1: ( RULE_LT )
            // InternalEtlParser.g:10688:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueLessThan__Group__1"
    // InternalEtlParser.g:10697:1: rule__DecimalValueLessThan__Group__1 : rule__DecimalValueLessThan__Group__1__Impl rule__DecimalValueLessThan__Group__2 ;
    public final void rule__DecimalValueLessThan__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10701:1: ( rule__DecimalValueLessThan__Group__1__Impl rule__DecimalValueLessThan__Group__2 )
            // InternalEtlParser.g:10702:2: rule__DecimalValueLessThan__Group__1__Impl rule__DecimalValueLessThan__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueLessThan__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThan__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__1"


    // $ANTLR start "rule__DecimalValueLessThan__Group__1__Impl"
    // InternalEtlParser.g:10709:1: rule__DecimalValueLessThan__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueLessThan__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10713:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10714:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10714:1: ( RULE_HASH )
            // InternalEtlParser.g:10715:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueLessThan__Group__2"
    // InternalEtlParser.g:10724:1: rule__DecimalValueLessThan__Group__2 : rule__DecimalValueLessThan__Group__2__Impl ;
    public final void rule__DecimalValueLessThan__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10728:1: ( rule__DecimalValueLessThan__Group__2__Impl )
            // InternalEtlParser.g:10729:2: rule__DecimalValueLessThan__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThan__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__2"


    // $ANTLR start "rule__DecimalValueLessThan__Group__2__Impl"
    // InternalEtlParser.g:10735:1: rule__DecimalValueLessThan__Group__2__Impl : ( ( rule__DecimalValueLessThan__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueLessThan__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10739:1: ( ( ( rule__DecimalValueLessThan__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10740:1: ( ( rule__DecimalValueLessThan__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10740:1: ( ( rule__DecimalValueLessThan__ValueAssignment_2 ) )
            // InternalEtlParser.g:10741:2: ( rule__DecimalValueLessThan__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10742:2: ( rule__DecimalValueLessThan__ValueAssignment_2 )
            // InternalEtlParser.g:10742:3: rule__DecimalValueLessThan__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThan__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__0"
    // InternalEtlParser.g:10751:1: rule__DecimalValueGreaterThanEquals__Group__0 : rule__DecimalValueGreaterThanEquals__Group__0__Impl rule__DecimalValueGreaterThanEquals__Group__1 ;
    public final void rule__DecimalValueGreaterThanEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10755:1: ( rule__DecimalValueGreaterThanEquals__Group__0__Impl rule__DecimalValueGreaterThanEquals__Group__1 )
            // InternalEtlParser.g:10756:2: rule__DecimalValueGreaterThanEquals__Group__0__Impl rule__DecimalValueGreaterThanEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueGreaterThanEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThanEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__0"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__0__Impl"
    // InternalEtlParser.g:10763:1: rule__DecimalValueGreaterThanEquals__Group__0__Impl : ( RULE_GTE ) ;
    public final void rule__DecimalValueGreaterThanEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10767:1: ( ( RULE_GTE ) )
            // InternalEtlParser.g:10768:1: ( RULE_GTE )
            {
            // InternalEtlParser.g:10768:1: ( RULE_GTE )
            // InternalEtlParser.g:10769:2: RULE_GTE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getGTETerminalRuleCall_0()); 
            }
            match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getGTETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__1"
    // InternalEtlParser.g:10778:1: rule__DecimalValueGreaterThanEquals__Group__1 : rule__DecimalValueGreaterThanEquals__Group__1__Impl rule__DecimalValueGreaterThanEquals__Group__2 ;
    public final void rule__DecimalValueGreaterThanEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10782:1: ( rule__DecimalValueGreaterThanEquals__Group__1__Impl rule__DecimalValueGreaterThanEquals__Group__2 )
            // InternalEtlParser.g:10783:2: rule__DecimalValueGreaterThanEquals__Group__1__Impl rule__DecimalValueGreaterThanEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueGreaterThanEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThanEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__1"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__1__Impl"
    // InternalEtlParser.g:10790:1: rule__DecimalValueGreaterThanEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueGreaterThanEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10794:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10795:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10795:1: ( RULE_HASH )
            // InternalEtlParser.g:10796:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__2"
    // InternalEtlParser.g:10805:1: rule__DecimalValueGreaterThanEquals__Group__2 : rule__DecimalValueGreaterThanEquals__Group__2__Impl ;
    public final void rule__DecimalValueGreaterThanEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10809:1: ( rule__DecimalValueGreaterThanEquals__Group__2__Impl )
            // InternalEtlParser.g:10810:2: rule__DecimalValueGreaterThanEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThanEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__2"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__Group__2__Impl"
    // InternalEtlParser.g:10816:1: rule__DecimalValueGreaterThanEquals__Group__2__Impl : ( ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueGreaterThanEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10820:1: ( ( ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10821:1: ( ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10821:1: ( ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10822:2: ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10823:2: ( rule__DecimalValueGreaterThanEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10823:3: rule__DecimalValueGreaterThanEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueGreaterThanEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__0"
    // InternalEtlParser.g:10832:1: rule__DecimalValueLessThanEquals__Group__0 : rule__DecimalValueLessThanEquals__Group__0__Impl rule__DecimalValueLessThanEquals__Group__1 ;
    public final void rule__DecimalValueLessThanEquals__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10836:1: ( rule__DecimalValueLessThanEquals__Group__0__Impl rule__DecimalValueLessThanEquals__Group__1 )
            // InternalEtlParser.g:10837:2: rule__DecimalValueLessThanEquals__Group__0__Impl rule__DecimalValueLessThanEquals__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__DecimalValueLessThanEquals__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThanEquals__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__0"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__0__Impl"
    // InternalEtlParser.g:10844:1: rule__DecimalValueLessThanEquals__Group__0__Impl : ( RULE_LTE ) ;
    public final void rule__DecimalValueLessThanEquals__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10848:1: ( ( RULE_LTE ) )
            // InternalEtlParser.g:10849:1: ( RULE_LTE )
            {
            // InternalEtlParser.g:10849:1: ( RULE_LTE )
            // InternalEtlParser.g:10850:2: RULE_LTE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsAccess().getLTETerminalRuleCall_0()); 
            }
            match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsAccess().getLTETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__1"
    // InternalEtlParser.g:10859:1: rule__DecimalValueLessThanEquals__Group__1 : rule__DecimalValueLessThanEquals__Group__1__Impl rule__DecimalValueLessThanEquals__Group__2 ;
    public final void rule__DecimalValueLessThanEquals__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10863:1: ( rule__DecimalValueLessThanEquals__Group__1__Impl rule__DecimalValueLessThanEquals__Group__2 )
            // InternalEtlParser.g:10864:2: rule__DecimalValueLessThanEquals__Group__1__Impl rule__DecimalValueLessThanEquals__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DecimalValueLessThanEquals__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThanEquals__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__1"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__1__Impl"
    // InternalEtlParser.g:10871:1: rule__DecimalValueLessThanEquals__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueLessThanEquals__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10875:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:10876:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:10876:1: ( RULE_HASH )
            // InternalEtlParser.g:10877:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__2"
    // InternalEtlParser.g:10886:1: rule__DecimalValueLessThanEquals__Group__2 : rule__DecimalValueLessThanEquals__Group__2__Impl ;
    public final void rule__DecimalValueLessThanEquals__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10890:1: ( rule__DecimalValueLessThanEquals__Group__2__Impl )
            // InternalEtlParser.g:10891:2: rule__DecimalValueLessThanEquals__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThanEquals__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__2"


    // $ANTLR start "rule__DecimalValueLessThanEquals__Group__2__Impl"
    // InternalEtlParser.g:10897:1: rule__DecimalValueLessThanEquals__Group__2__Impl : ( ( rule__DecimalValueLessThanEquals__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueLessThanEquals__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10901:1: ( ( ( rule__DecimalValueLessThanEquals__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:10902:1: ( ( rule__DecimalValueLessThanEquals__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:10902:1: ( ( rule__DecimalValueLessThanEquals__ValueAssignment_2 ) )
            // InternalEtlParser.g:10903:2: ( rule__DecimalValueLessThanEquals__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:10904:2: ( rule__DecimalValueLessThanEquals__ValueAssignment_2 )
            // InternalEtlParser.g:10904:3: rule__DecimalValueLessThanEquals__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueLessThanEquals__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEtlParser.g:10913:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10917:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEtlParser.g:10918:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEtlParser.g:10925:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10929:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10930:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10930:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10931:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEtlParser.g:10940:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10944:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEtlParser.g:10945:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEtlParser.g:10952:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10956:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:10957:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:10957:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEtlParser.g:10958:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:10959:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEtlParser.g:10959:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEtlParser.g:10967:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10971:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEtlParser.g:10972:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEtlParser.g:10978:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10982:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10983:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10983:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10984:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__0"
    // InternalEtlParser.g:10994:1: rule__SnomedIdentifier__Group__0 : rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 ;
    public final void rule__SnomedIdentifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10998:1: ( rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 )
            // InternalEtlParser.g:10999:2: rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__SnomedIdentifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0"


    // $ANTLR start "rule__SnomedIdentifier__Group__0__Impl"
    // InternalEtlParser.g:11006:1: rule__SnomedIdentifier__Group__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__SnomedIdentifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11010:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEtlParser.g:11011:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEtlParser.g:11011:1: ( RULE_DIGIT_NONZERO )
            // InternalEtlParser.g:11012:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__1"
    // InternalEtlParser.g:11021:1: rule__SnomedIdentifier__Group__1 : rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 ;
    public final void rule__SnomedIdentifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11025:1: ( rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 )
            // InternalEtlParser.g:11026:2: rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__SnomedIdentifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1"


    // $ANTLR start "rule__SnomedIdentifier__Group__1__Impl"
    // InternalEtlParser.g:11033:1: rule__SnomedIdentifier__Group__1__Impl : ( ( rule__SnomedIdentifier__Alternatives_1 ) ) ;
    public final void rule__SnomedIdentifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11037:1: ( ( ( rule__SnomedIdentifier__Alternatives_1 ) ) )
            // InternalEtlParser.g:11038:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            {
            // InternalEtlParser.g:11038:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            // InternalEtlParser.g:11039:2: ( rule__SnomedIdentifier__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }
            // InternalEtlParser.g:11040:2: ( rule__SnomedIdentifier__Alternatives_1 )
            // InternalEtlParser.g:11040:3: rule__SnomedIdentifier__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__2"
    // InternalEtlParser.g:11048:1: rule__SnomedIdentifier__Group__2 : rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 ;
    public final void rule__SnomedIdentifier__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11052:1: ( rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 )
            // InternalEtlParser.g:11053:2: rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__SnomedIdentifier__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2"


    // $ANTLR start "rule__SnomedIdentifier__Group__2__Impl"
    // InternalEtlParser.g:11060:1: rule__SnomedIdentifier__Group__2__Impl : ( ( rule__SnomedIdentifier__Alternatives_2 ) ) ;
    public final void rule__SnomedIdentifier__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11064:1: ( ( ( rule__SnomedIdentifier__Alternatives_2 ) ) )
            // InternalEtlParser.g:11065:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            {
            // InternalEtlParser.g:11065:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            // InternalEtlParser.g:11066:2: ( rule__SnomedIdentifier__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:11067:2: ( rule__SnomedIdentifier__Alternatives_2 )
            // InternalEtlParser.g:11067:3: rule__SnomedIdentifier__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__3"
    // InternalEtlParser.g:11075:1: rule__SnomedIdentifier__Group__3 : rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 ;
    public final void rule__SnomedIdentifier__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11079:1: ( rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 )
            // InternalEtlParser.g:11080:2: rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__SnomedIdentifier__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3"


    // $ANTLR start "rule__SnomedIdentifier__Group__3__Impl"
    // InternalEtlParser.g:11087:1: rule__SnomedIdentifier__Group__3__Impl : ( ( rule__SnomedIdentifier__Alternatives_3 ) ) ;
    public final void rule__SnomedIdentifier__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11091:1: ( ( ( rule__SnomedIdentifier__Alternatives_3 ) ) )
            // InternalEtlParser.g:11092:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            {
            // InternalEtlParser.g:11092:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            // InternalEtlParser.g:11093:2: ( rule__SnomedIdentifier__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }
            // InternalEtlParser.g:11094:2: ( rule__SnomedIdentifier__Alternatives_3 )
            // InternalEtlParser.g:11094:3: rule__SnomedIdentifier__Alternatives_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__4"
    // InternalEtlParser.g:11102:1: rule__SnomedIdentifier__Group__4 : rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 ;
    public final void rule__SnomedIdentifier__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11106:1: ( rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 )
            // InternalEtlParser.g:11107:2: rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__SnomedIdentifier__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4"


    // $ANTLR start "rule__SnomedIdentifier__Group__4__Impl"
    // InternalEtlParser.g:11114:1: rule__SnomedIdentifier__Group__4__Impl : ( ( rule__SnomedIdentifier__Alternatives_4 ) ) ;
    public final void rule__SnomedIdentifier__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11118:1: ( ( ( rule__SnomedIdentifier__Alternatives_4 ) ) )
            // InternalEtlParser.g:11119:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            {
            // InternalEtlParser.g:11119:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            // InternalEtlParser.g:11120:2: ( rule__SnomedIdentifier__Alternatives_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }
            // InternalEtlParser.g:11121:2: ( rule__SnomedIdentifier__Alternatives_4 )
            // InternalEtlParser.g:11121:3: rule__SnomedIdentifier__Alternatives_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__5"
    // InternalEtlParser.g:11129:1: rule__SnomedIdentifier__Group__5 : rule__SnomedIdentifier__Group__5__Impl ;
    public final void rule__SnomedIdentifier__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11133:1: ( rule__SnomedIdentifier__Group__5__Impl )
            // InternalEtlParser.g:11134:2: rule__SnomedIdentifier__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5"


    // $ANTLR start "rule__SnomedIdentifier__Group__5__Impl"
    // InternalEtlParser.g:11140:1: rule__SnomedIdentifier__Group__5__Impl : ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) ;
    public final void rule__SnomedIdentifier__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11144:1: ( ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) )
            // InternalEtlParser.g:11145:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            {
            // InternalEtlParser.g:11145:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            // InternalEtlParser.g:11146:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            {
            // InternalEtlParser.g:11146:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) )
            // InternalEtlParser.g:11147:3: ( rule__SnomedIdentifier__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEtlParser.g:11148:3: ( rule__SnomedIdentifier__Alternatives_5 )
            // InternalEtlParser.g:11148:4: rule__SnomedIdentifier__Alternatives_5
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__SnomedIdentifier__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }

            // InternalEtlParser.g:11151:2: ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            // InternalEtlParser.g:11152:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEtlParser.g:11153:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( ((LA87_0>=RULE_ZERO && LA87_0<=RULE_DIGIT_NONZERO)) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalEtlParser.g:11153:4: rule__SnomedIdentifier__Alternatives_5
            	    {
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    rule__SnomedIdentifier__Alternatives_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0"
    // InternalEtlParser.g:11163:1: rule__NonNegativeInteger__Group_1__0 : rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 ;
    public final void rule__NonNegativeInteger__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11167:1: ( rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 )
            // InternalEtlParser.g:11168:2: rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__NonNegativeInteger__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0__Impl"
    // InternalEtlParser.g:11175:1: rule__NonNegativeInteger__Group_1__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__NonNegativeInteger__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11179:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEtlParser.g:11180:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEtlParser.g:11180:1: ( RULE_DIGIT_NONZERO )
            // InternalEtlParser.g:11181:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1"
    // InternalEtlParser.g:11190:1: rule__NonNegativeInteger__Group_1__1 : rule__NonNegativeInteger__Group_1__1__Impl ;
    public final void rule__NonNegativeInteger__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11194:1: ( rule__NonNegativeInteger__Group_1__1__Impl )
            // InternalEtlParser.g:11195:2: rule__NonNegativeInteger__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1__Impl"
    // InternalEtlParser.g:11201:1: rule__NonNegativeInteger__Group_1__1__Impl : ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) ;
    public final void rule__NonNegativeInteger__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11205:1: ( ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) )
            // InternalEtlParser.g:11206:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            {
            // InternalEtlParser.g:11206:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            // InternalEtlParser.g:11207:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:11208:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( ((LA88_0>=RULE_ZERO && LA88_0<=RULE_DIGIT_NONZERO)) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalEtlParser.g:11208:3: rule__NonNegativeInteger__Alternatives_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    rule__NonNegativeInteger__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEtlParser.g:11217:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11221:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEtlParser.g:11222:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEtlParser.g:11229:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11233:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEtlParser.g:11234:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEtlParser.g:11234:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEtlParser.g:11235:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:11236:2: ( rule__Integer__Alternatives_0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=RULE_PLUS && LA89_0<=RULE_DASH)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalEtlParser.g:11236:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEtlParser.g:11244:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11248:1: ( rule__Integer__Group__1__Impl )
            // InternalEtlParser.g:11249:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEtlParser.g:11255:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11259:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:11260:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:11260:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:11261:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEtlParser.g:11271:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11275:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEtlParser.g:11276:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEtlParser.g:11283:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11287:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEtlParser.g:11288:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEtlParser.g:11288:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEtlParser.g:11289:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:11290:2: ( rule__Decimal__Alternatives_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=RULE_PLUS && LA90_0<=RULE_DASH)) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalEtlParser.g:11290:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEtlParser.g:11298:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11302:1: ( rule__Decimal__Group__1__Impl )
            // InternalEtlParser.g:11303:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEtlParser.g:11309:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11313:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:11314:1: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:11314:1: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:11315:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEtlParser.g:11325:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11329:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEtlParser.g:11330:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEtlParser.g:11337:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11341:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:11342:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:11342:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:11343:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEtlParser.g:11352:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11356:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEtlParser.g:11357:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEtlParser.g:11364:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11368:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:11369:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:11369:1: ( RULE_DOT )
            // InternalEtlParser.g:11370:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEtlParser.g:11379:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11383:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEtlParser.g:11384:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEtlParser.g:11390:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11394:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEtlParser.g:11395:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEtlParser.g:11395:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEtlParser.g:11396:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:11397:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=RULE_ZERO && LA91_0<=RULE_DIGIT_NONZERO)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalEtlParser.g:11397:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"
    // InternalEtlParser.g:11406:1: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 : ( RULE_SUBTYPE_OF ) ;
    public final void rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11410:1: ( ( RULE_SUBTYPE_OF ) )
            // InternalEtlParser.g:11411:2: ( RULE_SUBTYPE_OF )
            {
            // InternalEtlParser.g:11411:2: ( RULE_SUBTYPE_OF )
            // InternalEtlParser.g:11412:3: RULE_SUBTYPE_OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }
            match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"


    // $ANTLR start "rule__ExpressionTemplate__SlotAssignment_1_0_1"
    // InternalEtlParser.g:11421:1: rule__ExpressionTemplate__SlotAssignment_1_0_1 : ( ruleTokenReplacementSlot ) ;
    public final void rule__ExpressionTemplate__SlotAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11425:1: ( ( ruleTokenReplacementSlot ) )
            // InternalEtlParser.g:11426:2: ( ruleTokenReplacementSlot )
            {
            // InternalEtlParser.g:11426:2: ( ruleTokenReplacementSlot )
            // InternalEtlParser.g:11427:3: ruleTokenReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__SlotAssignment_1_0_1"


    // $ANTLR start "rule__ExpressionTemplate__ExpressionAssignment_1_1"
    // InternalEtlParser.g:11436:1: rule__ExpressionTemplate__ExpressionAssignment_1_1 : ( ruleSubExpression ) ;
    public final void rule__ExpressionTemplate__ExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11440:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:11441:2: ( ruleSubExpression )
            {
            // InternalEtlParser.g:11441:2: ( ruleSubExpression )
            // InternalEtlParser.g:11442:3: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__ExpressionAssignment_1_1"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_0"
    // InternalEtlParser.g:11451:1: rule__SubExpression__FocusConceptsAssignment_0 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11455:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:11456:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:11456:2: ( ruleFocusConcept )
            // InternalEtlParser.g:11457:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_0"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_1_1"
    // InternalEtlParser.g:11466:1: rule__SubExpression__FocusConceptsAssignment_1_1 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11470:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:11471:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:11471:2: ( ruleFocusConcept )
            // InternalEtlParser.g:11472:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_1_1"


    // $ANTLR start "rule__SubExpression__RefinementAssignment_2_1"
    // InternalEtlParser.g:11481:1: rule__SubExpression__RefinementAssignment_2_1 : ( ruleRefinement ) ;
    public final void rule__SubExpression__RefinementAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11485:1: ( ( ruleRefinement ) )
            // InternalEtlParser.g:11486:2: ( ruleRefinement )
            {
            // InternalEtlParser.g:11486:2: ( ruleRefinement )
            // InternalEtlParser.g:11487:3: ruleRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__RefinementAssignment_2_1"


    // $ANTLR start "rule__FocusConcept__SlotAssignment_0"
    // InternalEtlParser.g:11496:1: rule__FocusConcept__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__FocusConcept__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11500:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:11501:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:11501:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:11502:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__SlotAssignment_0"


    // $ANTLR start "rule__FocusConcept__ConceptAssignment_1"
    // InternalEtlParser.g:11511:1: rule__FocusConcept__ConceptAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__FocusConcept__ConceptAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11515:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:11516:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:11516:2: ( ruleConceptReference )
            // InternalEtlParser.g:11517:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__ConceptAssignment_1"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_0"
    // InternalEtlParser.g:11526:1: rule__Refinement__AttributesAssignment_0_0_0 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11530:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:11531:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:11531:2: ( ruleAttribute )
            // InternalEtlParser.g:11532:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_0"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_1_1"
    // InternalEtlParser.g:11541:1: rule__Refinement__AttributesAssignment_0_0_1_1 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11545:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:11546:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:11546:2: ( ruleAttribute )
            // InternalEtlParser.g:11547:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_1_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_0_1"
    // InternalEtlParser.g:11556:1: rule__Refinement__GroupsAssignment_0_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11560:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:11561:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:11561:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:11562:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_0_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_1_1"
    // InternalEtlParser.g:11571:1: rule__Refinement__GroupsAssignment_1_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11575:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:11576:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:11576:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:11577:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_1_1"


    // $ANTLR start "rule__AttributeGroup__SlotAssignment_0"
    // InternalEtlParser.g:11586:1: rule__AttributeGroup__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__AttributeGroup__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11590:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:11591:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:11591:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:11592:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__SlotAssignment_0"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_2"
    // InternalEtlParser.g:11601:1: rule__AttributeGroup__AttributesAssignment_2 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11605:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:11606:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:11606:2: ( ruleAttribute )
            // InternalEtlParser.g:11607:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_2"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_3_1"
    // InternalEtlParser.g:11616:1: rule__AttributeGroup__AttributesAssignment_3_1 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11620:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:11621:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:11621:2: ( ruleAttribute )
            // InternalEtlParser.g:11622:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_3_1"


    // $ANTLR start "rule__Attribute__SlotAssignment_0"
    // InternalEtlParser.g:11631:1: rule__Attribute__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__Attribute__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11635:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:11636:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:11636:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:11637:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__SlotAssignment_0"


    // $ANTLR start "rule__Attribute__NameAssignment_1"
    // InternalEtlParser.g:11646:1: rule__Attribute__NameAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__Attribute__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11650:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:11651:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:11651:2: ( ruleConceptReference )
            // InternalEtlParser.g:11652:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__NameAssignment_1"


    // $ANTLR start "rule__Attribute__ValueAssignment_3"
    // InternalEtlParser.g:11661:1: rule__Attribute__ValueAssignment_3 : ( ruleAttributeValue ) ;
    public final void rule__Attribute__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11665:1: ( ( ruleAttributeValue ) )
            // InternalEtlParser.g:11666:2: ( ruleAttributeValue )
            {
            // InternalEtlParser.g:11666:2: ( ruleAttributeValue )
            // InternalEtlParser.g:11667:3: ruleAttributeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__ValueAssignment_3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:11676:1: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11680:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:11681:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:11681:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:11682:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11691:1: rule__ConceptIdReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ConceptIdReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11695:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11696:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11696:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11697:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:11706:1: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ExpressionReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11710:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:11711:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:11711:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:11712:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ExpressionReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11721:1: rule__ExpressionReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ExpressionReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11725:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11726:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11726:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11727:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_1"
    // InternalEtlParser.g:11736:1: rule__TokenReplacementSlot__TokensAssignment_4_1 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11740:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:11741:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:11741:2: ( ruleSlotToken )
            // InternalEtlParser.g:11742:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_1"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_2"
    // InternalEtlParser.g:11751:1: rule__TokenReplacementSlot__TokensAssignment_4_2 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11755:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:11756:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:11756:2: ( ruleSlotToken )
            // InternalEtlParser.g:11757:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_2"


    // $ANTLR start "rule__TokenReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11766:1: rule__TokenReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TokenReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11770:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11771:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11771:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11772:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TemplateInformationSlot__CardinalityAssignment_2"
    // InternalEtlParser.g:11781:1: rule__TemplateInformationSlot__CardinalityAssignment_2 : ( ruleEtlCardinality ) ;
    public final void rule__TemplateInformationSlot__CardinalityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11785:1: ( ( ruleEtlCardinality ) )
            // InternalEtlParser.g:11786:2: ( ruleEtlCardinality )
            {
            // InternalEtlParser.g:11786:2: ( ruleEtlCardinality )
            // InternalEtlParser.g:11787:3: ruleEtlCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__CardinalityAssignment_2"


    // $ANTLR start "rule__TemplateInformationSlot__NameAssignment_3"
    // InternalEtlParser.g:11796:1: rule__TemplateInformationSlot__NameAssignment_3 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TemplateInformationSlot__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11800:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11801:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11801:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11802:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__NameAssignment_3"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:11811:1: rule__StringReplacementSlot__ValuesAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11815:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:11816:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:11816:2: ( RULE_STRING )
            // InternalEtlParser.g:11817:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:11826:1: rule__StringReplacementSlot__ValuesAssignment_4_2 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11830:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:11831:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:11831:2: ( RULE_STRING )
            // InternalEtlParser.g:11832:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__StringReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11841:1: rule__StringReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__StringReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11845:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11846:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11846:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11847:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:11856:1: rule__IntegerReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11860:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:11861:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:11861:2: ( ruleSlotInteger )
            // InternalEtlParser.g:11862:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:11871:1: rule__IntegerReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11875:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:11876:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:11876:2: ( ruleSlotInteger )
            // InternalEtlParser.g:11877:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__IntegerReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11886:1: rule__IntegerReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__IntegerReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11890:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11891:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11891:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11892:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:11901:1: rule__DecimalReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11905:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:11906:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:11906:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:11907:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:11916:1: rule__DecimalReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11920:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:11921:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:11921:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:11922:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__DecimalReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:11931:1: rule__DecimalReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__DecimalReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11935:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:11936:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:11936:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:11937:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__EtlCardinality__MinAssignment_1"
    // InternalEtlParser.g:11946:1: rule__EtlCardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__EtlCardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11950:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:11951:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:11951:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:11952:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MinAssignment_1"


    // $ANTLR start "rule__EtlCardinality__MaxAssignment_3"
    // InternalEtlParser.g:11961:1: rule__EtlCardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__EtlCardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11965:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:11966:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:11966:2: ( ruleMaxValue )
            // InternalEtlParser.g:11967:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MaxAssignment_3"


    // $ANTLR start "rule__ConceptReference__SlotAssignment_0"
    // InternalEtlParser.g:11976:1: rule__ConceptReference__SlotAssignment_0 : ( ruleConceptReplacementSlot ) ;
    public final void rule__ConceptReference__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11980:1: ( ( ruleConceptReplacementSlot ) )
            // InternalEtlParser.g:11981:2: ( ruleConceptReplacementSlot )
            {
            // InternalEtlParser.g:11981:2: ( ruleConceptReplacementSlot )
            // InternalEtlParser.g:11982:3: ruleConceptReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__SlotAssignment_0"


    // $ANTLR start "rule__ConceptReference__IdAssignment_1_0"
    // InternalEtlParser.g:11991:1: rule__ConceptReference__IdAssignment_1_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__ConceptReference__IdAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11995:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:11996:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:11996:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:11997:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__IdAssignment_1_0"


    // $ANTLR start "rule__ConceptReference__TermAssignment_1_1"
    // InternalEtlParser.g:12006:1: rule__ConceptReference__TermAssignment_1_1 : ( RULE_TERM_STRING ) ;
    public final void rule__ConceptReference__TermAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12010:1: ( ( RULE_TERM_STRING ) )
            // InternalEtlParser.g:12011:2: ( RULE_TERM_STRING )
            {
            // InternalEtlParser.g:12011:2: ( RULE_TERM_STRING )
            // InternalEtlParser.g:12012:3: RULE_TERM_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_TERM_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__TermAssignment_1_1"


    // $ANTLR start "rule__StringValue__ValueAssignment"
    // InternalEtlParser.g:12021:1: rule__StringValue__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12025:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:12026:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:12026:2: ( RULE_STRING )
            // InternalEtlParser.g:12027:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValueAssignment"


    // $ANTLR start "rule__IntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:12036:1: rule__IntegerValue__ValueAssignment_1 : ( ruleInteger ) ;
    public final void rule__IntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12040:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12041:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12041:2: ( ruleInteger )
            // InternalEtlParser.g:12042:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__DecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:12051:1: rule__DecimalValue__ValueAssignment_1 : ( ruleDecimal ) ;
    public final void rule__DecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12055:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:12056:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:12056:2: ( ruleDecimal )
            // InternalEtlParser.g:12057:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:12066:1: rule__SlotIntegerValue__ValueAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12070:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:12071:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:12071:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:12072:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:12081:1: rule__SlotIntegerRange__MinimumAssignment_0_0 : ( ruleSlotIntegerMinimumValue ) ;
    public final void rule__SlotIntegerRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12085:1: ( ( ruleSlotIntegerMinimumValue ) )
            // InternalEtlParser.g:12086:2: ( ruleSlotIntegerMinimumValue )
            {
            // InternalEtlParser.g:12086:2: ( ruleSlotIntegerMinimumValue )
            // InternalEtlParser.g:12087:3: ruleSlotIntegerMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:12096:1: rule__SlotIntegerRange__MaximumAssignment_0_2 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12100:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:12101:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:12101:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:12102:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:12111:1: rule__SlotIntegerRange__MaximumAssignment_1_1 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12115:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:12116:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:12116:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:12117:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:12126:1: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotIntegerMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12130:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:12131:2: ( RULE_GT )
            {
            // InternalEtlParser.g:12131:2: ( RULE_GT )
            // InternalEtlParser.g:12132:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:12141:1: rule__SlotIntegerMinimumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12145:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:12146:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:12146:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:12147:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:12156:1: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotIntegerMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12160:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:12161:2: ( RULE_LT )
            {
            // InternalEtlParser.g:12161:2: ( RULE_LT )
            // InternalEtlParser.g:12162:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:12171:1: rule__SlotIntegerMaximumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12175:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:12176:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:12176:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:12177:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:12186:1: rule__SlotDecimalValue__ValueAssignment_1 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12190:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:12191:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:12191:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:12192:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotDecimalRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:12201:1: rule__SlotDecimalRange__MinimumAssignment_0_0 : ( ruleSlotDecimalMinimumValue ) ;
    public final void rule__SlotDecimalRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12205:1: ( ( ruleSlotDecimalMinimumValue ) )
            // InternalEtlParser.g:12206:2: ( ruleSlotDecimalMinimumValue )
            {
            // InternalEtlParser.g:12206:2: ( ruleSlotDecimalMinimumValue )
            // InternalEtlParser.g:12207:3: ruleSlotDecimalMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:12216:1: rule__SlotDecimalRange__MaximumAssignment_0_2 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12220:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:12221:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:12221:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:12222:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:12231:1: rule__SlotDecimalRange__MaximumAssignment_1_1 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12235:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:12236:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:12236:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:12237:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:12246:1: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotDecimalMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12250:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:12251:2: ( RULE_GT )
            {
            // InternalEtlParser.g:12251:2: ( RULE_GT )
            // InternalEtlParser.g:12252:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:12261:1: rule__SlotDecimalMinimumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12265:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:12266:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:12266:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:12267:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:12276:1: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotDecimalMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12280:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:12281:2: ( RULE_LT )
            {
            // InternalEtlParser.g:12281:2: ( RULE_LT )
            // InternalEtlParser.g:12282:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:12291:1: rule__SlotDecimalMaximumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12295:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:12296:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:12296:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:12297:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:12306:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12310:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:12311:2: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:12311:2: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:12312:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:12321:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12325:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:12326:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:12326:2: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:12327:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:12336:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12340:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:12341:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:12341:2: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:12342:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEtlParser.g:12351:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12355:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:12356:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:12356:2: ( ruleEclRefinement )
            // InternalEtlParser.g:12357:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEtlParser.g:12366:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleSubExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12370:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:12371:2: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:12371:2: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:12372:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12381:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12385:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12386:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12386:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12387:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12396:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12400:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12401:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12401:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12402:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12411:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12415:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12416:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12416:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12417:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12426:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12430:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12431:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12431:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12432:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12441:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12445:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12446:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12446:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12447:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12456:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12460:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12461:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12461:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12462:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12471:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12475:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12476:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12476:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12477:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12486:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12490:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:12491:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:12491:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:12492:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEtlParser.g:12501:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12505:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEtlParser.g:12506:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEtlParser.g:12506:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEtlParser.g:12507:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEtlParser.g:12508:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEtlParser.g:12508:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEtlParser.g:12516:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12520:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:12521:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:12521:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:12522:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEtlParser.g:12531:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_TERM_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12535:1: ( ( RULE_TERM_STRING ) )
            // InternalEtlParser.g:12536:2: ( RULE_TERM_STRING )
            {
            // InternalEtlParser.g:12536:2: ( RULE_TERM_STRING )
            // InternalEtlParser.g:12537:3: RULE_TERM_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TERM_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:12546:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12550:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:12551:2: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:12551:2: ( ruleAndRefinement )
            // InternalEtlParser.g:12552:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:12561:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12565:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:12566:2: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:12566:2: ( ruleSubRefinement )
            // InternalEtlParser.g:12567:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEtlParser.g:12576:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12580:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:12581:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:12581:2: ( ruleEclRefinement )
            // InternalEtlParser.g:12582:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEtlParser.g:12591:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12595:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:12596:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:12596:2: ( ruleCardinality )
            // InternalEtlParser.g:12597:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEtlParser.g:12606:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12610:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:12611:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:12611:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:12612:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:12621:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12625:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:12626:2: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:12626:2: ( ruleAndAttributeSet )
            // InternalEtlParser.g:12627:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:12636:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12640:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:12641:2: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:12641:2: ( ruleSubAttributeSet )
            // InternalEtlParser.g:12642:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEtlParser.g:12651:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12655:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:12656:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:12656:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:12657:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEtlParser.g:12666:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12670:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:12671:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:12671:2: ( ruleCardinality )
            // InternalEtlParser.g:12672:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEtlParser.g:12681:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12685:1: ( ( RULE_REVERSED ) )
            // InternalEtlParser.g:12686:2: ( RULE_REVERSED )
            {
            // InternalEtlParser.g:12686:2: ( RULE_REVERSED )
            // InternalEtlParser.g:12687:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEtlParser.g:12696:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleSubExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12700:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:12701:2: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:12701:2: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:12702:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEtlParser.g:12711:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12715:1: ( ( ruleComparison ) )
            // InternalEtlParser.g:12716:2: ( ruleComparison )
            {
            // InternalEtlParser.g:12716:2: ( ruleComparison )
            // InternalEtlParser.g:12717:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEtlParser.g:12726:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12730:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:12731:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:12731:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:12732:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEtlParser.g:12741:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12745:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:12746:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:12746:2: ( ruleMaxValue )
            // InternalEtlParser.g:12747:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeValueEquals__ConstraintAssignment_1"
    // InternalEtlParser.g:12756:1: rule__AttributeValueEquals__ConstraintAssignment_1 : ( ruleSubExpressionConstraint ) ;
    public final void rule__AttributeValueEquals__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12760:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:12761:2: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:12761:2: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:12762:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueEqualsAccess().getConstraintSubExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueEqualsAccess().getConstraintSubExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueEquals__ConstraintAssignment_1"


    // $ANTLR start "rule__AttributeValueNotEquals__ConstraintAssignment_1"
    // InternalEtlParser.g:12771:1: rule__AttributeValueNotEquals__ConstraintAssignment_1 : ( ruleSubExpressionConstraint ) ;
    public final void rule__AttributeValueNotEquals__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12775:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:12776:2: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:12776:2: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:12777:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueNotEqualsAccess().getConstraintSubExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueNotEqualsAccess().getConstraintSubExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValueNotEquals__ConstraintAssignment_1"


    // $ANTLR start "rule__BooleanValueEquals__ValueAssignment_1"
    // InternalEtlParser.g:12786:1: rule__BooleanValueEquals__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueEquals__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12790:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:12791:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:12791:2: ( ruleBoolean )
            // InternalEtlParser.g:12792:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueEqualsAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueEqualsAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueEquals__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueNotEquals__ValueAssignment_1"
    // InternalEtlParser.g:12801:1: rule__BooleanValueNotEquals__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueNotEquals__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12805:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:12806:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:12806:2: ( ruleBoolean )
            // InternalEtlParser.g:12807:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueNotEqualsAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueNotEqualsAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueNotEquals__ValueAssignment_1"


    // $ANTLR start "rule__StringValueEquals__ValueAssignment_1"
    // InternalEtlParser.g:12816:1: rule__StringValueEquals__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueEquals__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12820:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:12821:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:12821:2: ( RULE_STRING )
            // InternalEtlParser.g:12822:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueEqualsAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueEqualsAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueEquals__ValueAssignment_1"


    // $ANTLR start "rule__StringValueNotEquals__ValueAssignment_1"
    // InternalEtlParser.g:12831:1: rule__StringValueNotEquals__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueNotEquals__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12835:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:12836:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:12836:2: ( RULE_STRING )
            // InternalEtlParser.g:12837:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueNotEqualsAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueNotEqualsAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueNotEquals__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueEquals__ValueAssignment_2"
    // InternalEtlParser.g:12846:1: rule__IntegerValueEquals__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12850:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12851:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12851:2: ( ruleInteger )
            // InternalEtlParser.g:12852:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueEquals__ValueAssignment_2"


    // $ANTLR start "rule__IntegerValueNotEquals__ValueAssignment_2"
    // InternalEtlParser.g:12861:1: rule__IntegerValueNotEquals__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueNotEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12865:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12866:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12866:2: ( ruleInteger )
            // InternalEtlParser.g:12867:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueNotEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueNotEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueNotEquals__ValueAssignment_2"


    // $ANTLR start "rule__IntegerValueGreaterThan__ValueAssignment_2"
    // InternalEtlParser.g:12876:1: rule__IntegerValueGreaterThan__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueGreaterThan__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12880:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12881:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12881:2: ( ruleInteger )
            // InternalEtlParser.g:12882:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThan__ValueAssignment_2"


    // $ANTLR start "rule__IntegerValueLessThan__ValueAssignment_2"
    // InternalEtlParser.g:12891:1: rule__IntegerValueLessThan__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueLessThan__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12895:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12896:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12896:2: ( ruleInteger )
            // InternalEtlParser.g:12897:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThan__ValueAssignment_2"


    // $ANTLR start "rule__IntegerValueGreaterThanEquals__ValueAssignment_2"
    // InternalEtlParser.g:12906:1: rule__IntegerValueGreaterThanEquals__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueGreaterThanEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12910:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12911:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12911:2: ( ruleInteger )
            // InternalEtlParser.g:12912:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueGreaterThanEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueGreaterThanEquals__ValueAssignment_2"


    // $ANTLR start "rule__IntegerValueLessThanEquals__ValueAssignment_2"
    // InternalEtlParser.g:12921:1: rule__IntegerValueLessThanEquals__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueLessThanEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12925:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:12926:2: ( ruleInteger )
            {
            // InternalEtlParser.g:12926:2: ( ruleInteger )
            // InternalEtlParser.g:12927:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueLessThanEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueLessThanEqualsAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueLessThanEquals__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueEquals__ValueAssignment_2"
    // InternalEtlParser.g:12936:1: rule__DecimalValueEquals__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12940:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:12941:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:12941:2: ( ruleDecimal )
            // InternalEtlParser.g:12942:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueEquals__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueNotEquals__ValueAssignment_2"
    // InternalEtlParser.g:12951:1: rule__DecimalValueNotEquals__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueNotEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12955:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:12956:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:12956:2: ( ruleDecimal )
            // InternalEtlParser.g:12957:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueNotEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueNotEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueNotEquals__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueGreaterThan__ValueAssignment_2"
    // InternalEtlParser.g:12966:1: rule__DecimalValueGreaterThan__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueGreaterThan__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12970:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:12971:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:12971:2: ( ruleDecimal )
            // InternalEtlParser.g:12972:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThan__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueLessThan__ValueAssignment_2"
    // InternalEtlParser.g:12981:1: rule__DecimalValueLessThan__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueLessThan__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12985:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:12986:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:12986:2: ( ruleDecimal )
            // InternalEtlParser.g:12987:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThan__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueGreaterThanEquals__ValueAssignment_2"
    // InternalEtlParser.g:12996:1: rule__DecimalValueGreaterThanEquals__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueGreaterThanEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13000:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:13001:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:13001:2: ( ruleDecimal )
            // InternalEtlParser.g:13002:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueGreaterThanEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueGreaterThanEquals__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueLessThanEquals__ValueAssignment_2"
    // InternalEtlParser.g:13011:1: rule__DecimalValueLessThanEquals__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueLessThanEquals__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13015:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:13016:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:13016:2: ( ruleDecimal )
            // InternalEtlParser.g:13017:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueLessThanEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueLessThanEqualsAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueLessThanEquals__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEtlParser.g:13026:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13030:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:13031:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:13031:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:13032:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"

    // $ANTLR start synpred30_InternalEtlParser
    public final void synpred30_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2749:2: ( ( ruleSlotIntegerRange ) )
        // InternalEtlParser.g:2749:2: ( ruleSlotIntegerRange )
        {
        // InternalEtlParser.g:2749:2: ( ruleSlotIntegerRange )
        // InternalEtlParser.g:2750:3: ruleSlotIntegerRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotIntegerRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalEtlParser

    // $ANTLR start synpred32_InternalEtlParser
    public final void synpred32_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2791:2: ( ( ruleSlotDecimalRange ) )
        // InternalEtlParser.g:2791:2: ( ruleSlotDecimalRange )
        {
        // InternalEtlParser.g:2791:2: ( ruleSlotDecimalRange )
        // InternalEtlParser.g:2792:3: ruleSlotDecimalRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotDecimalRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEtlParser

    // $ANTLR start synpred49_InternalEtlParser
    public final void synpred49_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2998:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:2998:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:2998:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:2999:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalEtlParser

    // $ANTLR start synpred50_InternalEtlParser
    public final void synpred50_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3004:2: ( ( ruleEclAttributeGroup ) )
        // InternalEtlParser.g:3004:2: ( ruleEclAttributeGroup )
        {
        // InternalEtlParser.g:3004:2: ( ruleEclAttributeGroup )
        // InternalEtlParser.g:3005:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalEtlParser

    // $ANTLR start synpred52_InternalEtlParser
    public final void synpred52_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3046:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3046:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3046:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3047:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalEtlParser

    // $ANTLR start synpred114_InternalEtlParser
    public final void synpred114_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:6665:3: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:6665:3: rule__SlotIntegerRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotIntegerRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred114_InternalEtlParser

    // $ANTLR start synpred117_InternalEtlParser
    public final void synpred117_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:7016:3: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:7016:3: rule__SlotDecimalRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotDecimalRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalEtlParser

    // $ANTLR start synpred126_InternalEtlParser
    public final void synpred126_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8555:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEtlParser.g:8555:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalEtlParser

    // $ANTLR start synpred127_InternalEtlParser
    public final void synpred127_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8717:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEtlParser.g:8717:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalEtlParser

    // Delegated rules

    public final boolean synpred32_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA71 dfa71 = new DFA71(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\6\1\7\2\uffff\1\36\2\31\1\7\1\6\1\36\2\31\5\7";
    static final String dfa_3s = "\1\41\1\45\2\uffff\1\37\1\31\1\37\1\7\1\41\1\51\2\37\1\26\1\37\1\26\2\37";
    static final String dfa_4s = "\2\uffff\1\1\1\2\15\uffff";
    static final String dfa_5s = "\21\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\30\uffff\1\2\1\uffff\1\3",
            "\1\10\1\4\15\uffff\1\7\7\uffff\1\5\1\6\5\uffff\1\2",
            "",
            "",
            "\1\5\1\6",
            "\1\11",
            "\1\11\4\uffff\1\13\1\12",
            "\1\10",
            "\1\2\30\uffff\1\2\1\uffff\1\3",
            "\1\14\1\15\11\uffff\1\16",
            "\1\11\4\uffff\1\13\1\12",
            "\1\11\4\uffff\1\13\1\12",
            "\1\10\16\uffff\1\7",
            "\1\10\16\uffff\1\7\7\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7",
            "\1\10\16\uffff\1\7\7\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7\7\uffff\1\20\1\17"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2492:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_7s = "\20\uffff";
    static final String dfa_8s = "\11\uffff\2\15\3\uffff\2\15";
    static final String dfa_9s = "\1\6\1\45\3\uffff\1\36\1\7\2\36\2\6\3\uffff\2\6";
    static final String dfa_10s = "\1\66\1\45\3\uffff\1\46\1\43\2\37\2\50\3\uffff\2\50";
    static final String dfa_11s = "\2\uffff\1\1\1\2\1\3\6\uffff\1\6\1\5\1\4\2\uffff";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\13\uffff\1\4\14\uffff\1\2\3\uffff\1\3\22\uffff\1\5",
            "\1\6",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\7\1\10",
            "\1\2\2\uffff\2\2\1\uffff\3\13\6\uffff\1\2\14\uffff\1\2",
            "\1\11\1\12",
            "\1\11\1\12",
            "\1\15\23\uffff\1\15\6\uffff\2\15\1\uffff\1\15\3\uffff\1\14",
            "\1\15\23\uffff\1\15\3\uffff\1\17\1\16\1\uffff\2\15\1\uffff\1\15\3\uffff\1\14",
            "",
            "",
            "",
            "\1\15\23\uffff\1\15\3\uffff\1\17\1\16\1\uffff\2\15\1\uffff\1\15\3\uffff\1\14",
            "\1\15\23\uffff\1\15\3\uffff\1\17\1\16\1\uffff\2\15\1\uffff\1\15\3\uffff\1\14"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "2513:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );";
        }
    }
    static final String dfa_14s = "\3\uffff\2\6\1\1\1\uffff\2\6\7\uffff";
    static final String dfa_15s = "\1\31\1\uffff\1\36\3\31\1\uffff\2\31\1\66\2\36\4\0";
    static final String dfa_16s = "\1\66\1\uffff\1\37\3\66\1\uffff\3\66\2\37\4\0";
    static final String dfa_17s = "\1\uffff\1\1\4\uffff\1\2\11\uffff";
    static final String dfa_18s = "\14\uffff\1\3\1\1\1\2\1\0}>";
    static final String[] dfa_19s = {
            "\1\1\23\uffff\1\1\10\uffff\1\2",
            "",
            "\1\3\1\4",
            "\1\5\12\uffff\1\6\10\uffff\1\6\10\uffff\1\6",
            "\1\5\4\uffff\1\10\1\7\4\uffff\1\6\10\uffff\1\6\10\uffff\1\6",
            "\1\1\12\uffff\1\1\7\uffff\1\11\1\1\10\uffff\1\12",
            "",
            "\1\5\4\uffff\1\10\1\7\4\uffff\1\6\10\uffff\1\6\10\uffff\1\6",
            "\1\5\4\uffff\1\10\1\7\4\uffff\1\6\10\uffff\1\6\10\uffff\1\6",
            "\1\13",
            "\1\14\1\15",
            "\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_7;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2744:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_15 = input.LA(1);

                         
                        int index9_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index9_15);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA9_13 = input.LA(1);

                         
                        int index9_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index9_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA9_14 = input.LA(1);

                         
                        int index9_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index9_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA9_12 = input.LA(1);

                         
                        int index9_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index9_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\31\uffff";
    static final String dfa_21s = "\5\uffff\1\13\2\uffff\2\13\1\1\16\uffff";
    static final String dfa_22s = "\1\31\1\uffff\1\36\1\50\1\36\1\31\2\36\3\31\1\uffff\1\66\2\36\1\50\1\36\1\50\1\36\1\0\2\36\1\0\2\36";
    static final String dfa_23s = "\1\66\1\uffff\1\37\2\50\1\66\2\50\3\66\1\uffff\1\66\2\37\4\50\1\0\2\50\1\0\2\50";
    static final String dfa_24s = "\1\uffff\1\1\11\uffff\1\2\15\uffff";
    static final String dfa_25s = "\23\uffff\1\1\2\uffff\1\0\2\uffff}>";
    static final String[] dfa_26s = {
            "\1\1\23\uffff\1\1\10\uffff\1\2",
            "",
            "\1\3\1\4",
            "\1\5",
            "\1\7\1\6\10\uffff\1\5",
            "\1\12\4\uffff\1\11\1\10\4\uffff\1\13\10\uffff\1\13\10\uffff\1\13",
            "\1\7\1\6\10\uffff\1\5",
            "\1\7\1\6\10\uffff\1\5",
            "\1\12\4\uffff\1\11\1\10\4\uffff\1\13\10\uffff\1\13\10\uffff\1\13",
            "\1\12\4\uffff\1\11\1\10\4\uffff\1\13\10\uffff\1\13\10\uffff\1\13",
            "\1\1\12\uffff\1\1\7\uffff\1\14\1\1\10\uffff\1\15",
            "",
            "\1\16",
            "\1\17\1\20",
            "\1\21\1\22",
            "\1\23",
            "\1\25\1\24\10\uffff\1\23",
            "\1\26",
            "\1\30\1\27\10\uffff\1\26",
            "\1\uffff",
            "\1\25\1\24\10\uffff\1\23",
            "\1\25\1\24\10\uffff\1\23",
            "\1\uffff",
            "\1\30\1\27\10\uffff\1\26",
            "\1\30\1\27\10\uffff\1\26"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2786:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_22 = input.LA(1);

                         
                        int index11_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_22);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_19 = input.LA(1);

                         
                        int index11_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\24\1\0\14\uffff\1\0\2\uffff";
    static final String dfa_28s = "\1\63\1\0\14\uffff\1\0\2\uffff";
    static final String dfa_29s = "\2\uffff\1\1\14\uffff\1\2\1\3";
    static final String dfa_30s = "\1\uffff\1\0\14\uffff\1\1\2\uffff}>";
    static final String[] dfa_31s = {
            "\1\1\3\uffff\1\2\6\uffff\1\2\1\uffff\1\17\1\uffff\1\16\3\uffff\1\2\1\uffff\1\2\2\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "2993:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalEtlParser()) ) {s = 2;}

                        else if ( (synpred50_InternalEtlParser()) ) {s = 15;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA18_14 = input.LA(1);

                         
                        int index18_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalEtlParser()) ) {s = 2;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index18_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\24\15\uffff\1\0\1\uffff";
    static final String dfa_33s = "\1\63\15\uffff\1\0\1\uffff";
    static final String dfa_34s = "\1\uffff\1\1\15\uffff\1\2";
    static final String dfa_35s = "\16\uffff\1\0\1\uffff}>";
    static final String[] dfa_36s = {
            "\1\1\3\uffff\1\1\6\uffff\1\1\3\uffff\1\16\3\uffff\1\1\1\uffff\1\1\2\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "3041:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_14 = input.LA(1);

                         
                        int index20_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index20_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\101\uffff";
    static final String dfa_38s = "\23\uffff\2\52\2\uffff\2\56\2\uffff\2\61\2\uffff\2\65\2\uffff\2\72\2\uffff\2\76\2\uffff\2\52\2\uffff\2\56\2\uffff\2\61\2\uffff\2\65\2\uffff\2\72\2\uffff\2\76";
    static final String dfa_39s = "\1\52\2\4\4\66\1\36\2\uffff\1\36\2\uffff\6\36\2\32\2\36\2\32\2\36\2\32\2\36\2\32\2\36\2\32\2\36\2\32\2\uffff\2\32\2\uffff\2\32\2\uffff\2\32\2\uffff\2\32\2\uffff\2\32\2\uffff\2\32";
    static final String dfa_40s = "\1\65\6\66\1\46\2\uffff\1\46\2\uffff\4\46\2\37\2\50\2\37\2\50\2\37\2\50\2\37\2\50\2\37\2\50\2\37\2\50\2\uffff\2\50\2\uffff\2\50\2\uffff\2\50\2\uffff\2\50\2\uffff\2\50\2\uffff\2\50";
    static final String dfa_41s = "\10\uffff\1\3\1\1\1\uffff\1\4\1\2\34\uffff\1\13\1\5\2\uffff\1\14\1\6\2\uffff\1\7\1\15\2\uffff\1\10\1\16\2\uffff\1\17\1\11\2\uffff\1\20\1\12\2\uffff";
    static final String dfa_42s = "\101\uffff}>";
    static final String[] dfa_43s = {
            "\1\1\1\2\1\5\1\3\6\uffff\1\4\1\6",
            "\2\11\14\uffff\1\10\43\uffff\1\7",
            "\2\14\14\uffff\1\13\43\uffff\1\12",
            "\1\15",
            "\1\16",
            "\1\17",
            "\1\20",
            "\1\23\1\24\5\uffff\1\21\1\22",
            "",
            "",
            "\1\27\1\30\5\uffff\1\25\1\26",
            "",
            "",
            "\1\33\1\34\5\uffff\1\31\1\32",
            "\1\37\1\40\5\uffff\1\35\1\36",
            "\1\43\1\44\5\uffff\1\41\1\42",
            "\1\47\1\50\5\uffff\1\45\1\46",
            "\1\23\1\24",
            "\1\23\1\24",
            "\4\52\4\uffff\1\52\1\uffff\1\52\3\uffff\1\51",
            "\4\52\1\54\1\53\2\uffff\1\52\1\uffff\1\52\3\uffff\1\51",
            "\1\27\1\30",
            "\1\27\1\30",
            "\4\56\4\uffff\1\56\1\uffff\1\56\3\uffff\1\55",
            "\4\56\1\60\1\57\2\uffff\1\56\1\uffff\1\56\3\uffff\1\55",
            "\1\33\1\34",
            "\1\33\1\34",
            "\4\61\4\uffff\1\61\1\uffff\1\61\3\uffff\1\62",
            "\4\61\1\64\1\63\2\uffff\1\61\1\uffff\1\61\3\uffff\1\62",
            "\1\37\1\40",
            "\1\37\1\40",
            "\4\65\4\uffff\1\65\1\uffff\1\65\3\uffff\1\66",
            "\4\65\1\70\1\67\2\uffff\1\65\1\uffff\1\65\3\uffff\1\66",
            "\1\43\1\44",
            "\1\43\1\44",
            "\4\72\4\uffff\1\72\1\uffff\1\72\3\uffff\1\71",
            "\4\72\1\74\1\73\2\uffff\1\72\1\uffff\1\72\3\uffff\1\71",
            "\1\47\1\50",
            "\1\47\1\50",
            "\4\76\4\uffff\1\76\1\uffff\1\76\3\uffff\1\75",
            "\4\76\1\100\1\77\2\uffff\1\76\1\uffff\1\76\3\uffff\1\75",
            "",
            "",
            "\4\52\1\54\1\53\2\uffff\1\52\1\uffff\1\52\3\uffff\1\51",
            "\4\52\1\54\1\53\2\uffff\1\52\1\uffff\1\52\3\uffff\1\51",
            "",
            "",
            "\4\56\1\60\1\57\2\uffff\1\56\1\uffff\1\56\3\uffff\1\55",
            "\4\56\1\60\1\57\2\uffff\1\56\1\uffff\1\56\3\uffff\1\55",
            "",
            "",
            "\4\61\1\64\1\63\2\uffff\1\61\1\uffff\1\61\3\uffff\1\62",
            "\4\61\1\64\1\63\2\uffff\1\61\1\uffff\1\61\3\uffff\1\62",
            "",
            "",
            "\4\65\1\70\1\67\2\uffff\1\65\1\uffff\1\65\3\uffff\1\66",
            "\4\65\1\70\1\67\2\uffff\1\65\1\uffff\1\65\3\uffff\1\66",
            "",
            "",
            "\4\72\1\74\1\73\2\uffff\1\72\1\uffff\1\72\3\uffff\1\71",
            "\4\72\1\74\1\73\2\uffff\1\72\1\uffff\1\72\3\uffff\1\71",
            "",
            "",
            "\4\76\1\100\1\77\2\uffff\1\76\1\uffff\1\76\3\uffff\1\75",
            "\4\76\1\100\1\77\2\uffff\1\76\1\uffff\1\76\3\uffff\1\75"
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3104:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueEquals ) | ( ruleBooleanValueNotEquals ) | ( ruleStringValueEquals ) | ( ruleStringValueNotEquals ) | ( ruleIntegerValueEquals ) | ( ruleIntegerValueNotEquals ) | ( ruleIntegerValueGreaterThan ) | ( ruleIntegerValueGreaterThanEquals ) | ( ruleIntegerValueLessThan ) | ( ruleIntegerValueLessThanEquals ) | ( ruleDecimalValueEquals ) | ( ruleDecimalValueNotEquals ) | ( ruleDecimalValueGreaterThan ) | ( ruleDecimalValueGreaterThanEquals ) | ( ruleDecimalValueLessThan ) | ( ruleDecimalValueLessThanEquals ) );";
        }
    }
    static final String dfa_44s = "\22\uffff";
    static final String dfa_45s = "\1\2\21\uffff";
    static final String dfa_46s = "\2\6\1\uffff\1\7\1\uffff\1\36\2\31\1\7\1\6\1\36\2\31\5\7";
    static final String dfa_47s = "\1\44\1\41\1\uffff\1\45\1\uffff\1\37\1\31\1\37\1\7\1\41\1\51\2\37\1\26\1\37\1\26\2\37";
    static final String dfa_48s = "\2\uffff\1\2\1\uffff\1\1\15\uffff";
    static final String dfa_49s = "\22\uffff}>";
    static final String[] dfa_50s = {
            "\1\2\23\uffff\1\1\6\uffff\1\2\2\uffff\1\2",
            "\1\3\30\uffff\1\4\1\uffff\1\2",
            "",
            "\1\11\1\5\15\uffff\1\10\7\uffff\1\6\1\7\5\uffff\1\4",
            "",
            "\1\6\1\7",
            "\1\12",
            "\1\12\4\uffff\1\14\1\13",
            "\1\11",
            "\1\4\30\uffff\1\4\1\uffff\1\2",
            "\1\15\1\16\11\uffff\1\17",
            "\1\12\4\uffff\1\14\1\13",
            "\1\12\4\uffff\1\14\1\13",
            "\1\11\16\uffff\1\10",
            "\1\11\16\uffff\1\10\7\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10",
            "\1\11\16\uffff\1\10\7\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10\7\uffff\1\21\1\20"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "()* loopback of 3911:2: ( rule__Refinement__Group_0_0_1__0 )*";
        }
    }
    static final String dfa_51s = "\11\uffff";
    static final String dfa_52s = "\1\3\10\uffff";
    static final String dfa_53s = "\1\31\1\uffff\1\36\1\uffff\1\50\1\36\1\0\2\36";
    static final String dfa_54s = "\1\66\1\uffff\1\37\1\uffff\2\50\1\0\2\50";
    static final String dfa_55s = "\1\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_56s = "\6\uffff\1\0\2\uffff}>";
    static final String[] dfa_57s = {
            "\1\3\12\uffff\1\3\7\uffff\1\1\1\3\10\uffff\1\2",
            "",
            "\1\4\1\5",
            "",
            "\1\6",
            "\1\10\1\7\10\uffff\1\6",
            "\1\uffff",
            "\1\10\1\7\10\uffff\1\6",
            "\1\10\1\7\10\uffff\1\6"
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "7016:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000080030040L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000002100000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000002000000002L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000280030040L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000284030040L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000284030042L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000404000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0040000880070040L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000800400080L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x000FF28880030040L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000800400880L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000030040L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0035FC803D030000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0035FC903D030000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0035FC803D030002L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00000000C0400180L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000002000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000001000040000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000004000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0040200002000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0040201002000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0040200002000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000000C0000100L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00000200C0000100L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x00000060C0000100L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0040100000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0040200000000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000010000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x000000000C000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x000FF28A81130040L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000200100000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x000FF28881130040L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x00303C0000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00000000C0000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00000000C0000002L});
    }


}