package com.b2international.snomed.etl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.etl.services.EtlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEtlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOUBLE_SQUARE_OPEN", "RULE_DOUBLE_SQUARE_CLOSE", "RULE_TILDE", "RULE_AT", "RULE_ID", "RULE_SCG", "RULE_TOK", "RULE_STR", "RULE_INT", "RULE_DEC", "RULE_EQUIVALENT_TO", "RULE_SUBTYPE_OF", "RULE_STRING", "RULE_WS", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_SLOTNAME_STRING", "RULE_CASE_SIGNIFICANCE_ID_KEYWORD", "RULE_LANGUAGE_REFSET_ID_KEYWORD", "RULE_EFFECTIVE_TIME_KEYWORD", "RULE_ACCEPTABLE_IN_KEYWORD", "RULE_DESCRIPTION_KEYWORD", "RULE_PREFERRED_IN_KEYWORD", "RULE_SEMANTIC_TAG_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_MODULEID_KEYWORD", "RULE_CONCEPT_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ACTIVE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_EXCLUSION_KEYWORD", "RULE_EXACT_KEYWORD", "RULE_FALSE_KEYWORD", "RULE_MATCH_KEYWORD", "RULE_REGEX_KEYWORD", "RULE_TERM_KEYWORD", "RULE_TRUE_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_WILD_KEYWORD", "RULE_CONJUNCTION_KEYWORD", "RULE_DISJUNCTION_KEYWORD", "RULE_REVERSED", "RULE_KEYWORD", "RULE_DBL_LT_EM", "RULE_DBL_GT_EM", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_PIPE_DELIMITED_STRING", "RULE_TO", "RULE_COMMA", "RULE_DIGIT_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_HASH", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIALECT_KEYWORD=32;
    public static final int RULE_LANGUAGE_KEYWORD=29;
    public static final int RULE_DIGIT_NONZERO=62;
    public static final int RULE_CURLY_OPEN=64;
    public static final int RULE_DBL_GT=51;
    public static final int RULE_TO=59;
    public static final int RULE_ROUND_CLOSE=67;
    public static final int RULE_GT=76;
    public static final int RULE_ACTIVE_KEYWORD=33;
    public static final int RULE_SLOTNAME_STRING=20;
    public static final int RULE_SCG=9;
    public static final int RULE_MODULEID_KEYWORD=30;
    public static final int RULE_GTE=54;
    public static final int RULE_DOUBLE_SQUARE_OPEN=4;
    public static final int RULE_DISJUNCTION_KEYWORD=45;
    public static final int RULE_EQUIVALENT_TO=14;
    public static final int RULE_ROUND_OPEN=66;
    public static final int RULE_DBL_LT=50;
    public static final int RULE_TYPEID_KEYWORD=34;
    public static final int RULE_MATCH_KEYWORD=38;
    public static final int RULE_NOT_EQUAL=74;
    public static final int RULE_SQUARE_CLOSE=19;
    public static final int RULE_SEMANTIC_TAG_KEYWORD=27;
    public static final int RULE_ID=8;
    public static final int RULE_SQUARE_OPEN=18;
    public static final int RULE_EQUAL=73;
    public static final int RULE_DEC=13;
    public static final int RULE_CASE_SIGNIFICANCE_ID_KEYWORD=21;
    public static final int RULE_EXCLUSION_KEYWORD=35;
    public static final int RULE_LT_EM=52;
    public static final int RULE_COMMA=60;
    public static final int RULE_CURLY_CLOSE=65;
    public static final int RULE_DBL_GT_EM=49;
    public static final int RULE_COLON=63;
    public static final int RULE_TILDE=6;
    public static final int RULE_LT=75;
    public static final int RULE_DOUBLE_CURLY_CLOSE=57;
    public static final int RULE_LANGUAGE_REFSET_ID_KEYWORD=22;
    public static final int RULE_INT=12;
    public static final int RULE_DESCRIPTION_KEYWORD=25;
    public static final int RULE_EXACT_KEYWORD=36;
    public static final int RULE_ML_COMMENT=78;
    public static final int RULE_DOUBLE_SQUARE_CLOSE=5;
    public static final int RULE_PREFERRED_IN_KEYWORD=26;
    public static final int RULE_PIPE_DELIMITED_STRING=58;
    public static final int RULE_LTE=55;
    public static final int RULE_TYPE_KEYWORD=42;
    public static final int RULE_CONCEPT_KEYWORD=31;
    public static final int RULE_STRING=16;
    public static final int RULE_AT=7;
    public static final int RULE_FALSE_KEYWORD=37;
    public static final int RULE_REVERSED=46;
    public static final int RULE_SL_COMMENT=79;
    public static final int RULE_DIGIT_ZERO=61;
    public static final int RULE_HASH=77;
    public static final int RULE_TOK=10;
    public static final int RULE_DASH=69;
    public static final int RULE_PLUS=68;
    public static final int RULE_DOT=71;
    public static final int EOF=-1;
    public static final int RULE_DIALECTID_KEYWORD=28;
    public static final int RULE_KEYWORD=47;
    public static final int RULE_ACCEPTABLE_IN_KEYWORD=24;
    public static final int RULE_SUBTYPE_OF=15;
    public static final int RULE_WS=17;
    public static final int RULE_TERM_KEYWORD=40;
    public static final int RULE_GT_EM=53;
    public static final int RULE_REGEX_KEYWORD=39;
    public static final int RULE_TRUE_KEYWORD=41;
    public static final int RULE_CARET=70;
    public static final int RULE_DOUBLE_CURLY_OPEN=56;
    public static final int RULE_WILD_KEYWORD=43;
    public static final int RULE_CONJUNCTION_KEYWORD=44;
    public static final int RULE_STR=11;
    public static final int RULE_WILDCARD=72;
    public static final int RULE_EFFECTIVE_TIME_KEYWORD=23;
    public static final int RULE_DBL_LT_EM=48;

    // delegates
    // delegators


        public InternalEtlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEtlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEtlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEtlParser.g"; }


    	private EtlGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    	}

    	public void setGrammarAccess(EtlGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleExpressionTemplate"
    // InternalEtlParser.g:68:1: entryRuleExpressionTemplate : ruleExpressionTemplate EOF ;
    public final void entryRuleExpressionTemplate() throws RecognitionException {
        try {
            // InternalEtlParser.g:69:1: ( ruleExpressionTemplate EOF )
            // InternalEtlParser.g:70:1: ruleExpressionTemplate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionTemplate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionTemplate"


    // $ANTLR start "ruleExpressionTemplate"
    // InternalEtlParser.g:77:1: ruleExpressionTemplate : ( ( rule__ExpressionTemplate__Group__0 ) ) ;
    public final void ruleExpressionTemplate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:81:2: ( ( ( rule__ExpressionTemplate__Group__0 ) ) )
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            {
            // InternalEtlParser.g:82:2: ( ( rule__ExpressionTemplate__Group__0 ) )
            // InternalEtlParser.g:83:3: ( rule__ExpressionTemplate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }
            // InternalEtlParser.g:84:3: ( rule__ExpressionTemplate__Group__0 )
            // InternalEtlParser.g:84:4: rule__ExpressionTemplate__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionTemplate"


    // $ANTLR start "entryRuleSubExpression"
    // InternalEtlParser.g:93:1: entryRuleSubExpression : ruleSubExpression EOF ;
    public final void entryRuleSubExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:94:1: ( ruleSubExpression EOF )
            // InternalEtlParser.g:95:1: ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalEtlParser.g:102:1: ruleSubExpression : ( ( rule__SubExpression__Group__0 ) ) ;
    public final void ruleSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:106:2: ( ( ( rule__SubExpression__Group__0 ) ) )
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            {
            // InternalEtlParser.g:107:2: ( ( rule__SubExpression__Group__0 ) )
            // InternalEtlParser.g:108:3: ( rule__SubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:109:3: ( rule__SubExpression__Group__0 )
            // InternalEtlParser.g:109:4: rule__SubExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleFocusConcept"
    // InternalEtlParser.g:118:1: entryRuleFocusConcept : ruleFocusConcept EOF ;
    public final void entryRuleFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:119:1: ( ruleFocusConcept EOF )
            // InternalEtlParser.g:120:1: ruleFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFocusConcept"


    // $ANTLR start "ruleFocusConcept"
    // InternalEtlParser.g:127:1: ruleFocusConcept : ( ( rule__FocusConcept__Group__0 ) ) ;
    public final void ruleFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:131:2: ( ( ( rule__FocusConcept__Group__0 ) ) )
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            {
            // InternalEtlParser.g:132:2: ( ( rule__FocusConcept__Group__0 ) )
            // InternalEtlParser.g:133:3: ( rule__FocusConcept__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getGroup()); 
            }
            // InternalEtlParser.g:134:3: ( rule__FocusConcept__Group__0 )
            // InternalEtlParser.g:134:4: rule__FocusConcept__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFocusConcept"


    // $ANTLR start "entryRuleRefinement"
    // InternalEtlParser.g:143:1: entryRuleRefinement : ruleRefinement EOF ;
    public final void entryRuleRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:144:1: ( ruleRefinement EOF )
            // InternalEtlParser.g:145:1: ruleRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinement"


    // $ANTLR start "ruleRefinement"
    // InternalEtlParser.g:152:1: ruleRefinement : ( ( rule__Refinement__Group__0 ) ) ;
    public final void ruleRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:156:2: ( ( ( rule__Refinement__Group__0 ) ) )
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            {
            // InternalEtlParser.g:157:2: ( ( rule__Refinement__Group__0 ) )
            // InternalEtlParser.g:158:3: ( rule__Refinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:159:3: ( rule__Refinement__Group__0 )
            // InternalEtlParser.g:159:4: rule__Refinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinement"


    // $ANTLR start "entryRuleAttributeGroup"
    // InternalEtlParser.g:168:1: entryRuleAttributeGroup : ruleAttributeGroup EOF ;
    public final void entryRuleAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:169:1: ( ruleAttributeGroup EOF )
            // InternalEtlParser.g:170:1: ruleAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeGroup"


    // $ANTLR start "ruleAttributeGroup"
    // InternalEtlParser.g:177:1: ruleAttributeGroup : ( ( rule__AttributeGroup__Group__0 ) ) ;
    public final void ruleAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:181:2: ( ( ( rule__AttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:182:2: ( ( rule__AttributeGroup__Group__0 ) )
            // InternalEtlParser.g:183:3: ( rule__AttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:184:3: ( rule__AttributeGroup__Group__0 )
            // InternalEtlParser.g:184:4: rule__AttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeGroup"


    // $ANTLR start "entryRuleAttribute"
    // InternalEtlParser.g:193:1: entryRuleAttribute : ruleAttribute EOF ;
    public final void entryRuleAttribute() throws RecognitionException {
        try {
            // InternalEtlParser.g:194:1: ( ruleAttribute EOF )
            // InternalEtlParser.g:195:1: ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalEtlParser.g:202:1: ruleAttribute : ( ( rule__Attribute__Group__0 ) ) ;
    public final void ruleAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:206:2: ( ( ( rule__Attribute__Group__0 ) ) )
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            {
            // InternalEtlParser.g:207:2: ( ( rule__Attribute__Group__0 ) )
            // InternalEtlParser.g:208:3: ( rule__Attribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getGroup()); 
            }
            // InternalEtlParser.g:209:3: ( rule__Attribute__Group__0 )
            // InternalEtlParser.g:209:4: rule__Attribute__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleAttributeValue"
    // InternalEtlParser.g:218:1: entryRuleAttributeValue : ruleAttributeValue EOF ;
    public final void entryRuleAttributeValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:219:1: ( ruleAttributeValue EOF )
            // InternalEtlParser.g:220:1: ruleAttributeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeValue"


    // $ANTLR start "ruleAttributeValue"
    // InternalEtlParser.g:227:1: ruleAttributeValue : ( ( rule__AttributeValue__Alternatives ) ) ;
    public final void ruleAttributeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:231:2: ( ( ( rule__AttributeValue__Alternatives ) ) )
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            {
            // InternalEtlParser.g:232:2: ( ( rule__AttributeValue__Alternatives ) )
            // InternalEtlParser.g:233:3: ( rule__AttributeValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:234:3: ( rule__AttributeValue__Alternatives )
            // InternalEtlParser.g:234:4: rule__AttributeValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeValue"


    // $ANTLR start "entryRuleConceptIdReplacementSlot"
    // InternalEtlParser.g:243:1: entryRuleConceptIdReplacementSlot : ruleConceptIdReplacementSlot EOF ;
    public final void entryRuleConceptIdReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:244:1: ( ruleConceptIdReplacementSlot EOF )
            // InternalEtlParser.g:245:1: ruleConceptIdReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptIdReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptIdReplacementSlot"


    // $ANTLR start "ruleConceptIdReplacementSlot"
    // InternalEtlParser.g:252:1: ruleConceptIdReplacementSlot : ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) ;
    public final void ruleConceptIdReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:256:2: ( ( ( rule__ConceptIdReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:257:2: ( ( rule__ConceptIdReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:258:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:259:3: ( rule__ConceptIdReplacementSlot__Group__0 )
            // InternalEtlParser.g:259:4: rule__ConceptIdReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptIdReplacementSlot"


    // $ANTLR start "entryRuleExpressionReplacementSlot"
    // InternalEtlParser.g:268:1: entryRuleExpressionReplacementSlot : ruleExpressionReplacementSlot EOF ;
    public final void entryRuleExpressionReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:269:1: ( ruleExpressionReplacementSlot EOF )
            // InternalEtlParser.g:270:1: ruleExpressionReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionReplacementSlot"


    // $ANTLR start "ruleExpressionReplacementSlot"
    // InternalEtlParser.g:277:1: ruleExpressionReplacementSlot : ( ( rule__ExpressionReplacementSlot__Group__0 ) ) ;
    public final void ruleExpressionReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:281:2: ( ( ( rule__ExpressionReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:282:2: ( ( rule__ExpressionReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:283:3: ( rule__ExpressionReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:284:3: ( rule__ExpressionReplacementSlot__Group__0 )
            // InternalEtlParser.g:284:4: rule__ExpressionReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionReplacementSlot"


    // $ANTLR start "entryRuleTokenReplacementSlot"
    // InternalEtlParser.g:293:1: entryRuleTokenReplacementSlot : ruleTokenReplacementSlot EOF ;
    public final void entryRuleTokenReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:294:1: ( ruleTokenReplacementSlot EOF )
            // InternalEtlParser.g:295:1: ruleTokenReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTokenReplacementSlot"


    // $ANTLR start "ruleTokenReplacementSlot"
    // InternalEtlParser.g:302:1: ruleTokenReplacementSlot : ( ( rule__TokenReplacementSlot__Group__0 ) ) ;
    public final void ruleTokenReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:306:2: ( ( ( rule__TokenReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:307:2: ( ( rule__TokenReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:308:3: ( rule__TokenReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:309:3: ( rule__TokenReplacementSlot__Group__0 )
            // InternalEtlParser.g:309:4: rule__TokenReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTokenReplacementSlot"


    // $ANTLR start "entryRuleTemplateInformationSlot"
    // InternalEtlParser.g:318:1: entryRuleTemplateInformationSlot : ruleTemplateInformationSlot EOF ;
    public final void entryRuleTemplateInformationSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:319:1: ( ruleTemplateInformationSlot EOF )
            // InternalEtlParser.g:320:1: ruleTemplateInformationSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemplateInformationSlot"


    // $ANTLR start "ruleTemplateInformationSlot"
    // InternalEtlParser.g:327:1: ruleTemplateInformationSlot : ( ( rule__TemplateInformationSlot__Group__0 ) ) ;
    public final void ruleTemplateInformationSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:331:2: ( ( ( rule__TemplateInformationSlot__Group__0 ) ) )
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            {
            // InternalEtlParser.g:332:2: ( ( rule__TemplateInformationSlot__Group__0 ) )
            // InternalEtlParser.g:333:3: ( rule__TemplateInformationSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:334:3: ( rule__TemplateInformationSlot__Group__0 )
            // InternalEtlParser.g:334:4: rule__TemplateInformationSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemplateInformationSlot"


    // $ANTLR start "entryRuleConcreteValueReplacementSlot"
    // InternalEtlParser.g:343:1: entryRuleConcreteValueReplacementSlot : ruleConcreteValueReplacementSlot EOF ;
    public final void entryRuleConcreteValueReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:344:1: ( ruleConcreteValueReplacementSlot EOF )
            // InternalEtlParser.g:345:1: ruleConcreteValueReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConcreteValueReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConcreteValueReplacementSlot"


    // $ANTLR start "ruleConcreteValueReplacementSlot"
    // InternalEtlParser.g:352:1: ruleConcreteValueReplacementSlot : ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) ;
    public final void ruleConcreteValueReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:356:2: ( ( ( rule__ConcreteValueReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:357:2: ( ( rule__ConcreteValueReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:358:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:359:3: ( rule__ConcreteValueReplacementSlot__Alternatives )
            // InternalEtlParser.g:359:4: rule__ConcreteValueReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConcreteValueReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConcreteValueReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConcreteValueReplacementSlot"


    // $ANTLR start "entryRuleStringReplacementSlot"
    // InternalEtlParser.g:368:1: entryRuleStringReplacementSlot : ruleStringReplacementSlot EOF ;
    public final void entryRuleStringReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:369:1: ( ruleStringReplacementSlot EOF )
            // InternalEtlParser.g:370:1: ruleStringReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringReplacementSlot"


    // $ANTLR start "ruleStringReplacementSlot"
    // InternalEtlParser.g:377:1: ruleStringReplacementSlot : ( ( rule__StringReplacementSlot__Group__0 ) ) ;
    public final void ruleStringReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:381:2: ( ( ( rule__StringReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:382:2: ( ( rule__StringReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:383:3: ( rule__StringReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:384:3: ( rule__StringReplacementSlot__Group__0 )
            // InternalEtlParser.g:384:4: rule__StringReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringReplacementSlot"


    // $ANTLR start "entryRuleIntegerReplacementSlot"
    // InternalEtlParser.g:393:1: entryRuleIntegerReplacementSlot : ruleIntegerReplacementSlot EOF ;
    public final void entryRuleIntegerReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:394:1: ( ruleIntegerReplacementSlot EOF )
            // InternalEtlParser.g:395:1: ruleIntegerReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerReplacementSlot"


    // $ANTLR start "ruleIntegerReplacementSlot"
    // InternalEtlParser.g:402:1: ruleIntegerReplacementSlot : ( ( rule__IntegerReplacementSlot__Group__0 ) ) ;
    public final void ruleIntegerReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:406:2: ( ( ( rule__IntegerReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:407:2: ( ( rule__IntegerReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:408:3: ( rule__IntegerReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:409:3: ( rule__IntegerReplacementSlot__Group__0 )
            // InternalEtlParser.g:409:4: rule__IntegerReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerReplacementSlot"


    // $ANTLR start "entryRuleDecimalReplacementSlot"
    // InternalEtlParser.g:418:1: entryRuleDecimalReplacementSlot : ruleDecimalReplacementSlot EOF ;
    public final void entryRuleDecimalReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:419:1: ( ruleDecimalReplacementSlot EOF )
            // InternalEtlParser.g:420:1: ruleDecimalReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalReplacementSlot"


    // $ANTLR start "ruleDecimalReplacementSlot"
    // InternalEtlParser.g:427:1: ruleDecimalReplacementSlot : ( ( rule__DecimalReplacementSlot__Group__0 ) ) ;
    public final void ruleDecimalReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:431:2: ( ( ( rule__DecimalReplacementSlot__Group__0 ) ) )
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            {
            // InternalEtlParser.g:432:2: ( ( rule__DecimalReplacementSlot__Group__0 ) )
            // InternalEtlParser.g:433:3: ( rule__DecimalReplacementSlot__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }
            // InternalEtlParser.g:434:3: ( rule__DecimalReplacementSlot__Group__0 )
            // InternalEtlParser.g:434:4: rule__DecimalReplacementSlot__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalReplacementSlot"


    // $ANTLR start "entryRuleEtlCardinality"
    // InternalEtlParser.g:443:1: entryRuleEtlCardinality : ruleEtlCardinality EOF ;
    public final void entryRuleEtlCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:444:1: ( ruleEtlCardinality EOF )
            // InternalEtlParser.g:445:1: ruleEtlCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEtlCardinality"


    // $ANTLR start "ruleEtlCardinality"
    // InternalEtlParser.g:452:1: ruleEtlCardinality : ( ( rule__EtlCardinality__Group__0 ) ) ;
    public final void ruleEtlCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:456:2: ( ( ( rule__EtlCardinality__Group__0 ) ) )
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            {
            // InternalEtlParser.g:457:2: ( ( rule__EtlCardinality__Group__0 ) )
            // InternalEtlParser.g:458:3: ( rule__EtlCardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:459:3: ( rule__EtlCardinality__Group__0 )
            // InternalEtlParser.g:459:4: rule__EtlCardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEtlCardinality"


    // $ANTLR start "entryRuleConceptReplacementSlot"
    // InternalEtlParser.g:468:1: entryRuleConceptReplacementSlot : ruleConceptReplacementSlot EOF ;
    public final void entryRuleConceptReplacementSlot() throws RecognitionException {
        try {
            // InternalEtlParser.g:469:1: ( ruleConceptReplacementSlot EOF )
            // InternalEtlParser.g:470:1: ruleConceptReplacementSlot EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReplacementSlot"


    // $ANTLR start "ruleConceptReplacementSlot"
    // InternalEtlParser.g:477:1: ruleConceptReplacementSlot : ( ( rule__ConceptReplacementSlot__Alternatives ) ) ;
    public final void ruleConceptReplacementSlot() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:481:2: ( ( ( rule__ConceptReplacementSlot__Alternatives ) ) )
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            {
            // InternalEtlParser.g:482:2: ( ( rule__ConceptReplacementSlot__Alternatives ) )
            // InternalEtlParser.g:483:3: ( rule__ConceptReplacementSlot__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:484:3: ( rule__ConceptReplacementSlot__Alternatives )
            // InternalEtlParser.g:484:4: rule__ConceptReplacementSlot__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReplacementSlot__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReplacementSlotAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReplacementSlot"


    // $ANTLR start "entryRuleConceptReference"
    // InternalEtlParser.g:493:1: entryRuleConceptReference : ruleConceptReference EOF ;
    public final void entryRuleConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:494:1: ( ruleConceptReference EOF )
            // InternalEtlParser.g:495:1: ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalEtlParser.g:502:1: ruleConceptReference : ( ( rule__ConceptReference__Alternatives ) ) ;
    public final void ruleConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:506:2: ( ( ( rule__ConceptReference__Alternatives ) ) )
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            {
            // InternalEtlParser.g:507:2: ( ( rule__ConceptReference__Alternatives ) )
            // InternalEtlParser.g:508:3: ( rule__ConceptReference__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:509:3: ( rule__ConceptReference__Alternatives )
            // InternalEtlParser.g:509:4: rule__ConceptReference__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleSlotToken"
    // InternalEtlParser.g:518:1: entryRuleSlotToken : ruleSlotToken EOF ;
    public final void entryRuleSlotToken() throws RecognitionException {
        try {
            // InternalEtlParser.g:519:1: ( ruleSlotToken EOF )
            // InternalEtlParser.g:520:1: ruleSlotToken EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotToken"


    // $ANTLR start "ruleSlotToken"
    // InternalEtlParser.g:527:1: ruleSlotToken : ( ( rule__SlotToken__Alternatives ) ) ;
    public final void ruleSlotToken() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:531:2: ( ( ( rule__SlotToken__Alternatives ) ) )
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            {
            // InternalEtlParser.g:532:2: ( ( rule__SlotToken__Alternatives ) )
            // InternalEtlParser.g:533:3: ( rule__SlotToken__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:534:3: ( rule__SlotToken__Alternatives )
            // InternalEtlParser.g:534:4: rule__SlotToken__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotToken__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotTokenAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotToken"


    // $ANTLR start "entryRuleStringValue"
    // InternalEtlParser.g:543:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:544:1: ( ruleStringValue EOF )
            // InternalEtlParser.g:545:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalEtlParser.g:552:1: ruleStringValue : ( ( rule__StringValue__ValueAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:556:2: ( ( ( rule__StringValue__ValueAssignment ) ) )
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            {
            // InternalEtlParser.g:557:2: ( ( rule__StringValue__ValueAssignment ) )
            // InternalEtlParser.g:558:3: ( rule__StringValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }
            // InternalEtlParser.g:559:3: ( rule__StringValue__ValueAssignment )
            // InternalEtlParser.g:559:4: rule__StringValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalEtlParser.g:568:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:569:1: ( ruleIntegerValue EOF )
            // InternalEtlParser.g:570:1: ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalEtlParser.g:577:1: ruleIntegerValue : ( ( rule__IntegerValue__Group__0 ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:581:2: ( ( ( rule__IntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:582:2: ( ( rule__IntegerValue__Group__0 ) )
            // InternalEtlParser.g:583:3: ( rule__IntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:584:3: ( rule__IntegerValue__Group__0 )
            // InternalEtlParser.g:584:4: rule__IntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleDecimalValue"
    // InternalEtlParser.g:593:1: entryRuleDecimalValue : ruleDecimalValue EOF ;
    public final void entryRuleDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:594:1: ( ruleDecimalValue EOF )
            // InternalEtlParser.g:595:1: ruleDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValue"


    // $ANTLR start "ruleDecimalValue"
    // InternalEtlParser.g:602:1: ruleDecimalValue : ( ( rule__DecimalValue__Group__0 ) ) ;
    public final void ruleDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:606:2: ( ( ( rule__DecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:607:2: ( ( rule__DecimalValue__Group__0 ) )
            // InternalEtlParser.g:608:3: ( rule__DecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:609:3: ( rule__DecimalValue__Group__0 )
            // InternalEtlParser.g:609:4: rule__DecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValue"


    // $ANTLR start "entryRuleSlotInteger"
    // InternalEtlParser.g:618:1: entryRuleSlotInteger : ruleSlotInteger EOF ;
    public final void entryRuleSlotInteger() throws RecognitionException {
        try {
            // InternalEtlParser.g:619:1: ( ruleSlotInteger EOF )
            // InternalEtlParser.g:620:1: ruleSlotInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotInteger"


    // $ANTLR start "ruleSlotInteger"
    // InternalEtlParser.g:627:1: ruleSlotInteger : ( ( rule__SlotInteger__Alternatives ) ) ;
    public final void ruleSlotInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:631:2: ( ( ( rule__SlotInteger__Alternatives ) ) )
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            {
            // InternalEtlParser.g:632:2: ( ( rule__SlotInteger__Alternatives ) )
            // InternalEtlParser.g:633:3: ( rule__SlotInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:634:3: ( rule__SlotInteger__Alternatives )
            // InternalEtlParser.g:634:4: rule__SlotInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotInteger"


    // $ANTLR start "entryRuleSlotIntegerValue"
    // InternalEtlParser.g:643:1: entryRuleSlotIntegerValue : ruleSlotIntegerValue EOF ;
    public final void entryRuleSlotIntegerValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:644:1: ( ruleSlotIntegerValue EOF )
            // InternalEtlParser.g:645:1: ruleSlotIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerValue"


    // $ANTLR start "ruleSlotIntegerValue"
    // InternalEtlParser.g:652:1: ruleSlotIntegerValue : ( ( rule__SlotIntegerValue__Group__0 ) ) ;
    public final void ruleSlotIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:656:2: ( ( ( rule__SlotIntegerValue__Group__0 ) ) )
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            {
            // InternalEtlParser.g:657:2: ( ( rule__SlotIntegerValue__Group__0 ) )
            // InternalEtlParser.g:658:3: ( rule__SlotIntegerValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:659:3: ( rule__SlotIntegerValue__Group__0 )
            // InternalEtlParser.g:659:4: rule__SlotIntegerValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerValue"


    // $ANTLR start "entryRuleSlotIntegerRange"
    // InternalEtlParser.g:668:1: entryRuleSlotIntegerRange : ruleSlotIntegerRange EOF ;
    public final void entryRuleSlotIntegerRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:669:1: ( ruleSlotIntegerRange EOF )
            // InternalEtlParser.g:670:1: ruleSlotIntegerRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerRange"


    // $ANTLR start "ruleSlotIntegerRange"
    // InternalEtlParser.g:677:1: ruleSlotIntegerRange : ( ( rule__SlotIntegerRange__Alternatives ) ) ;
    public final void ruleSlotIntegerRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:681:2: ( ( ( rule__SlotIntegerRange__Alternatives ) ) )
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            {
            // InternalEtlParser.g:682:2: ( ( rule__SlotIntegerRange__Alternatives ) )
            // InternalEtlParser.g:683:3: ( rule__SlotIntegerRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:684:3: ( rule__SlotIntegerRange__Alternatives )
            // InternalEtlParser.g:684:4: rule__SlotIntegerRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerRange"


    // $ANTLR start "entryRuleSlotIntegerMinimumValue"
    // InternalEtlParser.g:693:1: entryRuleSlotIntegerMinimumValue : ruleSlotIntegerMinimumValue EOF ;
    public final void entryRuleSlotIntegerMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:694:1: ( ruleSlotIntegerMinimumValue EOF )
            // InternalEtlParser.g:695:1: ruleSlotIntegerMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMinimumValue"


    // $ANTLR start "ruleSlotIntegerMinimumValue"
    // InternalEtlParser.g:702:1: ruleSlotIntegerMinimumValue : ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:706:2: ( ( ( rule__SlotIntegerMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:707:2: ( ( rule__SlotIntegerMinimumValue__Group__0 ) )
            // InternalEtlParser.g:708:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:709:3: ( rule__SlotIntegerMinimumValue__Group__0 )
            // InternalEtlParser.g:709:4: rule__SlotIntegerMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMinimumValue"


    // $ANTLR start "entryRuleSlotIntegerMaximumValue"
    // InternalEtlParser.g:718:1: entryRuleSlotIntegerMaximumValue : ruleSlotIntegerMaximumValue EOF ;
    public final void entryRuleSlotIntegerMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:719:1: ( ruleSlotIntegerMaximumValue EOF )
            // InternalEtlParser.g:720:1: ruleSlotIntegerMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotIntegerMaximumValue"


    // $ANTLR start "ruleSlotIntegerMaximumValue"
    // InternalEtlParser.g:727:1: ruleSlotIntegerMaximumValue : ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) ;
    public final void ruleSlotIntegerMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:731:2: ( ( ( rule__SlotIntegerMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:732:2: ( ( rule__SlotIntegerMaximumValue__Group__0 ) )
            // InternalEtlParser.g:733:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:734:3: ( rule__SlotIntegerMaximumValue__Group__0 )
            // InternalEtlParser.g:734:4: rule__SlotIntegerMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotIntegerMaximumValue"


    // $ANTLR start "entryRuleSlotDecimal"
    // InternalEtlParser.g:743:1: entryRuleSlotDecimal : ruleSlotDecimal EOF ;
    public final void entryRuleSlotDecimal() throws RecognitionException {
        try {
            // InternalEtlParser.g:744:1: ( ruleSlotDecimal EOF )
            // InternalEtlParser.g:745:1: ruleSlotDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimal"


    // $ANTLR start "ruleSlotDecimal"
    // InternalEtlParser.g:752:1: ruleSlotDecimal : ( ( rule__SlotDecimal__Alternatives ) ) ;
    public final void ruleSlotDecimal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:756:2: ( ( ( rule__SlotDecimal__Alternatives ) ) )
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            {
            // InternalEtlParser.g:757:2: ( ( rule__SlotDecimal__Alternatives ) )
            // InternalEtlParser.g:758:3: ( rule__SlotDecimal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:759:3: ( rule__SlotDecimal__Alternatives )
            // InternalEtlParser.g:759:4: rule__SlotDecimal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimal"


    // $ANTLR start "entryRuleSlotDecimalValue"
    // InternalEtlParser.g:768:1: entryRuleSlotDecimalValue : ruleSlotDecimalValue EOF ;
    public final void entryRuleSlotDecimalValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:769:1: ( ruleSlotDecimalValue EOF )
            // InternalEtlParser.g:770:1: ruleSlotDecimalValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalValue"


    // $ANTLR start "ruleSlotDecimalValue"
    // InternalEtlParser.g:777:1: ruleSlotDecimalValue : ( ( rule__SlotDecimalValue__Group__0 ) ) ;
    public final void ruleSlotDecimalValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:781:2: ( ( ( rule__SlotDecimalValue__Group__0 ) ) )
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            {
            // InternalEtlParser.g:782:2: ( ( rule__SlotDecimalValue__Group__0 ) )
            // InternalEtlParser.g:783:3: ( rule__SlotDecimalValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:784:3: ( rule__SlotDecimalValue__Group__0 )
            // InternalEtlParser.g:784:4: rule__SlotDecimalValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalValue"


    // $ANTLR start "entryRuleSlotDecimalRange"
    // InternalEtlParser.g:793:1: entryRuleSlotDecimalRange : ruleSlotDecimalRange EOF ;
    public final void entryRuleSlotDecimalRange() throws RecognitionException {
        try {
            // InternalEtlParser.g:794:1: ( ruleSlotDecimalRange EOF )
            // InternalEtlParser.g:795:1: ruleSlotDecimalRange EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalRange();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalRange"


    // $ANTLR start "ruleSlotDecimalRange"
    // InternalEtlParser.g:802:1: ruleSlotDecimalRange : ( ( rule__SlotDecimalRange__Alternatives ) ) ;
    public final void ruleSlotDecimalRange() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:806:2: ( ( ( rule__SlotDecimalRange__Alternatives ) ) )
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            {
            // InternalEtlParser.g:807:2: ( ( rule__SlotDecimalRange__Alternatives ) )
            // InternalEtlParser.g:808:3: ( rule__SlotDecimalRange__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:809:3: ( rule__SlotDecimalRange__Alternatives )
            // InternalEtlParser.g:809:4: rule__SlotDecimalRange__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalRange"


    // $ANTLR start "entryRuleSlotDecimalMinimumValue"
    // InternalEtlParser.g:818:1: entryRuleSlotDecimalMinimumValue : ruleSlotDecimalMinimumValue EOF ;
    public final void entryRuleSlotDecimalMinimumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:819:1: ( ruleSlotDecimalMinimumValue EOF )
            // InternalEtlParser.g:820:1: ruleSlotDecimalMinimumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMinimumValue"


    // $ANTLR start "ruleSlotDecimalMinimumValue"
    // InternalEtlParser.g:827:1: ruleSlotDecimalMinimumValue : ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMinimumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:831:2: ( ( ( rule__SlotDecimalMinimumValue__Group__0 ) ) )
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            {
            // InternalEtlParser.g:832:2: ( ( rule__SlotDecimalMinimumValue__Group__0 ) )
            // InternalEtlParser.g:833:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:834:3: ( rule__SlotDecimalMinimumValue__Group__0 )
            // InternalEtlParser.g:834:4: rule__SlotDecimalMinimumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMinimumValue"


    // $ANTLR start "entryRuleSlotDecimalMaximumValue"
    // InternalEtlParser.g:843:1: entryRuleSlotDecimalMaximumValue : ruleSlotDecimalMaximumValue EOF ;
    public final void entryRuleSlotDecimalMaximumValue() throws RecognitionException {
        try {
            // InternalEtlParser.g:844:1: ( ruleSlotDecimalMaximumValue EOF )
            // InternalEtlParser.g:845:1: ruleSlotDecimalMaximumValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSlotDecimalMaximumValue"


    // $ANTLR start "ruleSlotDecimalMaximumValue"
    // InternalEtlParser.g:852:1: ruleSlotDecimalMaximumValue : ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) ;
    public final void ruleSlotDecimalMaximumValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:856:2: ( ( ( rule__SlotDecimalMaximumValue__Group__0 ) ) )
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            {
            // InternalEtlParser.g:857:2: ( ( rule__SlotDecimalMaximumValue__Group__0 ) )
            // InternalEtlParser.g:858:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }
            // InternalEtlParser.g:859:3: ( rule__SlotDecimalMaximumValue__Group__0 )
            // InternalEtlParser.g:859:4: rule__SlotDecimalMaximumValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSlotDecimalMaximumValue"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEtlParser.g:868:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:869:1: ( ruleExpressionConstraint EOF )
            // InternalEtlParser.g:870:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEtlParser.g:877:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:881:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            {
            // InternalEtlParser.g:882:2: ( ruleOrExpressionConstraint )
            // InternalEtlParser.g:883:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEtlParser.g:893:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:894:1: ( ruleOrExpressionConstraint EOF )
            // InternalEtlParser.g:895:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEtlParser.g:902:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:906:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:907:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:908:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:909:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEtlParser.g:909:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEtlParser.g:918:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:919:1: ( ruleAndExpressionConstraint EOF )
            // InternalEtlParser.g:920:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEtlParser.g:927:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:931:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:932:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:933:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:934:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEtlParser.g:934:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEtlParser.g:943:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:944:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEtlParser.g:945:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEtlParser.g:952:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:956:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:957:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:958:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:959:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEtlParser.g:959:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEtlParser.g:968:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:969:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEtlParser.g:970:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEtlParser.g:977:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:981:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:982:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:983:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:984:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:984:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEtlParser.g:993:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:994:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEtlParser.g:995:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEtlParser.g:1002:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1006:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1007:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1008:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1009:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1009:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEtlParser.g:1018:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1019:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEtlParser.g:1020:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEtlParser.g:1027:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1031:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1032:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1032:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEtlParser.g:1033:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1034:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEtlParser.g:1034:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEtlParser.g:1043:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1044:1: ( ruleSubExpressionConstraint EOF )
            // InternalEtlParser.g:1045:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEtlParser.g:1052:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1056:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEtlParser.g:1057:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEtlParser.g:1057:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEtlParser.g:1058:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1059:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEtlParser.g:1059:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEtlParser.g:1068:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEtlParser.g:1069:1: ( ruleEclFocusConcept EOF )
            // InternalEtlParser.g:1070:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEtlParser.g:1077:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1081:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEtlParser.g:1082:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEtlParser.g:1082:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEtlParser.g:1083:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1084:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEtlParser.g:1084:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEtlParser.g:1093:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1094:1: ( ruleChildOf EOF )
            // InternalEtlParser.g:1095:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEtlParser.g:1102:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1106:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEtlParser.g:1107:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEtlParser.g:1107:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEtlParser.g:1108:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1109:3: ( rule__ChildOf__Group__0 )
            // InternalEtlParser.g:1109:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEtlParser.g:1118:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1119:1: ( ruleChildOrSelfOf EOF )
            // InternalEtlParser.g:1120:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEtlParser.g:1127:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1131:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1132:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1133:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1134:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEtlParser.g:1134:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEtlParser.g:1143:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1144:1: ( ruleDescendantOf EOF )
            // InternalEtlParser.g:1145:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEtlParser.g:1152:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1156:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEtlParser.g:1157:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEtlParser.g:1157:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEtlParser.g:1158:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1159:3: ( rule__DescendantOf__Group__0 )
            // InternalEtlParser.g:1159:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEtlParser.g:1168:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1169:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEtlParser.g:1170:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEtlParser.g:1177:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1181:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1182:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1183:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1184:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEtlParser.g:1184:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEtlParser.g:1193:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1194:1: ( ruleParentOf EOF )
            // InternalEtlParser.g:1195:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEtlParser.g:1202:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1206:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEtlParser.g:1207:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEtlParser.g:1207:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEtlParser.g:1208:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1209:3: ( rule__ParentOf__Group__0 )
            // InternalEtlParser.g:1209:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEtlParser.g:1218:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1219:1: ( ruleParentOrSelfOf EOF )
            // InternalEtlParser.g:1220:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEtlParser.g:1227:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1231:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1232:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1233:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1234:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEtlParser.g:1234:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEtlParser.g:1243:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1244:1: ( ruleAncestorOf EOF )
            // InternalEtlParser.g:1245:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEtlParser.g:1252:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1256:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEtlParser.g:1257:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEtlParser.g:1257:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEtlParser.g:1258:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1259:3: ( rule__AncestorOf__Group__0 )
            // InternalEtlParser.g:1259:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEtlParser.g:1268:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1269:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEtlParser.g:1270:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEtlParser.g:1277:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1281:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEtlParser.g:1282:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEtlParser.g:1283:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1284:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEtlParser.g:1284:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEtlParser.g:1293:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEtlParser.g:1294:1: ( ruleMemberOf EOF )
            // InternalEtlParser.g:1295:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEtlParser.g:1302:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1306:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEtlParser.g:1307:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEtlParser.g:1307:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEtlParser.g:1308:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEtlParser.g:1309:3: ( rule__MemberOf__Group__0 )
            // InternalEtlParser.g:1309:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEtlParser.g:1318:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEtlParser.g:1319:1: ( ruleEclConceptReference EOF )
            // InternalEtlParser.g:1320:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEtlParser.g:1327:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1331:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEtlParser.g:1332:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEtlParser.g:1332:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEtlParser.g:1333:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEtlParser.g:1334:3: ( rule__EclConceptReference__Group__0 )
            // InternalEtlParser.g:1334:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEtlParser.g:1343:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1344:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEtlParser.g:1345:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEtlParser.g:1352:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1356:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEtlParser.g:1357:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEtlParser.g:1358:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1359:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEtlParser.g:1359:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEtlParser.g:1368:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEtlParser.g:1369:1: ( ruleAny EOF )
            // InternalEtlParser.g:1370:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEtlParser.g:1377:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1381:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEtlParser.g:1382:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEtlParser.g:1382:2: ( ( rule__Any__Group__0 ) )
            // InternalEtlParser.g:1383:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEtlParser.g:1384:3: ( rule__Any__Group__0 )
            // InternalEtlParser.g:1384:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEtlParser.g:1393:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1394:1: ( ruleEclRefinement EOF )
            // InternalEtlParser.g:1395:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEtlParser.g:1402:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1406:2: ( ( ruleOrRefinement ) )
            // InternalEtlParser.g:1407:2: ( ruleOrRefinement )
            {
            // InternalEtlParser.g:1407:2: ( ruleOrRefinement )
            // InternalEtlParser.g:1408:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEtlParser.g:1418:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1419:1: ( ruleOrRefinement EOF )
            // InternalEtlParser.g:1420:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEtlParser.g:1427:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1431:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1432:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1432:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEtlParser.g:1433:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1434:3: ( rule__OrRefinement__Group__0 )
            // InternalEtlParser.g:1434:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEtlParser.g:1443:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1444:1: ( ruleAndRefinement EOF )
            // InternalEtlParser.g:1445:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEtlParser.g:1452:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1456:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1457:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1457:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEtlParser.g:1458:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1459:3: ( rule__AndRefinement__Group__0 )
            // InternalEtlParser.g:1459:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEtlParser.g:1468:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1469:1: ( ruleSubRefinement EOF )
            // InternalEtlParser.g:1470:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEtlParser.g:1477:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1481:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEtlParser.g:1482:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEtlParser.g:1482:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEtlParser.g:1483:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1484:3: ( rule__SubRefinement__Alternatives )
            // InternalEtlParser.g:1484:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEtlParser.g:1493:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEtlParser.g:1494:1: ( ruleNestedRefinement EOF )
            // InternalEtlParser.g:1495:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEtlParser.g:1502:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1506:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEtlParser.g:1507:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEtlParser.g:1507:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEtlParser.g:1508:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEtlParser.g:1509:3: ( rule__NestedRefinement__Group__0 )
            // InternalEtlParser.g:1509:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEtlParser.g:1518:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEtlParser.g:1519:1: ( ruleEclAttributeGroup EOF )
            // InternalEtlParser.g:1520:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEtlParser.g:1527:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1531:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEtlParser.g:1532:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEtlParser.g:1532:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEtlParser.g:1533:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEtlParser.g:1534:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEtlParser.g:1534:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEtlParser.g:1543:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1544:1: ( ruleEclAttributeSet EOF )
            // InternalEtlParser.g:1545:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEtlParser.g:1552:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1556:2: ( ( ruleOrAttributeSet ) )
            // InternalEtlParser.g:1557:2: ( ruleOrAttributeSet )
            {
            // InternalEtlParser.g:1557:2: ( ruleOrAttributeSet )
            // InternalEtlParser.g:1558:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEtlParser.g:1568:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1569:1: ( ruleOrAttributeSet EOF )
            // InternalEtlParser.g:1570:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEtlParser.g:1577:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1581:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1582:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1582:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1583:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1584:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEtlParser.g:1584:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEtlParser.g:1593:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1594:1: ( ruleAndAttributeSet EOF )
            // InternalEtlParser.g:1595:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEtlParser.g:1602:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1606:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1607:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1607:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1608:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1609:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEtlParser.g:1609:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEtlParser.g:1618:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1619:1: ( ruleSubAttributeSet EOF )
            // InternalEtlParser.g:1620:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEtlParser.g:1627:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1631:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEtlParser.g:1632:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEtlParser.g:1632:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEtlParser.g:1633:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1634:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEtlParser.g:1634:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEtlParser.g:1643:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:1644:1: ( ruleNestedAttributeSet EOF )
            // InternalEtlParser.g:1645:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEtlParser.g:1652:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1656:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEtlParser.g:1657:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEtlParser.g:1657:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEtlParser.g:1658:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:1659:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEtlParser.g:1659:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEtlParser.g:1668:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1669:1: ( ruleAttributeConstraint EOF )
            // InternalEtlParser.g:1670:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEtlParser.g:1677:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1681:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1682:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1682:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEtlParser.g:1683:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1684:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEtlParser.g:1684:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEtlParser.g:1693:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEtlParser.g:1694:1: ( ruleCardinality EOF )
            // InternalEtlParser.g:1695:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEtlParser.g:1702:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1706:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEtlParser.g:1707:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEtlParser.g:1707:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEtlParser.g:1708:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEtlParser.g:1709:3: ( rule__Cardinality__Group__0 )
            // InternalEtlParser.g:1709:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEtlParser.g:1718:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1719:1: ( ruleComparison EOF )
            // InternalEtlParser.g:1720:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEtlParser.g:1727:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1731:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEtlParser.g:1732:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEtlParser.g:1732:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEtlParser.g:1733:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1734:3: ( rule__Comparison__Alternatives )
            // InternalEtlParser.g:1734:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEtlParser.g:1743:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1744:1: ( ruleAttributeComparison EOF )
            // InternalEtlParser.g:1745:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEtlParser.g:1752:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1756:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEtlParser.g:1757:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1757:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEtlParser.g:1758:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1759:3: ( rule__AttributeComparison__Group__0 )
            // InternalEtlParser.g:1759:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEtlParser.g:1768:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1769:1: ( ruleDataTypeComparison EOF )
            // InternalEtlParser.g:1770:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEtlParser.g:1777:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1781:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEtlParser.g:1782:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEtlParser.g:1782:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEtlParser.g:1783:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:1784:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEtlParser.g:1784:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEtlParser.g:1793:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1794:1: ( ruleBooleanValueComparison EOF )
            // InternalEtlParser.g:1795:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEtlParser.g:1802:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1806:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1807:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1807:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEtlParser.g:1808:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1809:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEtlParser.g:1809:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEtlParser.g:1818:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1819:1: ( ruleStringValueComparison EOF )
            // InternalEtlParser.g:1820:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEtlParser.g:1827:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1831:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1832:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1832:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEtlParser.g:1833:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1834:3: ( rule__StringValueComparison__Group__0 )
            // InternalEtlParser.g:1834:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEtlParser.g:1843:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1844:1: ( ruleIntegerValueComparison EOF )
            // InternalEtlParser.g:1845:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEtlParser.g:1852:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1856:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1857:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1857:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEtlParser.g:1858:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1859:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEtlParser.g:1859:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEtlParser.g:1868:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEtlParser.g:1869:1: ( ruleDecimalValueComparison EOF )
            // InternalEtlParser.g:1870:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEtlParser.g:1877:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1881:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEtlParser.g:1882:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEtlParser.g:1882:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEtlParser.g:1883:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEtlParser.g:1884:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEtlParser.g:1884:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEtlParser.g:1893:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEtlParser.g:1894:1: ( ruleNestedExpression EOF )
            // InternalEtlParser.g:1895:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEtlParser.g:1902:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1906:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEtlParser.g:1907:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEtlParser.g:1907:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEtlParser.g:1908:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEtlParser.g:1909:3: ( rule__NestedExpression__Group__0 )
            // InternalEtlParser.g:1909:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEtlParser.g:1918:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEtlParser.g:1919:1: ( ruleFilterConstraint EOF )
            // InternalEtlParser.g:1920:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEtlParser.g:1927:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1931:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEtlParser.g:1932:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEtlParser.g:1932:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEtlParser.g:1933:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEtlParser.g:1934:3: ( rule__FilterConstraint__Group__0 )
            // InternalEtlParser.g:1934:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEtlParser.g:1943:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1944:1: ( ruleFilter EOF )
            // InternalEtlParser.g:1945:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEtlParser.g:1952:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1956:2: ( ( ruleDisjunctionFilter ) )
            // InternalEtlParser.g:1957:2: ( ruleDisjunctionFilter )
            {
            // InternalEtlParser.g:1957:2: ( ruleDisjunctionFilter )
            // InternalEtlParser.g:1958:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEtlParser.g:1968:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1969:1: ( ruleDisjunctionFilter EOF )
            // InternalEtlParser.g:1970:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEtlParser.g:1977:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:1981:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:1982:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:1982:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:1983:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:1984:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEtlParser.g:1984:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEtlParser.g:1993:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:1994:1: ( ruleConjunctionFilter EOF )
            // InternalEtlParser.g:1995:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEtlParser.g:2002:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2006:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEtlParser.g:2007:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2007:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEtlParser.g:2008:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2009:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEtlParser.g:2009:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEtlParser.g:2018:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2019:1: ( ruleNestedFilter EOF )
            // InternalEtlParser.g:2020:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEtlParser.g:2027:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2031:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEtlParser.g:2032:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2032:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEtlParser.g:2033:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2034:3: ( rule__NestedFilter__Group__0 )
            // InternalEtlParser.g:2034:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEtlParser.g:2043:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2044:1: ( rulePropertyFilter EOF )
            // InternalEtlParser.g:2045:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEtlParser.g:2052:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2056:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEtlParser.g:2057:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2057:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEtlParser.g:2058:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2059:3: ( rule__PropertyFilter__Alternatives )
            // InternalEtlParser.g:2059:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEtlParser.g:2068:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2069:1: ( ruleTermFilter EOF )
            // InternalEtlParser.g:2070:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEtlParser.g:2077:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2081:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEtlParser.g:2082:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2082:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEtlParser.g:2083:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2084:3: ( rule__TermFilter__Group__0 )
            // InternalEtlParser.g:2084:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEtlParser.g:2093:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2094:1: ( ruleTypedTermFilter EOF )
            // InternalEtlParser.g:2095:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEtlParser.g:2102:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2106:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEtlParser.g:2107:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2107:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEtlParser.g:2108:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2109:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEtlParser.g:2109:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEtlParser.g:2118:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2119:1: ( ruleTypedTermFilterSet EOF )
            // InternalEtlParser.g:2120:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEtlParser.g:2127:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2131:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEtlParser.g:2132:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEtlParser.g:2132:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEtlParser.g:2133:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:2134:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEtlParser.g:2134:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEtlParser.g:2143:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2144:1: ( ruleLanguageFilter EOF )
            // InternalEtlParser.g:2145:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEtlParser.g:2152:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2156:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEtlParser.g:2157:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2157:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEtlParser.g:2158:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2159:3: ( rule__LanguageFilter__Group__0 )
            // InternalEtlParser.g:2159:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEtlParser.g:2168:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2169:1: ( ruleTypeFilter EOF )
            // InternalEtlParser.g:2170:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEtlParser.g:2177:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2181:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEtlParser.g:2182:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2182:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEtlParser.g:2183:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2184:3: ( rule__TypeFilter__Alternatives )
            // InternalEtlParser.g:2184:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEtlParser.g:2193:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2194:1: ( ruleTypeIdFilter EOF )
            // InternalEtlParser.g:2195:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEtlParser.g:2202:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2206:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2207:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2207:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEtlParser.g:2208:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2209:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEtlParser.g:2209:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEtlParser.g:2218:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2219:1: ( ruleTypeTokenFilter EOF )
            // InternalEtlParser.g:2220:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEtlParser.g:2227:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2231:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEtlParser.g:2232:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2232:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEtlParser.g:2233:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2234:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEtlParser.g:2234:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEtlParser.g:2243:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2244:1: ( ruleDialectFilter EOF )
            // InternalEtlParser.g:2245:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEtlParser.g:2252:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2256:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEtlParser.g:2257:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEtlParser.g:2257:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEtlParser.g:2258:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2259:3: ( rule__DialectFilter__Alternatives )
            // InternalEtlParser.g:2259:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEtlParser.g:2268:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2269:1: ( ruleDialectIdFilter EOF )
            // InternalEtlParser.g:2270:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEtlParser.g:2277:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2281:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEtlParser.g:2282:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2282:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEtlParser.g:2283:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2284:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEtlParser.g:2284:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEtlParser.g:2293:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2294:1: ( ruleDialectAliasFilter EOF )
            // InternalEtlParser.g:2295:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEtlParser.g:2302:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2306:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEtlParser.g:2307:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2307:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEtlParser.g:2308:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2309:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEtlParser.g:2309:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEtlParser.g:2318:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEtlParser.g:2319:1: ( ruleDialect EOF )
            // InternalEtlParser.g:2320:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEtlParser.g:2327:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2331:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEtlParser.g:2332:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEtlParser.g:2332:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEtlParser.g:2333:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEtlParser.g:2334:3: ( rule__Dialect__Group__0 )
            // InternalEtlParser.g:2334:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEtlParser.g:2343:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2347:1: ( ruleDialectAlias EOF )
            // InternalEtlParser.g:2348:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEtlParser.g:2358:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2363:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEtlParser.g:2364:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEtlParser.g:2364:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEtlParser.g:2365:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEtlParser.g:2366:3: ( rule__DialectAlias__Group__0 )
            // InternalEtlParser.g:2366:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEtlParser.g:2376:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEtlParser.g:2377:1: ( ruleAcceptability EOF )
            // InternalEtlParser.g:2378:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEtlParser.g:2385:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2389:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEtlParser.g:2390:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEtlParser.g:2390:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEtlParser.g:2391:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2392:3: ( rule__Acceptability__Alternatives )
            // InternalEtlParser.g:2392:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEtlParser.g:2401:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2402:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEtlParser.g:2403:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEtlParser.g:2410:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2414:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEtlParser.g:2415:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEtlParser.g:2415:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEtlParser.g:2416:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEtlParser.g:2417:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEtlParser.g:2417:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEtlParser.g:2426:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEtlParser.g:2427:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEtlParser.g:2428:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEtlParser.g:2435:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2439:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEtlParser.g:2440:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEtlParser.g:2440:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEtlParser.g:2441:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEtlParser.g:2442:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEtlParser.g:2442:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEtlParser.g:2451:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2452:1: ( ruleActiveFilter EOF )
            // InternalEtlParser.g:2453:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEtlParser.g:2460:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2464:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEtlParser.g:2465:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2465:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEtlParser.g:2466:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2467:3: ( rule__ActiveFilter__Group__0 )
            // InternalEtlParser.g:2467:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEtlParser.g:2476:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2477:1: ( ruleModuleFilter EOF )
            // InternalEtlParser.g:2478:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEtlParser.g:2485:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2489:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEtlParser.g:2490:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2490:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEtlParser.g:2491:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2492:3: ( rule__ModuleFilter__Group__0 )
            // InternalEtlParser.g:2492:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEtlParser.g:2501:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2502:1: ( ruleSemanticTagFilter EOF )
            // InternalEtlParser.g:2503:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEtlParser.g:2510:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2514:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEtlParser.g:2515:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2515:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEtlParser.g:2516:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2517:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEtlParser.g:2517:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEtlParser.g:2526:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2527:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEtlParser.g:2528:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEtlParser.g:2535:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2539:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEtlParser.g:2540:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2540:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEtlParser.g:2541:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2542:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEtlParser.g:2542:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEtlParser.g:2551:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2552:1: ( rulePreferredInFilter EOF )
            // InternalEtlParser.g:2553:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEtlParser.g:2560:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2564:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2565:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2565:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEtlParser.g:2566:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2567:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEtlParser.g:2567:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEtlParser.g:2576:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2577:1: ( ruleAcceptableInFilter EOF )
            // InternalEtlParser.g:2578:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEtlParser.g:2585:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2589:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEtlParser.g:2590:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2590:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEtlParser.g:2591:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2592:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEtlParser.g:2592:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEtlParser.g:2601:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2602:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEtlParser.g:2603:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEtlParser.g:2610:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2614:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEtlParser.g:2615:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2615:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEtlParser.g:2616:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2617:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEtlParser.g:2617:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEtlParser.g:2626:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEtlParser.g:2627:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEtlParser.g:2628:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEtlParser.g:2635:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2639:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEtlParser.g:2640:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEtlParser.g:2640:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEtlParser.g:2641:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEtlParser.g:2642:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEtlParser.g:2642:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEtlParser.g:2651:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2655:1: ( ruleSnomedIdentifier EOF )
            // InternalEtlParser.g:2656:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEtlParser.g:2666:1: ruleSnomedIdentifier : ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2671:2: ( ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) )
            // InternalEtlParser.g:2672:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            {
            // InternalEtlParser.g:2672:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            // InternalEtlParser.g:2673:3: ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* )
            {
            // InternalEtlParser.g:2673:3: ( ( rule__SnomedIdentifier__Alternatives ) )
            // InternalEtlParser.g:2674:4: ( rule__SnomedIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2675:4: ( rule__SnomedIdentifier__Alternatives )
            // InternalEtlParser.g:2675:5: rule__SnomedIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__SnomedIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2678:3: ( ( rule__SnomedIdentifier__Alternatives )* )
            // InternalEtlParser.g:2679:4: ( rule__SnomedIdentifier__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2680:4: ( rule__SnomedIdentifier__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT_NONZERO) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEtlParser()) ) {
                        alt1=1;
                    }


                }
                else if ( (LA1_0==RULE_DIGIT_ZERO) ) {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalEtlParser()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEtlParser.g:2680:5: rule__SnomedIdentifier__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__SnomedIdentifier__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEtlParser.g:2691:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2695:1: ( ruleNonNegativeInteger EOF )
            // InternalEtlParser.g:2696:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEtlParser.g:2706:1: ruleNonNegativeInteger : ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2711:2: ( ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) )
            // InternalEtlParser.g:2712:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            {
            // InternalEtlParser.g:2712:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            // InternalEtlParser.g:2713:3: ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* )
            {
            // InternalEtlParser.g:2713:3: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEtlParser.g:2714:4: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2715:4: ( rule__NonNegativeInteger__Alternatives )
            // InternalEtlParser.g:2715:5: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2718:3: ( ( rule__NonNegativeInteger__Alternatives )* )
            // InternalEtlParser.g:2719:4: ( rule__NonNegativeInteger__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2720:4: ( rule__NonNegativeInteger__Alternatives )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=RULE_DIGIT_ZERO && LA2_0<=RULE_DIGIT_NONZERO)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalEtlParser.g:2720:5: rule__NonNegativeInteger__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeInteger__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEtlParser.g:2731:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2735:1: ( ruleNonNegativeDecimal EOF )
            // InternalEtlParser.g:2736:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEtlParser.g:2746:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2751:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEtlParser.g:2752:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEtlParser.g:2752:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEtlParser.g:2753:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2754:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEtlParser.g:2754:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEtlParser.g:2764:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2768:1: ( ruleMaxValue EOF )
            // InternalEtlParser.g:2769:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEtlParser.g:2779:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2784:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEtlParser.g:2785:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEtlParser.g:2785:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEtlParser.g:2786:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2787:3: ( rule__MaxValue__Alternatives )
            // InternalEtlParser.g:2787:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEtlParser.g:2797:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2801:1: ( ruleInteger EOF )
            // InternalEtlParser.g:2802:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEtlParser.g:2812:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2817:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEtlParser.g:2818:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEtlParser.g:2818:2: ( ( rule__Integer__Group__0 ) )
            // InternalEtlParser.g:2819:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEtlParser.g:2820:3: ( rule__Integer__Group__0 )
            // InternalEtlParser.g:2820:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEtlParser.g:2830:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2834:1: ( ruleDecimal EOF )
            // InternalEtlParser.g:2835:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEtlParser.g:2845:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2850:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEtlParser.g:2851:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEtlParser.g:2851:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEtlParser.g:2852:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEtlParser.g:2853:3: ( rule__Decimal__Group__0 )
            // InternalEtlParser.g:2853:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEtlParser.g:2863:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2867:1: ( ruleBoolean EOF )
            // InternalEtlParser.g:2868:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEtlParser.g:2878:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2883:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEtlParser.g:2884:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEtlParser.g:2884:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEtlParser.g:2885:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2886:3: ( rule__Boolean__Alternatives )
            // InternalEtlParser.g:2886:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleUnquotedString"
    // InternalEtlParser.g:2896:1: entryRuleUnquotedString : ruleUnquotedString EOF ;
    public final void entryRuleUnquotedString() throws RecognitionException {
        try {
            // InternalEtlParser.g:2897:1: ( ruleUnquotedString EOF )
            // InternalEtlParser.g:2898:1: ruleUnquotedString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnquotedString"


    // $ANTLR start "ruleUnquotedString"
    // InternalEtlParser.g:2905:1: ruleUnquotedString : ( ( rule__UnquotedString__Alternatives ) ) ;
    public final void ruleUnquotedString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2909:2: ( ( ( rule__UnquotedString__Alternatives ) ) )
            // InternalEtlParser.g:2910:2: ( ( rule__UnquotedString__Alternatives ) )
            {
            // InternalEtlParser.g:2910:2: ( ( rule__UnquotedString__Alternatives ) )
            // InternalEtlParser.g:2911:3: ( rule__UnquotedString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2912:3: ( rule__UnquotedString__Alternatives )
            // InternalEtlParser.g:2912:4: rule__UnquotedString__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnquotedString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnquotedString"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEtlParser.g:2921:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEtlParser.g:2925:1: ( ruleDialectAliasValue EOF )
            // InternalEtlParser.g:2926:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEtlParser.g:2936:1: ruleDialectAliasValue : ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2941:2: ( ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) )
            // InternalEtlParser.g:2942:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            {
            // InternalEtlParser.g:2942:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            // InternalEtlParser.g:2943:3: ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* )
            {
            // InternalEtlParser.g:2943:3: ( ( rule__DialectAliasValue__Alternatives ) )
            // InternalEtlParser.g:2944:4: ( rule__DialectAliasValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2945:4: ( rule__DialectAliasValue__Alternatives )
            // InternalEtlParser.g:2945:5: rule__DialectAliasValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }

            // InternalEtlParser.g:2948:3: ( ( rule__DialectAliasValue__Alternatives )* )
            // InternalEtlParser.g:2949:4: ( rule__DialectAliasValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2950:4: ( rule__DialectAliasValue__Alternatives )*
            loop3:
            do {
                int alt3=2;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // InternalEtlParser.g:2950:5: rule__DialectAliasValue__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:2961:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEtlParser.g:2962:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEtlParser.g:2963:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEtlParser.g:2970:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2974:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEtlParser.g:2975:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEtlParser.g:2975:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEtlParser.g:2976:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:2977:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEtlParser.g:2977:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleDOMAIN"
    // InternalEtlParser.g:2986:1: entryRuleDOMAIN : ruleDOMAIN EOF ;
    public final void entryRuleDOMAIN() throws RecognitionException {
        try {
            // InternalEtlParser.g:2987:1: ( ruleDOMAIN EOF )
            // InternalEtlParser.g:2988:1: ruleDOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDOMAIN"


    // $ANTLR start "ruleDOMAIN"
    // InternalEtlParser.g:2995:1: ruleDOMAIN : ( ( rule__DOMAIN__Alternatives ) ) ;
    public final void ruleDOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:2999:2: ( ( ( rule__DOMAIN__Alternatives ) ) )
            // InternalEtlParser.g:3000:2: ( ( rule__DOMAIN__Alternatives ) )
            {
            // InternalEtlParser.g:3000:2: ( ( rule__DOMAIN__Alternatives ) )
            // InternalEtlParser.g:3001:3: ( rule__DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3002:3: ( rule__DOMAIN__Alternatives )
            // InternalEtlParser.g:3002:4: rule__DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3011:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3012:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3013:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEtlParser.g:3020:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3024:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3025:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3025:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3026:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3027:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3027:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3036:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEtlParser.g:3037:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEtlParser.g:3038:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEtlParser.g:3045:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3049:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEtlParser.g:3050:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEtlParser.g:3050:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEtlParser.g:3051:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEtlParser.g:3052:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEtlParser.g:3052:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0"
    // InternalEtlParser.g:3060:1: rule__ExpressionTemplate__Alternatives_1_0 : ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3064:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) ) | ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_EQUIVALENT_TO && LA4_0<=RULE_SUBTYPE_OF)) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalEtlParser.g:3065:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    {
                    // InternalEtlParser.g:3065:2: ( ( rule__ExpressionTemplate__Alternatives_1_0_0 ) )
                    // InternalEtlParser.g:3066:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }
                    // InternalEtlParser.g:3067:3: ( rule__ExpressionTemplate__Alternatives_1_0_0 )
                    // InternalEtlParser.g:3067:4: rule__ExpressionTemplate__Alternatives_1_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3071:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    {
                    // InternalEtlParser.g:3071:2: ( ( rule__ExpressionTemplate__SlotAssignment_1_0_1 ) )
                    // InternalEtlParser.g:3072:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }
                    // InternalEtlParser.g:3073:3: ( rule__ExpressionTemplate__SlotAssignment_1_0_1 )
                    // InternalEtlParser.g:3073:4: rule__ExpressionTemplate__SlotAssignment_1_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__SlotAssignment_1_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getSlotAssignment_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0"


    // $ANTLR start "rule__ExpressionTemplate__Alternatives_1_0_0"
    // InternalEtlParser.g:3081:1: rule__ExpressionTemplate__Alternatives_1_0_0 : ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) );
    public final void rule__ExpressionTemplate__Alternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3085:1: ( ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) ) | ( RULE_EQUIVALENT_TO ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_SUBTYPE_OF) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_EQUIVALENT_TO) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalEtlParser.g:3086:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    {
                    // InternalEtlParser.g:3086:2: ( ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 ) )
                    // InternalEtlParser.g:3087:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }
                    // InternalEtlParser.g:3088:3: ( rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 )
                    // InternalEtlParser.g:3088:4: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getPrimitiveAssignment_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3092:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3092:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3093:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionTemplateAccess().getEQUIVALENT_TOTerminalRuleCall_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Alternatives_1_0_0"


    // $ANTLR start "rule__Refinement__Alternatives_0"
    // InternalEtlParser.g:3102:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );
    public final void rule__Refinement__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3106:1: ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) )
            int alt6=2;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalEtlParser.g:3107:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    {
                    // InternalEtlParser.g:3107:2: ( ( rule__Refinement__Group_0_0__0 ) )
                    // InternalEtlParser.g:3108:3: ( rule__Refinement__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }
                    // InternalEtlParser.g:3109:3: ( rule__Refinement__Group_0_0__0 )
                    // InternalEtlParser.g:3109:4: rule__Refinement__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3113:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    {
                    // InternalEtlParser.g:3113:2: ( ( rule__Refinement__GroupsAssignment_0_1 ) )
                    // InternalEtlParser.g:3114:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }
                    // InternalEtlParser.g:3115:3: ( rule__Refinement__GroupsAssignment_0_1 )
                    // InternalEtlParser.g:3115:4: rule__Refinement__GroupsAssignment_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Refinement__GroupsAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefinementAccess().getGroupsAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Alternatives_0"


    // $ANTLR start "rule__AttributeValue__Alternatives"
    // InternalEtlParser.g:3123:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );
    public final void rule__AttributeValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3127:1: ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) )
            int alt7=6;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalEtlParser.g:3128:2: ( ruleConceptReference )
                    {
                    // InternalEtlParser.g:3128:2: ( ruleConceptReference )
                    // InternalEtlParser.g:3129:3: ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConceptReferenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3134:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3134:2: ( ( rule__AttributeValue__Group_1__0 ) )
                    // InternalEtlParser.g:3135:3: ( rule__AttributeValue__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3136:3: ( rule__AttributeValue__Group_1__0 )
                    // InternalEtlParser.g:3136:4: rule__AttributeValue__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeValue__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3140:2: ( ruleStringValue )
                    {
                    // InternalEtlParser.g:3140:2: ( ruleStringValue )
                    // InternalEtlParser.g:3141:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getStringValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3146:2: ( ruleIntegerValue )
                    {
                    // InternalEtlParser.g:3146:2: ( ruleIntegerValue )
                    // InternalEtlParser.g:3147:3: ruleIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getIntegerValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3152:2: ( ruleDecimalValue )
                    {
                    // InternalEtlParser.g:3152:2: ( ruleDecimalValue )
                    // InternalEtlParser.g:3153:3: ruleDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getDecimalValueParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3158:2: ( ruleConcreteValueReplacementSlot )
                    {
                    // InternalEtlParser.g:3158:2: ( ruleConcreteValueReplacementSlot )
                    // InternalEtlParser.g:3159:3: ruleConcreteValueReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConcreteValueReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeValueAccess().getConcreteValueReplacementSlotParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Alternatives"


    // $ANTLR start "rule__ConcreteValueReplacementSlot__Alternatives"
    // InternalEtlParser.g:3168:1: rule__ConcreteValueReplacementSlot__Alternatives : ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) );
    public final void rule__ConcreteValueReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3172:1: ( ( ruleStringReplacementSlot ) | ( ruleIntegerReplacementSlot ) | ( ruleDecimalReplacementSlot ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RULE_PLUS) ) {
                    switch ( input.LA(3) ) {
                    case RULE_STR:
                        {
                        alt8=1;
                        }
                        break;
                    case RULE_DEC:
                        {
                        alt8=3;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt8=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEtlParser.g:3173:2: ( ruleStringReplacementSlot )
                    {
                    // InternalEtlParser.g:3173:2: ( ruleStringReplacementSlot )
                    // InternalEtlParser.g:3174:3: ruleStringReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getStringReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3179:2: ( ruleIntegerReplacementSlot )
                    {
                    // InternalEtlParser.g:3179:2: ( ruleIntegerReplacementSlot )
                    // InternalEtlParser.g:3180:3: ruleIntegerReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getIntegerReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3185:2: ( ruleDecimalReplacementSlot )
                    {
                    // InternalEtlParser.g:3185:2: ( ruleDecimalReplacementSlot )
                    // InternalEtlParser.g:3186:3: ruleDecimalReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConcreteValueReplacementSlotAccess().getDecimalReplacementSlotParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConcreteValueReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReplacementSlot__Alternatives"
    // InternalEtlParser.g:3195:1: rule__ConceptReplacementSlot__Alternatives : ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) );
    public final void rule__ConceptReplacementSlot__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3199:1: ( ( ruleConceptIdReplacementSlot ) | ( ruleExpressionReplacementSlot ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==RULE_PLUS) ) {
                    int LA9_2 = input.LA(3);

                    if ( (LA9_2==RULE_ID) ) {
                        alt9=1;
                    }
                    else if ( (LA9_2==RULE_DOUBLE_SQUARE_CLOSE||LA9_2==RULE_SCG||LA9_2==RULE_SLOTNAME_STRING||LA9_2==RULE_ROUND_OPEN) ) {
                        alt9=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 9, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalEtlParser.g:3200:2: ( ruleConceptIdReplacementSlot )
                    {
                    // InternalEtlParser.g:3200:2: ( ruleConceptIdReplacementSlot )
                    // InternalEtlParser.g:3201:3: ruleConceptIdReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConceptIdReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getConceptIdReplacementSlotParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3206:2: ( ruleExpressionReplacementSlot )
                    {
                    // InternalEtlParser.g:3206:2: ( ruleExpressionReplacementSlot )
                    // InternalEtlParser.g:3207:3: ruleExpressionReplacementSlot
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpressionReplacementSlot();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReplacementSlotAccess().getExpressionReplacementSlotParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReplacementSlot__Alternatives"


    // $ANTLR start "rule__ConceptReference__Alternatives"
    // InternalEtlParser.g:3216:1: rule__ConceptReference__Alternatives : ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) );
    public final void rule__ConceptReference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3220:1: ( ( ( rule__ConceptReference__SlotAssignment_0 ) ) | ( ( rule__ConceptReference__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=RULE_DIGIT_ZERO && LA10_0<=RULE_DIGIT_NONZERO)) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalEtlParser.g:3221:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    {
                    // InternalEtlParser.g:3221:2: ( ( rule__ConceptReference__SlotAssignment_0 ) )
                    // InternalEtlParser.g:3222:3: ( rule__ConceptReference__SlotAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }
                    // InternalEtlParser.g:3223:3: ( rule__ConceptReference__SlotAssignment_0 )
                    // InternalEtlParser.g:3223:4: rule__ConceptReference__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getSlotAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3227:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3227:2: ( ( rule__ConceptReference__Group_1__0 ) )
                    // InternalEtlParser.g:3228:3: ( rule__ConceptReference__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3229:3: ( rule__ConceptReference__Group_1__0 )
                    // InternalEtlParser.g:3229:4: rule__ConceptReference__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConceptReferenceAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Alternatives"


    // $ANTLR start "rule__SlotToken__Alternatives"
    // InternalEtlParser.g:3237:1: rule__SlotToken__Alternatives : ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__SlotToken__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3241:1: ( ( RULE_EQUIVALENT_TO ) | ( RULE_SUBTYPE_OF ) | ( RULE_COMMA ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_CARET ) | ( RULE_LT ) | ( RULE_LTE ) | ( RULE_DBL_LT ) | ( RULE_LT_EM ) | ( RULE_GT ) | ( RULE_GTE ) | ( RULE_DBL_GT ) | ( RULE_GT_EM ) | ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt11=18;
            switch ( input.LA(1) ) {
            case RULE_EQUIVALENT_TO:
                {
                alt11=1;
                }
                break;
            case RULE_SUBTYPE_OF:
                {
                alt11=2;
                }
                break;
            case RULE_COMMA:
                {
                alt11=3;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt11=4;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt11=5;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt11=6;
                }
                break;
            case RULE_REVERSED:
                {
                alt11=7;
                }
                break;
            case RULE_CARET:
                {
                alt11=8;
                }
                break;
            case RULE_LT:
                {
                alt11=9;
                }
                break;
            case RULE_LTE:
                {
                alt11=10;
                }
                break;
            case RULE_DBL_LT:
                {
                alt11=11;
                }
                break;
            case RULE_LT_EM:
                {
                alt11=12;
                }
                break;
            case RULE_GT:
                {
                alt11=13;
                }
                break;
            case RULE_GTE:
                {
                alt11=14;
                }
                break;
            case RULE_DBL_GT:
                {
                alt11=15;
                }
                break;
            case RULE_GT_EM:
                {
                alt11=16;
                }
                break;
            case RULE_EQUAL:
                {
                alt11=17;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt11=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalEtlParser.g:3242:2: ( RULE_EQUIVALENT_TO )
                    {
                    // InternalEtlParser.g:3242:2: ( RULE_EQUIVALENT_TO )
                    // InternalEtlParser.g:3243:3: RULE_EQUIVALENT_TO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUIVALENT_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUIVALENT_TOTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3248:2: ( RULE_SUBTYPE_OF )
                    {
                    // InternalEtlParser.g:3248:2: ( RULE_SUBTYPE_OF )
                    // InternalEtlParser.g:3249:3: RULE_SUBTYPE_OF
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }
                    match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getSUBTYPE_OFTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3254:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3254:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3255:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCOMMATerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3260:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3260:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3261:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3266:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3266:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3267:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3272:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:3272:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:3273:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEXCLUSION_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3278:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:3278:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:3279:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getREVERSEDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3284:2: ( RULE_CARET )
                    {
                    // InternalEtlParser.g:3284:2: ( RULE_CARET )
                    // InternalEtlParser.g:3285:3: RULE_CARET
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }
                    match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getCARETTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3290:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:3290:2: ( RULE_LT )
                    // InternalEtlParser.g:3291:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3296:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:3296:2: ( RULE_LTE )
                    // InternalEtlParser.g:3297:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLTETerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3302:2: ( RULE_DBL_LT )
                    {
                    // InternalEtlParser.g:3302:2: ( RULE_DBL_LT )
                    // InternalEtlParser.g:3303:3: RULE_DBL_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }
                    match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_LTTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3308:2: ( RULE_LT_EM )
                    {
                    // InternalEtlParser.g:3308:2: ( RULE_LT_EM )
                    // InternalEtlParser.g:3309:3: RULE_LT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }
                    match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getLT_EMTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3314:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:3314:2: ( RULE_GT )
                    // InternalEtlParser.g:3315:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:3320:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:3320:2: ( RULE_GTE )
                    // InternalEtlParser.g:3321:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGTETerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:3326:2: ( RULE_DBL_GT )
                    {
                    // InternalEtlParser.g:3326:2: ( RULE_DBL_GT )
                    // InternalEtlParser.g:3327:3: RULE_DBL_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }
                    match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getDBL_GTTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:3332:2: ( RULE_GT_EM )
                    {
                    // InternalEtlParser.g:3332:2: ( RULE_GT_EM )
                    // InternalEtlParser.g:3333:3: RULE_GT_EM
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }
                    match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getGT_EMTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:3338:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:3338:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:3339:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getEQUALTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:3344:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:3344:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:3345:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotTokenAccess().getNOT_EQUALTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotToken__Alternatives"


    // $ANTLR start "rule__SlotInteger__Alternatives"
    // InternalEtlParser.g:3354:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );
    public final void rule__SlotInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3358:1: ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) )
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalEtlParser.g:3359:2: ( ruleSlotIntegerRange )
                    {
                    // InternalEtlParser.g:3359:2: ( ruleSlotIntegerRange )
                    // InternalEtlParser.g:3360:3: ruleSlotIntegerRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3365:2: ( ruleSlotIntegerValue )
                    {
                    // InternalEtlParser.g:3365:2: ( ruleSlotIntegerValue )
                    // InternalEtlParser.g:3366:3: ruleSlotIntegerValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotIntegerValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerAccess().getSlotIntegerValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotInteger__Alternatives"


    // $ANTLR start "rule__SlotIntegerRange__Alternatives"
    // InternalEtlParser.g:3375:1: rule__SlotIntegerRange__Alternatives : ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) );
    public final void rule__SlotIntegerRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3379:1: ( ( ( rule__SlotIntegerRange__Group_0__0 ) ) | ( ( rule__SlotIntegerRange__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_GT && LA13_0<=RULE_HASH)) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_TO) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEtlParser.g:3380:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3380:2: ( ( rule__SlotIntegerRange__Group_0__0 ) )
                    // InternalEtlParser.g:3381:3: ( rule__SlotIntegerRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3382:3: ( rule__SlotIntegerRange__Group_0__0 )
                    // InternalEtlParser.g:3382:4: rule__SlotIntegerRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3386:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3386:2: ( ( rule__SlotIntegerRange__Group_1__0 ) )
                    // InternalEtlParser.g:3387:3: ( rule__SlotIntegerRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3388:3: ( rule__SlotIntegerRange__Group_1__0 )
                    // InternalEtlParser.g:3388:4: rule__SlotIntegerRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotIntegerRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Alternatives"


    // $ANTLR start "rule__SlotDecimal__Alternatives"
    // InternalEtlParser.g:3396:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );
    public final void rule__SlotDecimal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3400:1: ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) )
            int alt14=2;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalEtlParser.g:3401:2: ( ruleSlotDecimalRange )
                    {
                    // InternalEtlParser.g:3401:2: ( ruleSlotDecimalRange )
                    // InternalEtlParser.g:3402:3: ruleSlotDecimalRange
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalRange();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3407:2: ( ruleSlotDecimalValue )
                    {
                    // InternalEtlParser.g:3407:2: ( ruleSlotDecimalValue )
                    // InternalEtlParser.g:3408:3: ruleSlotDecimalValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSlotDecimalValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalAccess().getSlotDecimalValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimal__Alternatives"


    // $ANTLR start "rule__SlotDecimalRange__Alternatives"
    // InternalEtlParser.g:3417:1: rule__SlotDecimalRange__Alternatives : ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) );
    public final void rule__SlotDecimalRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3421:1: ( ( ( rule__SlotDecimalRange__Group_0__0 ) ) | ( ( rule__SlotDecimalRange__Group_1__0 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_GT && LA15_0<=RULE_HASH)) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_TO) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEtlParser.g:3422:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    {
                    // InternalEtlParser.g:3422:2: ( ( rule__SlotDecimalRange__Group_0__0 ) )
                    // InternalEtlParser.g:3423:3: ( rule__SlotDecimalRange__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }
                    // InternalEtlParser.g:3424:3: ( rule__SlotDecimalRange__Group_0__0 )
                    // InternalEtlParser.g:3424:4: rule__SlotDecimalRange__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3428:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    {
                    // InternalEtlParser.g:3428:2: ( ( rule__SlotDecimalRange__Group_1__0 ) )
                    // InternalEtlParser.g:3429:3: ( rule__SlotDecimalRange__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }
                    // InternalEtlParser.g:3430:3: ( rule__SlotDecimalRange__Group_1__0 )
                    // InternalEtlParser.g:3430:4: rule__SlotDecimalRange__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSlotDecimalRangeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Alternatives"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEtlParser.g:3438:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3442:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_COMMA) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEtlParser.g:3443:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3443:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3444:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3449:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3449:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3450:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEtlParser.g:3459:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3463:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt17=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt17=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt17=2;
                }
                break;
            case RULE_LT:
                {
                alt17=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt17=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt17=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt17=6;
                }
                break;
            case RULE_GT:
                {
                alt17=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt17=8;
                }
                break;
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt17=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalEtlParser.g:3464:2: ( ruleChildOf )
                    {
                    // InternalEtlParser.g:3464:2: ( ruleChildOf )
                    // InternalEtlParser.g:3465:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3470:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEtlParser.g:3470:2: ( ruleChildOrSelfOf )
                    // InternalEtlParser.g:3471:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3476:2: ( ruleDescendantOf )
                    {
                    // InternalEtlParser.g:3476:2: ( ruleDescendantOf )
                    // InternalEtlParser.g:3477:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3482:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEtlParser.g:3482:2: ( ruleDescendantOrSelfOf )
                    // InternalEtlParser.g:3483:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3488:2: ( ruleParentOf )
                    {
                    // InternalEtlParser.g:3488:2: ( ruleParentOf )
                    // InternalEtlParser.g:3489:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3494:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEtlParser.g:3494:2: ( ruleParentOrSelfOf )
                    // InternalEtlParser.g:3495:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3500:2: ( ruleAncestorOf )
                    {
                    // InternalEtlParser.g:3500:2: ( ruleAncestorOf )
                    // InternalEtlParser.g:3501:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3506:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEtlParser.g:3506:2: ( ruleAncestorOrSelfOf )
                    // InternalEtlParser.g:3507:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3512:2: ( ruleEclFocusConcept )
                    {
                    // InternalEtlParser.g:3512:2: ( ruleEclFocusConcept )
                    // InternalEtlParser.g:3513:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEtlParser.g:3522:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3526:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt18=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt18=1;
                }
                break;
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt18=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt18=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt18=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEtlParser.g:3527:2: ( ruleMemberOf )
                    {
                    // InternalEtlParser.g:3527:2: ( ruleMemberOf )
                    // InternalEtlParser.g:3528:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3533:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3533:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3534:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3539:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3539:2: ( ruleAny )
                    // InternalEtlParser.g:3540:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3545:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3545:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3546:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEtlParser.g:3555:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3559:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt19=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt19=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt19=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalEtlParser.g:3560:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3560:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3561:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3566:2: ( ruleAny )
                    {
                    // InternalEtlParser.g:3566:2: ( ruleAny )
                    // InternalEtlParser.g:3567:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3572:2: ( ruleNestedExpression )
                    {
                    // InternalEtlParser.g:3572:2: ( ruleNestedExpression )
                    // InternalEtlParser.g:3573:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEtlParser.g:3582:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3586:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_COMMA) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEtlParser.g:3587:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3587:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3588:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3593:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3593:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3594:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEtlParser.g:3603:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3607:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt21=3;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalEtlParser.g:3608:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3608:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3609:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3614:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEtlParser.g:3614:2: ( ruleEclAttributeGroup )
                    // InternalEtlParser.g:3615:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3620:2: ( ruleNestedRefinement )
                    {
                    // InternalEtlParser.g:3620:2: ( ruleNestedRefinement )
                    // InternalEtlParser.g:3621:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEtlParser.g:3630:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3634:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_COMMA) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEtlParser.g:3635:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3635:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3636:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3641:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3641:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3642:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEtlParser.g:3651:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3655:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalEtlParser.g:3656:2: ( ruleAttributeConstraint )
                    {
                    // InternalEtlParser.g:3656:2: ( ruleAttributeConstraint )
                    // InternalEtlParser.g:3657:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3662:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEtlParser.g:3662:2: ( ruleNestedAttributeSet )
                    // InternalEtlParser.g:3663:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEtlParser.g:3672:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3676:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt24=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA24_1 = input.LA(2);

                if ( ((LA24_1>=RULE_DBL_LT_EM && LA24_1<=RULE_GT_EM)||(LA24_1>=RULE_DIGIT_ZERO && LA24_1<=RULE_DIGIT_NONZERO)||LA24_1==RULE_ROUND_OPEN||LA24_1==RULE_CARET||LA24_1==RULE_WILDCARD||(LA24_1>=RULE_LT && LA24_1<=RULE_GT)) ) {
                    alt24=1;
                }
                else if ( (LA24_1==RULE_STRING||LA24_1==RULE_FALSE_KEYWORD||LA24_1==RULE_TRUE_KEYWORD||LA24_1==RULE_HASH) ) {
                    alt24=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA24_2 = input.LA(2);

                if ( (LA24_2==RULE_STRING||LA24_2==RULE_FALSE_KEYWORD||LA24_2==RULE_TRUE_KEYWORD||LA24_2==RULE_HASH) ) {
                    alt24=2;
                }
                else if ( ((LA24_2>=RULE_DBL_LT_EM && LA24_2<=RULE_GT_EM)||(LA24_2>=RULE_DIGIT_ZERO && LA24_2<=RULE_DIGIT_NONZERO)||LA24_2==RULE_ROUND_OPEN||LA24_2==RULE_CARET||LA24_2==RULE_WILDCARD||(LA24_2>=RULE_LT && LA24_2<=RULE_GT)) ) {
                    alt24=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_GTE:
            case RULE_LTE:
            case RULE_LT:
            case RULE_GT:
                {
                alt24=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalEtlParser.g:3677:2: ( ruleAttributeComparison )
                    {
                    // InternalEtlParser.g:3677:2: ( ruleAttributeComparison )
                    // InternalEtlParser.g:3678:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3683:2: ( ruleDataTypeComparison )
                    {
                    // InternalEtlParser.g:3683:2: ( ruleDataTypeComparison )
                    // InternalEtlParser.g:3684:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEtlParser.g:3693:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3697:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalEtlParser.g:3698:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEtlParser.g:3698:2: ( ruleBooleanValueComparison )
                    // InternalEtlParser.g:3699:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3704:2: ( ruleStringValueComparison )
                    {
                    // InternalEtlParser.g:3704:2: ( ruleStringValueComparison )
                    // InternalEtlParser.g:3705:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3710:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEtlParser.g:3710:2: ( ruleIntegerValueComparison )
                    // InternalEtlParser.g:3711:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3716:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEtlParser.g:3716:2: ( ruleDecimalValueComparison )
                    // InternalEtlParser.g:3717:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEtlParser.g:3726:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3730:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_COMMA) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEtlParser.g:3731:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:3731:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:3732:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3737:2: ( RULE_COMMA )
                    {
                    // InternalEtlParser.g:3737:2: ( RULE_COMMA )
                    // InternalEtlParser.g:3738:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEtlParser.g:3747:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3751:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) )
            int alt27=13;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalEtlParser.g:3752:2: ( ruleTermFilter )
                    {
                    // InternalEtlParser.g:3752:2: ( ruleTermFilter )
                    // InternalEtlParser.g:3753:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3758:2: ( ruleLanguageFilter )
                    {
                    // InternalEtlParser.g:3758:2: ( ruleLanguageFilter )
                    // InternalEtlParser.g:3759:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:3764:2: ( ruleTypeFilter )
                    {
                    // InternalEtlParser.g:3764:2: ( ruleTypeFilter )
                    // InternalEtlParser.g:3765:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:3770:2: ( ruleDialectFilter )
                    {
                    // InternalEtlParser.g:3770:2: ( ruleDialectFilter )
                    // InternalEtlParser.g:3771:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:3776:2: ( ruleActiveFilter )
                    {
                    // InternalEtlParser.g:3776:2: ( ruleActiveFilter )
                    // InternalEtlParser.g:3777:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:3782:2: ( rulePreferredInFilter )
                    {
                    // InternalEtlParser.g:3782:2: ( rulePreferredInFilter )
                    // InternalEtlParser.g:3783:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:3788:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEtlParser.g:3788:2: ( ruleAcceptableInFilter )
                    // InternalEtlParser.g:3789:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:3794:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEtlParser.g:3794:2: ( ruleLanguageRefSetFilter )
                    // InternalEtlParser.g:3795:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:3800:2: ( ruleModuleFilter )
                    {
                    // InternalEtlParser.g:3800:2: ( ruleModuleFilter )
                    // InternalEtlParser.g:3801:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:3806:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEtlParser.g:3806:2: ( ruleSemanticTagFilter )
                    // InternalEtlParser.g:3807:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:3812:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEtlParser.g:3812:2: ( ruleEffectiveTimeFilter )
                    // InternalEtlParser.g:3813:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:3818:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEtlParser.g:3818:2: ( ruleCaseSignificanceFilter )
                    // InternalEtlParser.g:3819:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:3824:2: ( ruleNestedFilter )
                    {
                    // InternalEtlParser.g:3824:2: ( ruleNestedFilter )
                    // InternalEtlParser.g:3825:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEtlParser.g:3834:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3838:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_EQUAL) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==RULE_ROUND_OPEN) ) {
                    alt28=2;
                }
                else if ( (LA28_1==RULE_STRING||LA28_1==RULE_EXACT_KEYWORD||(LA28_1>=RULE_MATCH_KEYWORD && LA28_1<=RULE_REGEX_KEYWORD)||LA28_1==RULE_WILD_KEYWORD) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA28_0==RULE_NOT_EQUAL) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==RULE_ROUND_OPEN) ) {
                    alt28=2;
                }
                else if ( (LA28_2==RULE_STRING||LA28_2==RULE_EXACT_KEYWORD||(LA28_2>=RULE_MATCH_KEYWORD && LA28_2<=RULE_REGEX_KEYWORD)||LA28_2==RULE_WILD_KEYWORD) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEtlParser.g:3839:2: ( ruleTypedTermFilter )
                    {
                    // InternalEtlParser.g:3839:2: ( ruleTypedTermFilter )
                    // InternalEtlParser.g:3840:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3845:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEtlParser.g:3845:2: ( ruleTypedTermFilterSet )
                    // InternalEtlParser.g:3846:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEtlParser.g:3855:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3859:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA29_0<=RULE_KEYWORD)) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_ROUND_OPEN) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEtlParser.g:3860:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3860:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEtlParser.g:3861:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3862:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEtlParser.g:3862:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3866:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:3866:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:3867:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:3868:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEtlParser.g:3868:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEtlParser.g:3876:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3880:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_TYPEID_KEYWORD) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_TYPE_KEYWORD) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEtlParser.g:3881:2: ( ruleTypeIdFilter )
                    {
                    // InternalEtlParser.g:3881:2: ( ruleTypeIdFilter )
                    // InternalEtlParser.g:3882:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3887:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEtlParser.g:3887:2: ( ruleTypeTokenFilter )
                    // InternalEtlParser.g:3888:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEtlParser.g:3897:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3901:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=RULE_DIGIT_ZERO && LA31_0<=RULE_DIGIT_NONZERO)) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_ROUND_OPEN) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEtlParser.g:3902:2: ( ruleEclConceptReference )
                    {
                    // InternalEtlParser.g:3902:2: ( ruleEclConceptReference )
                    // InternalEtlParser.g:3903:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3908:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEtlParser.g:3908:2: ( ruleEclConceptReferenceSet )
                    // InternalEtlParser.g:3909:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEtlParser.g:3918:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3922:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA32_0<=RULE_KEYWORD)) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_ROUND_OPEN) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEtlParser.g:3923:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3923:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEtlParser.g:3924:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3925:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEtlParser.g:3925:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3929:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:3929:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:3930:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:3931:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEtlParser.g:3931:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEtlParser.g:3939:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3943:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_DIALECTID_KEYWORD) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_DIALECT_KEYWORD) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEtlParser.g:3944:2: ( ruleDialectIdFilter )
                    {
                    // InternalEtlParser.g:3944:2: ( ruleDialectIdFilter )
                    // InternalEtlParser.g:3945:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3950:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEtlParser.g:3950:2: ( ruleDialectAliasFilter )
                    // InternalEtlParser.g:3951:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEtlParser.g:3960:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3964:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( ((LA34_0>=RULE_DIGIT_ZERO && LA34_0<=RULE_DIGIT_NONZERO)) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_ROUND_OPEN) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEtlParser.g:3965:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3965:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:3966:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3967:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:3967:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3971:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:3971:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:3972:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:3973:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEtlParser.g:3973:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEtlParser.g:3981:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:3985:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA35_0<=RULE_KEYWORD)||(LA35_0>=RULE_DIGIT_ZERO && LA35_0<=RULE_DIGIT_NONZERO)||LA35_0==RULE_DASH) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_ROUND_OPEN) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEtlParser.g:3986:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEtlParser.g:3986:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEtlParser.g:3987:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEtlParser.g:3988:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEtlParser.g:3988:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:3992:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEtlParser.g:3992:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEtlParser.g:3993:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEtlParser.g:3994:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEtlParser.g:3994:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEtlParser.g:4002:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4006:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_ROUND_OPEN) ) {
                int LA36_1 = input.LA(2);

                if ( ((LA36_1>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA36_1<=RULE_KEYWORD)) ) {
                    alt36=2;
                }
                else if ( ((LA36_1>=RULE_DIGIT_ZERO && LA36_1<=RULE_DIGIT_NONZERO)) ) {
                    alt36=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEtlParser.g:4007:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEtlParser.g:4007:2: ( ruleAcceptabilityIdSet )
                    // InternalEtlParser.g:4008:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4013:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEtlParser.g:4013:2: ( ruleAcceptabilityTokenSet )
                    // InternalEtlParser.g:4014:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives"
    // InternalEtlParser.g:4023:1: rule__SnomedIdentifier__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4027:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_DIGIT_NONZERO) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_DIGIT_ZERO) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalEtlParser.g:4028:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4028:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4029:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4034:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4034:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4035:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEtlParser.g:4044:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4048:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_DIGIT_NONZERO) ) {
                alt38=1;
            }
            else if ( (LA38_0==RULE_DIGIT_ZERO) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalEtlParser.g:4049:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4049:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4050:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4055:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4055:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4056:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEtlParser.g:4065:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4069:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DIGIT_NONZERO) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_DIGIT_ZERO) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalEtlParser.g:4070:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4070:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4071:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4076:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4076:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4077:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEtlParser.g:4086:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4090:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( ((LA40_0>=RULE_DIGIT_ZERO && LA40_0<=RULE_DIGIT_NONZERO)) ) {
                alt40=1;
            }
            else if ( (LA40_0==RULE_WILDCARD) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalEtlParser.g:4091:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEtlParser.g:4091:2: ( ruleNonNegativeInteger )
                    // InternalEtlParser.g:4092:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4097:2: ( RULE_WILDCARD )
                    {
                    // InternalEtlParser.g:4097:2: ( RULE_WILDCARD )
                    // InternalEtlParser.g:4098:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEtlParser.g:4107:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4111:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_PLUS) ) {
                alt41=1;
            }
            else if ( (LA41_0==RULE_DASH) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalEtlParser.g:4112:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4112:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4113:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4118:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4118:2: ( RULE_DASH )
                    // InternalEtlParser.g:4119:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEtlParser.g:4128:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4132:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_PLUS) ) {
                alt42=1;
            }
            else if ( (LA42_0==RULE_DASH) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalEtlParser.g:4133:2: ( RULE_PLUS )
                    {
                    // InternalEtlParser.g:4133:2: ( RULE_PLUS )
                    // InternalEtlParser.g:4134:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4139:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4139:2: ( RULE_DASH )
                    // InternalEtlParser.g:4140:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEtlParser.g:4149:1: rule__Boolean__Alternatives : ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4153:1: ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_TRUE_KEYWORD) ) {
                alt43=1;
            }
            else if ( (LA43_0==RULE_FALSE_KEYWORD) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalEtlParser.g:4154:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4154:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4155:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4160:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4160:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4161:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__UnquotedString__Alternatives"
    // InternalEtlParser.g:4170:1: rule__UnquotedString__Alternatives : ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) );
    public final void rule__UnquotedString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4174:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) )
            int alt44=27;
            switch ( input.LA(1) ) {
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
                {
                alt44=1;
                }
                break;
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
                {
                alt44=2;
                }
                break;
            case RULE_EFFECTIVE_TIME_KEYWORD:
                {
                alt44=3;
                }
                break;
            case RULE_ACCEPTABLE_IN_KEYWORD:
                {
                alt44=4;
                }
                break;
            case RULE_DESCRIPTION_KEYWORD:
                {
                alt44=5;
                }
                break;
            case RULE_PREFERRED_IN_KEYWORD:
                {
                alt44=6;
                }
                break;
            case RULE_SEMANTIC_TAG_KEYWORD:
                {
                alt44=7;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
                {
                alt44=8;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt44=9;
                }
                break;
            case RULE_MODULEID_KEYWORD:
                {
                alt44=10;
                }
                break;
            case RULE_CONCEPT_KEYWORD:
                {
                alt44=11;
                }
                break;
            case RULE_DIALECT_KEYWORD:
                {
                alt44=12;
                }
                break;
            case RULE_ACTIVE_KEYWORD:
                {
                alt44=13;
                }
                break;
            case RULE_TYPEID_KEYWORD:
                {
                alt44=14;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt44=15;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt44=16;
                }
                break;
            case RULE_FALSE_KEYWORD:
                {
                alt44=17;
                }
                break;
            case RULE_MATCH_KEYWORD:
                {
                alt44=18;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt44=19;
                }
                break;
            case RULE_TERM_KEYWORD:
                {
                alt44=20;
                }
                break;
            case RULE_TRUE_KEYWORD:
                {
                alt44=21;
                }
                break;
            case RULE_TYPE_KEYWORD:
                {
                alt44=22;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt44=23;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt44=24;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt44=25;
                }
                break;
            case RULE_REVERSED:
                {
                alt44=26;
                }
                break;
            case RULE_KEYWORD:
                {
                alt44=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalEtlParser.g:4175:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4175:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    // InternalEtlParser.g:4176:3: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4181:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    {
                    // InternalEtlParser.g:4181:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    // InternalEtlParser.g:4182:3: RULE_LANGUAGE_REFSET_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4187:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    {
                    // InternalEtlParser.g:4187:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    // InternalEtlParser.g:4188:3: RULE_EFFECTIVE_TIME_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4193:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4193:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    // InternalEtlParser.g:4194:3: RULE_ACCEPTABLE_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4199:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4199:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEtlParser.g:4200:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4205:2: ( RULE_PREFERRED_IN_KEYWORD )
                    {
                    // InternalEtlParser.g:4205:2: ( RULE_PREFERRED_IN_KEYWORD )
                    // InternalEtlParser.g:4206:3: RULE_PREFERRED_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEtlParser.g:4211:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    {
                    // InternalEtlParser.g:4211:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    // InternalEtlParser.g:4212:3: RULE_SEMANTIC_TAG_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEtlParser.g:4217:2: ( RULE_DIALECTID_KEYWORD )
                    {
                    // InternalEtlParser.g:4217:2: ( RULE_DIALECTID_KEYWORD )
                    // InternalEtlParser.g:4218:3: RULE_DIALECTID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }
                    match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEtlParser.g:4223:2: ( RULE_LANGUAGE_KEYWORD )
                    {
                    // InternalEtlParser.g:4223:2: ( RULE_LANGUAGE_KEYWORD )
                    // InternalEtlParser.g:4224:3: RULE_LANGUAGE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEtlParser.g:4229:2: ( RULE_MODULEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4229:2: ( RULE_MODULEID_KEYWORD )
                    // InternalEtlParser.g:4230:3: RULE_MODULEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }
                    match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEtlParser.g:4235:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEtlParser.g:4235:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEtlParser.g:4236:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEtlParser.g:4241:2: ( RULE_DIALECT_KEYWORD )
                    {
                    // InternalEtlParser.g:4241:2: ( RULE_DIALECT_KEYWORD )
                    // InternalEtlParser.g:4242:3: RULE_DIALECT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }
                    match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEtlParser.g:4247:2: ( RULE_ACTIVE_KEYWORD )
                    {
                    // InternalEtlParser.g:4247:2: ( RULE_ACTIVE_KEYWORD )
                    // InternalEtlParser.g:4248:3: RULE_ACTIVE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }
                    match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEtlParser.g:4253:2: ( RULE_TYPEID_KEYWORD )
                    {
                    // InternalEtlParser.g:4253:2: ( RULE_TYPEID_KEYWORD )
                    // InternalEtlParser.g:4254:3: RULE_TYPEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }
                    match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEtlParser.g:4259:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEtlParser.g:4259:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEtlParser.g:4260:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEtlParser.g:4265:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4265:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4266:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEtlParser.g:4271:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEtlParser.g:4271:2: ( RULE_FALSE_KEYWORD )
                    // InternalEtlParser.g:4272:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEtlParser.g:4277:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4277:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4278:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalEtlParser.g:4283:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEtlParser.g:4283:2: ( RULE_REGEX_KEYWORD )
                    // InternalEtlParser.g:4284:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalEtlParser.g:4289:2: ( RULE_TERM_KEYWORD )
                    {
                    // InternalEtlParser.g:4289:2: ( RULE_TERM_KEYWORD )
                    // InternalEtlParser.g:4290:3: RULE_TERM_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }
                    match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalEtlParser.g:4295:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEtlParser.g:4295:2: ( RULE_TRUE_KEYWORD )
                    // InternalEtlParser.g:4296:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalEtlParser.g:4301:2: ( RULE_TYPE_KEYWORD )
                    {
                    // InternalEtlParser.g:4301:2: ( RULE_TYPE_KEYWORD )
                    // InternalEtlParser.g:4302:3: RULE_TYPE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }
                    match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalEtlParser.g:4307:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4307:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4308:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalEtlParser.g:4313:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4313:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4314:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalEtlParser.g:4319:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4319:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEtlParser.g:4320:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalEtlParser.g:4325:2: ( RULE_REVERSED )
                    {
                    // InternalEtlParser.g:4325:2: ( RULE_REVERSED )
                    // InternalEtlParser.g:4326:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalEtlParser.g:4331:2: ( RULE_KEYWORD )
                    {
                    // InternalEtlParser.g:4331:2: ( RULE_KEYWORD )
                    // InternalEtlParser.g:4332:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnquotedString__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives"
    // InternalEtlParser.g:4341:1: rule__DialectAliasValue__Alternatives : ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4345:1: ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt45=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt45=1;
                }
                break;
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
            case RULE_EFFECTIVE_TIME_KEYWORD:
            case RULE_ACCEPTABLE_IN_KEYWORD:
            case RULE_DESCRIPTION_KEYWORD:
            case RULE_PREFERRED_IN_KEYWORD:
            case RULE_SEMANTIC_TAG_KEYWORD:
            case RULE_DIALECTID_KEYWORD:
            case RULE_LANGUAGE_KEYWORD:
            case RULE_MODULEID_KEYWORD:
            case RULE_CONCEPT_KEYWORD:
            case RULE_DIALECT_KEYWORD:
            case RULE_ACTIVE_KEYWORD:
            case RULE_TYPEID_KEYWORD:
            case RULE_EXCLUSION_KEYWORD:
            case RULE_EXACT_KEYWORD:
            case RULE_FALSE_KEYWORD:
            case RULE_MATCH_KEYWORD:
            case RULE_REGEX_KEYWORD:
            case RULE_TERM_KEYWORD:
            case RULE_TRUE_KEYWORD:
            case RULE_TYPE_KEYWORD:
            case RULE_WILD_KEYWORD:
            case RULE_CONJUNCTION_KEYWORD:
            case RULE_DISJUNCTION_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
                {
                alt45=2;
                }
                break;
            case RULE_DIGIT_ZERO:
                {
                alt45=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt45=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalEtlParser.g:4346:2: ( RULE_DASH )
                    {
                    // InternalEtlParser.g:4346:2: ( RULE_DASH )
                    // InternalEtlParser.g:4347:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4352:2: ( ruleUnquotedString )
                    {
                    // InternalEtlParser.g:4352:2: ( ruleUnquotedString )
                    // InternalEtlParser.g:4353:3: ruleUnquotedString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnquotedString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4358:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEtlParser.g:4358:2: ( RULE_DIGIT_ZERO )
                    // InternalEtlParser.g:4359:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4364:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEtlParser.g:4364:2: ( RULE_DIGIT_NONZERO )
                    // InternalEtlParser.g:4365:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEtlParser.g:4374:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_EXACT_KEYWORD ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4378:1: ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_EXACT_KEYWORD ) )
            int alt46=4;
            switch ( input.LA(1) ) {
            case RULE_MATCH_KEYWORD:
                {
                alt46=1;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt46=2;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt46=3;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalEtlParser.g:4379:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEtlParser.g:4379:2: ( RULE_MATCH_KEYWORD )
                    // InternalEtlParser.g:4380:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4385:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEtlParser.g:4385:2: ( RULE_WILD_KEYWORD )
                    // InternalEtlParser.g:4386:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4391:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEtlParser.g:4391:2: ( RULE_REGEX_KEYWORD )
                    // InternalEtlParser.g:4392:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getREGEX_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getREGEX_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4397:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEtlParser.g:4397:2: ( RULE_EXACT_KEYWORD )
                    // InternalEtlParser.g:4398:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__DOMAIN__Alternatives"
    // InternalEtlParser.g:4407:1: rule__DOMAIN__Alternatives : ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) );
    public final void rule__DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4411:1: ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_CONCEPT_KEYWORD) ) {
                alt47=1;
            }
            else if ( (LA47_0==RULE_DESCRIPTION_KEYWORD) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalEtlParser.g:4412:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEtlParser.g:4412:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEtlParser.g:4413:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4418:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEtlParser.g:4418:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEtlParser.g:4419:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:4428:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4432:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_EQUAL) ) {
                alt48=1;
            }
            else if ( (LA48_0==RULE_NOT_EQUAL) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalEtlParser.g:4433:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:4433:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:4434:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4439:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:4439:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:4440:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEtlParser.g:4449:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4453:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt49=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt49=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt49=2;
                }
                break;
            case RULE_GT:
                {
                alt49=3;
                }
                break;
            case RULE_LT:
                {
                alt49=4;
                }
                break;
            case RULE_GTE:
                {
                alt49=5;
                }
                break;
            case RULE_LTE:
                {
                alt49=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalEtlParser.g:4454:2: ( RULE_EQUAL )
                    {
                    // InternalEtlParser.g:4454:2: ( RULE_EQUAL )
                    // InternalEtlParser.g:4455:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEtlParser.g:4460:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEtlParser.g:4460:2: ( RULE_NOT_EQUAL )
                    // InternalEtlParser.g:4461:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEtlParser.g:4466:2: ( RULE_GT )
                    {
                    // InternalEtlParser.g:4466:2: ( RULE_GT )
                    // InternalEtlParser.g:4467:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEtlParser.g:4472:2: ( RULE_LT )
                    {
                    // InternalEtlParser.g:4472:2: ( RULE_LT )
                    // InternalEtlParser.g:4473:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEtlParser.g:4478:2: ( RULE_GTE )
                    {
                    // InternalEtlParser.g:4478:2: ( RULE_GTE )
                    // InternalEtlParser.g:4479:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEtlParser.g:4484:2: ( RULE_LTE )
                    {
                    // InternalEtlParser.g:4484:2: ( RULE_LTE )
                    // InternalEtlParser.g:4485:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__ExpressionTemplate__Group__0"
    // InternalEtlParser.g:4494:1: rule__ExpressionTemplate__Group__0 : rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 ;
    public final void rule__ExpressionTemplate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4498:1: ( rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1 )
            // InternalEtlParser.g:4499:2: rule__ExpressionTemplate__Group__0__Impl rule__ExpressionTemplate__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0"


    // $ANTLR start "rule__ExpressionTemplate__Group__0__Impl"
    // InternalEtlParser.g:4506:1: rule__ExpressionTemplate__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionTemplate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4510:1: ( ( () ) )
            // InternalEtlParser.g:4511:1: ( () )
            {
            // InternalEtlParser.g:4511:1: ( () )
            // InternalEtlParser.g:4512:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }
            // InternalEtlParser.g:4513:2: ()
            // InternalEtlParser.g:4513:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionTemplateAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group__1"
    // InternalEtlParser.g:4521:1: rule__ExpressionTemplate__Group__1 : rule__ExpressionTemplate__Group__1__Impl ;
    public final void rule__ExpressionTemplate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4525:1: ( rule__ExpressionTemplate__Group__1__Impl )
            // InternalEtlParser.g:4526:2: rule__ExpressionTemplate__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1"


    // $ANTLR start "rule__ExpressionTemplate__Group__1__Impl"
    // InternalEtlParser.g:4532:1: rule__ExpressionTemplate__Group__1__Impl : ( ( rule__ExpressionTemplate__Group_1__0 )? ) ;
    public final void rule__ExpressionTemplate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4536:1: ( ( ( rule__ExpressionTemplate__Group_1__0 )? ) )
            // InternalEtlParser.g:4537:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            {
            // InternalEtlParser.g:4537:1: ( ( rule__ExpressionTemplate__Group_1__0 )? )
            // InternalEtlParser.g:4538:2: ( rule__ExpressionTemplate__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4539:2: ( rule__ExpressionTemplate__Group_1__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_DOUBLE_SQUARE_OPEN||(LA50_0>=RULE_EQUIVALENT_TO && LA50_0<=RULE_SUBTYPE_OF)||(LA50_0>=RULE_DIGIT_ZERO && LA50_0<=RULE_DIGIT_NONZERO)) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalEtlParser.g:4539:3: rule__ExpressionTemplate__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0"
    // InternalEtlParser.g:4548:1: rule__ExpressionTemplate__Group_1__0 : rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 ;
    public final void rule__ExpressionTemplate__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4552:1: ( rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1 )
            // InternalEtlParser.g:4553:2: rule__ExpressionTemplate__Group_1__0__Impl rule__ExpressionTemplate__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExpressionTemplate__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__0__Impl"
    // InternalEtlParser.g:4560:1: rule__ExpressionTemplate__Group_1__0__Impl : ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) ;
    public final void rule__ExpressionTemplate__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4564:1: ( ( ( rule__ExpressionTemplate__Alternatives_1_0 )? ) )
            // InternalEtlParser.g:4565:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            {
            // InternalEtlParser.g:4565:1: ( ( rule__ExpressionTemplate__Alternatives_1_0 )? )
            // InternalEtlParser.g:4566:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }
            // InternalEtlParser.g:4567:2: ( rule__ExpressionTemplate__Alternatives_1_0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_EQUIVALENT_TO && LA51_0<=RULE_SUBTYPE_OF)) ) {
                alt51=1;
            }
            else if ( (LA51_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA51_2 = input.LA(2);

                if ( (LA51_2==RULE_PLUS) ) {
                    int LA51_4 = input.LA(3);

                    if ( (LA51_4==RULE_TOK) ) {
                        alt51=1;
                    }
                }
            }
            switch (alt51) {
                case 1 :
                    // InternalEtlParser.g:4567:3: rule__ExpressionTemplate__Alternatives_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionTemplate__Alternatives_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__0__Impl"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1"
    // InternalEtlParser.g:4575:1: rule__ExpressionTemplate__Group_1__1 : rule__ExpressionTemplate__Group_1__1__Impl ;
    public final void rule__ExpressionTemplate__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4579:1: ( rule__ExpressionTemplate__Group_1__1__Impl )
            // InternalEtlParser.g:4580:2: rule__ExpressionTemplate__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1"


    // $ANTLR start "rule__ExpressionTemplate__Group_1__1__Impl"
    // InternalEtlParser.g:4586:1: rule__ExpressionTemplate__Group_1__1__Impl : ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) ;
    public final void rule__ExpressionTemplate__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4590:1: ( ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) ) )
            // InternalEtlParser.g:4591:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            {
            // InternalEtlParser.g:4591:1: ( ( rule__ExpressionTemplate__ExpressionAssignment_1_1 ) )
            // InternalEtlParser.g:4592:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }
            // InternalEtlParser.g:4593:2: ( rule__ExpressionTemplate__ExpressionAssignment_1_1 )
            // InternalEtlParser.g:4593:3: rule__ExpressionTemplate__ExpressionAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionTemplate__ExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__0"
    // InternalEtlParser.g:4602:1: rule__SubExpression__Group__0 : rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 ;
    public final void rule__SubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4606:1: ( rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1 )
            // InternalEtlParser.g:4607:2: rule__SubExpression__Group__0__Impl rule__SubExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0"


    // $ANTLR start "rule__SubExpression__Group__0__Impl"
    // InternalEtlParser.g:4614:1: rule__SubExpression__Group__0__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) ;
    public final void rule__SubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4618:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_0 ) ) )
            // InternalEtlParser.g:4619:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            {
            // InternalEtlParser.g:4619:1: ( ( rule__SubExpression__FocusConceptsAssignment_0 ) )
            // InternalEtlParser.g:4620:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }
            // InternalEtlParser.g:4621:2: ( rule__SubExpression__FocusConceptsAssignment_0 )
            // InternalEtlParser.g:4621:3: rule__SubExpression__FocusConceptsAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__0__Impl"


    // $ANTLR start "rule__SubExpression__Group__1"
    // InternalEtlParser.g:4629:1: rule__SubExpression__Group__1 : rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 ;
    public final void rule__SubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4633:1: ( rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2 )
            // InternalEtlParser.g:4634:2: rule__SubExpression__Group__1__Impl rule__SubExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1"


    // $ANTLR start "rule__SubExpression__Group__1__Impl"
    // InternalEtlParser.g:4641:1: rule__SubExpression__Group__1__Impl : ( ( rule__SubExpression__Group_1__0 )* ) ;
    public final void rule__SubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4645:1: ( ( ( rule__SubExpression__Group_1__0 )* ) )
            // InternalEtlParser.g:4646:1: ( ( rule__SubExpression__Group_1__0 )* )
            {
            // InternalEtlParser.g:4646:1: ( ( rule__SubExpression__Group_1__0 )* )
            // InternalEtlParser.g:4647:2: ( rule__SubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4648:2: ( rule__SubExpression__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==RULE_PLUS) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalEtlParser.g:4648:3: rule__SubExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__SubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__1__Impl"


    // $ANTLR start "rule__SubExpression__Group__2"
    // InternalEtlParser.g:4656:1: rule__SubExpression__Group__2 : rule__SubExpression__Group__2__Impl ;
    public final void rule__SubExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4660:1: ( rule__SubExpression__Group__2__Impl )
            // InternalEtlParser.g:4661:2: rule__SubExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2"


    // $ANTLR start "rule__SubExpression__Group__2__Impl"
    // InternalEtlParser.g:4667:1: rule__SubExpression__Group__2__Impl : ( ( rule__SubExpression__Group_2__0 )? ) ;
    public final void rule__SubExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4671:1: ( ( ( rule__SubExpression__Group_2__0 )? ) )
            // InternalEtlParser.g:4672:1: ( ( rule__SubExpression__Group_2__0 )? )
            {
            // InternalEtlParser.g:4672:1: ( ( rule__SubExpression__Group_2__0 )? )
            // InternalEtlParser.g:4673:2: ( rule__SubExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }
            // InternalEtlParser.g:4674:2: ( rule__SubExpression__Group_2__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_COLON) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEtlParser.g:4674:3: rule__SubExpression__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SubExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group__2__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__0"
    // InternalEtlParser.g:4683:1: rule__SubExpression__Group_1__0 : rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 ;
    public final void rule__SubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4687:1: ( rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1 )
            // InternalEtlParser.g:4688:2: rule__SubExpression__Group_1__0__Impl rule__SubExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__SubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0"


    // $ANTLR start "rule__SubExpression__Group_1__0__Impl"
    // InternalEtlParser.g:4695:1: rule__SubExpression__Group_1__0__Impl : ( RULE_PLUS ) ;
    public final void rule__SubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4699:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:4700:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:4700:1: ( RULE_PLUS )
            // InternalEtlParser.g:4701:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getPLUSTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_1__1"
    // InternalEtlParser.g:4710:1: rule__SubExpression__Group_1__1 : rule__SubExpression__Group_1__1__Impl ;
    public final void rule__SubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4714:1: ( rule__SubExpression__Group_1__1__Impl )
            // InternalEtlParser.g:4715:2: rule__SubExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1"


    // $ANTLR start "rule__SubExpression__Group_1__1__Impl"
    // InternalEtlParser.g:4721:1: rule__SubExpression__Group_1__1__Impl : ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) ;
    public final void rule__SubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4725:1: ( ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) ) )
            // InternalEtlParser.g:4726:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:4726:1: ( ( rule__SubExpression__FocusConceptsAssignment_1_1 ) )
            // InternalEtlParser.g:4727:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }
            // InternalEtlParser.g:4728:2: ( rule__SubExpression__FocusConceptsAssignment_1_1 )
            // InternalEtlParser.g:4728:3: rule__SubExpression__FocusConceptsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__FocusConceptsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__0"
    // InternalEtlParser.g:4737:1: rule__SubExpression__Group_2__0 : rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 ;
    public final void rule__SubExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4741:1: ( rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1 )
            // InternalEtlParser.g:4742:2: rule__SubExpression__Group_2__0__Impl rule__SubExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__SubExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0"


    // $ANTLR start "rule__SubExpression__Group_2__0__Impl"
    // InternalEtlParser.g:4749:1: rule__SubExpression__Group_2__0__Impl : ( RULE_COLON ) ;
    public final void rule__SubExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4753:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:4754:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:4754:1: ( RULE_COLON )
            // InternalEtlParser.g:4755:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getCOLONTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__0__Impl"


    // $ANTLR start "rule__SubExpression__Group_2__1"
    // InternalEtlParser.g:4764:1: rule__SubExpression__Group_2__1 : rule__SubExpression__Group_2__1__Impl ;
    public final void rule__SubExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4768:1: ( rule__SubExpression__Group_2__1__Impl )
            // InternalEtlParser.g:4769:2: rule__SubExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1"


    // $ANTLR start "rule__SubExpression__Group_2__1__Impl"
    // InternalEtlParser.g:4775:1: rule__SubExpression__Group_2__1__Impl : ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) ;
    public final void rule__SubExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4779:1: ( ( ( rule__SubExpression__RefinementAssignment_2_1 ) ) )
            // InternalEtlParser.g:4780:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            {
            // InternalEtlParser.g:4780:1: ( ( rule__SubExpression__RefinementAssignment_2_1 ) )
            // InternalEtlParser.g:4781:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }
            // InternalEtlParser.g:4782:2: ( rule__SubExpression__RefinementAssignment_2_1 )
            // InternalEtlParser.g:4782:3: rule__SubExpression__RefinementAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpression__RefinementAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__Group_2__1__Impl"


    // $ANTLR start "rule__FocusConcept__Group__0"
    // InternalEtlParser.g:4791:1: rule__FocusConcept__Group__0 : rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 ;
    public final void rule__FocusConcept__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4795:1: ( rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1 )
            // InternalEtlParser.g:4796:2: rule__FocusConcept__Group__0__Impl rule__FocusConcept__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__FocusConcept__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0"


    // $ANTLR start "rule__FocusConcept__Group__0__Impl"
    // InternalEtlParser.g:4803:1: rule__FocusConcept__Group__0__Impl : ( ( rule__FocusConcept__SlotAssignment_0 )? ) ;
    public final void rule__FocusConcept__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4807:1: ( ( ( rule__FocusConcept__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:4808:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:4808:1: ( ( rule__FocusConcept__SlotAssignment_0 )? )
            // InternalEtlParser.g:4809:2: ( rule__FocusConcept__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:4810:2: ( rule__FocusConcept__SlotAssignment_0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA54_1 = input.LA(2);

                if ( ((LA54_1>=RULE_DOUBLE_SQUARE_CLOSE && LA54_1<=RULE_TILDE)||LA54_1==RULE_SLOTNAME_STRING||(LA54_1>=RULE_DIGIT_ZERO && LA54_1<=RULE_DIGIT_NONZERO)) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    // InternalEtlParser.g:4810:3: rule__FocusConcept__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FocusConcept__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__0__Impl"


    // $ANTLR start "rule__FocusConcept__Group__1"
    // InternalEtlParser.g:4818:1: rule__FocusConcept__Group__1 : rule__FocusConcept__Group__1__Impl ;
    public final void rule__FocusConcept__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4822:1: ( rule__FocusConcept__Group__1__Impl )
            // InternalEtlParser.g:4823:2: rule__FocusConcept__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1"


    // $ANTLR start "rule__FocusConcept__Group__1__Impl"
    // InternalEtlParser.g:4829:1: rule__FocusConcept__Group__1__Impl : ( ( rule__FocusConcept__ConceptAssignment_1 ) ) ;
    public final void rule__FocusConcept__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4833:1: ( ( ( rule__FocusConcept__ConceptAssignment_1 ) ) )
            // InternalEtlParser.g:4834:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            {
            // InternalEtlParser.g:4834:1: ( ( rule__FocusConcept__ConceptAssignment_1 ) )
            // InternalEtlParser.g:4835:2: ( rule__FocusConcept__ConceptAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }
            // InternalEtlParser.g:4836:2: ( rule__FocusConcept__ConceptAssignment_1 )
            // InternalEtlParser.g:4836:3: rule__FocusConcept__ConceptAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FocusConcept__ConceptAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group__0"
    // InternalEtlParser.g:4845:1: rule__Refinement__Group__0 : rule__Refinement__Group__0__Impl rule__Refinement__Group__1 ;
    public final void rule__Refinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4849:1: ( rule__Refinement__Group__0__Impl rule__Refinement__Group__1 )
            // InternalEtlParser.g:4850:2: rule__Refinement__Group__0__Impl rule__Refinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0"


    // $ANTLR start "rule__Refinement__Group__0__Impl"
    // InternalEtlParser.g:4857:1: rule__Refinement__Group__0__Impl : ( ( rule__Refinement__Alternatives_0 ) ) ;
    public final void rule__Refinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4861:1: ( ( ( rule__Refinement__Alternatives_0 ) ) )
            // InternalEtlParser.g:4862:1: ( ( rule__Refinement__Alternatives_0 ) )
            {
            // InternalEtlParser.g:4862:1: ( ( rule__Refinement__Alternatives_0 ) )
            // InternalEtlParser.g:4863:2: ( rule__Refinement__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:4864:2: ( rule__Refinement__Alternatives_0 )
            // InternalEtlParser.g:4864:3: rule__Refinement__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__0__Impl"


    // $ANTLR start "rule__Refinement__Group__1"
    // InternalEtlParser.g:4872:1: rule__Refinement__Group__1 : rule__Refinement__Group__1__Impl ;
    public final void rule__Refinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4876:1: ( rule__Refinement__Group__1__Impl )
            // InternalEtlParser.g:4877:2: rule__Refinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1"


    // $ANTLR start "rule__Refinement__Group__1__Impl"
    // InternalEtlParser.g:4883:1: rule__Refinement__Group__1__Impl : ( ( rule__Refinement__Group_1__0 )* ) ;
    public final void rule__Refinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4887:1: ( ( ( rule__Refinement__Group_1__0 )* ) )
            // InternalEtlParser.g:4888:1: ( ( rule__Refinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:4888:1: ( ( rule__Refinement__Group_1__0 )* )
            // InternalEtlParser.g:4889:2: ( rule__Refinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:4890:2: ( rule__Refinement__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_DOUBLE_SQUARE_OPEN||LA55_0==RULE_COMMA||LA55_0==RULE_CURLY_OPEN) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalEtlParser.g:4890:3: rule__Refinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__Refinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__0"
    // InternalEtlParser.g:4899:1: rule__Refinement__Group_0_0__0 : rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 ;
    public final void rule__Refinement__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4903:1: ( rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1 )
            // InternalEtlParser.g:4904:2: rule__Refinement__Group_0_0__0__Impl rule__Refinement__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__Refinement__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0"


    // $ANTLR start "rule__Refinement__Group_0_0__0__Impl"
    // InternalEtlParser.g:4911:1: rule__Refinement__Group_0_0__0__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) ;
    public final void rule__Refinement__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4915:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_0 ) ) )
            // InternalEtlParser.g:4916:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            {
            // InternalEtlParser.g:4916:1: ( ( rule__Refinement__AttributesAssignment_0_0_0 ) )
            // InternalEtlParser.g:4917:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }
            // InternalEtlParser.g:4918:2: ( rule__Refinement__AttributesAssignment_0_0_0 )
            // InternalEtlParser.g:4918:3: rule__Refinement__AttributesAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0__1"
    // InternalEtlParser.g:4926:1: rule__Refinement__Group_0_0__1 : rule__Refinement__Group_0_0__1__Impl ;
    public final void rule__Refinement__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4930:1: ( rule__Refinement__Group_0_0__1__Impl )
            // InternalEtlParser.g:4931:2: rule__Refinement__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1"


    // $ANTLR start "rule__Refinement__Group_0_0__1__Impl"
    // InternalEtlParser.g:4937:1: rule__Refinement__Group_0_0__1__Impl : ( ( rule__Refinement__Group_0_0_1__0 )* ) ;
    public final void rule__Refinement__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4941:1: ( ( ( rule__Refinement__Group_0_0_1__0 )* ) )
            // InternalEtlParser.g:4942:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            {
            // InternalEtlParser.g:4942:1: ( ( rule__Refinement__Group_0_0_1__0 )* )
            // InternalEtlParser.g:4943:2: ( rule__Refinement__Group_0_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }
            // InternalEtlParser.g:4944:2: ( rule__Refinement__Group_0_0_1__0 )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalEtlParser.g:4944:3: rule__Refinement__Group_0_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__Refinement__Group_0_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroup_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0__1__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0"
    // InternalEtlParser.g:4953:1: rule__Refinement__Group_0_0_1__0 : rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 ;
    public final void rule__Refinement__Group_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4957:1: ( rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1 )
            // InternalEtlParser.g:4958:2: rule__Refinement__Group_0_0_1__0__Impl rule__Refinement__Group_0_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Refinement__Group_0_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0"


    // $ANTLR start "rule__Refinement__Group_0_0_1__0__Impl"
    // InternalEtlParser.g:4965:1: rule__Refinement__Group_0_0_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__Refinement__Group_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4969:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:4970:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:4970:1: ( RULE_COMMA )
            // InternalEtlParser.g:4971:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1"
    // InternalEtlParser.g:4980:1: rule__Refinement__Group_0_0_1__1 : rule__Refinement__Group_0_0_1__1__Impl ;
    public final void rule__Refinement__Group_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4984:1: ( rule__Refinement__Group_0_0_1__1__Impl )
            // InternalEtlParser.g:4985:2: rule__Refinement__Group_0_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_0_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1"


    // $ANTLR start "rule__Refinement__Group_0_0_1__1__Impl"
    // InternalEtlParser.g:4991:1: rule__Refinement__Group_0_0_1__1__Impl : ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) ;
    public final void rule__Refinement__Group_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:4995:1: ( ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) ) )
            // InternalEtlParser.g:4996:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            {
            // InternalEtlParser.g:4996:1: ( ( rule__Refinement__AttributesAssignment_0_0_1_1 ) )
            // InternalEtlParser.g:4997:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }
            // InternalEtlParser.g:4998:2: ( rule__Refinement__AttributesAssignment_0_0_1_1 )
            // InternalEtlParser.g:4998:3: rule__Refinement__AttributesAssignment_0_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__AttributesAssignment_0_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAssignment_0_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_0_0_1__1__Impl"


    // $ANTLR start "rule__Refinement__Group_1__0"
    // InternalEtlParser.g:5007:1: rule__Refinement__Group_1__0 : rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 ;
    public final void rule__Refinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5011:1: ( rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1 )
            // InternalEtlParser.g:5012:2: rule__Refinement__Group_1__0__Impl rule__Refinement__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Refinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0"


    // $ANTLR start "rule__Refinement__Group_1__0__Impl"
    // InternalEtlParser.g:5019:1: rule__Refinement__Group_1__0__Impl : ( ( RULE_COMMA )? ) ;
    public final void rule__Refinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5023:1: ( ( ( RULE_COMMA )? ) )
            // InternalEtlParser.g:5024:1: ( ( RULE_COMMA )? )
            {
            // InternalEtlParser.g:5024:1: ( ( RULE_COMMA )? )
            // InternalEtlParser.g:5025:2: ( RULE_COMMA )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }
            // InternalEtlParser.g:5026:2: ( RULE_COMMA )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_COMMA) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalEtlParser.g:5026:3: RULE_COMMA
                    {
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getCOMMATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__0__Impl"


    // $ANTLR start "rule__Refinement__Group_1__1"
    // InternalEtlParser.g:5034:1: rule__Refinement__Group_1__1 : rule__Refinement__Group_1__1__Impl ;
    public final void rule__Refinement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5038:1: ( rule__Refinement__Group_1__1__Impl )
            // InternalEtlParser.g:5039:2: rule__Refinement__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1"


    // $ANTLR start "rule__Refinement__Group_1__1__Impl"
    // InternalEtlParser.g:5045:1: rule__Refinement__Group_1__1__Impl : ( ( rule__Refinement__GroupsAssignment_1_1 ) ) ;
    public final void rule__Refinement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5049:1: ( ( ( rule__Refinement__GroupsAssignment_1_1 ) ) )
            // InternalEtlParser.g:5050:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            {
            // InternalEtlParser.g:5050:1: ( ( rule__Refinement__GroupsAssignment_1_1 ) )
            // InternalEtlParser.g:5051:2: ( rule__Refinement__GroupsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }
            // InternalEtlParser.g:5052:2: ( rule__Refinement__GroupsAssignment_1_1 )
            // InternalEtlParser.g:5052:3: rule__Refinement__GroupsAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Refinement__GroupsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__0"
    // InternalEtlParser.g:5061:1: rule__AttributeGroup__Group__0 : rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 ;
    public final void rule__AttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5065:1: ( rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1 )
            // InternalEtlParser.g:5066:2: rule__AttributeGroup__Group__0__Impl rule__AttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0"


    // $ANTLR start "rule__AttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:5073:1: rule__AttributeGroup__Group__0__Impl : ( ( rule__AttributeGroup__SlotAssignment_0 )? ) ;
    public final void rule__AttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5077:1: ( ( ( rule__AttributeGroup__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5078:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5078:1: ( ( rule__AttributeGroup__SlotAssignment_0 )? )
            // InternalEtlParser.g:5079:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5080:2: ( rule__AttributeGroup__SlotAssignment_0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEtlParser.g:5080:3: rule__AttributeGroup__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeGroup__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__1"
    // InternalEtlParser.g:5088:1: rule__AttributeGroup__Group__1 : rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 ;
    public final void rule__AttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5092:1: ( rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2 )
            // InternalEtlParser.g:5093:2: rule__AttributeGroup__Group__1__Impl rule__AttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1"


    // $ANTLR start "rule__AttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:5100:1: rule__AttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__AttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5104:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:5105:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:5105:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:5106:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__2"
    // InternalEtlParser.g:5115:1: rule__AttributeGroup__Group__2 : rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 ;
    public final void rule__AttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5119:1: ( rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3 )
            // InternalEtlParser.g:5120:2: rule__AttributeGroup__Group__2__Impl rule__AttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2"


    // $ANTLR start "rule__AttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:5127:1: rule__AttributeGroup__Group__2__Impl : ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) ;
    public final void rule__AttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5131:1: ( ( ( rule__AttributeGroup__AttributesAssignment_2 ) ) )
            // InternalEtlParser.g:5132:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            {
            // InternalEtlParser.g:5132:1: ( ( rule__AttributeGroup__AttributesAssignment_2 ) )
            // InternalEtlParser.g:5133:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }
            // InternalEtlParser.g:5134:2: ( rule__AttributeGroup__AttributesAssignment_2 )
            // InternalEtlParser.g:5134:3: rule__AttributeGroup__AttributesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__3"
    // InternalEtlParser.g:5142:1: rule__AttributeGroup__Group__3 : rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 ;
    public final void rule__AttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5146:1: ( rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4 )
            // InternalEtlParser.g:5147:2: rule__AttributeGroup__Group__3__Impl rule__AttributeGroup__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__AttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3"


    // $ANTLR start "rule__AttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:5154:1: rule__AttributeGroup__Group__3__Impl : ( ( rule__AttributeGroup__Group_3__0 )* ) ;
    public final void rule__AttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5158:1: ( ( ( rule__AttributeGroup__Group_3__0 )* ) )
            // InternalEtlParser.g:5159:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            {
            // InternalEtlParser.g:5159:1: ( ( rule__AttributeGroup__Group_3__0 )* )
            // InternalEtlParser.g:5160:2: ( rule__AttributeGroup__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }
            // InternalEtlParser.g:5161:2: ( rule__AttributeGroup__Group_3__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_COMMA) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEtlParser.g:5161:3: rule__AttributeGroup__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__AttributeGroup__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__AttributeGroup__Group__4"
    // InternalEtlParser.g:5169:1: rule__AttributeGroup__Group__4 : rule__AttributeGroup__Group__4__Impl ;
    public final void rule__AttributeGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5173:1: ( rule__AttributeGroup__Group__4__Impl )
            // InternalEtlParser.g:5174:2: rule__AttributeGroup__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4"


    // $ANTLR start "rule__AttributeGroup__Group__4__Impl"
    // InternalEtlParser.g:5180:1: rule__AttributeGroup__Group__4__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__AttributeGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5184:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:5185:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:5185:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:5186:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group__4__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__0"
    // InternalEtlParser.g:5196:1: rule__AttributeGroup__Group_3__0 : rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 ;
    public final void rule__AttributeGroup__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5200:1: ( rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1 )
            // InternalEtlParser.g:5201:2: rule__AttributeGroup__Group_3__0__Impl rule__AttributeGroup__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeGroup__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0"


    // $ANTLR start "rule__AttributeGroup__Group_3__0__Impl"
    // InternalEtlParser.g:5208:1: rule__AttributeGroup__Group_3__0__Impl : ( RULE_COMMA ) ;
    public final void rule__AttributeGroup__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5212:1: ( ( RULE_COMMA ) )
            // InternalEtlParser.g:5213:1: ( RULE_COMMA )
            {
            // InternalEtlParser.g:5213:1: ( RULE_COMMA )
            // InternalEtlParser.g:5214:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getCOMMATerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__0__Impl"


    // $ANTLR start "rule__AttributeGroup__Group_3__1"
    // InternalEtlParser.g:5223:1: rule__AttributeGroup__Group_3__1 : rule__AttributeGroup__Group_3__1__Impl ;
    public final void rule__AttributeGroup__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5227:1: ( rule__AttributeGroup__Group_3__1__Impl )
            // InternalEtlParser.g:5228:2: rule__AttributeGroup__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1"


    // $ANTLR start "rule__AttributeGroup__Group_3__1__Impl"
    // InternalEtlParser.g:5234:1: rule__AttributeGroup__Group_3__1__Impl : ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) ;
    public final void rule__AttributeGroup__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5238:1: ( ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) ) )
            // InternalEtlParser.g:5239:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            {
            // InternalEtlParser.g:5239:1: ( ( rule__AttributeGroup__AttributesAssignment_3_1 ) )
            // InternalEtlParser.g:5240:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }
            // InternalEtlParser.g:5241:2: ( rule__AttributeGroup__AttributesAssignment_3_1 )
            // InternalEtlParser.g:5241:3: rule__AttributeGroup__AttributesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeGroup__AttributesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__Group_3__1__Impl"


    // $ANTLR start "rule__Attribute__Group__0"
    // InternalEtlParser.g:5250:1: rule__Attribute__Group__0 : rule__Attribute__Group__0__Impl rule__Attribute__Group__1 ;
    public final void rule__Attribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5254:1: ( rule__Attribute__Group__0__Impl rule__Attribute__Group__1 )
            // InternalEtlParser.g:5255:2: rule__Attribute__Group__0__Impl rule__Attribute__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Attribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0"


    // $ANTLR start "rule__Attribute__Group__0__Impl"
    // InternalEtlParser.g:5262:1: rule__Attribute__Group__0__Impl : ( ( rule__Attribute__SlotAssignment_0 )? ) ;
    public final void rule__Attribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5266:1: ( ( ( rule__Attribute__SlotAssignment_0 )? ) )
            // InternalEtlParser.g:5267:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            {
            // InternalEtlParser.g:5267:1: ( ( rule__Attribute__SlotAssignment_0 )? )
            // InternalEtlParser.g:5268:2: ( rule__Attribute__SlotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }
            // InternalEtlParser.g:5269:2: ( rule__Attribute__SlotAssignment_0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_DOUBLE_SQUARE_OPEN) ) {
                int LA60_1 = input.LA(2);

                if ( ((LA60_1>=RULE_DOUBLE_SQUARE_CLOSE && LA60_1<=RULE_TILDE)||LA60_1==RULE_SLOTNAME_STRING||(LA60_1>=RULE_DIGIT_ZERO && LA60_1<=RULE_DIGIT_NONZERO)) ) {
                    alt60=1;
                }
            }
            switch (alt60) {
                case 1 :
                    // InternalEtlParser.g:5269:3: rule__Attribute__SlotAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Attribute__SlotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__0__Impl"


    // $ANTLR start "rule__Attribute__Group__1"
    // InternalEtlParser.g:5277:1: rule__Attribute__Group__1 : rule__Attribute__Group__1__Impl rule__Attribute__Group__2 ;
    public final void rule__Attribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5281:1: ( rule__Attribute__Group__1__Impl rule__Attribute__Group__2 )
            // InternalEtlParser.g:5282:2: rule__Attribute__Group__1__Impl rule__Attribute__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Attribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1"


    // $ANTLR start "rule__Attribute__Group__1__Impl"
    // InternalEtlParser.g:5289:1: rule__Attribute__Group__1__Impl : ( ( rule__Attribute__NameAssignment_1 ) ) ;
    public final void rule__Attribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5293:1: ( ( ( rule__Attribute__NameAssignment_1 ) ) )
            // InternalEtlParser.g:5294:1: ( ( rule__Attribute__NameAssignment_1 ) )
            {
            // InternalEtlParser.g:5294:1: ( ( rule__Attribute__NameAssignment_1 ) )
            // InternalEtlParser.g:5295:2: ( rule__Attribute__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }
            // InternalEtlParser.g:5296:2: ( rule__Attribute__NameAssignment_1 )
            // InternalEtlParser.g:5296:3: rule__Attribute__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__1__Impl"


    // $ANTLR start "rule__Attribute__Group__2"
    // InternalEtlParser.g:5304:1: rule__Attribute__Group__2 : rule__Attribute__Group__2__Impl rule__Attribute__Group__3 ;
    public final void rule__Attribute__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5308:1: ( rule__Attribute__Group__2__Impl rule__Attribute__Group__3 )
            // InternalEtlParser.g:5309:2: rule__Attribute__Group__2__Impl rule__Attribute__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Attribute__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2"


    // $ANTLR start "rule__Attribute__Group__2__Impl"
    // InternalEtlParser.g:5316:1: rule__Attribute__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__Attribute__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5320:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:5321:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:5321:1: ( RULE_EQUAL )
            // InternalEtlParser.g:5322:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__2__Impl"


    // $ANTLR start "rule__Attribute__Group__3"
    // InternalEtlParser.g:5331:1: rule__Attribute__Group__3 : rule__Attribute__Group__3__Impl ;
    public final void rule__Attribute__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5335:1: ( rule__Attribute__Group__3__Impl )
            // InternalEtlParser.g:5336:2: rule__Attribute__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3"


    // $ANTLR start "rule__Attribute__Group__3__Impl"
    // InternalEtlParser.g:5342:1: rule__Attribute__Group__3__Impl : ( ( rule__Attribute__ValueAssignment_3 ) ) ;
    public final void rule__Attribute__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5346:1: ( ( ( rule__Attribute__ValueAssignment_3 ) ) )
            // InternalEtlParser.g:5347:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            {
            // InternalEtlParser.g:5347:1: ( ( rule__Attribute__ValueAssignment_3 ) )
            // InternalEtlParser.g:5348:2: ( rule__Attribute__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }
            // InternalEtlParser.g:5349:2: ( rule__Attribute__ValueAssignment_3 )
            // InternalEtlParser.g:5349:3: rule__Attribute__ValueAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Attribute__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__Group__3__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__0"
    // InternalEtlParser.g:5358:1: rule__AttributeValue__Group_1__0 : rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 ;
    public final void rule__AttributeValue__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5362:1: ( rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1 )
            // InternalEtlParser.g:5363:2: rule__AttributeValue__Group_1__0__Impl rule__AttributeValue__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeValue__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0"


    // $ANTLR start "rule__AttributeValue__Group_1__0__Impl"
    // InternalEtlParser.g:5370:1: rule__AttributeValue__Group_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AttributeValue__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5374:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5375:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5375:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5376:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__0__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__1"
    // InternalEtlParser.g:5385:1: rule__AttributeValue__Group_1__1 : rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 ;
    public final void rule__AttributeValue__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5389:1: ( rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2 )
            // InternalEtlParser.g:5390:2: rule__AttributeValue__Group_1__1__Impl rule__AttributeValue__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__AttributeValue__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1"


    // $ANTLR start "rule__AttributeValue__Group_1__1__Impl"
    // InternalEtlParser.g:5397:1: rule__AttributeValue__Group_1__1__Impl : ( ruleSubExpression ) ;
    public final void rule__AttributeValue__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5401:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:5402:1: ( ruleSubExpression )
            {
            // InternalEtlParser.g:5402:1: ( ruleSubExpression )
            // InternalEtlParser.g:5403:2: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getSubExpressionParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__1__Impl"


    // $ANTLR start "rule__AttributeValue__Group_1__2"
    // InternalEtlParser.g:5412:1: rule__AttributeValue__Group_1__2 : rule__AttributeValue__Group_1__2__Impl ;
    public final void rule__AttributeValue__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5416:1: ( rule__AttributeValue__Group_1__2__Impl )
            // InternalEtlParser.g:5417:2: rule__AttributeValue__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeValue__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2"


    // $ANTLR start "rule__AttributeValue__Group_1__2__Impl"
    // InternalEtlParser.g:5423:1: rule__AttributeValue__Group_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AttributeValue__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5427:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5428:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5428:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5429:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeValueAccess().getROUND_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeValue__Group_1__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0"
    // InternalEtlParser.g:5439:1: rule__ConceptIdReplacementSlot__Group__0 : rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 ;
    public final void rule__ConceptIdReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5443:1: ( rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1 )
            // InternalEtlParser.g:5444:2: rule__ConceptIdReplacementSlot__Group__0__Impl rule__ConceptIdReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ConceptIdReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5451:1: rule__ConceptIdReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ConceptIdReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5455:1: ( ( () ) )
            // InternalEtlParser.g:5456:1: ( () )
            {
            // InternalEtlParser.g:5456:1: ( () )
            // InternalEtlParser.g:5457:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5458:2: ()
            // InternalEtlParser.g:5458:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConceptIdReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1"
    // InternalEtlParser.g:5466:1: rule__ConceptIdReplacementSlot__Group__1 : rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 ;
    public final void rule__ConceptIdReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5470:1: ( rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2 )
            // InternalEtlParser.g:5471:2: rule__ConceptIdReplacementSlot__Group__1__Impl rule__ConceptIdReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ConceptIdReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5478:1: rule__ConceptIdReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5482:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5483:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5483:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5484:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2"
    // InternalEtlParser.g:5493:1: rule__ConceptIdReplacementSlot__Group__2 : rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 ;
    public final void rule__ConceptIdReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5497:1: ( rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3 )
            // InternalEtlParser.g:5498:2: rule__ConceptIdReplacementSlot__Group__2__Impl rule__ConceptIdReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ConceptIdReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5505:1: rule__ConceptIdReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ConceptIdReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5509:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5510:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5510:1: ( RULE_PLUS )
            // InternalEtlParser.g:5511:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3"
    // InternalEtlParser.g:5520:1: rule__ConceptIdReplacementSlot__Group__3 : rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 ;
    public final void rule__ConceptIdReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5524:1: ( rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4 )
            // InternalEtlParser.g:5525:2: rule__ConceptIdReplacementSlot__Group__3__Impl rule__ConceptIdReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5532:1: rule__ConceptIdReplacementSlot__Group__3__Impl : ( RULE_ID ) ;
    public final void rule__ConceptIdReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5536:1: ( ( RULE_ID ) )
            // InternalEtlParser.g:5537:1: ( RULE_ID )
            {
            // InternalEtlParser.g:5537:1: ( RULE_ID )
            // InternalEtlParser.g:5538:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getIDTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4"
    // InternalEtlParser.g:5547:1: rule__ConceptIdReplacementSlot__Group__4 : rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 ;
    public final void rule__ConceptIdReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5551:1: ( rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5 )
            // InternalEtlParser.g:5552:2: rule__ConceptIdReplacementSlot__Group__4__Impl rule__ConceptIdReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5559:1: rule__ConceptIdReplacementSlot__Group__4__Impl : ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5563:1: ( ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5564:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5564:1: ( ( rule__ConceptIdReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5565:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5566:2: ( rule__ConceptIdReplacementSlot__Group_4__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_ROUND_OPEN) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalEtlParser.g:5566:3: rule__ConceptIdReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5"
    // InternalEtlParser.g:5574:1: rule__ConceptIdReplacementSlot__Group__5 : rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 ;
    public final void rule__ConceptIdReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5578:1: ( rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6 )
            // InternalEtlParser.g:5579:2: rule__ConceptIdReplacementSlot__Group__5__Impl rule__ConceptIdReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__ConceptIdReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5586:1: rule__ConceptIdReplacementSlot__Group__5__Impl : ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ConceptIdReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5590:1: ( ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5591:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5591:1: ( ( rule__ConceptIdReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5592:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5593:2: ( rule__ConceptIdReplacementSlot__NameAssignment_5 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_SLOTNAME_STRING) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalEtlParser.g:5593:3: rule__ConceptIdReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptIdReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6"
    // InternalEtlParser.g:5601:1: rule__ConceptIdReplacementSlot__Group__6 : rule__ConceptIdReplacementSlot__Group__6__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5605:1: ( rule__ConceptIdReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5606:2: rule__ConceptIdReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5612:1: rule__ConceptIdReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5616:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5617:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5617:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5618:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5628:1: rule__ConceptIdReplacementSlot__Group_4__0 : rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5632:1: ( rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5633:2: rule__ConceptIdReplacementSlot__Group_4__0__Impl rule__ConceptIdReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ConceptIdReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5640:1: rule__ConceptIdReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5644:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5645:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5645:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5646:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5655:1: rule__ConceptIdReplacementSlot__Group_4__1 : rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5659:1: ( rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5660:2: rule__ConceptIdReplacementSlot__Group_4__1__Impl rule__ConceptIdReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ConceptIdReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5667:1: rule__ConceptIdReplacementSlot__Group_4__1__Impl : ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5671:1: ( ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:5672:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5672:1: ( ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:5673:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:5674:2: ( rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:5674:3: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5682:1: rule__ConceptIdReplacementSlot__Group_4__2 : rule__ConceptIdReplacementSlot__Group_4__2__Impl ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5686:1: ( rule__ConceptIdReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:5687:2: rule__ConceptIdReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptIdReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ConceptIdReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5693:1: rule__ConceptIdReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ConceptIdReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5697:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5698:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5698:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5699:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0"
    // InternalEtlParser.g:5709:1: rule__ExpressionReplacementSlot__Group__0 : rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 ;
    public final void rule__ExpressionReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5713:1: ( rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1 )
            // InternalEtlParser.g:5714:2: rule__ExpressionReplacementSlot__Group__0__Impl rule__ExpressionReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ExpressionReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5721:1: rule__ExpressionReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5725:1: ( ( () ) )
            // InternalEtlParser.g:5726:1: ( () )
            {
            // InternalEtlParser.g:5726:1: ( () )
            // InternalEtlParser.g:5727:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5728:2: ()
            // InternalEtlParser.g:5728:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getExpressionReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1"
    // InternalEtlParser.g:5736:1: rule__ExpressionReplacementSlot__Group__1 : rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 ;
    public final void rule__ExpressionReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5740:1: ( rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2 )
            // InternalEtlParser.g:5741:2: rule__ExpressionReplacementSlot__Group__1__Impl rule__ExpressionReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ExpressionReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:5748:1: rule__ExpressionReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5752:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:5753:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:5753:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:5754:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2"
    // InternalEtlParser.g:5763:1: rule__ExpressionReplacementSlot__Group__2 : rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 ;
    public final void rule__ExpressionReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5767:1: ( rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3 )
            // InternalEtlParser.g:5768:2: rule__ExpressionReplacementSlot__Group__2__Impl rule__ExpressionReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:5775:1: rule__ExpressionReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__ExpressionReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5779:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:5780:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:5780:1: ( RULE_PLUS )
            // InternalEtlParser.g:5781:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3"
    // InternalEtlParser.g:5790:1: rule__ExpressionReplacementSlot__Group__3 : rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 ;
    public final void rule__ExpressionReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5794:1: ( rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4 )
            // InternalEtlParser.g:5795:2: rule__ExpressionReplacementSlot__Group__3__Impl rule__ExpressionReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:5802:1: rule__ExpressionReplacementSlot__Group__3__Impl : ( ( RULE_SCG )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5806:1: ( ( ( RULE_SCG )? ) )
            // InternalEtlParser.g:5807:1: ( ( RULE_SCG )? )
            {
            // InternalEtlParser.g:5807:1: ( ( RULE_SCG )? )
            // InternalEtlParser.g:5808:2: ( RULE_SCG )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }
            // InternalEtlParser.g:5809:2: ( RULE_SCG )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_SCG) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEtlParser.g:5809:3: RULE_SCG
                    {
                    match(input,RULE_SCG,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getSCGTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4"
    // InternalEtlParser.g:5817:1: rule__ExpressionReplacementSlot__Group__4 : rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 ;
    public final void rule__ExpressionReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5821:1: ( rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5 )
            // InternalEtlParser.g:5822:2: rule__ExpressionReplacementSlot__Group__4__Impl rule__ExpressionReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:5829:1: rule__ExpressionReplacementSlot__Group__4__Impl : ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5833:1: ( ( ( rule__ExpressionReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:5834:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:5834:1: ( ( rule__ExpressionReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:5835:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:5836:2: ( rule__ExpressionReplacementSlot__Group_4__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ROUND_OPEN) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalEtlParser.g:5836:3: rule__ExpressionReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5"
    // InternalEtlParser.g:5844:1: rule__ExpressionReplacementSlot__Group__5 : rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 ;
    public final void rule__ExpressionReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5848:1: ( rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6 )
            // InternalEtlParser.g:5849:2: rule__ExpressionReplacementSlot__Group__5__Impl rule__ExpressionReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ExpressionReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:5856:1: rule__ExpressionReplacementSlot__Group__5__Impl : ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__ExpressionReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5860:1: ( ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:5861:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:5861:1: ( ( rule__ExpressionReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:5862:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:5863:2: ( rule__ExpressionReplacementSlot__NameAssignment_5 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_SLOTNAME_STRING) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEtlParser.g:5863:3: rule__ExpressionReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExpressionReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6"
    // InternalEtlParser.g:5871:1: rule__ExpressionReplacementSlot__Group__6 : rule__ExpressionReplacementSlot__Group__6__Impl ;
    public final void rule__ExpressionReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5875:1: ( rule__ExpressionReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:5876:2: rule__ExpressionReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:5882:1: rule__ExpressionReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5886:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:5887:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:5887:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:5888:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0"
    // InternalEtlParser.g:5898:1: rule__ExpressionReplacementSlot__Group_4__0 : rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 ;
    public final void rule__ExpressionReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5902:1: ( rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:5903:2: rule__ExpressionReplacementSlot__Group_4__0__Impl rule__ExpressionReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExpressionReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:5910:1: rule__ExpressionReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5914:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:5915:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:5915:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:5916:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1"
    // InternalEtlParser.g:5925:1: rule__ExpressionReplacementSlot__Group_4__1 : rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 ;
    public final void rule__ExpressionReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5929:1: ( rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:5930:2: rule__ExpressionReplacementSlot__Group_4__1__Impl rule__ExpressionReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__ExpressionReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:5937:1: rule__ExpressionReplacementSlot__Group_4__1__Impl : ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5941:1: ( ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) ) )
            // InternalEtlParser.g:5942:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            {
            // InternalEtlParser.g:5942:1: ( ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 ) )
            // InternalEtlParser.g:5943:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }
            // InternalEtlParser.g:5944:2: ( rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 )
            // InternalEtlParser.g:5944:3: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__ConstraintAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2"
    // InternalEtlParser.g:5952:1: rule__ExpressionReplacementSlot__Group_4__2 : rule__ExpressionReplacementSlot__Group_4__2__Impl ;
    public final void rule__ExpressionReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5956:1: ( rule__ExpressionReplacementSlot__Group_4__2__Impl )
            // InternalEtlParser.g:5957:2: rule__ExpressionReplacementSlot__Group_4__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExpressionReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2"


    // $ANTLR start "rule__ExpressionReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:5963:1: rule__ExpressionReplacementSlot__Group_4__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__ExpressionReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5967:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:5968:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:5968:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:5969:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0"
    // InternalEtlParser.g:5979:1: rule__TokenReplacementSlot__Group__0 : rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 ;
    public final void rule__TokenReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5983:1: ( rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1 )
            // InternalEtlParser.g:5984:2: rule__TokenReplacementSlot__Group__0__Impl rule__TokenReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__TokenReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:5991:1: rule__TokenReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__TokenReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:5995:1: ( ( () ) )
            // InternalEtlParser.g:5996:1: ( () )
            {
            // InternalEtlParser.g:5996:1: ( () )
            // InternalEtlParser.g:5997:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:5998:2: ()
            // InternalEtlParser.g:5998:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokenReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1"
    // InternalEtlParser.g:6006:1: rule__TokenReplacementSlot__Group__1 : rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 ;
    public final void rule__TokenReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6010:1: ( rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2 )
            // InternalEtlParser.g:6011:2: rule__TokenReplacementSlot__Group__1__Impl rule__TokenReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TokenReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6018:1: rule__TokenReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6022:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6023:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6023:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6024:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2"
    // InternalEtlParser.g:6033:1: rule__TokenReplacementSlot__Group__2 : rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 ;
    public final void rule__TokenReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6037:1: ( rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3 )
            // InternalEtlParser.g:6038:2: rule__TokenReplacementSlot__Group__2__Impl rule__TokenReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TokenReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6045:1: rule__TokenReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__TokenReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6049:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6050:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6050:1: ( RULE_PLUS )
            // InternalEtlParser.g:6051:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3"
    // InternalEtlParser.g:6060:1: rule__TokenReplacementSlot__Group__3 : rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 ;
    public final void rule__TokenReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6064:1: ( rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4 )
            // InternalEtlParser.g:6065:2: rule__TokenReplacementSlot__Group__3__Impl rule__TokenReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6072:1: rule__TokenReplacementSlot__Group__3__Impl : ( RULE_TOK ) ;
    public final void rule__TokenReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6076:1: ( ( RULE_TOK ) )
            // InternalEtlParser.g:6077:1: ( RULE_TOK )
            {
            // InternalEtlParser.g:6077:1: ( RULE_TOK )
            // InternalEtlParser.g:6078:2: RULE_TOK
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }
            match(input,RULE_TOK,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTOKTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4"
    // InternalEtlParser.g:6087:1: rule__TokenReplacementSlot__Group__4 : rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 ;
    public final void rule__TokenReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6091:1: ( rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5 )
            // InternalEtlParser.g:6092:2: rule__TokenReplacementSlot__Group__4__Impl rule__TokenReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4"


    // $ANTLR start "rule__TokenReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6099:1: rule__TokenReplacementSlot__Group__4__Impl : ( ( rule__TokenReplacementSlot__Group_4__0 )? ) ;
    public final void rule__TokenReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6103:1: ( ( ( rule__TokenReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6104:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6104:1: ( ( rule__TokenReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6105:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6106:2: ( rule__TokenReplacementSlot__Group_4__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ROUND_OPEN) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEtlParser.g:6106:3: rule__TokenReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5"
    // InternalEtlParser.g:6114:1: rule__TokenReplacementSlot__Group__5 : rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 ;
    public final void rule__TokenReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6118:1: ( rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6 )
            // InternalEtlParser.g:6119:2: rule__TokenReplacementSlot__Group__5__Impl rule__TokenReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__TokenReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5"


    // $ANTLR start "rule__TokenReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6126:1: rule__TokenReplacementSlot__Group__5__Impl : ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__TokenReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6130:1: ( ( ( rule__TokenReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6131:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6131:1: ( ( rule__TokenReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6132:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6133:2: ( rule__TokenReplacementSlot__NameAssignment_5 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_SLOTNAME_STRING) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEtlParser.g:6133:3: rule__TokenReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TokenReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6"
    // InternalEtlParser.g:6141:1: rule__TokenReplacementSlot__Group__6 : rule__TokenReplacementSlot__Group__6__Impl ;
    public final void rule__TokenReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6145:1: ( rule__TokenReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6146:2: rule__TokenReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6"


    // $ANTLR start "rule__TokenReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6152:1: rule__TokenReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6156:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6157:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6157:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6158:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6168:1: rule__TokenReplacementSlot__Group_4__0 : rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 ;
    public final void rule__TokenReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6172:1: ( rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6173:2: rule__TokenReplacementSlot__Group_4__0__Impl rule__TokenReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__TokenReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6180:1: rule__TokenReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TokenReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6184:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6185:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6185:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6186:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6195:1: rule__TokenReplacementSlot__Group_4__1 : rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 ;
    public final void rule__TokenReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6199:1: ( rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6200:2: rule__TokenReplacementSlot__Group_4__1__Impl rule__TokenReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6207:1: rule__TokenReplacementSlot__Group_4__1__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) ;
    public final void rule__TokenReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6211:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) ) )
            // InternalEtlParser.g:6212:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6212:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_1 ) )
            // InternalEtlParser.g:6213:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }
            // InternalEtlParser.g:6214:2: ( rule__TokenReplacementSlot__TokensAssignment_4_1 )
            // InternalEtlParser.g:6214:3: rule__TokenReplacementSlot__TokensAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__TokensAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6222:1: rule__TokenReplacementSlot__Group_4__2 : rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 ;
    public final void rule__TokenReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6226:1: ( rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6227:2: rule__TokenReplacementSlot__Group_4__2__Impl rule__TokenReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__TokenReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6234:1: rule__TokenReplacementSlot__Group_4__2__Impl : ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) ;
    public final void rule__TokenReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6238:1: ( ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* ) )
            // InternalEtlParser.g:6239:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6239:1: ( ( rule__TokenReplacementSlot__TokensAssignment_4_2 )* )
            // InternalEtlParser.g:6240:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }
            // InternalEtlParser.g:6241:2: ( rule__TokenReplacementSlot__TokensAssignment_4_2 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=RULE_EQUIVALENT_TO && LA68_0<=RULE_SUBTYPE_OF)||LA68_0==RULE_EXCLUSION_KEYWORD||(LA68_0>=RULE_CONJUNCTION_KEYWORD && LA68_0<=RULE_REVERSED)||(LA68_0>=RULE_DBL_LT && LA68_0<=RULE_LTE)||LA68_0==RULE_COMMA||LA68_0==RULE_CARET||(LA68_0>=RULE_EQUAL && LA68_0<=RULE_GT)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalEtlParser.g:6241:3: rule__TokenReplacementSlot__TokensAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    rule__TokenReplacementSlot__TokensAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6249:1: rule__TokenReplacementSlot__Group_4__3 : rule__TokenReplacementSlot__Group_4__3__Impl ;
    public final void rule__TokenReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6253:1: ( rule__TokenReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6254:2: rule__TokenReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TokenReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3"


    // $ANTLR start "rule__TokenReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6260:1: rule__TokenReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TokenReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6264:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6265:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6265:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6266:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0"
    // InternalEtlParser.g:6276:1: rule__TemplateInformationSlot__Group__0 : rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 ;
    public final void rule__TemplateInformationSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6280:1: ( rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1 )
            // InternalEtlParser.g:6281:2: rule__TemplateInformationSlot__Group__0__Impl rule__TemplateInformationSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__TemplateInformationSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0"


    // $ANTLR start "rule__TemplateInformationSlot__Group__0__Impl"
    // InternalEtlParser.g:6288:1: rule__TemplateInformationSlot__Group__0__Impl : ( () ) ;
    public final void rule__TemplateInformationSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6292:1: ( ( () ) )
            // InternalEtlParser.g:6293:1: ( () )
            {
            // InternalEtlParser.g:6293:1: ( () )
            // InternalEtlParser.g:6294:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }
            // InternalEtlParser.g:6295:2: ()
            // InternalEtlParser.g:6295:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getTemplateInformationSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__0__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1"
    // InternalEtlParser.g:6303:1: rule__TemplateInformationSlot__Group__1 : rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 ;
    public final void rule__TemplateInformationSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6307:1: ( rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2 )
            // InternalEtlParser.g:6308:2: rule__TemplateInformationSlot__Group__1__Impl rule__TemplateInformationSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1"


    // $ANTLR start "rule__TemplateInformationSlot__Group__1__Impl"
    // InternalEtlParser.g:6315:1: rule__TemplateInformationSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__TemplateInformationSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6319:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6320:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6320:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6321:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__1__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2"
    // InternalEtlParser.g:6330:1: rule__TemplateInformationSlot__Group__2 : rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 ;
    public final void rule__TemplateInformationSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6334:1: ( rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3 )
            // InternalEtlParser.g:6335:2: rule__TemplateInformationSlot__Group__2__Impl rule__TemplateInformationSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2"


    // $ANTLR start "rule__TemplateInformationSlot__Group__2__Impl"
    // InternalEtlParser.g:6342:1: rule__TemplateInformationSlot__Group__2__Impl : ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) ;
    public final void rule__TemplateInformationSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6346:1: ( ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? ) )
            // InternalEtlParser.g:6347:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            {
            // InternalEtlParser.g:6347:1: ( ( rule__TemplateInformationSlot__CardinalityAssignment_2 )? )
            // InternalEtlParser.g:6348:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }
            // InternalEtlParser.g:6349:2: ( rule__TemplateInformationSlot__CardinalityAssignment_2 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_TILDE||(LA69_0>=RULE_DIGIT_ZERO && LA69_0<=RULE_DIGIT_NONZERO)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalEtlParser.g:6349:3: rule__TemplateInformationSlot__CardinalityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__CardinalityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__2__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3"
    // InternalEtlParser.g:6357:1: rule__TemplateInformationSlot__Group__3 : rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 ;
    public final void rule__TemplateInformationSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6361:1: ( rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4 )
            // InternalEtlParser.g:6362:2: rule__TemplateInformationSlot__Group__3__Impl rule__TemplateInformationSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__TemplateInformationSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3"


    // $ANTLR start "rule__TemplateInformationSlot__Group__3__Impl"
    // InternalEtlParser.g:6369:1: rule__TemplateInformationSlot__Group__3__Impl : ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) ;
    public final void rule__TemplateInformationSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6373:1: ( ( ( rule__TemplateInformationSlot__NameAssignment_3 )? ) )
            // InternalEtlParser.g:6374:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            {
            // InternalEtlParser.g:6374:1: ( ( rule__TemplateInformationSlot__NameAssignment_3 )? )
            // InternalEtlParser.g:6375:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }
            // InternalEtlParser.g:6376:2: ( rule__TemplateInformationSlot__NameAssignment_3 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_SLOTNAME_STRING) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEtlParser.g:6376:3: rule__TemplateInformationSlot__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TemplateInformationSlot__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__3__Impl"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4"
    // InternalEtlParser.g:6384:1: rule__TemplateInformationSlot__Group__4 : rule__TemplateInformationSlot__Group__4__Impl ;
    public final void rule__TemplateInformationSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6388:1: ( rule__TemplateInformationSlot__Group__4__Impl )
            // InternalEtlParser.g:6389:2: rule__TemplateInformationSlot__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TemplateInformationSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4"


    // $ANTLR start "rule__TemplateInformationSlot__Group__4__Impl"
    // InternalEtlParser.g:6395:1: rule__TemplateInformationSlot__Group__4__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__TemplateInformationSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6399:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6400:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6400:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6401:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__0"
    // InternalEtlParser.g:6411:1: rule__StringReplacementSlot__Group__0 : rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 ;
    public final void rule__StringReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6415:1: ( rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1 )
            // InternalEtlParser.g:6416:2: rule__StringReplacementSlot__Group__0__Impl rule__StringReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__StringReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0"


    // $ANTLR start "rule__StringReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6423:1: rule__StringReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__StringReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6427:1: ( ( () ) )
            // InternalEtlParser.g:6428:1: ( () )
            {
            // InternalEtlParser.g:6428:1: ( () )
            // InternalEtlParser.g:6429:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6430:2: ()
            // InternalEtlParser.g:6430:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getStringReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__1"
    // InternalEtlParser.g:6438:1: rule__StringReplacementSlot__Group__1 : rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 ;
    public final void rule__StringReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6442:1: ( rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2 )
            // InternalEtlParser.g:6443:2: rule__StringReplacementSlot__Group__1__Impl rule__StringReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__StringReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1"


    // $ANTLR start "rule__StringReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6450:1: rule__StringReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__StringReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6454:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6455:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6455:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6456:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__2"
    // InternalEtlParser.g:6465:1: rule__StringReplacementSlot__Group__2 : rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 ;
    public final void rule__StringReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6469:1: ( rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3 )
            // InternalEtlParser.g:6470:2: rule__StringReplacementSlot__Group__2__Impl rule__StringReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2"


    // $ANTLR start "rule__StringReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6477:1: rule__StringReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__StringReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6481:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6482:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6482:1: ( RULE_PLUS )
            // InternalEtlParser.g:6483:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__3"
    // InternalEtlParser.g:6492:1: rule__StringReplacementSlot__Group__3 : rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 ;
    public final void rule__StringReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6496:1: ( rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4 )
            // InternalEtlParser.g:6497:2: rule__StringReplacementSlot__Group__3__Impl rule__StringReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3"


    // $ANTLR start "rule__StringReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6504:1: rule__StringReplacementSlot__Group__3__Impl : ( RULE_STR ) ;
    public final void rule__StringReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6508:1: ( ( RULE_STR ) )
            // InternalEtlParser.g:6509:1: ( RULE_STR )
            {
            // InternalEtlParser.g:6509:1: ( RULE_STR )
            // InternalEtlParser.g:6510:2: RULE_STR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }
            match(input,RULE_STR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getSTRTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__4"
    // InternalEtlParser.g:6519:1: rule__StringReplacementSlot__Group__4 : rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 ;
    public final void rule__StringReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6523:1: ( rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5 )
            // InternalEtlParser.g:6524:2: rule__StringReplacementSlot__Group__4__Impl rule__StringReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4"


    // $ANTLR start "rule__StringReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6531:1: rule__StringReplacementSlot__Group__4__Impl : ( ( rule__StringReplacementSlot__Group_4__0 )? ) ;
    public final void rule__StringReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6535:1: ( ( ( rule__StringReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6536:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6536:1: ( ( rule__StringReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6537:2: ( rule__StringReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6538:2: ( rule__StringReplacementSlot__Group_4__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==RULE_ROUND_OPEN) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalEtlParser.g:6538:3: rule__StringReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__5"
    // InternalEtlParser.g:6546:1: rule__StringReplacementSlot__Group__5 : rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 ;
    public final void rule__StringReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6550:1: ( rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6 )
            // InternalEtlParser.g:6551:2: rule__StringReplacementSlot__Group__5__Impl rule__StringReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__StringReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5"


    // $ANTLR start "rule__StringReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6558:1: rule__StringReplacementSlot__Group__5__Impl : ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__StringReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6562:1: ( ( ( rule__StringReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6563:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6563:1: ( ( rule__StringReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6564:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6565:2: ( rule__StringReplacementSlot__NameAssignment_5 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_SLOTNAME_STRING) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEtlParser.g:6565:3: rule__StringReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__StringReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group__6"
    // InternalEtlParser.g:6573:1: rule__StringReplacementSlot__Group__6 : rule__StringReplacementSlot__Group__6__Impl ;
    public final void rule__StringReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6577:1: ( rule__StringReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6578:2: rule__StringReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6"


    // $ANTLR start "rule__StringReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6584:1: rule__StringReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6588:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6589:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6589:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6590:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6600:1: rule__StringReplacementSlot__Group_4__0 : rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 ;
    public final void rule__StringReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6604:1: ( rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6605:2: rule__StringReplacementSlot__Group_4__0__Impl rule__StringReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6612:1: rule__StringReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__StringReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6616:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6617:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6617:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6618:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6627:1: rule__StringReplacementSlot__Group_4__1 : rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 ;
    public final void rule__StringReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6631:1: ( rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6632:2: rule__StringReplacementSlot__Group_4__1__Impl rule__StringReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6639:1: rule__StringReplacementSlot__Group_4__1__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__StringReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6643:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:6644:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6644:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:6645:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:6646:2: ( rule__StringReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:6646:3: rule__StringReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6654:1: rule__StringReplacementSlot__Group_4__2 : rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 ;
    public final void rule__StringReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6658:1: ( rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6659:2: rule__StringReplacementSlot__Group_4__2__Impl rule__StringReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__StringReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6666:1: rule__StringReplacementSlot__Group_4__2__Impl : ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__StringReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6670:1: ( ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:6671:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6671:1: ( ( rule__StringReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:6672:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:6673:2: ( rule__StringReplacementSlot__ValuesAssignment_4_2 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==RULE_STRING) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalEtlParser.g:6673:3: rule__StringReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    rule__StringReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6681:1: rule__StringReplacementSlot__Group_4__3 : rule__StringReplacementSlot__Group_4__3__Impl ;
    public final void rule__StringReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6685:1: ( rule__StringReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6686:2: rule__StringReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3"


    // $ANTLR start "rule__StringReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6692:1: rule__StringReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__StringReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6696:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6697:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6697:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6698:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0"
    // InternalEtlParser.g:6708:1: rule__IntegerReplacementSlot__Group__0 : rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 ;
    public final void rule__IntegerReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6712:1: ( rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1 )
            // InternalEtlParser.g:6713:2: rule__IntegerReplacementSlot__Group__0__Impl rule__IntegerReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__IntegerReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:6720:1: rule__IntegerReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__IntegerReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6724:1: ( ( () ) )
            // InternalEtlParser.g:6725:1: ( () )
            {
            // InternalEtlParser.g:6725:1: ( () )
            // InternalEtlParser.g:6726:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:6727:2: ()
            // InternalEtlParser.g:6727:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getIntegerReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1"
    // InternalEtlParser.g:6735:1: rule__IntegerReplacementSlot__Group__1 : rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 ;
    public final void rule__IntegerReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6739:1: ( rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2 )
            // InternalEtlParser.g:6740:2: rule__IntegerReplacementSlot__Group__1__Impl rule__IntegerReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__IntegerReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:6747:1: rule__IntegerReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6751:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:6752:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:6752:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:6753:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2"
    // InternalEtlParser.g:6762:1: rule__IntegerReplacementSlot__Group__2 : rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 ;
    public final void rule__IntegerReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6766:1: ( rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3 )
            // InternalEtlParser.g:6767:2: rule__IntegerReplacementSlot__Group__2__Impl rule__IntegerReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__IntegerReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:6774:1: rule__IntegerReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__IntegerReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6778:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:6779:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:6779:1: ( RULE_PLUS )
            // InternalEtlParser.g:6780:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3"
    // InternalEtlParser.g:6789:1: rule__IntegerReplacementSlot__Group__3 : rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 ;
    public final void rule__IntegerReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6793:1: ( rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4 )
            // InternalEtlParser.g:6794:2: rule__IntegerReplacementSlot__Group__3__Impl rule__IntegerReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:6801:1: rule__IntegerReplacementSlot__Group__3__Impl : ( RULE_INT ) ;
    public final void rule__IntegerReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6805:1: ( ( RULE_INT ) )
            // InternalEtlParser.g:6806:1: ( RULE_INT )
            {
            // InternalEtlParser.g:6806:1: ( RULE_INT )
            // InternalEtlParser.g:6807:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getINTTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4"
    // InternalEtlParser.g:6816:1: rule__IntegerReplacementSlot__Group__4 : rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 ;
    public final void rule__IntegerReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6820:1: ( rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5 )
            // InternalEtlParser.g:6821:2: rule__IntegerReplacementSlot__Group__4__Impl rule__IntegerReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:6828:1: rule__IntegerReplacementSlot__Group__4__Impl : ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6832:1: ( ( ( rule__IntegerReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:6833:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:6833:1: ( ( rule__IntegerReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:6834:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:6835:2: ( rule__IntegerReplacementSlot__Group_4__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_ROUND_OPEN) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalEtlParser.g:6835:3: rule__IntegerReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5"
    // InternalEtlParser.g:6843:1: rule__IntegerReplacementSlot__Group__5 : rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 ;
    public final void rule__IntegerReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6847:1: ( rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6 )
            // InternalEtlParser.g:6848:2: rule__IntegerReplacementSlot__Group__5__Impl rule__IntegerReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__IntegerReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:6855:1: rule__IntegerReplacementSlot__Group__5__Impl : ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__IntegerReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6859:1: ( ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:6860:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:6860:1: ( ( rule__IntegerReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:6861:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:6862:2: ( rule__IntegerReplacementSlot__NameAssignment_5 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_SLOTNAME_STRING) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalEtlParser.g:6862:3: rule__IntegerReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__IntegerReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6"
    // InternalEtlParser.g:6870:1: rule__IntegerReplacementSlot__Group__6 : rule__IntegerReplacementSlot__Group__6__Impl ;
    public final void rule__IntegerReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6874:1: ( rule__IntegerReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:6875:2: rule__IntegerReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6"


    // $ANTLR start "rule__IntegerReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:6881:1: rule__IntegerReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6885:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:6886:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:6886:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:6887:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0"
    // InternalEtlParser.g:6897:1: rule__IntegerReplacementSlot__Group_4__0 : rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 ;
    public final void rule__IntegerReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6901:1: ( rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:6902:2: rule__IntegerReplacementSlot__Group_4__0__Impl rule__IntegerReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__IntegerReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:6909:1: rule__IntegerReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__IntegerReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6913:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:6914:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:6914:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:6915:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1"
    // InternalEtlParser.g:6924:1: rule__IntegerReplacementSlot__Group_4__1 : rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 ;
    public final void rule__IntegerReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6928:1: ( rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:6929:2: rule__IntegerReplacementSlot__Group_4__1__Impl rule__IntegerReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:6936:1: rule__IntegerReplacementSlot__Group_4__1__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__IntegerReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6940:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:6941:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:6941:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:6942:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:6943:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:6943:3: rule__IntegerReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2"
    // InternalEtlParser.g:6951:1: rule__IntegerReplacementSlot__Group_4__2 : rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 ;
    public final void rule__IntegerReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6955:1: ( rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:6956:2: rule__IntegerReplacementSlot__Group_4__2__Impl rule__IntegerReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:6963:1: rule__IntegerReplacementSlot__Group_4__2__Impl : ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__IntegerReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6967:1: ( ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:6968:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:6968:1: ( ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:6969:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:6970:2: ( rule__IntegerReplacementSlot__ValuesAssignment_4_2 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_TO||(LA76_0>=RULE_GT && LA76_0<=RULE_HASH)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalEtlParser.g:6970:3: rule__IntegerReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__IntegerReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3"
    // InternalEtlParser.g:6978:1: rule__IntegerReplacementSlot__Group_4__3 : rule__IntegerReplacementSlot__Group_4__3__Impl ;
    public final void rule__IntegerReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6982:1: ( rule__IntegerReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:6983:2: rule__IntegerReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3"


    // $ANTLR start "rule__IntegerReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:6989:1: rule__IntegerReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__IntegerReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:6993:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:6994:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:6994:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:6995:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0"
    // InternalEtlParser.g:7005:1: rule__DecimalReplacementSlot__Group__0 : rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 ;
    public final void rule__DecimalReplacementSlot__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7009:1: ( rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1 )
            // InternalEtlParser.g:7010:2: rule__DecimalReplacementSlot__Group__0__Impl rule__DecimalReplacementSlot__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__DecimalReplacementSlot__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__0__Impl"
    // InternalEtlParser.g:7017:1: rule__DecimalReplacementSlot__Group__0__Impl : ( () ) ;
    public final void rule__DecimalReplacementSlot__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7021:1: ( ( () ) )
            // InternalEtlParser.g:7022:1: ( () )
            {
            // InternalEtlParser.g:7022:1: ( () )
            // InternalEtlParser.g:7023:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }
            // InternalEtlParser.g:7024:2: ()
            // InternalEtlParser.g:7024:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDecimalReplacementSlotAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1"
    // InternalEtlParser.g:7032:1: rule__DecimalReplacementSlot__Group__1 : rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 ;
    public final void rule__DecimalReplacementSlot__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7036:1: ( rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2 )
            // InternalEtlParser.g:7037:2: rule__DecimalReplacementSlot__Group__1__Impl rule__DecimalReplacementSlot__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DecimalReplacementSlot__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__1__Impl"
    // InternalEtlParser.g:7044:1: rule__DecimalReplacementSlot__Group__1__Impl : ( RULE_DOUBLE_SQUARE_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7048:1: ( ( RULE_DOUBLE_SQUARE_OPEN ) )
            // InternalEtlParser.g:7049:1: ( RULE_DOUBLE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:7049:1: ( RULE_DOUBLE_SQUARE_OPEN )
            // InternalEtlParser.g:7050:2: RULE_DOUBLE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_DOUBLE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2"
    // InternalEtlParser.g:7059:1: rule__DecimalReplacementSlot__Group__2 : rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 ;
    public final void rule__DecimalReplacementSlot__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7063:1: ( rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3 )
            // InternalEtlParser.g:7064:2: rule__DecimalReplacementSlot__Group__2__Impl rule__DecimalReplacementSlot__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__DecimalReplacementSlot__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__2__Impl"
    // InternalEtlParser.g:7071:1: rule__DecimalReplacementSlot__Group__2__Impl : ( RULE_PLUS ) ;
    public final void rule__DecimalReplacementSlot__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7075:1: ( ( RULE_PLUS ) )
            // InternalEtlParser.g:7076:1: ( RULE_PLUS )
            {
            // InternalEtlParser.g:7076:1: ( RULE_PLUS )
            // InternalEtlParser.g:7077:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getPLUSTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3"
    // InternalEtlParser.g:7086:1: rule__DecimalReplacementSlot__Group__3 : rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 ;
    public final void rule__DecimalReplacementSlot__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7090:1: ( rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4 )
            // InternalEtlParser.g:7091:2: rule__DecimalReplacementSlot__Group__3__Impl rule__DecimalReplacementSlot__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__3__Impl"
    // InternalEtlParser.g:7098:1: rule__DecimalReplacementSlot__Group__3__Impl : ( RULE_DEC ) ;
    public final void rule__DecimalReplacementSlot__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7102:1: ( ( RULE_DEC ) )
            // InternalEtlParser.g:7103:1: ( RULE_DEC )
            {
            // InternalEtlParser.g:7103:1: ( RULE_DEC )
            // InternalEtlParser.g:7104:2: RULE_DEC
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }
            match(input,RULE_DEC,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDECTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__3__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4"
    // InternalEtlParser.g:7113:1: rule__DecimalReplacementSlot__Group__4 : rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 ;
    public final void rule__DecimalReplacementSlot__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7117:1: ( rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5 )
            // InternalEtlParser.g:7118:2: rule__DecimalReplacementSlot__Group__4__Impl rule__DecimalReplacementSlot__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__4__Impl"
    // InternalEtlParser.g:7125:1: rule__DecimalReplacementSlot__Group__4__Impl : ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7129:1: ( ( ( rule__DecimalReplacementSlot__Group_4__0 )? ) )
            // InternalEtlParser.g:7130:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            {
            // InternalEtlParser.g:7130:1: ( ( rule__DecimalReplacementSlot__Group_4__0 )? )
            // InternalEtlParser.g:7131:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }
            // InternalEtlParser.g:7132:2: ( rule__DecimalReplacementSlot__Group_4__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_ROUND_OPEN) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalEtlParser.g:7132:3: rule__DecimalReplacementSlot__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__4__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5"
    // InternalEtlParser.g:7140:1: rule__DecimalReplacementSlot__Group__5 : rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 ;
    public final void rule__DecimalReplacementSlot__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7144:1: ( rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6 )
            // InternalEtlParser.g:7145:2: rule__DecimalReplacementSlot__Group__5__Impl rule__DecimalReplacementSlot__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__DecimalReplacementSlot__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__5__Impl"
    // InternalEtlParser.g:7152:1: rule__DecimalReplacementSlot__Group__5__Impl : ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) ;
    public final void rule__DecimalReplacementSlot__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7156:1: ( ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? ) )
            // InternalEtlParser.g:7157:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            {
            // InternalEtlParser.g:7157:1: ( ( rule__DecimalReplacementSlot__NameAssignment_5 )? )
            // InternalEtlParser.g:7158:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }
            // InternalEtlParser.g:7159:2: ( rule__DecimalReplacementSlot__NameAssignment_5 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_SLOTNAME_STRING) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalEtlParser.g:7159:3: rule__DecimalReplacementSlot__NameAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DecimalReplacementSlot__NameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__5__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6"
    // InternalEtlParser.g:7167:1: rule__DecimalReplacementSlot__Group__6 : rule__DecimalReplacementSlot__Group__6__Impl ;
    public final void rule__DecimalReplacementSlot__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7171:1: ( rule__DecimalReplacementSlot__Group__6__Impl )
            // InternalEtlParser.g:7172:2: rule__DecimalReplacementSlot__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6"


    // $ANTLR start "rule__DecimalReplacementSlot__Group__6__Impl"
    // InternalEtlParser.g:7178:1: rule__DecimalReplacementSlot__Group__6__Impl : ( RULE_DOUBLE_SQUARE_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7182:1: ( ( RULE_DOUBLE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:7183:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:7183:1: ( RULE_DOUBLE_SQUARE_CLOSE )
            // InternalEtlParser.g:7184:2: RULE_DOUBLE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }
            match(input,RULE_DOUBLE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getDOUBLE_SQUARE_CLOSETerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group__6__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0"
    // InternalEtlParser.g:7194:1: rule__DecimalReplacementSlot__Group_4__0 : rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 ;
    public final void rule__DecimalReplacementSlot__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7198:1: ( rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1 )
            // InternalEtlParser.g:7199:2: rule__DecimalReplacementSlot__Group_4__0__Impl rule__DecimalReplacementSlot__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DecimalReplacementSlot__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__0__Impl"
    // InternalEtlParser.g:7206:1: rule__DecimalReplacementSlot__Group_4__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DecimalReplacementSlot__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7210:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:7211:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:7211:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:7212:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_OPENTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__0__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1"
    // InternalEtlParser.g:7221:1: rule__DecimalReplacementSlot__Group_4__1 : rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 ;
    public final void rule__DecimalReplacementSlot__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7225:1: ( rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2 )
            // InternalEtlParser.g:7226:2: rule__DecimalReplacementSlot__Group_4__1__Impl rule__DecimalReplacementSlot__Group_4__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__1__Impl"
    // InternalEtlParser.g:7233:1: rule__DecimalReplacementSlot__Group_4__1__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) ;
    public final void rule__DecimalReplacementSlot__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7237:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) ) )
            // InternalEtlParser.g:7238:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            {
            // InternalEtlParser.g:7238:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 ) )
            // InternalEtlParser.g:7239:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }
            // InternalEtlParser.g:7240:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_1 )
            // InternalEtlParser.g:7240:3: rule__DecimalReplacementSlot__ValuesAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__ValuesAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__1__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2"
    // InternalEtlParser.g:7248:1: rule__DecimalReplacementSlot__Group_4__2 : rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 ;
    public final void rule__DecimalReplacementSlot__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7252:1: ( rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3 )
            // InternalEtlParser.g:7253:2: rule__DecimalReplacementSlot__Group_4__2__Impl rule__DecimalReplacementSlot__Group_4__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalReplacementSlot__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__2__Impl"
    // InternalEtlParser.g:7260:1: rule__DecimalReplacementSlot__Group_4__2__Impl : ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) ;
    public final void rule__DecimalReplacementSlot__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7264:1: ( ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* ) )
            // InternalEtlParser.g:7265:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            {
            // InternalEtlParser.g:7265:1: ( ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )* )
            // InternalEtlParser.g:7266:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }
            // InternalEtlParser.g:7267:2: ( rule__DecimalReplacementSlot__ValuesAssignment_4_2 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_TO||(LA79_0>=RULE_GT && LA79_0<=RULE_HASH)) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalEtlParser.g:7267:3: rule__DecimalReplacementSlot__ValuesAssignment_4_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__DecimalReplacementSlot__ValuesAssignment_4_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__2__Impl"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3"
    // InternalEtlParser.g:7275:1: rule__DecimalReplacementSlot__Group_4__3 : rule__DecimalReplacementSlot__Group_4__3__Impl ;
    public final void rule__DecimalReplacementSlot__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7279:1: ( rule__DecimalReplacementSlot__Group_4__3__Impl )
            // InternalEtlParser.g:7280:2: rule__DecimalReplacementSlot__Group_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalReplacementSlot__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3"


    // $ANTLR start "rule__DecimalReplacementSlot__Group_4__3__Impl"
    // InternalEtlParser.g:7286:1: rule__DecimalReplacementSlot__Group_4__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DecimalReplacementSlot__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7290:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:7291:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:7291:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:7292:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getROUND_CLOSETerminalRuleCall_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__Group_4__3__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__0"
    // InternalEtlParser.g:7302:1: rule__EtlCardinality__Group__0 : rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 ;
    public final void rule__EtlCardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7306:1: ( rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1 )
            // InternalEtlParser.g:7307:2: rule__EtlCardinality__Group__0__Impl rule__EtlCardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__EtlCardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0"


    // $ANTLR start "rule__EtlCardinality__Group__0__Impl"
    // InternalEtlParser.g:7314:1: rule__EtlCardinality__Group__0__Impl : ( ( RULE_TILDE )? ) ;
    public final void rule__EtlCardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7318:1: ( ( ( RULE_TILDE )? ) )
            // InternalEtlParser.g:7319:1: ( ( RULE_TILDE )? )
            {
            // InternalEtlParser.g:7319:1: ( ( RULE_TILDE )? )
            // InternalEtlParser.g:7320:2: ( RULE_TILDE )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }
            // InternalEtlParser.g:7321:2: ( RULE_TILDE )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_TILDE) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalEtlParser.g:7321:3: RULE_TILDE
                    {
                    match(input,RULE_TILDE,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTILDETerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__0__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__1"
    // InternalEtlParser.g:7329:1: rule__EtlCardinality__Group__1 : rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 ;
    public final void rule__EtlCardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7333:1: ( rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2 )
            // InternalEtlParser.g:7334:2: rule__EtlCardinality__Group__1__Impl rule__EtlCardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__EtlCardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1"


    // $ANTLR start "rule__EtlCardinality__Group__1__Impl"
    // InternalEtlParser.g:7341:1: rule__EtlCardinality__Group__1__Impl : ( ( rule__EtlCardinality__MinAssignment_1 ) ) ;
    public final void rule__EtlCardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7345:1: ( ( ( rule__EtlCardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:7346:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:7346:1: ( ( rule__EtlCardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:7347:2: ( rule__EtlCardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:7348:2: ( rule__EtlCardinality__MinAssignment_1 )
            // InternalEtlParser.g:7348:3: rule__EtlCardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__1__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__2"
    // InternalEtlParser.g:7356:1: rule__EtlCardinality__Group__2 : rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 ;
    public final void rule__EtlCardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7360:1: ( rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3 )
            // InternalEtlParser.g:7361:2: rule__EtlCardinality__Group__2__Impl rule__EtlCardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__EtlCardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2"


    // $ANTLR start "rule__EtlCardinality__Group__2__Impl"
    // InternalEtlParser.g:7368:1: rule__EtlCardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__EtlCardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7372:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7373:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7373:1: ( RULE_TO )
            // InternalEtlParser.g:7374:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__2__Impl"


    // $ANTLR start "rule__EtlCardinality__Group__3"
    // InternalEtlParser.g:7383:1: rule__EtlCardinality__Group__3 : rule__EtlCardinality__Group__3__Impl ;
    public final void rule__EtlCardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7387:1: ( rule__EtlCardinality__Group__3__Impl )
            // InternalEtlParser.g:7388:2: rule__EtlCardinality__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3"


    // $ANTLR start "rule__EtlCardinality__Group__3__Impl"
    // InternalEtlParser.g:7394:1: rule__EtlCardinality__Group__3__Impl : ( ( rule__EtlCardinality__MaxAssignment_3 ) ) ;
    public final void rule__EtlCardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7398:1: ( ( ( rule__EtlCardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:7399:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:7399:1: ( ( rule__EtlCardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:7400:2: ( rule__EtlCardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:7401:2: ( rule__EtlCardinality__MaxAssignment_3 )
            // InternalEtlParser.g:7401:3: rule__EtlCardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EtlCardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__Group__3__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__0"
    // InternalEtlParser.g:7410:1: rule__ConceptReference__Group_1__0 : rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 ;
    public final void rule__ConceptReference__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7414:1: ( rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1 )
            // InternalEtlParser.g:7415:2: rule__ConceptReference__Group_1__0__Impl rule__ConceptReference__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__ConceptReference__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0"


    // $ANTLR start "rule__ConceptReference__Group_1__0__Impl"
    // InternalEtlParser.g:7422:1: rule__ConceptReference__Group_1__0__Impl : ( ( rule__ConceptReference__IdAssignment_1_0 ) ) ;
    public final void rule__ConceptReference__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7426:1: ( ( ( rule__ConceptReference__IdAssignment_1_0 ) ) )
            // InternalEtlParser.g:7427:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            {
            // InternalEtlParser.g:7427:1: ( ( rule__ConceptReference__IdAssignment_1_0 ) )
            // InternalEtlParser.g:7428:2: ( rule__ConceptReference__IdAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }
            // InternalEtlParser.g:7429:2: ( rule__ConceptReference__IdAssignment_1_0 )
            // InternalEtlParser.g:7429:3: rule__ConceptReference__IdAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__IdAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__0__Impl"


    // $ANTLR start "rule__ConceptReference__Group_1__1"
    // InternalEtlParser.g:7437:1: rule__ConceptReference__Group_1__1 : rule__ConceptReference__Group_1__1__Impl ;
    public final void rule__ConceptReference__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7441:1: ( rule__ConceptReference__Group_1__1__Impl )
            // InternalEtlParser.g:7442:2: rule__ConceptReference__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConceptReference__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1"


    // $ANTLR start "rule__ConceptReference__Group_1__1__Impl"
    // InternalEtlParser.g:7448:1: rule__ConceptReference__Group_1__1__Impl : ( ( rule__ConceptReference__TermAssignment_1_1 )? ) ;
    public final void rule__ConceptReference__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7452:1: ( ( ( rule__ConceptReference__TermAssignment_1_1 )? ) )
            // InternalEtlParser.g:7453:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            {
            // InternalEtlParser.g:7453:1: ( ( rule__ConceptReference__TermAssignment_1_1 )? )
            // InternalEtlParser.g:7454:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }
            // InternalEtlParser.g:7455:2: ( rule__ConceptReference__TermAssignment_1_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalEtlParser.g:7455:3: rule__ConceptReference__TermAssignment_1_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConceptReference__TermAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__Group_1__1__Impl"


    // $ANTLR start "rule__IntegerValue__Group__0"
    // InternalEtlParser.g:7464:1: rule__IntegerValue__Group__0 : rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 ;
    public final void rule__IntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7468:1: ( rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1 )
            // InternalEtlParser.g:7469:2: rule__IntegerValue__Group__0__Impl rule__IntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0"


    // $ANTLR start "rule__IntegerValue__Group__0__Impl"
    // InternalEtlParser.g:7476:1: rule__IntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7480:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7481:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7481:1: ( RULE_HASH )
            // InternalEtlParser.g:7482:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__0__Impl"


    // $ANTLR start "rule__IntegerValue__Group__1"
    // InternalEtlParser.g:7491:1: rule__IntegerValue__Group__1 : rule__IntegerValue__Group__1__Impl ;
    public final void rule__IntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7495:1: ( rule__IntegerValue__Group__1__Impl )
            // InternalEtlParser.g:7496:2: rule__IntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1"


    // $ANTLR start "rule__IntegerValue__Group__1__Impl"
    // InternalEtlParser.g:7502:1: rule__IntegerValue__Group__1__Impl : ( ( rule__IntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__IntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7506:1: ( ( ( rule__IntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7507:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7507:1: ( ( rule__IntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7508:2: ( rule__IntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7509:2: ( rule__IntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:7509:3: rule__IntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__Group__1__Impl"


    // $ANTLR start "rule__DecimalValue__Group__0"
    // InternalEtlParser.g:7518:1: rule__DecimalValue__Group__0 : rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 ;
    public final void rule__DecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7522:1: ( rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1 )
            // InternalEtlParser.g:7523:2: rule__DecimalValue__Group__0__Impl rule__DecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0"


    // $ANTLR start "rule__DecimalValue__Group__0__Impl"
    // InternalEtlParser.g:7530:1: rule__DecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7534:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7535:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7535:1: ( RULE_HASH )
            // InternalEtlParser.g:7536:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__0__Impl"


    // $ANTLR start "rule__DecimalValue__Group__1"
    // InternalEtlParser.g:7545:1: rule__DecimalValue__Group__1 : rule__DecimalValue__Group__1__Impl ;
    public final void rule__DecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7549:1: ( rule__DecimalValue__Group__1__Impl )
            // InternalEtlParser.g:7550:2: rule__DecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1"


    // $ANTLR start "rule__DecimalValue__Group__1__Impl"
    // InternalEtlParser.g:7556:1: rule__DecimalValue__Group__1__Impl : ( ( rule__DecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__DecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7560:1: ( ( ( rule__DecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7561:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7561:1: ( ( rule__DecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7562:2: ( rule__DecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7563:2: ( rule__DecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:7563:3: rule__DecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__0"
    // InternalEtlParser.g:7572:1: rule__SlotIntegerValue__Group__0 : rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 ;
    public final void rule__SlotIntegerValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7576:1: ( rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1 )
            // InternalEtlParser.g:7577:2: rule__SlotIntegerValue__Group__0__Impl rule__SlotIntegerValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0"


    // $ANTLR start "rule__SlotIntegerValue__Group__0__Impl"
    // InternalEtlParser.g:7584:1: rule__SlotIntegerValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7588:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7589:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7589:1: ( RULE_HASH )
            // InternalEtlParser.g:7590:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerValue__Group__1"
    // InternalEtlParser.g:7599:1: rule__SlotIntegerValue__Group__1 : rule__SlotIntegerValue__Group__1__Impl ;
    public final void rule__SlotIntegerValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7603:1: ( rule__SlotIntegerValue__Group__1__Impl )
            // InternalEtlParser.g:7604:2: rule__SlotIntegerValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1"


    // $ANTLR start "rule__SlotIntegerValue__Group__1__Impl"
    // InternalEtlParser.g:7610:1: rule__SlotIntegerValue__Group__1__Impl : ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotIntegerValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7614:1: ( ( ( rule__SlotIntegerValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7615:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7615:1: ( ( rule__SlotIntegerValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7616:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7617:2: ( rule__SlotIntegerValue__ValueAssignment_1 )
            // InternalEtlParser.g:7617:3: rule__SlotIntegerValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0"
    // InternalEtlParser.g:7626:1: rule__SlotIntegerRange__Group_0__0 : rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 ;
    public final void rule__SlotIntegerRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7630:1: ( rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1 )
            // InternalEtlParser.g:7631:2: rule__SlotIntegerRange__Group_0__0__Impl rule__SlotIntegerRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotIntegerRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__0__Impl"
    // InternalEtlParser.g:7638:1: rule__SlotIntegerRange__Group_0__0__Impl : ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotIntegerRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7642:1: ( ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:7643:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:7643:1: ( ( rule__SlotIntegerRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:7644:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:7645:2: ( rule__SlotIntegerRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:7645:3: rule__SlotIntegerRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1"
    // InternalEtlParser.g:7653:1: rule__SlotIntegerRange__Group_0__1 : rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 ;
    public final void rule__SlotIntegerRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7657:1: ( rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2 )
            // InternalEtlParser.g:7658:2: rule__SlotIntegerRange__Group_0__1__Impl rule__SlotIntegerRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__1__Impl"
    // InternalEtlParser.g:7665:1: rule__SlotIntegerRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7669:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7670:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7670:1: ( RULE_TO )
            // InternalEtlParser.g:7671:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2"
    // InternalEtlParser.g:7680:1: rule__SlotIntegerRange__Group_0__2 : rule__SlotIntegerRange__Group_0__2__Impl ;
    public final void rule__SlotIntegerRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7684:1: ( rule__SlotIntegerRange__Group_0__2__Impl )
            // InternalEtlParser.g:7685:2: rule__SlotIntegerRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2"


    // $ANTLR start "rule__SlotIntegerRange__Group_0__2__Impl"
    // InternalEtlParser.g:7691:1: rule__SlotIntegerRange__Group_0__2__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotIntegerRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7695:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:7696:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:7696:1: ( ( rule__SlotIntegerRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:7697:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:7698:2: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_LT) ) {
                alt82=1;
            }
            else if ( (LA82_0==RULE_HASH) ) {
                int LA82_2 = input.LA(2);

                if ( (LA82_2==RULE_DIGIT_NONZERO) ) {
                    int LA82_4 = input.LA(3);

                    if ( (synpred160_InternalEtlParser()) ) {
                        alt82=1;
                    }
                }
                else if ( (LA82_2==RULE_DIGIT_ZERO) ) {
                    int LA82_5 = input.LA(3);

                    if ( (synpred160_InternalEtlParser()) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalEtlParser.g:7698:3: rule__SlotIntegerRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0"
    // InternalEtlParser.g:7707:1: rule__SlotIntegerRange__Group_1__0 : rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 ;
    public final void rule__SlotIntegerRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7711:1: ( rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1 )
            // InternalEtlParser.g:7712:2: rule__SlotIntegerRange__Group_1__0__Impl rule__SlotIntegerRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__0__Impl"
    // InternalEtlParser.g:7719:1: rule__SlotIntegerRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotIntegerRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7723:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:7724:1: ( RULE_TO )
            {
            // InternalEtlParser.g:7724:1: ( RULE_TO )
            // InternalEtlParser.g:7725:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1"
    // InternalEtlParser.g:7734:1: rule__SlotIntegerRange__Group_1__1 : rule__SlotIntegerRange__Group_1__1__Impl ;
    public final void rule__SlotIntegerRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7738:1: ( rule__SlotIntegerRange__Group_1__1__Impl )
            // InternalEtlParser.g:7739:2: rule__SlotIntegerRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1"


    // $ANTLR start "rule__SlotIntegerRange__Group_1__1__Impl"
    // InternalEtlParser.g:7745:1: rule__SlotIntegerRange__Group_1__1__Impl : ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotIntegerRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7749:1: ( ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:7750:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:7750:1: ( ( rule__SlotIntegerRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:7751:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:7752:2: ( rule__SlotIntegerRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:7752:3: rule__SlotIntegerRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0"
    // InternalEtlParser.g:7761:1: rule__SlotIntegerMinimumValue__Group__0 : rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 ;
    public final void rule__SlotIntegerMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7765:1: ( rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1 )
            // InternalEtlParser.g:7766:2: rule__SlotIntegerMinimumValue__Group__0__Impl rule__SlotIntegerMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotIntegerMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:7773:1: rule__SlotIntegerMinimumValue__Group__0__Impl : ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7777:1: ( ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7778:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7778:1: ( ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7779:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7780:2: ( rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_GT) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalEtlParser.g:7780:3: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1"
    // InternalEtlParser.g:7788:1: rule__SlotIntegerMinimumValue__Group__1 : rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 ;
    public final void rule__SlotIntegerMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7792:1: ( rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2 )
            // InternalEtlParser.g:7793:2: rule__SlotIntegerMinimumValue__Group__1__Impl rule__SlotIntegerMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:7800:1: rule__SlotIntegerMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7804:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7805:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7805:1: ( RULE_HASH )
            // InternalEtlParser.g:7806:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2"
    // InternalEtlParser.g:7815:1: rule__SlotIntegerMinimumValue__Group__2 : rule__SlotIntegerMinimumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7819:1: ( rule__SlotIntegerMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:7820:2: rule__SlotIntegerMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:7826:1: rule__SlotIntegerMinimumValue__Group__2__Impl : ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7830:1: ( ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7831:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7831:1: ( ( rule__SlotIntegerMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7832:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7833:2: ( rule__SlotIntegerMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7833:3: rule__SlotIntegerMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0"
    // InternalEtlParser.g:7842:1: rule__SlotIntegerMaximumValue__Group__0 : rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 ;
    public final void rule__SlotIntegerMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7846:1: ( rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1 )
            // InternalEtlParser.g:7847:2: rule__SlotIntegerMaximumValue__Group__0__Impl rule__SlotIntegerMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotIntegerMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:7854:1: rule__SlotIntegerMaximumValue__Group__0__Impl : ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotIntegerMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7858:1: ( ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:7859:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:7859:1: ( ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:7860:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:7861:2: ( rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_LT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalEtlParser.g:7861:3: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotIntegerMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1"
    // InternalEtlParser.g:7869:1: rule__SlotIntegerMaximumValue__Group__1 : rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 ;
    public final void rule__SlotIntegerMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7873:1: ( rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2 )
            // InternalEtlParser.g:7874:2: rule__SlotIntegerMaximumValue__Group__1__Impl rule__SlotIntegerMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SlotIntegerMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:7881:1: rule__SlotIntegerMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotIntegerMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7885:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7886:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7886:1: ( RULE_HASH )
            // InternalEtlParser.g:7887:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2"
    // InternalEtlParser.g:7896:1: rule__SlotIntegerMaximumValue__Group__2 : rule__SlotIntegerMaximumValue__Group__2__Impl ;
    public final void rule__SlotIntegerMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7900:1: ( rule__SlotIntegerMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:7901:2: rule__SlotIntegerMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:7907:1: rule__SlotIntegerMaximumValue__Group__2__Impl : ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotIntegerMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7911:1: ( ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:7912:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:7912:1: ( ( rule__SlotIntegerMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:7913:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:7914:2: ( rule__SlotIntegerMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:7914:3: rule__SlotIntegerMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotIntegerMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__0"
    // InternalEtlParser.g:7923:1: rule__SlotDecimalValue__Group__0 : rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 ;
    public final void rule__SlotDecimalValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7927:1: ( rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1 )
            // InternalEtlParser.g:7928:2: rule__SlotDecimalValue__Group__0__Impl rule__SlotDecimalValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0"


    // $ANTLR start "rule__SlotDecimalValue__Group__0__Impl"
    // InternalEtlParser.g:7935:1: rule__SlotDecimalValue__Group__0__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7939:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:7940:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:7940:1: ( RULE_HASH )
            // InternalEtlParser.g:7941:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getHASHTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalValue__Group__1"
    // InternalEtlParser.g:7950:1: rule__SlotDecimalValue__Group__1 : rule__SlotDecimalValue__Group__1__Impl ;
    public final void rule__SlotDecimalValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7954:1: ( rule__SlotDecimalValue__Group__1__Impl )
            // InternalEtlParser.g:7955:2: rule__SlotDecimalValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1"


    // $ANTLR start "rule__SlotDecimalValue__Group__1__Impl"
    // InternalEtlParser.g:7961:1: rule__SlotDecimalValue__Group__1__Impl : ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) ;
    public final void rule__SlotDecimalValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7965:1: ( ( ( rule__SlotDecimalValue__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:7966:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:7966:1: ( ( rule__SlotDecimalValue__ValueAssignment_1 ) )
            // InternalEtlParser.g:7967:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:7968:2: ( rule__SlotDecimalValue__ValueAssignment_1 )
            // InternalEtlParser.g:7968:3: rule__SlotDecimalValue__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalValue__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0"
    // InternalEtlParser.g:7977:1: rule__SlotDecimalRange__Group_0__0 : rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 ;
    public final void rule__SlotDecimalRange__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7981:1: ( rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1 )
            // InternalEtlParser.g:7982:2: rule__SlotDecimalRange__Group_0__0__Impl rule__SlotDecimalRange__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__SlotDecimalRange__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__0__Impl"
    // InternalEtlParser.g:7989:1: rule__SlotDecimalRange__Group_0__0__Impl : ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) ;
    public final void rule__SlotDecimalRange__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:7993:1: ( ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) ) )
            // InternalEtlParser.g:7994:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            {
            // InternalEtlParser.g:7994:1: ( ( rule__SlotDecimalRange__MinimumAssignment_0_0 ) )
            // InternalEtlParser.g:7995:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }
            // InternalEtlParser.g:7996:2: ( rule__SlotDecimalRange__MinimumAssignment_0_0 )
            // InternalEtlParser.g:7996:3: rule__SlotDecimalRange__MinimumAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MinimumAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1"
    // InternalEtlParser.g:8004:1: rule__SlotDecimalRange__Group_0__1 : rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 ;
    public final void rule__SlotDecimalRange__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8008:1: ( rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2 )
            // InternalEtlParser.g:8009:2: rule__SlotDecimalRange__Group_0__1__Impl rule__SlotDecimalRange__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__1__Impl"
    // InternalEtlParser.g:8016:1: rule__SlotDecimalRange__Group_0__1__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8020:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8021:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8021:1: ( RULE_TO )
            // InternalEtlParser.g:8022:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__1__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2"
    // InternalEtlParser.g:8031:1: rule__SlotDecimalRange__Group_0__2 : rule__SlotDecimalRange__Group_0__2__Impl ;
    public final void rule__SlotDecimalRange__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8035:1: ( rule__SlotDecimalRange__Group_0__2__Impl )
            // InternalEtlParser.g:8036:2: rule__SlotDecimalRange__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2"


    // $ANTLR start "rule__SlotDecimalRange__Group_0__2__Impl"
    // InternalEtlParser.g:8042:1: rule__SlotDecimalRange__Group_0__2__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) ;
    public final void rule__SlotDecimalRange__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8046:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? ) )
            // InternalEtlParser.g:8047:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            {
            // InternalEtlParser.g:8047:1: ( ( rule__SlotDecimalRange__MaximumAssignment_0_2 )? )
            // InternalEtlParser.g:8048:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }
            // InternalEtlParser.g:8049:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalEtlParser.g:8049:3: rule__SlotDecimalRange__MaximumAssignment_0_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalRange__MaximumAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_0__2__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0"
    // InternalEtlParser.g:8058:1: rule__SlotDecimalRange__Group_1__0 : rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 ;
    public final void rule__SlotDecimalRange__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8062:1: ( rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1 )
            // InternalEtlParser.g:8063:2: rule__SlotDecimalRange__Group_1__0__Impl rule__SlotDecimalRange__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalRange__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__0__Impl"
    // InternalEtlParser.g:8070:1: rule__SlotDecimalRange__Group_1__0__Impl : ( RULE_TO ) ;
    public final void rule__SlotDecimalRange__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8074:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:8075:1: ( RULE_TO )
            {
            // InternalEtlParser.g:8075:1: ( RULE_TO )
            // InternalEtlParser.g:8076:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getTOTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__0__Impl"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1"
    // InternalEtlParser.g:8085:1: rule__SlotDecimalRange__Group_1__1 : rule__SlotDecimalRange__Group_1__1__Impl ;
    public final void rule__SlotDecimalRange__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8089:1: ( rule__SlotDecimalRange__Group_1__1__Impl )
            // InternalEtlParser.g:8090:2: rule__SlotDecimalRange__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1"


    // $ANTLR start "rule__SlotDecimalRange__Group_1__1__Impl"
    // InternalEtlParser.g:8096:1: rule__SlotDecimalRange__Group_1__1__Impl : ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) ;
    public final void rule__SlotDecimalRange__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8100:1: ( ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) ) )
            // InternalEtlParser.g:8101:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            {
            // InternalEtlParser.g:8101:1: ( ( rule__SlotDecimalRange__MaximumAssignment_1_1 ) )
            // InternalEtlParser.g:8102:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }
            // InternalEtlParser.g:8103:2: ( rule__SlotDecimalRange__MaximumAssignment_1_1 )
            // InternalEtlParser.g:8103:3: rule__SlotDecimalRange__MaximumAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalRange__MaximumAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__Group_1__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0"
    // InternalEtlParser.g:8112:1: rule__SlotDecimalMinimumValue__Group__0 : rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 ;
    public final void rule__SlotDecimalMinimumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8116:1: ( rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1 )
            // InternalEtlParser.g:8117:2: rule__SlotDecimalMinimumValue__Group__0__Impl rule__SlotDecimalMinimumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__SlotDecimalMinimumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__0__Impl"
    // InternalEtlParser.g:8124:1: rule__SlotDecimalMinimumValue__Group__0__Impl : ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMinimumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8128:1: ( ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8129:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8129:1: ( ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8130:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8131:2: ( rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_GT) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalEtlParser.g:8131:3: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMinimumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1"
    // InternalEtlParser.g:8139:1: rule__SlotDecimalMinimumValue__Group__1 : rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 ;
    public final void rule__SlotDecimalMinimumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8143:1: ( rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2 )
            // InternalEtlParser.g:8144:2: rule__SlotDecimalMinimumValue__Group__1__Impl rule__SlotDecimalMinimumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMinimumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__1__Impl"
    // InternalEtlParser.g:8151:1: rule__SlotDecimalMinimumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMinimumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8155:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8156:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8156:1: ( RULE_HASH )
            // InternalEtlParser.g:8157:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2"
    // InternalEtlParser.g:8166:1: rule__SlotDecimalMinimumValue__Group__2 : rule__SlotDecimalMinimumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMinimumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8170:1: ( rule__SlotDecimalMinimumValue__Group__2__Impl )
            // InternalEtlParser.g:8171:2: rule__SlotDecimalMinimumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMinimumValue__Group__2__Impl"
    // InternalEtlParser.g:8177:1: rule__SlotDecimalMinimumValue__Group__2__Impl : ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMinimumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8181:1: ( ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8182:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8182:1: ( ( rule__SlotDecimalMinimumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8183:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8184:2: ( rule__SlotDecimalMinimumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8184:3: rule__SlotDecimalMinimumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMinimumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__Group__2__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0"
    // InternalEtlParser.g:8193:1: rule__SlotDecimalMaximumValue__Group__0 : rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 ;
    public final void rule__SlotDecimalMaximumValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8197:1: ( rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1 )
            // InternalEtlParser.g:8198:2: rule__SlotDecimalMaximumValue__Group__0__Impl rule__SlotDecimalMaximumValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SlotDecimalMaximumValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__0__Impl"
    // InternalEtlParser.g:8205:1: rule__SlotDecimalMaximumValue__Group__0__Impl : ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) ;
    public final void rule__SlotDecimalMaximumValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8209:1: ( ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? ) )
            // InternalEtlParser.g:8210:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            {
            // InternalEtlParser.g:8210:1: ( ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )? )
            // InternalEtlParser.g:8211:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }
            // InternalEtlParser.g:8212:2: ( rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_LT) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalEtlParser.g:8212:3: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SlotDecimalMaximumValue__ExclusiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__0__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1"
    // InternalEtlParser.g:8220:1: rule__SlotDecimalMaximumValue__Group__1 : rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 ;
    public final void rule__SlotDecimalMaximumValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8224:1: ( rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2 )
            // InternalEtlParser.g:8225:2: rule__SlotDecimalMaximumValue__Group__1__Impl rule__SlotDecimalMaximumValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SlotDecimalMaximumValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__1__Impl"
    // InternalEtlParser.g:8232:1: rule__SlotDecimalMaximumValue__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__SlotDecimalMaximumValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8236:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:8237:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:8237:1: ( RULE_HASH )
            // InternalEtlParser.g:8238:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__1__Impl"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2"
    // InternalEtlParser.g:8247:1: rule__SlotDecimalMaximumValue__Group__2 : rule__SlotDecimalMaximumValue__Group__2__Impl ;
    public final void rule__SlotDecimalMaximumValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8251:1: ( rule__SlotDecimalMaximumValue__Group__2__Impl )
            // InternalEtlParser.g:8252:2: rule__SlotDecimalMaximumValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__Group__2__Impl"
    // InternalEtlParser.g:8258:1: rule__SlotDecimalMaximumValue__Group__2__Impl : ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) ;
    public final void rule__SlotDecimalMaximumValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8262:1: ( ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:8263:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:8263:1: ( ( rule__SlotDecimalMaximumValue__ValueAssignment_2 ) )
            // InternalEtlParser.g:8264:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:8265:2: ( rule__SlotDecimalMaximumValue__ValueAssignment_2 )
            // InternalEtlParser.g:8265:3: rule__SlotDecimalMaximumValue__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SlotDecimalMaximumValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__Group__2__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEtlParser.g:8274:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8278:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8279:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8286:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8290:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:8291:1: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:8291:1: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:8292:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEtlParser.g:8301:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8305:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8306:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8312:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8316:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8317:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8317:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8318:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8319:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA88_5 = input.LA(2);

                    if ( (synpred166_InternalEtlParser()) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalEtlParser.g:8319:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8328:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8332:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8333:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8340:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8344:1: ( ( () ) )
            // InternalEtlParser.g:8345:1: ( () )
            {
            // InternalEtlParser.g:8345:1: ( () )
            // InternalEtlParser.g:8346:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8347:2: ()
            // InternalEtlParser.g:8347:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8355:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8359:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8360:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8367:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8371:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:8372:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:8372:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:8373:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8382:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8386:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8387:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8393:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8397:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8398:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8398:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8399:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8400:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8400:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEtlParser.g:8409:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8413:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8414:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8421:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8425:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:8426:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:8426:1: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:8427:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEtlParser.g:8436:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8440:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8441:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8447:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8451:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8452:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8452:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8453:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8454:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA89_4 = input.LA(2);

                    if ( (synpred167_InternalEtlParser()) ) {
                        alt89=1;
                    }


                }
                else if ( (LA89_0==RULE_COMMA) ) {
                    int LA89_5 = input.LA(2);

                    if ( (synpred167_InternalEtlParser()) ) {
                        alt89=1;
                    }


                }


                switch (alt89) {
            	case 1 :
            	    // InternalEtlParser.g:8454:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8463:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8467:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8468:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8475:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8479:1: ( ( () ) )
            // InternalEtlParser.g:8480:1: ( () )
            {
            // InternalEtlParser.g:8480:1: ( () )
            // InternalEtlParser.g:8481:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8482:2: ()
            // InternalEtlParser.g:8482:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8490:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8494:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8495:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8502:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8506:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:8507:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:8507:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEtlParser.g:8508:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:8509:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEtlParser.g:8509:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8517:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8521:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8522:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8528:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8532:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8533:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8533:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8534:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8535:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8535:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEtlParser.g:8544:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8548:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8549:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8556:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8560:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:8561:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:8561:1: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:8562:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEtlParser.g:8571:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8575:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8576:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8582:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8586:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:8587:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:8587:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:8588:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8589:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_EXCLUSION_KEYWORD) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalEtlParser.g:8589:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8598:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8602:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8603:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8610:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8614:1: ( ( () ) )
            // InternalEtlParser.g:8615:1: ( () )
            {
            // InternalEtlParser.g:8615:1: ( () )
            // InternalEtlParser.g:8616:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEtlParser.g:8617:2: ()
            // InternalEtlParser.g:8617:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8625:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8629:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8630:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8637:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION_KEYWORD ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8641:1: ( ( RULE_EXCLUSION_KEYWORD ) )
            // InternalEtlParser.g:8642:1: ( RULE_EXCLUSION_KEYWORD )
            {
            // InternalEtlParser.g:8642:1: ( RULE_EXCLUSION_KEYWORD )
            // InternalEtlParser.g:8643:2: RULE_EXCLUSION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8652:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8656:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8657:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8663:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8667:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:8668:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8668:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEtlParser.g:8669:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:8670:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEtlParser.g:8670:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEtlParser.g:8679:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8683:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8684:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8691:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8695:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEtlParser.g:8696:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEtlParser.g:8696:1: ( ruleDottedExpressionConstraint )
            // InternalEtlParser.g:8697:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEtlParser.g:8706:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8710:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8711:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8717:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8721:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEtlParser.g:8722:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEtlParser.g:8722:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEtlParser.g:8723:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8724:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_COLON) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalEtlParser.g:8724:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8733:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8737:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8738:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8745:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8749:1: ( ( () ) )
            // InternalEtlParser.g:8750:1: ( () )
            {
            // InternalEtlParser.g:8750:1: ( () )
            // InternalEtlParser.g:8751:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:8752:2: ()
            // InternalEtlParser.g:8752:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8760:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8764:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8765:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8772:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8776:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:8777:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:8777:1: ( RULE_COLON )
            // InternalEtlParser.g:8778:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8787:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8791:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8792:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8798:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8802:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEtlParser.g:8803:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8803:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEtlParser.g:8804:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEtlParser.g:8805:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEtlParser.g:8805:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEtlParser.g:8814:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8818:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8819:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8826:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8830:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:8831:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:8831:1: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:8832:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEtlParser.g:8841:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8845:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8846:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8852:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8856:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8857:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8857:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8858:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8859:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==RULE_DOT) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalEtlParser.g:8859:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:8868:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8872:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:8873:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:8880:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8884:1: ( ( () ) )
            // InternalEtlParser.g:8885:1: ( () )
            {
            // InternalEtlParser.g:8885:1: ( () )
            // InternalEtlParser.g:8886:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:8887:2: ()
            // InternalEtlParser.g:8887:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:8895:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8899:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEtlParser.g:8900:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:8907:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8911:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:8912:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:8912:1: ( RULE_DOT )
            // InternalEtlParser.g:8913:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEtlParser.g:8922:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8926:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEtlParser.g:8927:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEtlParser.g:8933:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8937:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEtlParser.g:8938:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEtlParser.g:8938:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEtlParser.g:8939:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEtlParser.g:8940:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEtlParser.g:8940:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEtlParser.g:8949:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8953:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEtlParser.g:8954:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEtlParser.g:8961:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8965:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEtlParser.g:8966:1: ( ruleSubExpressionConstraint )
            {
            // InternalEtlParser.g:8966:1: ( ruleSubExpressionConstraint )
            // InternalEtlParser.g:8967:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEtlParser.g:8976:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8980:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEtlParser.g:8981:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEtlParser.g:8987:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:8991:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEtlParser.g:8992:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEtlParser.g:8992:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEtlParser.g:8993:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:8994:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalEtlParser.g:8994:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEtlParser.g:9003:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9007:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEtlParser.g:9008:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEtlParser.g:9015:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9019:1: ( ( () ) )
            // InternalEtlParser.g:9020:1: ( () )
            {
            // InternalEtlParser.g:9020:1: ( () )
            // InternalEtlParser.g:9021:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEtlParser.g:9022:2: ()
            // InternalEtlParser.g:9022:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEtlParser.g:9030:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9034:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEtlParser.g:9035:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEtlParser.g:9041:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9045:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEtlParser.g:9046:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEtlParser.g:9046:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEtlParser.g:9047:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEtlParser.g:9048:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEtlParser.g:9048:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEtlParser.g:9057:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9061:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEtlParser.g:9062:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEtlParser.g:9069:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9073:1: ( ( RULE_LT_EM ) )
            // InternalEtlParser.g:9074:1: ( RULE_LT_EM )
            {
            // InternalEtlParser.g:9074:1: ( RULE_LT_EM )
            // InternalEtlParser.g:9075:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEtlParser.g:9084:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9088:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEtlParser.g:9089:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEtlParser.g:9095:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9099:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9100:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9100:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9101:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9102:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9102:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEtlParser.g:9111:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9115:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEtlParser.g:9116:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9123:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9127:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEtlParser.g:9128:1: ( RULE_DBL_LT_EM )
            {
            // InternalEtlParser.g:9128:1: ( RULE_DBL_LT_EM )
            // InternalEtlParser.g:9129:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEtlParser.g:9138:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9142:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9143:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9149:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9153:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9154:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9154:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9155:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9156:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9156:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEtlParser.g:9165:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9169:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEtlParser.g:9170:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEtlParser.g:9177:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9181:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:9182:1: ( RULE_LT )
            {
            // InternalEtlParser.g:9182:1: ( RULE_LT )
            // InternalEtlParser.g:9183:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEtlParser.g:9192:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9196:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEtlParser.g:9197:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEtlParser.g:9203:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9207:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9208:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9208:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9209:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9210:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9210:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEtlParser.g:9219:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9223:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEtlParser.g:9224:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9231:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9235:1: ( ( RULE_DBL_LT ) )
            // InternalEtlParser.g:9236:1: ( RULE_DBL_LT )
            {
            // InternalEtlParser.g:9236:1: ( RULE_DBL_LT )
            // InternalEtlParser.g:9237:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEtlParser.g:9246:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9250:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9251:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9257:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9261:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9262:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9262:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9263:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9264:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9264:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEtlParser.g:9273:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9277:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEtlParser.g:9278:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEtlParser.g:9285:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9289:1: ( ( RULE_GT_EM ) )
            // InternalEtlParser.g:9290:1: ( RULE_GT_EM )
            {
            // InternalEtlParser.g:9290:1: ( RULE_GT_EM )
            // InternalEtlParser.g:9291:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEtlParser.g:9300:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9304:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEtlParser.g:9305:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEtlParser.g:9311:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9315:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9316:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9316:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9317:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9318:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9318:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEtlParser.g:9327:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9331:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEtlParser.g:9332:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9339:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9343:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEtlParser.g:9344:1: ( RULE_DBL_GT_EM )
            {
            // InternalEtlParser.g:9344:1: ( RULE_DBL_GT_EM )
            // InternalEtlParser.g:9345:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEtlParser.g:9354:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9358:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9359:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9365:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9369:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9370:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9370:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9371:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9372:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9372:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEtlParser.g:9381:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9385:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEtlParser.g:9386:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEtlParser.g:9393:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9397:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:9398:1: ( RULE_GT )
            {
            // InternalEtlParser.g:9398:1: ( RULE_GT )
            // InternalEtlParser.g:9399:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEtlParser.g:9408:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9412:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEtlParser.g:9413:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEtlParser.g:9419:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9423:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9424:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9424:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9425:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9426:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9426:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEtlParser.g:9435:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9439:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEtlParser.g:9440:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEtlParser.g:9447:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9451:1: ( ( RULE_DBL_GT ) )
            // InternalEtlParser.g:9452:1: ( RULE_DBL_GT )
            {
            // InternalEtlParser.g:9452:1: ( RULE_DBL_GT )
            // InternalEtlParser.g:9453:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEtlParser.g:9462:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9466:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEtlParser.g:9467:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEtlParser.g:9473:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9477:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9478:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9478:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9479:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9480:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9480:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEtlParser.g:9489:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9493:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEtlParser.g:9494:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEtlParser.g:9501:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9505:1: ( ( RULE_CARET ) )
            // InternalEtlParser.g:9506:1: ( RULE_CARET )
            {
            // InternalEtlParser.g:9506:1: ( RULE_CARET )
            // InternalEtlParser.g:9507:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEtlParser.g:9516:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9520:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEtlParser.g:9521:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEtlParser.g:9527:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9531:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEtlParser.g:9532:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEtlParser.g:9532:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEtlParser.g:9533:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEtlParser.g:9534:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEtlParser.g:9534:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEtlParser.g:9543:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9547:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEtlParser.g:9548:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEtlParser.g:9555:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9559:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEtlParser.g:9560:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEtlParser.g:9560:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEtlParser.g:9561:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEtlParser.g:9562:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEtlParser.g:9562:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEtlParser.g:9570:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9574:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEtlParser.g:9575:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEtlParser.g:9581:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9585:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEtlParser.g:9586:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEtlParser.g:9586:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEtlParser.g:9587:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEtlParser.g:9588:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalEtlParser.g:9588:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEtlParser.g:9597:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9601:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEtlParser.g:9602:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEtlParser.g:9609:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9613:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:9614:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:9614:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:9615:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEtlParser.g:9624:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9628:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEtlParser.g:9629:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEtlParser.g:9636:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9640:1: ( ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) )
            // InternalEtlParser.g:9641:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            {
            // InternalEtlParser.g:9641:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            // InternalEtlParser.g:9642:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            {
            // InternalEtlParser.g:9642:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEtlParser.g:9643:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:9644:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEtlParser.g:9644:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }

            // InternalEtlParser.g:9647:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            // InternalEtlParser.g:9648:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEtlParser.g:9649:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( ((LA95_0>=RULE_DIGIT_ZERO && LA95_0<=RULE_DIGIT_NONZERO)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalEtlParser.g:9649:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEtlParser.g:9658:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9662:1: ( rule__EclConceptReferenceSet__Group__2__Impl )
            // InternalEtlParser.g:9663:2: rule__EclConceptReferenceSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEtlParser.g:9669:1: rule__EclConceptReferenceSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9673:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:9674:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:9674:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:9675:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEtlParser.g:9685:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9689:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEtlParser.g:9690:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEtlParser.g:9697:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9701:1: ( ( RULE_WILDCARD ) )
            // InternalEtlParser.g:9702:1: ( RULE_WILDCARD )
            {
            // InternalEtlParser.g:9702:1: ( RULE_WILDCARD )
            // InternalEtlParser.g:9703:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEtlParser.g:9712:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9716:1: ( rule__Any__Group__1__Impl )
            // InternalEtlParser.g:9717:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEtlParser.g:9723:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9727:1: ( ( () ) )
            // InternalEtlParser.g:9728:1: ( () )
            {
            // InternalEtlParser.g:9728:1: ( () )
            // InternalEtlParser.g:9729:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEtlParser.g:9730:2: ()
            // InternalEtlParser.g:9730:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEtlParser.g:9739:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9743:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEtlParser.g:9744:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEtlParser.g:9751:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9755:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:9756:1: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:9756:1: ( ruleAndRefinement )
            // InternalEtlParser.g:9757:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEtlParser.g:9766:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9770:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEtlParser.g:9771:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEtlParser.g:9777:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9781:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:9782:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:9782:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEtlParser.g:9783:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9784:2: ( rule__OrRefinement__Group_1__0 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA96_5 = input.LA(2);

                    if ( (synpred174_InternalEtlParser()) ) {
                        alt96=1;
                    }


                }


                switch (alt96) {
            	case 1 :
            	    // InternalEtlParser.g:9784:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEtlParser.g:9793:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9797:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:9798:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:9804:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9808:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:9809:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:9809:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:9810:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:9811:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEtlParser.g:9811:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEtlParser.g:9820:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9824:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEtlParser.g:9825:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:9832:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9836:1: ( ( () ) )
            // InternalEtlParser.g:9837:1: ( () )
            {
            // InternalEtlParser.g:9837:1: ( () )
            // InternalEtlParser.g:9838:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:9839:2: ()
            // InternalEtlParser.g:9839:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEtlParser.g:9847:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9851:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEtlParser.g:9852:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:9859:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9863:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:9864:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:9864:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:9865:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEtlParser.g:9874:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9878:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:9879:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:9885:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9889:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:9890:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:9890:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:9891:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:9892:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:9892:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEtlParser.g:9901:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9905:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEtlParser.g:9906:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEtlParser.g:9913:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9917:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:9918:1: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:9918:1: ( ruleSubRefinement )
            // InternalEtlParser.g:9919:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEtlParser.g:9928:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9932:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEtlParser.g:9933:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEtlParser.g:9939:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9943:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEtlParser.g:9944:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEtlParser.g:9944:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEtlParser.g:9945:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:9946:2: ( rule__AndRefinement__Group_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA97_4 = input.LA(2);

                    if ( (synpred175_InternalEtlParser()) ) {
                        alt97=1;
                    }


                }
                else if ( (LA97_0==RULE_COMMA) ) {
                    int LA97_5 = input.LA(2);

                    if ( (synpred175_InternalEtlParser()) ) {
                        alt97=1;
                    }


                }


                switch (alt97) {
            	case 1 :
            	    // InternalEtlParser.g:9946:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEtlParser.g:9955:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9959:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEtlParser.g:9960:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEtlParser.g:9966:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9970:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEtlParser.g:9971:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEtlParser.g:9971:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEtlParser.g:9972:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEtlParser.g:9973:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEtlParser.g:9973:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEtlParser.g:9982:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9986:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEtlParser.g:9987:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEtlParser.g:9994:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:9998:1: ( ( () ) )
            // InternalEtlParser.g:9999:1: ( () )
            {
            // InternalEtlParser.g:9999:1: ( () )
            // InternalEtlParser.g:10000:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEtlParser.g:10001:2: ()
            // InternalEtlParser.g:10001:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEtlParser.g:10009:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10013:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEtlParser.g:10014:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEtlParser.g:10021:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10025:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEtlParser.g:10026:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEtlParser.g:10026:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEtlParser.g:10027:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEtlParser.g:10028:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEtlParser.g:10028:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEtlParser.g:10036:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10040:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEtlParser.g:10041:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEtlParser.g:10047:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10051:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEtlParser.g:10052:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEtlParser.g:10052:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEtlParser.g:10053:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEtlParser.g:10054:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEtlParser.g:10054:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEtlParser.g:10063:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10067:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEtlParser.g:10068:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEtlParser.g:10075:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10079:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10080:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10080:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10081:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEtlParser.g:10090:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10094:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEtlParser.g:10095:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEtlParser.g:10102:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10106:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:10107:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:10107:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEtlParser.g:10108:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:10109:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEtlParser.g:10109:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEtlParser.g:10117:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10121:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEtlParser.g:10122:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEtlParser.g:10128:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10132:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10133:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10133:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10134:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEtlParser.g:10144:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10148:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEtlParser.g:10149:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEtlParser.g:10156:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10160:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:10161:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:10161:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:10162:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:10163:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_SQUARE_OPEN) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalEtlParser.g:10163:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEtlParser.g:10171:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10175:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEtlParser.g:10176:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEtlParser.g:10183:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10187:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEtlParser.g:10188:1: ( RULE_CURLY_OPEN )
            {
            // InternalEtlParser.g:10188:1: ( RULE_CURLY_OPEN )
            // InternalEtlParser.g:10189:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEtlParser.g:10198:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10202:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEtlParser.g:10203:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEtlParser.g:10210:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10214:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEtlParser.g:10215:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEtlParser.g:10215:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEtlParser.g:10216:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEtlParser.g:10217:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEtlParser.g:10217:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEtlParser.g:10225:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10229:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEtlParser.g:10230:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEtlParser.g:10236:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10240:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEtlParser.g:10241:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:10241:1: ( RULE_CURLY_CLOSE )
            // InternalEtlParser.g:10242:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEtlParser.g:10252:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10256:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEtlParser.g:10257:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10264:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10268:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:10269:1: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:10269:1: ( ruleAndAttributeSet )
            // InternalEtlParser.g:10270:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEtlParser.g:10279:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10283:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:10284:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10290:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10294:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:10295:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:10295:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:10296:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10297:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalEtlParser.g:10297:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEtlParser.g:10306:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10310:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEtlParser.g:10311:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:10318:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10322:1: ( ( () ) )
            // InternalEtlParser.g:10323:1: ( () )
            {
            // InternalEtlParser.g:10323:1: ( () )
            // InternalEtlParser.g:10324:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:10325:2: ()
            // InternalEtlParser.g:10325:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEtlParser.g:10333:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10337:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEtlParser.g:10338:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:10345:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10349:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:10350:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:10350:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:10351:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEtlParser.g:10360:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10364:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:10365:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:10371:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10375:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:10376:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:10376:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:10377:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:10378:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:10378:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEtlParser.g:10387:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10391:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEtlParser.g:10392:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10399:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10403:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:10404:1: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:10404:1: ( ruleSubAttributeSet )
            // InternalEtlParser.g:10405:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEtlParser.g:10414:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10418:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEtlParser.g:10419:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10425:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10429:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEtlParser.g:10430:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEtlParser.g:10430:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEtlParser.g:10431:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:10432:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_CONJUNCTION_KEYWORD||LA100_0==RULE_COMMA) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalEtlParser.g:10432:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEtlParser.g:10441:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10445:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEtlParser.g:10446:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEtlParser.g:10453:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10457:1: ( ( () ) )
            // InternalEtlParser.g:10458:1: ( () )
            {
            // InternalEtlParser.g:10458:1: ( () )
            // InternalEtlParser.g:10459:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEtlParser.g:10460:2: ()
            // InternalEtlParser.g:10460:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEtlParser.g:10468:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10472:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEtlParser.g:10473:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEtlParser.g:10480:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10484:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:10485:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:10485:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEtlParser.g:10486:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:10487:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEtlParser.g:10487:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEtlParser.g:10495:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10499:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEtlParser.g:10500:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEtlParser.g:10506:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10510:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:10511:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:10511:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEtlParser.g:10512:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:10513:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEtlParser.g:10513:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEtlParser.g:10522:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10526:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEtlParser.g:10527:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEtlParser.g:10534:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10538:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:10539:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:10539:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:10540:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEtlParser.g:10549:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10553:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEtlParser.g:10554:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEtlParser.g:10561:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10565:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:10566:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:10566:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEtlParser.g:10567:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:10568:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEtlParser.g:10568:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEtlParser.g:10576:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10580:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEtlParser.g:10581:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEtlParser.g:10587:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10591:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:10592:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:10592:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:10593:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEtlParser.g:10603:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10607:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEtlParser.g:10608:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEtlParser.g:10615:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10619:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEtlParser.g:10620:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEtlParser.g:10620:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEtlParser.g:10621:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEtlParser.g:10622:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==RULE_SQUARE_OPEN) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalEtlParser.g:10622:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEtlParser.g:10630:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10634:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEtlParser.g:10635:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEtlParser.g:10642:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10646:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEtlParser.g:10647:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEtlParser.g:10647:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEtlParser.g:10648:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEtlParser.g:10649:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_REVERSED) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalEtlParser.g:10649:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEtlParser.g:10657:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10661:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEtlParser.g:10662:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEtlParser.g:10669:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10673:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEtlParser.g:10674:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEtlParser.g:10674:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEtlParser.g:10675:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEtlParser.g:10676:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEtlParser.g:10676:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEtlParser.g:10684:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10688:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEtlParser.g:10689:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEtlParser.g:10695:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10699:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEtlParser.g:10700:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEtlParser.g:10700:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEtlParser.g:10701:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEtlParser.g:10702:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=RULE_GTE && LA103_0<=RULE_LTE)||(LA103_0>=RULE_EQUAL && LA103_0<=RULE_GT)) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalEtlParser.g:10702:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEtlParser.g:10711:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10715:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEtlParser.g:10716:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEtlParser.g:10723:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10727:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEtlParser.g:10728:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEtlParser.g:10728:1: ( RULE_SQUARE_OPEN )
            // InternalEtlParser.g:10729:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEtlParser.g:10738:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10742:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEtlParser.g:10743:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEtlParser.g:10750:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10754:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEtlParser.g:10755:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEtlParser.g:10755:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEtlParser.g:10756:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEtlParser.g:10757:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEtlParser.g:10757:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEtlParser.g:10765:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10769:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEtlParser.g:10770:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEtlParser.g:10777:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10781:1: ( ( RULE_TO ) )
            // InternalEtlParser.g:10782:1: ( RULE_TO )
            {
            // InternalEtlParser.g:10782:1: ( RULE_TO )
            // InternalEtlParser.g:10783:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEtlParser.g:10792:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10796:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEtlParser.g:10797:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEtlParser.g:10804:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10808:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEtlParser.g:10809:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEtlParser.g:10809:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEtlParser.g:10810:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEtlParser.g:10811:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEtlParser.g:10811:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEtlParser.g:10819:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10823:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEtlParser.g:10824:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEtlParser.g:10830:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10834:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEtlParser.g:10835:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEtlParser.g:10835:1: ( RULE_SQUARE_CLOSE )
            // InternalEtlParser.g:10836:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEtlParser.g:10846:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10850:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEtlParser.g:10851:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEtlParser.g:10858:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10862:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:10863:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:10863:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:10864:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:10865:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEtlParser.g:10865:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEtlParser.g:10873:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10877:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEtlParser.g:10878:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEtlParser.g:10884:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10888:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:10889:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:10889:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:10890:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:10891:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEtlParser.g:10891:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEtlParser.g:10900:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10904:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEtlParser.g:10905:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEtlParser.g:10912:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10916:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:10917:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:10917:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:10918:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:10919:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:10919:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEtlParser.g:10927:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10931:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEtlParser.g:10932:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEtlParser.g:10938:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10942:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:10943:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:10943:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:10944:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:10945:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:10945:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEtlParser.g:10954:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10958:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEtlParser.g:10959:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEtlParser.g:10966:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10970:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:10971:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:10971:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:10972:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:10973:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:10973:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEtlParser.g:10981:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10985:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEtlParser.g:10986:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEtlParser.g:10992:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:10996:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEtlParser.g:10997:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEtlParser.g:10997:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEtlParser.g:10998:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEtlParser.g:10999:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEtlParser.g:10999:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEtlParser.g:11008:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11012:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEtlParser.g:11013:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11020:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11024:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11025:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11025:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11026:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11027:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11027:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEtlParser.g:11035:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11039:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEtlParser.g:11040:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11047:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11051:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:11052:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:11052:1: ( RULE_HASH )
            // InternalEtlParser.g:11053:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEtlParser.g:11062:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11066:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEtlParser.g:11067:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEtlParser.g:11073:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11077:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:11078:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:11078:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:11079:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:11080:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:11080:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEtlParser.g:11089:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11093:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEtlParser.g:11094:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEtlParser.g:11101:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11105:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11106:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11106:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEtlParser.g:11107:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11108:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEtlParser.g:11108:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEtlParser.g:11116:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11120:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEtlParser.g:11121:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEtlParser.g:11128:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11132:1: ( ( RULE_HASH ) )
            // InternalEtlParser.g:11133:1: ( RULE_HASH )
            {
            // InternalEtlParser.g:11133:1: ( RULE_HASH )
            // InternalEtlParser.g:11134:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEtlParser.g:11143:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11147:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEtlParser.g:11148:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEtlParser.g:11154:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11158:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEtlParser.g:11159:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEtlParser.g:11159:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEtlParser.g:11160:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEtlParser.g:11161:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEtlParser.g:11161:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEtlParser.g:11170:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11174:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEtlParser.g:11175:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEtlParser.g:11182:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11186:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11187:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11187:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11188:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEtlParser.g:11197:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11201:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEtlParser.g:11202:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEtlParser.g:11209:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11213:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11214:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11214:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEtlParser.g:11215:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11216:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEtlParser.g:11216:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEtlParser.g:11224:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11228:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEtlParser.g:11229:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEtlParser.g:11235:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11239:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11240:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11240:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11241:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEtlParser.g:11251:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11255:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEtlParser.g:11256:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEtlParser.g:11263:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11267:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEtlParser.g:11268:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEtlParser.g:11268:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEtlParser.g:11269:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEtlParser.g:11278:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11282:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEtlParser.g:11283:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEtlParser.g:11290:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11294:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:11295:1: ( ruleFilter )
            {
            // InternalEtlParser.g:11295:1: ( ruleFilter )
            // InternalEtlParser.g:11296:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEtlParser.g:11305:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11309:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEtlParser.g:11310:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEtlParser.g:11316:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11320:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEtlParser.g:11321:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEtlParser.g:11321:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEtlParser.g:11322:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEtlParser.g:11332:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11336:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEtlParser.g:11337:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:11344:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11348:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:11349:1: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:11349:1: ( ruleConjunctionFilter )
            // InternalEtlParser.g:11350:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEtlParser.g:11359:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11363:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:11364:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:11370:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11374:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:11375:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:11375:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:11376:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11377:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalEtlParser.g:11377:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_46);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEtlParser.g:11386:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11390:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:11391:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:11398:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11402:1: ( ( () ) )
            // InternalEtlParser.g:11403:1: ( () )
            {
            // InternalEtlParser.g:11403:1: ( () )
            // InternalEtlParser.g:11404:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11405:2: ()
            // InternalEtlParser.g:11405:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEtlParser.g:11413:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11417:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:11418:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:11425:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11429:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEtlParser.g:11430:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEtlParser.g:11430:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEtlParser.g:11431:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEtlParser.g:11440:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11444:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:11445:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:11451:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11455:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11456:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11456:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11457:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11458:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:11458:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEtlParser.g:11467:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11471:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEtlParser.g:11472:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEtlParser.g:11479:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11483:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:11484:1: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:11484:1: ( rulePropertyFilter )
            // InternalEtlParser.g:11485:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEtlParser.g:11494:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11498:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEtlParser.g:11499:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEtlParser.g:11505:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11509:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEtlParser.g:11510:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEtlParser.g:11510:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEtlParser.g:11511:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11512:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==RULE_CONJUNCTION_KEYWORD||LA105_0==RULE_COMMA) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalEtlParser.g:11512:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEtlParser.g:11521:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11525:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEtlParser.g:11526:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEtlParser.g:11533:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11537:1: ( ( () ) )
            // InternalEtlParser.g:11538:1: ( () )
            {
            // InternalEtlParser.g:11538:1: ( () )
            // InternalEtlParser.g:11539:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEtlParser.g:11540:2: ()
            // InternalEtlParser.g:11540:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEtlParser.g:11548:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11552:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEtlParser.g:11553:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEtlParser.g:11560:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11564:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEtlParser.g:11565:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEtlParser.g:11565:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEtlParser.g:11566:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEtlParser.g:11567:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEtlParser.g:11567:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEtlParser.g:11575:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11579:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEtlParser.g:11580:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEtlParser.g:11586:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11590:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEtlParser.g:11591:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEtlParser.g:11591:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEtlParser.g:11592:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEtlParser.g:11593:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEtlParser.g:11593:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEtlParser.g:11602:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11606:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEtlParser.g:11607:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEtlParser.g:11614:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11618:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11619:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11619:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11620:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEtlParser.g:11629:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11633:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEtlParser.g:11634:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEtlParser.g:11641:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11645:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEtlParser.g:11646:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEtlParser.g:11646:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEtlParser.g:11647:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEtlParser.g:11648:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEtlParser.g:11648:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEtlParser.g:11656:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11660:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEtlParser.g:11661:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEtlParser.g:11667:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11671:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11672:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11672:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11673:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEtlParser.g:11683:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11687:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEtlParser.g:11688:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEtlParser.g:11695:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11699:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEtlParser.g:11700:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEtlParser.g:11700:1: ( RULE_TERM_KEYWORD )
            // InternalEtlParser.g:11701:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEtlParser.g:11710:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11714:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEtlParser.g:11715:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEtlParser.g:11721:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11725:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEtlParser.g:11726:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEtlParser.g:11726:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEtlParser.g:11727:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEtlParser.g:11728:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEtlParser.g:11728:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEtlParser.g:11737:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11741:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEtlParser.g:11742:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEtlParser.g:11749:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11753:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11754:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11754:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEtlParser.g:11755:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11756:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEtlParser.g:11756:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEtlParser.g:11764:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11768:1: ( rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 )
            // InternalEtlParser.g:11769:2: rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEtlParser.g:11776:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__Group_1__0 )? ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11780:1: ( ( ( rule__TypedTermFilter__Group_1__0 )? ) )
            // InternalEtlParser.g:11781:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            {
            // InternalEtlParser.g:11781:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            // InternalEtlParser.g:11782:2: ( rule__TypedTermFilter__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }
            // InternalEtlParser.g:11783:2: ( rule__TypedTermFilter__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==RULE_EXACT_KEYWORD||(LA106_0>=RULE_MATCH_KEYWORD && LA106_0<=RULE_REGEX_KEYWORD)||LA106_0==RULE_WILD_KEYWORD) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalEtlParser.g:11783:3: rule__TypedTermFilter__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilter__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__2"
    // InternalEtlParser.g:11791:1: rule__TypedTermFilter__Group__2 : rule__TypedTermFilter__Group__2__Impl ;
    public final void rule__TypedTermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11795:1: ( rule__TypedTermFilter__Group__2__Impl )
            // InternalEtlParser.g:11796:2: rule__TypedTermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2"


    // $ANTLR start "rule__TypedTermFilter__Group__2__Impl"
    // InternalEtlParser.g:11802:1: rule__TypedTermFilter__Group__2__Impl : ( ( rule__TypedTermFilter__TermAssignment_2 ) ) ;
    public final void rule__TypedTermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11806:1: ( ( ( rule__TypedTermFilter__TermAssignment_2 ) ) )
            // InternalEtlParser.g:11807:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            {
            // InternalEtlParser.g:11807:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            // InternalEtlParser.g:11808:2: ( rule__TypedTermFilter__TermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }
            // InternalEtlParser.g:11809:2: ( rule__TypedTermFilter__TermAssignment_2 )
            // InternalEtlParser.g:11809:3: rule__TypedTermFilter__TermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__TermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0"
    // InternalEtlParser.g:11818:1: rule__TypedTermFilter__Group_1__0 : rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 ;
    public final void rule__TypedTermFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11822:1: ( rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 )
            // InternalEtlParser.g:11823:2: rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__TypedTermFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0__Impl"
    // InternalEtlParser.g:11830:1: rule__TypedTermFilter__Group_1__0__Impl : ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedTermFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11834:1: ( ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEtlParser.g:11835:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEtlParser.g:11835:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEtlParser.g:11836:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEtlParser.g:11837:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            // InternalEtlParser.g:11837:3: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1"
    // InternalEtlParser.g:11845:1: rule__TypedTermFilter__Group_1__1 : rule__TypedTermFilter__Group_1__1__Impl ;
    public final void rule__TypedTermFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11849:1: ( rule__TypedTermFilter__Group_1__1__Impl )
            // InternalEtlParser.g:11850:2: rule__TypedTermFilter__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1__Impl"
    // InternalEtlParser.g:11856:1: rule__TypedTermFilter__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11860:1: ( ( RULE_COLON ) )
            // InternalEtlParser.g:11861:1: ( RULE_COLON )
            {
            // InternalEtlParser.g:11861:1: ( RULE_COLON )
            // InternalEtlParser.g:11862:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEtlParser.g:11872:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11876:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEtlParser.g:11877:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEtlParser.g:11884:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11888:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEtlParser.g:11889:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEtlParser.g:11889:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEtlParser.g:11890:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEtlParser.g:11891:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEtlParser.g:11891:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEtlParser.g:11899:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11903:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEtlParser.g:11904:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEtlParser.g:11911:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11915:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:11916:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:11916:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:11917:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEtlParser.g:11926:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11930:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEtlParser.g:11931:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEtlParser.g:11938:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11942:1: ( ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* ) ) )
            // InternalEtlParser.g:11943:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* ) )
            {
            // InternalEtlParser.g:11943:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* ) )
            // InternalEtlParser.g:11944:2: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* )
            {
            // InternalEtlParser.g:11944:2: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            // InternalEtlParser.g:11945:3: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }
            // InternalEtlParser.g:11946:3: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            // InternalEtlParser.g:11946:4: rule__TypedTermFilterSet__TermsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__TypedTermFilterSet__TermsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }

            }

            // InternalEtlParser.g:11949:2: ( ( rule__TypedTermFilterSet__TermsAssignment_2 )* )
            // InternalEtlParser.g:11950:3: ( rule__TypedTermFilterSet__TermsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }
            // InternalEtlParser.g:11951:3: ( rule__TypedTermFilterSet__TermsAssignment_2 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( ((LA107_0>=RULE_EQUAL && LA107_0<=RULE_NOT_EQUAL)) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalEtlParser.g:11951:4: rule__TypedTermFilterSet__TermsAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__TypedTermFilterSet__TermsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEtlParser.g:11960:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11964:1: ( rule__TypedTermFilterSet__Group__3__Impl )
            // InternalEtlParser.g:11965:2: rule__TypedTermFilterSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEtlParser.g:11971:1: rule__TypedTermFilterSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11975:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:11976:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:11976:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:11977:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEtlParser.g:11987:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:11991:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEtlParser.g:11992:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEtlParser.g:11999:1: rule__LanguageFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12003:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEtlParser.g:12004:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEtlParser.g:12004:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEtlParser.g:12005:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEtlParser.g:12014:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12018:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEtlParser.g:12019:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEtlParser.g:12026:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12030:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12031:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12031:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12032:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12033:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEtlParser.g:12033:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEtlParser.g:12041:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12045:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEtlParser.g:12046:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEtlParser.g:12052:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12056:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12057:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12057:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12058:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12059:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEtlParser.g:12059:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEtlParser.g:12068:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12072:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEtlParser.g:12073:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12080:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12084:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12085:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12085:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12086:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEtlParser.g:12095:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12099:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEtlParser.g:12100:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12107:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12111:1: ( ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12112:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12112:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12113:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12113:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEtlParser.g:12114:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12115:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEtlParser.g:12115:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12118:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            // InternalEtlParser.g:12119:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12120:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( ((LA108_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA108_0<=RULE_KEYWORD)) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalEtlParser.g:12120:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEtlParser.g:12129:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12133:1: ( rule__LanguageFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12134:2: rule__LanguageFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12140:1: rule__LanguageFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12144:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12145:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12145:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12146:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEtlParser.g:12156:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12160:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEtlParser.g:12161:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEtlParser.g:12168:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12172:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEtlParser.g:12173:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEtlParser.g:12173:1: ( RULE_TYPEID_KEYWORD )
            // InternalEtlParser.g:12174:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEtlParser.g:12183:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12187:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEtlParser.g:12188:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEtlParser.g:12195:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12199:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12200:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12200:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12201:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12202:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:12202:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEtlParser.g:12210:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12214:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEtlParser.g:12215:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEtlParser.g:12221:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12225:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEtlParser.g:12226:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEtlParser.g:12226:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEtlParser.g:12227:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEtlParser.g:12228:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEtlParser.g:12228:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEtlParser.g:12237:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12241:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEtlParser.g:12242:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEtlParser.g:12249:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12253:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEtlParser.g:12254:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEtlParser.g:12254:1: ( RULE_TYPE_KEYWORD )
            // InternalEtlParser.g:12255:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEtlParser.g:12264:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12268:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEtlParser.g:12269:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEtlParser.g:12276:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12280:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12281:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12281:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12282:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12283:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEtlParser.g:12283:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEtlParser.g:12291:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12295:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEtlParser.g:12296:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEtlParser.g:12302:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12306:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12307:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12307:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12308:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12309:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEtlParser.g:12309:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEtlParser.g:12318:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12322:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEtlParser.g:12323:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12330:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12334:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12335:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12335:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12336:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEtlParser.g:12345:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12349:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEtlParser.g:12350:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12357:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12361:1: ( ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12362:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12362:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12363:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12363:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEtlParser.g:12364:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12365:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEtlParser.g:12365:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12368:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            // InternalEtlParser.g:12369:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12370:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( ((LA109_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA109_0<=RULE_KEYWORD)) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalEtlParser.g:12370:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEtlParser.g:12379:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12383:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12384:2: rule__TypeTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12390:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12394:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12395:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12395:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12396:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEtlParser.g:12406:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12410:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEtlParser.g:12411:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEtlParser.g:12418:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12422:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEtlParser.g:12423:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEtlParser.g:12423:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEtlParser.g:12424:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEtlParser.g:12433:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12437:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEtlParser.g:12438:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEtlParser.g:12445:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12449:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12450:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12450:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12451:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12452:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEtlParser.g:12452:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEtlParser.g:12460:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12464:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEtlParser.g:12465:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEtlParser.g:12471:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12475:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12476:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12476:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12477:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12478:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEtlParser.g:12478:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEtlParser.g:12487:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12491:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEtlParser.g:12492:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12499:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12503:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12504:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12504:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12505:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEtlParser.g:12514:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12518:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEtlParser.g:12519:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12526:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12530:1: ( ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12531:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12531:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12532:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12532:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:12533:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12534:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:12534:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12537:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:12538:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12539:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=RULE_DIGIT_ZERO && LA110_0<=RULE_DIGIT_NONZERO)) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalEtlParser.g:12539:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEtlParser.g:12548:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12552:1: ( rule__DialectIdFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12553:2: rule__DialectIdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12559:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12563:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12564:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12564:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12565:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEtlParser.g:12575:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12579:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEtlParser.g:12580:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEtlParser.g:12587:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12591:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEtlParser.g:12592:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEtlParser.g:12592:1: ( RULE_DIALECT_KEYWORD )
            // InternalEtlParser.g:12593:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEtlParser.g:12602:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12606:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEtlParser.g:12607:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEtlParser.g:12614:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12618:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEtlParser.g:12619:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEtlParser.g:12619:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEtlParser.g:12620:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEtlParser.g:12621:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEtlParser.g:12621:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEtlParser.g:12629:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12633:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEtlParser.g:12634:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEtlParser.g:12640:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12644:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEtlParser.g:12645:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEtlParser.g:12645:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEtlParser.g:12646:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:12647:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEtlParser.g:12647:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEtlParser.g:12656:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12660:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEtlParser.g:12661:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEtlParser.g:12668:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12672:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12673:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12673:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12674:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEtlParser.g:12683:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12687:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEtlParser.g:12688:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEtlParser.g:12695:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12699:1: ( ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEtlParser.g:12700:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEtlParser.g:12700:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEtlParser.g:12701:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEtlParser.g:12701:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEtlParser.g:12702:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12703:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEtlParser.g:12703:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEtlParser.g:12706:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            // InternalEtlParser.g:12707:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEtlParser.g:12708:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( ((LA111_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA111_0<=RULE_KEYWORD)||(LA111_0>=RULE_DIGIT_ZERO && LA111_0<=RULE_DIGIT_NONZERO)||LA111_0==RULE_DASH) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalEtlParser.g:12708:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEtlParser.g:12717:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12721:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl )
            // InternalEtlParser.g:12722:2: rule__DialectAliasFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEtlParser.g:12728:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12732:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12733:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12733:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12734:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEtlParser.g:12744:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12748:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEtlParser.g:12749:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEtlParser.g:12756:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12760:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEtlParser.g:12761:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEtlParser.g:12761:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEtlParser.g:12762:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEtlParser.g:12763:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEtlParser.g:12763:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEtlParser.g:12771:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12775:1: ( rule__Dialect__Group__1__Impl )
            // InternalEtlParser.g:12776:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEtlParser.g:12782:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12786:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEtlParser.g:12787:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEtlParser.g:12787:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEtlParser.g:12788:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEtlParser.g:12789:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==RULE_ROUND_OPEN) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalEtlParser.g:12789:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEtlParser.g:12798:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12802:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEtlParser.g:12803:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEtlParser.g:12810:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12814:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEtlParser.g:12815:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEtlParser.g:12815:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEtlParser.g:12816:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEtlParser.g:12817:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEtlParser.g:12817:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEtlParser.g:12825:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12829:1: ( rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 )
            // InternalEtlParser.g:12830:2: rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEtlParser.g:12837:1: rule__DialectAlias__Group__1__Impl : ( ( RULE_WS )* ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12841:1: ( ( ( RULE_WS )* ) )
            // InternalEtlParser.g:12842:1: ( ( RULE_WS )* )
            {
            // InternalEtlParser.g:12842:1: ( ( RULE_WS )* )
            // InternalEtlParser.g:12843:2: ( RULE_WS )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalEtlParser.g:12844:2: ( RULE_WS )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==RULE_WS) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalEtlParser.g:12844:3: RULE_WS
            	    {
            	    match(input,RULE_WS,FollowSets000.FOLLOW_77); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__2"
    // InternalEtlParser.g:12852:1: rule__DialectAlias__Group__2 : rule__DialectAlias__Group__2__Impl ;
    public final void rule__DialectAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12856:1: ( rule__DialectAlias__Group__2__Impl )
            // InternalEtlParser.g:12857:2: rule__DialectAlias__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2"


    // $ANTLR start "rule__DialectAlias__Group__2__Impl"
    // InternalEtlParser.g:12863:1: rule__DialectAlias__Group__2__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) ;
    public final void rule__DialectAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12867:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) )
            // InternalEtlParser.g:12868:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            {
            // InternalEtlParser.g:12868:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            // InternalEtlParser.g:12869:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }
            // InternalEtlParser.g:12870:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==RULE_ROUND_OPEN) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalEtlParser.g:12870:3: rule__DialectAlias__AcceptabilityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEtlParser.g:12879:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12883:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEtlParser.g:12884:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEtlParser.g:12891:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12895:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEtlParser.g:12896:1: ( RULE_ROUND_OPEN )
            {
            // InternalEtlParser.g:12896:1: ( RULE_ROUND_OPEN )
            // InternalEtlParser.g:12897:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEtlParser.g:12906:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12910:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEtlParser.g:12911:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEtlParser.g:12918:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12922:1: ( ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) )
            // InternalEtlParser.g:12923:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            {
            // InternalEtlParser.g:12923:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            // InternalEtlParser.g:12924:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            {
            // InternalEtlParser.g:12924:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEtlParser.g:12925:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEtlParser.g:12926:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEtlParser.g:12926:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }

            // InternalEtlParser.g:12929:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            // InternalEtlParser.g:12930:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEtlParser.g:12931:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( ((LA115_0>=RULE_CASE_SIGNIFICANCE_ID_KEYWORD && LA115_0<=RULE_KEYWORD)) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalEtlParser.g:12931:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEtlParser.g:12940:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12944:1: ( rule__AcceptabilityTokenSet__Group__2__Impl )
            // InternalEtlParser.g:12945:2: rule__AcceptabilityTokenSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEtlParser.g:12951:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12955:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEtlParser.g:12956:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEtlParser.g:12956:1: ( RULE_ROUND_CLOSE )
            // InternalEtlParser.g:12957:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEtlParser.g:12967:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12971:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEtlParser.g:12972:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEtlParser.g:12979:1: rule__ActiveFilter__Group__0__Impl : ( ( rule__ActiveFilter__Group_0__0 )? ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12983:1: ( ( ( rule__ActiveFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:12984:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:12984:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            // InternalEtlParser.g:12985:2: ( rule__ActiveFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:12986:2: ( rule__ActiveFilter__Group_0__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_DESCRIPTION_KEYWORD||LA116_0==RULE_CONCEPT_KEYWORD) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalEtlParser.g:12986:3: rule__ActiveFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ActiveFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEtlParser.g:12994:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:12998:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEtlParser.g:12999:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEtlParser.g:13006:1: rule__ActiveFilter__Group__1__Impl : ( RULE_ACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13010:1: ( ( RULE_ACTIVE_KEYWORD ) )
            // InternalEtlParser.g:13011:1: ( RULE_ACTIVE_KEYWORD )
            {
            // InternalEtlParser.g:13011:1: ( RULE_ACTIVE_KEYWORD )
            // InternalEtlParser.g:13012:2: RULE_ACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEtlParser.g:13021:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13025:1: ( rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 )
            // InternalEtlParser.g:13026:2: rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEtlParser.g:13033:1: rule__ActiveFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13037:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13038:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13038:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13039:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__3"
    // InternalEtlParser.g:13048:1: rule__ActiveFilter__Group__3 : rule__ActiveFilter__Group__3__Impl ;
    public final void rule__ActiveFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13052:1: ( rule__ActiveFilter__Group__3__Impl )
            // InternalEtlParser.g:13053:2: rule__ActiveFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3"


    // $ANTLR start "rule__ActiveFilter__Group__3__Impl"
    // InternalEtlParser.g:13059:1: rule__ActiveFilter__Group__3__Impl : ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) ;
    public final void rule__ActiveFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13063:1: ( ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) )
            // InternalEtlParser.g:13064:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            {
            // InternalEtlParser.g:13064:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            // InternalEtlParser.g:13065:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }
            // InternalEtlParser.g:13066:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            // InternalEtlParser.g:13066:3: rule__ActiveFilter__ActiveAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__0"
    // InternalEtlParser.g:13075:1: rule__ActiveFilter__Group_0__0 : rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 ;
    public final void rule__ActiveFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13079:1: ( rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 )
            // InternalEtlParser.g:13080:2: rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__ActiveFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0"


    // $ANTLR start "rule__ActiveFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13087:1: rule__ActiveFilter__Group_0__0__Impl : ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ActiveFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13091:1: ( ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13092:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13092:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13093:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13094:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13094:3: rule__ActiveFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__1"
    // InternalEtlParser.g:13102:1: rule__ActiveFilter__Group_0__1 : rule__ActiveFilter__Group_0__1__Impl ;
    public final void rule__ActiveFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13106:1: ( rule__ActiveFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13107:2: rule__ActiveFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1"


    // $ANTLR start "rule__ActiveFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13113:1: rule__ActiveFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ActiveFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13117:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13118:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13118:1: ( RULE_DOT )
            // InternalEtlParser.g:13119:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEtlParser.g:13129:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13133:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEtlParser.g:13134:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEtlParser.g:13141:1: rule__ModuleFilter__Group__0__Impl : ( ( rule__ModuleFilter__Group_0__0 )? ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13145:1: ( ( ( rule__ModuleFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13146:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13146:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            // InternalEtlParser.g:13147:2: ( rule__ModuleFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13148:2: ( rule__ModuleFilter__Group_0__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_DESCRIPTION_KEYWORD||LA117_0==RULE_CONCEPT_KEYWORD) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalEtlParser.g:13148:3: rule__ModuleFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ModuleFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEtlParser.g:13156:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13160:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEtlParser.g:13161:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEtlParser.g:13168:1: rule__ModuleFilter__Group__1__Impl : ( RULE_MODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13172:1: ( ( RULE_MODULEID_KEYWORD ) )
            // InternalEtlParser.g:13173:1: ( RULE_MODULEID_KEYWORD )
            {
            // InternalEtlParser.g:13173:1: ( RULE_MODULEID_KEYWORD )
            // InternalEtlParser.g:13174:2: RULE_MODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEtlParser.g:13183:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13187:1: ( rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 )
            // InternalEtlParser.g:13188:2: rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEtlParser.g:13195:1: rule__ModuleFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13199:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13200:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13200:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13201:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__3"
    // InternalEtlParser.g:13210:1: rule__ModuleFilter__Group__3 : rule__ModuleFilter__Group__3__Impl ;
    public final void rule__ModuleFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13214:1: ( rule__ModuleFilter__Group__3__Impl )
            // InternalEtlParser.g:13215:2: rule__ModuleFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3"


    // $ANTLR start "rule__ModuleFilter__Group__3__Impl"
    // InternalEtlParser.g:13221:1: rule__ModuleFilter__Group__3__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) ;
    public final void rule__ModuleFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13225:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) )
            // InternalEtlParser.g:13226:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            {
            // InternalEtlParser.g:13226:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            // InternalEtlParser.g:13227:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }
            // InternalEtlParser.g:13228:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            // InternalEtlParser.g:13228:3: rule__ModuleFilter__ModuleIdAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__0"
    // InternalEtlParser.g:13237:1: rule__ModuleFilter__Group_0__0 : rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 ;
    public final void rule__ModuleFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13241:1: ( rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 )
            // InternalEtlParser.g:13242:2: rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__ModuleFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0"


    // $ANTLR start "rule__ModuleFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13249:1: rule__ModuleFilter__Group_0__0__Impl : ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ModuleFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13253:1: ( ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13254:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13254:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13255:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13256:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13256:3: rule__ModuleFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__1"
    // InternalEtlParser.g:13264:1: rule__ModuleFilter__Group_0__1 : rule__ModuleFilter__Group_0__1__Impl ;
    public final void rule__ModuleFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13268:1: ( rule__ModuleFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13269:2: rule__ModuleFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1"


    // $ANTLR start "rule__ModuleFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13275:1: rule__ModuleFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ModuleFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13279:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13280:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13280:1: ( RULE_DOT )
            // InternalEtlParser.g:13281:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEtlParser.g:13291:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13295:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEtlParser.g:13296:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEtlParser.g:13303:1: rule__SemanticTagFilter__Group__0__Impl : ( ( rule__SemanticTagFilter__Group_0__0 )? ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13307:1: ( ( ( rule__SemanticTagFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13308:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13308:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            // InternalEtlParser.g:13309:2: ( rule__SemanticTagFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13310:2: ( rule__SemanticTagFilter__Group_0__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_DESCRIPTION_KEYWORD||LA118_0==RULE_CONCEPT_KEYWORD) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalEtlParser.g:13310:3: rule__SemanticTagFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SemanticTagFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEtlParser.g:13318:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13322:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEtlParser.g:13323:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEtlParser.g:13330:1: rule__SemanticTagFilter__Group__1__Impl : ( RULE_SEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13334:1: ( ( RULE_SEMANTIC_TAG_KEYWORD ) )
            // InternalEtlParser.g:13335:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            {
            // InternalEtlParser.g:13335:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            // InternalEtlParser.g:13336:2: RULE_SEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEtlParser.g:13345:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13349:1: ( rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 )
            // InternalEtlParser.g:13350:2: rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEtlParser.g:13357:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13361:1: ( ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) )
            // InternalEtlParser.g:13362:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            {
            // InternalEtlParser.g:13362:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            // InternalEtlParser.g:13363:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }
            // InternalEtlParser.g:13364:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            // InternalEtlParser.g:13364:3: rule__SemanticTagFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__3"
    // InternalEtlParser.g:13372:1: rule__SemanticTagFilter__Group__3 : rule__SemanticTagFilter__Group__3__Impl ;
    public final void rule__SemanticTagFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13376:1: ( rule__SemanticTagFilter__Group__3__Impl )
            // InternalEtlParser.g:13377:2: rule__SemanticTagFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3"


    // $ANTLR start "rule__SemanticTagFilter__Group__3__Impl"
    // InternalEtlParser.g:13383:1: rule__SemanticTagFilter__Group__3__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) ;
    public final void rule__SemanticTagFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13387:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) )
            // InternalEtlParser.g:13388:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            {
            // InternalEtlParser.g:13388:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            // InternalEtlParser.g:13389:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }
            // InternalEtlParser.g:13390:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            // InternalEtlParser.g:13390:3: rule__SemanticTagFilter__SemanticTagAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0"
    // InternalEtlParser.g:13399:1: rule__SemanticTagFilter__Group_0__0 : rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 ;
    public final void rule__SemanticTagFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13403:1: ( rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 )
            // InternalEtlParser.g:13404:2: rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SemanticTagFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13411:1: rule__SemanticTagFilter__Group_0__0__Impl : ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__SemanticTagFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13415:1: ( ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13416:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13416:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13417:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13418:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13418:3: rule__SemanticTagFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1"
    // InternalEtlParser.g:13426:1: rule__SemanticTagFilter__Group_0__1 : rule__SemanticTagFilter__Group_0__1__Impl ;
    public final void rule__SemanticTagFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13430:1: ( rule__SemanticTagFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13431:2: rule__SemanticTagFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13437:1: rule__SemanticTagFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__SemanticTagFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13441:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13442:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13442:1: ( RULE_DOT )
            // InternalEtlParser.g:13443:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEtlParser.g:13453:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13457:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEtlParser.g:13458:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEtlParser.g:13465:1: rule__EffectiveTimeFilter__Group__0__Impl : ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13469:1: ( ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) )
            // InternalEtlParser.g:13470:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            {
            // InternalEtlParser.g:13470:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            // InternalEtlParser.g:13471:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }
            // InternalEtlParser.g:13472:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==RULE_DESCRIPTION_KEYWORD||LA119_0==RULE_CONCEPT_KEYWORD) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalEtlParser.g:13472:3: rule__EffectiveTimeFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EffectiveTimeFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEtlParser.g:13480:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13484:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEtlParser.g:13485:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEtlParser.g:13492:1: rule__EffectiveTimeFilter__Group__1__Impl : ( RULE_EFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13496:1: ( ( RULE_EFFECTIVE_TIME_KEYWORD ) )
            // InternalEtlParser.g:13497:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            {
            // InternalEtlParser.g:13497:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            // InternalEtlParser.g:13498:2: RULE_EFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEtlParser.g:13507:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13511:1: ( rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 )
            // InternalEtlParser.g:13512:2: rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEtlParser.g:13519:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13523:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) )
            // InternalEtlParser.g:13524:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            {
            // InternalEtlParser.g:13524:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            // InternalEtlParser.g:13525:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }
            // InternalEtlParser.g:13526:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            // InternalEtlParser.g:13526:3: rule__EffectiveTimeFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3"
    // InternalEtlParser.g:13534:1: rule__EffectiveTimeFilter__Group__3 : rule__EffectiveTimeFilter__Group__3__Impl ;
    public final void rule__EffectiveTimeFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13538:1: ( rule__EffectiveTimeFilter__Group__3__Impl )
            // InternalEtlParser.g:13539:2: rule__EffectiveTimeFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3__Impl"
    // InternalEtlParser.g:13545:1: rule__EffectiveTimeFilter__Group__3__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13549:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) )
            // InternalEtlParser.g:13550:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            {
            // InternalEtlParser.g:13550:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            // InternalEtlParser.g:13551:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }
            // InternalEtlParser.g:13552:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            // InternalEtlParser.g:13552:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0"
    // InternalEtlParser.g:13561:1: rule__EffectiveTimeFilter__Group_0__0 : rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 ;
    public final void rule__EffectiveTimeFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13565:1: ( rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 )
            // InternalEtlParser.g:13566:2: rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__EffectiveTimeFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0__Impl"
    // InternalEtlParser.g:13573:1: rule__EffectiveTimeFilter__Group_0__0__Impl : ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__EffectiveTimeFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13577:1: ( ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) )
            // InternalEtlParser.g:13578:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            {
            // InternalEtlParser.g:13578:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            // InternalEtlParser.g:13579:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEtlParser.g:13580:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            // InternalEtlParser.g:13580:3: rule__EffectiveTimeFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1"
    // InternalEtlParser.g:13588:1: rule__EffectiveTimeFilter__Group_0__1 : rule__EffectiveTimeFilter__Group_0__1__Impl ;
    public final void rule__EffectiveTimeFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13592:1: ( rule__EffectiveTimeFilter__Group_0__1__Impl )
            // InternalEtlParser.g:13593:2: rule__EffectiveTimeFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1__Impl"
    // InternalEtlParser.g:13599:1: rule__EffectiveTimeFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__EffectiveTimeFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13603:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13604:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13604:1: ( RULE_DOT )
            // InternalEtlParser.g:13605:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEtlParser.g:13615:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13619:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEtlParser.g:13620:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEtlParser.g:13627:1: rule__PreferredInFilter__Group__0__Impl : ( RULE_PREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13631:1: ( ( RULE_PREFERRED_IN_KEYWORD ) )
            // InternalEtlParser.g:13632:1: ( RULE_PREFERRED_IN_KEYWORD )
            {
            // InternalEtlParser.g:13632:1: ( RULE_PREFERRED_IN_KEYWORD )
            // InternalEtlParser.g:13633:2: RULE_PREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEtlParser.g:13642:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13646:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEtlParser.g:13647:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEtlParser.g:13654:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13658:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13659:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13659:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13660:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEtlParser.g:13669:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13673:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEtlParser.g:13674:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEtlParser.g:13680:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13684:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:13685:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13685:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:13686:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:13687:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:13687:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEtlParser.g:13696:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13700:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEtlParser.g:13701:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEtlParser.g:13708:1: rule__AcceptableInFilter__Group__0__Impl : ( RULE_ACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13712:1: ( ( RULE_ACCEPTABLE_IN_KEYWORD ) )
            // InternalEtlParser.g:13713:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            {
            // InternalEtlParser.g:13713:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            // InternalEtlParser.g:13714:2: RULE_ACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEtlParser.g:13723:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13727:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEtlParser.g:13728:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEtlParser.g:13735:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13739:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13740:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13740:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13741:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEtlParser.g:13750:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13754:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEtlParser.g:13755:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEtlParser.g:13761:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13765:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:13766:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13766:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:13767:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:13768:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:13768:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEtlParser.g:13777:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13781:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEtlParser.g:13782:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEtlParser.g:13789:1: rule__LanguageRefSetFilter__Group__0__Impl : ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13793:1: ( ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEtlParser.g:13794:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEtlParser.g:13794:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            // InternalEtlParser.g:13795:2: RULE_LANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEtlParser.g:13804:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13808:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEtlParser.g:13809:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEtlParser.g:13816:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13820:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13821:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13821:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13822:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEtlParser.g:13831:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13835:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEtlParser.g:13836:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEtlParser.g:13842:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13846:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEtlParser.g:13847:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13847:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEtlParser.g:13848:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEtlParser.g:13849:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEtlParser.g:13849:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEtlParser.g:13858:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13862:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEtlParser.g:13863:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEtlParser.g:13870:1: rule__CaseSignificanceFilter__Group__0__Impl : ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13874:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEtlParser.g:13875:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEtlParser.g:13875:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEtlParser.g:13876:2: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEtlParser.g:13885:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13889:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEtlParser.g:13890:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEtlParser.g:13897:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13901:1: ( ( RULE_EQUAL ) )
            // InternalEtlParser.g:13902:1: ( RULE_EQUAL )
            {
            // InternalEtlParser.g:13902:1: ( RULE_EQUAL )
            // InternalEtlParser.g:13903:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEtlParser.g:13912:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13916:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEtlParser.g:13917:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEtlParser.g:13923:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13927:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEtlParser.g:13928:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEtlParser.g:13928:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEtlParser.g:13929:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEtlParser.g:13930:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEtlParser.g:13930:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEtlParser.g:13939:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13943:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEtlParser.g:13944:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEtlParser.g:13951:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13955:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:13956:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:13956:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:13957:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEtlParser.g:13966:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13970:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEtlParser.g:13971:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEtlParser.g:13978:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13982:1: ( ( RULE_DOT ) )
            // InternalEtlParser.g:13983:1: ( RULE_DOT )
            {
            // InternalEtlParser.g:13983:1: ( RULE_DOT )
            // InternalEtlParser.g:13984:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEtlParser.g:13993:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:13997:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEtlParser.g:13998:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEtlParser.g:14004:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14008:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEtlParser.g:14009:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEtlParser.g:14009:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEtlParser.g:14010:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEtlParser.g:14011:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=RULE_DIGIT_ZERO && LA120_0<=RULE_DIGIT_NONZERO)) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalEtlParser.g:14011:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEtlParser.g:14020:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14024:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEtlParser.g:14025:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEtlParser.g:14032:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14036:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEtlParser.g:14037:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEtlParser.g:14037:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEtlParser.g:14038:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:14039:2: ( rule__Integer__Alternatives_0 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( ((LA121_0>=RULE_PLUS && LA121_0<=RULE_DASH)) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalEtlParser.g:14039:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEtlParser.g:14047:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14051:1: ( rule__Integer__Group__1__Impl )
            // InternalEtlParser.g:14052:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEtlParser.g:14058:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14062:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14063:1: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14063:1: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14064:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEtlParser.g:14074:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14078:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEtlParser.g:14079:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEtlParser.g:14086:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14090:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEtlParser.g:14091:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEtlParser.g:14091:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEtlParser.g:14092:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEtlParser.g:14093:2: ( rule__Decimal__Alternatives_0 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_PLUS && LA122_0<=RULE_DASH)) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalEtlParser.g:14093:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEtlParser.g:14101:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14105:1: ( rule__Decimal__Group__1__Impl )
            // InternalEtlParser.g:14106:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEtlParser.g:14112:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14116:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:14117:1: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:14117:1: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:14118:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"
    // InternalEtlParser.g:14128:1: rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0 : ( RULE_SUBTYPE_OF ) ;
    public final void rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14132:1: ( ( RULE_SUBTYPE_OF ) )
            // InternalEtlParser.g:14133:2: ( RULE_SUBTYPE_OF )
            {
            // InternalEtlParser.g:14133:2: ( RULE_SUBTYPE_OF )
            // InternalEtlParser.g:14134:3: RULE_SUBTYPE_OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }
            match(input,RULE_SUBTYPE_OF,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getPrimitiveSUBTYPE_OFTerminalRuleCall_1_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__PrimitiveAssignment_1_0_0_0"


    // $ANTLR start "rule__ExpressionTemplate__SlotAssignment_1_0_1"
    // InternalEtlParser.g:14143:1: rule__ExpressionTemplate__SlotAssignment_1_0_1 : ( ruleTokenReplacementSlot ) ;
    public final void rule__ExpressionTemplate__SlotAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14147:1: ( ( ruleTokenReplacementSlot ) )
            // InternalEtlParser.g:14148:2: ( ruleTokenReplacementSlot )
            {
            // InternalEtlParser.g:14148:2: ( ruleTokenReplacementSlot )
            // InternalEtlParser.g:14149:3: ruleTokenReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTokenReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getSlotTokenReplacementSlotParserRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__SlotAssignment_1_0_1"


    // $ANTLR start "rule__ExpressionTemplate__ExpressionAssignment_1_1"
    // InternalEtlParser.g:14158:1: rule__ExpressionTemplate__ExpressionAssignment_1_1 : ( ruleSubExpression ) ;
    public final void rule__ExpressionTemplate__ExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14162:1: ( ( ruleSubExpression ) )
            // InternalEtlParser.g:14163:2: ( ruleSubExpression )
            {
            // InternalEtlParser.g:14163:2: ( ruleSubExpression )
            // InternalEtlParser.g:14164:3: ruleSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionTemplateAccess().getExpressionSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionTemplate__ExpressionAssignment_1_1"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_0"
    // InternalEtlParser.g:14173:1: rule__SubExpression__FocusConceptsAssignment_0 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14177:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:14178:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:14178:2: ( ruleFocusConcept )
            // InternalEtlParser.g:14179:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_0"


    // $ANTLR start "rule__SubExpression__FocusConceptsAssignment_1_1"
    // InternalEtlParser.g:14188:1: rule__SubExpression__FocusConceptsAssignment_1_1 : ( ruleFocusConcept ) ;
    public final void rule__SubExpression__FocusConceptsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14192:1: ( ( ruleFocusConcept ) )
            // InternalEtlParser.g:14193:2: ( ruleFocusConcept )
            {
            // InternalEtlParser.g:14193:2: ( ruleFocusConcept )
            // InternalEtlParser.g:14194:3: ruleFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getFocusConceptsFocusConceptParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__FocusConceptsAssignment_1_1"


    // $ANTLR start "rule__SubExpression__RefinementAssignment_2_1"
    // InternalEtlParser.g:14203:1: rule__SubExpression__RefinementAssignment_2_1 : ( ruleRefinement ) ;
    public final void rule__SubExpression__RefinementAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14207:1: ( ( ruleRefinement ) )
            // InternalEtlParser.g:14208:2: ( ruleRefinement )
            {
            // InternalEtlParser.g:14208:2: ( ruleRefinement )
            // InternalEtlParser.g:14209:3: ruleRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionAccess().getRefinementRefinementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpression__RefinementAssignment_2_1"


    // $ANTLR start "rule__FocusConcept__SlotAssignment_0"
    // InternalEtlParser.g:14218:1: rule__FocusConcept__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__FocusConcept__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14222:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14223:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14223:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14224:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__SlotAssignment_0"


    // $ANTLR start "rule__FocusConcept__ConceptAssignment_1"
    // InternalEtlParser.g:14233:1: rule__FocusConcept__ConceptAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__FocusConcept__ConceptAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14237:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:14238:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:14238:2: ( ruleConceptReference )
            // InternalEtlParser.g:14239:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFocusConceptAccess().getConceptConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FocusConcept__ConceptAssignment_1"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_0"
    // InternalEtlParser.g:14248:1: rule__Refinement__AttributesAssignment_0_0_0 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14252:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14253:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14253:2: ( ruleAttribute )
            // InternalEtlParser.g:14254:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_0"


    // $ANTLR start "rule__Refinement__AttributesAssignment_0_0_1_1"
    // InternalEtlParser.g:14263:1: rule__Refinement__AttributesAssignment_0_0_1_1 : ( ruleAttribute ) ;
    public final void rule__Refinement__AttributesAssignment_0_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14267:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14268:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14268:2: ( ruleAttribute )
            // InternalEtlParser.g:14269:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getAttributesAttributeParserRuleCall_0_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__AttributesAssignment_0_0_1_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_0_1"
    // InternalEtlParser.g:14278:1: rule__Refinement__GroupsAssignment_0_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14282:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:14283:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:14283:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:14284:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_0_1"


    // $ANTLR start "rule__Refinement__GroupsAssignment_1_1"
    // InternalEtlParser.g:14293:1: rule__Refinement__GroupsAssignment_1_1 : ( ruleAttributeGroup ) ;
    public final void rule__Refinement__GroupsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14297:1: ( ( ruleAttributeGroup ) )
            // InternalEtlParser.g:14298:2: ( ruleAttributeGroup )
            {
            // InternalEtlParser.g:14298:2: ( ruleAttributeGroup )
            // InternalEtlParser.g:14299:3: ruleAttributeGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinementAccess().getGroupsAttributeGroupParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Refinement__GroupsAssignment_1_1"


    // $ANTLR start "rule__AttributeGroup__SlotAssignment_0"
    // InternalEtlParser.g:14308:1: rule__AttributeGroup__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__AttributeGroup__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14312:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14313:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14313:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14314:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__SlotAssignment_0"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_2"
    // InternalEtlParser.g:14323:1: rule__AttributeGroup__AttributesAssignment_2 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14327:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14328:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14328:2: ( ruleAttribute )
            // InternalEtlParser.g:14329:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_2"


    // $ANTLR start "rule__AttributeGroup__AttributesAssignment_3_1"
    // InternalEtlParser.g:14338:1: rule__AttributeGroup__AttributesAssignment_3_1 : ( ruleAttribute ) ;
    public final void rule__AttributeGroup__AttributesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14342:1: ( ( ruleAttribute ) )
            // InternalEtlParser.g:14343:2: ( ruleAttribute )
            {
            // InternalEtlParser.g:14343:2: ( ruleAttribute )
            // InternalEtlParser.g:14344:3: ruleAttribute
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeGroup__AttributesAssignment_3_1"


    // $ANTLR start "rule__Attribute__SlotAssignment_0"
    // InternalEtlParser.g:14353:1: rule__Attribute__SlotAssignment_0 : ( ruleTemplateInformationSlot ) ;
    public final void rule__Attribute__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14357:1: ( ( ruleTemplateInformationSlot ) )
            // InternalEtlParser.g:14358:2: ( ruleTemplateInformationSlot )
            {
            // InternalEtlParser.g:14358:2: ( ruleTemplateInformationSlot )
            // InternalEtlParser.g:14359:3: ruleTemplateInformationSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTemplateInformationSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getSlotTemplateInformationSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__SlotAssignment_0"


    // $ANTLR start "rule__Attribute__NameAssignment_1"
    // InternalEtlParser.g:14368:1: rule__Attribute__NameAssignment_1 : ( ruleConceptReference ) ;
    public final void rule__Attribute__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14372:1: ( ( ruleConceptReference ) )
            // InternalEtlParser.g:14373:2: ( ruleConceptReference )
            {
            // InternalEtlParser.g:14373:2: ( ruleConceptReference )
            // InternalEtlParser.g:14374:3: ruleConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getNameConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__NameAssignment_1"


    // $ANTLR start "rule__Attribute__ValueAssignment_3"
    // InternalEtlParser.g:14383:1: rule__Attribute__ValueAssignment_3 : ( ruleAttributeValue ) ;
    public final void rule__Attribute__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14387:1: ( ( ruleAttributeValue ) )
            // InternalEtlParser.g:14388:2: ( ruleAttributeValue )
            {
            // InternalEtlParser.g:14388:2: ( ruleAttributeValue )
            // InternalEtlParser.g:14389:3: ruleAttributeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAttributeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Attribute__ValueAssignment_3"


    // $ANTLR start "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:14398:1: rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14402:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:14403:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:14403:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:14404:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ConceptIdReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14413:1: rule__ConceptIdReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ConceptIdReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14417:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14418:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14418:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14419:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptIdReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptIdReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"
    // InternalEtlParser.g:14428:1: rule__ExpressionReplacementSlot__ConstraintAssignment_4_1 : ( ruleExpressionConstraint ) ;
    public final void rule__ExpressionReplacementSlot__ConstraintAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14432:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:14433:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:14433:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:14434:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getConstraintExpressionConstraintParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__ConstraintAssignment_4_1"


    // $ANTLR start "rule__ExpressionReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14443:1: rule__ExpressionReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__ExpressionReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14447:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14448:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14448:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14449:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_1"
    // InternalEtlParser.g:14458:1: rule__TokenReplacementSlot__TokensAssignment_4_1 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14462:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:14463:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:14463:2: ( ruleSlotToken )
            // InternalEtlParser.g:14464:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_1"


    // $ANTLR start "rule__TokenReplacementSlot__TokensAssignment_4_2"
    // InternalEtlParser.g:14473:1: rule__TokenReplacementSlot__TokensAssignment_4_2 : ( ruleSlotToken ) ;
    public final void rule__TokenReplacementSlot__TokensAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14477:1: ( ( ruleSlotToken ) )
            // InternalEtlParser.g:14478:2: ( ruleSlotToken )
            {
            // InternalEtlParser.g:14478:2: ( ruleSlotToken )
            // InternalEtlParser.g:14479:3: ruleSlotToken
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotToken();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getTokensSlotTokenParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__TokensAssignment_4_2"


    // $ANTLR start "rule__TokenReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14488:1: rule__TokenReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TokenReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14492:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14493:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14493:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14494:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTokenReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TokenReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__TemplateInformationSlot__CardinalityAssignment_2"
    // InternalEtlParser.g:14503:1: rule__TemplateInformationSlot__CardinalityAssignment_2 : ( ruleEtlCardinality ) ;
    public final void rule__TemplateInformationSlot__CardinalityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14507:1: ( ( ruleEtlCardinality ) )
            // InternalEtlParser.g:14508:2: ( ruleEtlCardinality )
            {
            // InternalEtlParser.g:14508:2: ( ruleEtlCardinality )
            // InternalEtlParser.g:14509:3: ruleEtlCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEtlCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getCardinalityEtlCardinalityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__CardinalityAssignment_2"


    // $ANTLR start "rule__TemplateInformationSlot__NameAssignment_3"
    // InternalEtlParser.g:14518:1: rule__TemplateInformationSlot__NameAssignment_3 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__TemplateInformationSlot__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14522:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14523:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14523:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14524:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemplateInformationSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemplateInformationSlot__NameAssignment_3"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14533:1: rule__StringReplacementSlot__ValuesAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14537:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14538:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14538:2: ( RULE_STRING )
            // InternalEtlParser.g:14539:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__StringReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14548:1: rule__StringReplacementSlot__ValuesAssignment_4_2 : ( RULE_STRING ) ;
    public final void rule__StringReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14552:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14553:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14553:2: ( RULE_STRING )
            // InternalEtlParser.g:14554:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getValuesSTRINGTerminalRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__StringReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14563:1: rule__StringReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__StringReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14567:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14568:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14568:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14569:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14578:1: rule__IntegerReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14582:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:14583:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:14583:2: ( ruleSlotInteger )
            // InternalEtlParser.g:14584:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__IntegerReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14593:1: rule__IntegerReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotInteger ) ;
    public final void rule__IntegerReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14597:1: ( ( ruleSlotInteger ) )
            // InternalEtlParser.g:14598:2: ( ruleSlotInteger )
            {
            // InternalEtlParser.g:14598:2: ( ruleSlotInteger )
            // InternalEtlParser.g:14599:3: ruleSlotInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getValuesSlotIntegerParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__IntegerReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14608:1: rule__IntegerReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__IntegerReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14612:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14613:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14613:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14614:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_1"
    // InternalEtlParser.g:14623:1: rule__DecimalReplacementSlot__ValuesAssignment_4_1 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14627:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:14628:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:14628:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:14629:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_1"


    // $ANTLR start "rule__DecimalReplacementSlot__ValuesAssignment_4_2"
    // InternalEtlParser.g:14638:1: rule__DecimalReplacementSlot__ValuesAssignment_4_2 : ( ruleSlotDecimal ) ;
    public final void rule__DecimalReplacementSlot__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14642:1: ( ( ruleSlotDecimal ) )
            // InternalEtlParser.g:14643:2: ( ruleSlotDecimal )
            {
            // InternalEtlParser.g:14643:2: ( ruleSlotDecimal )
            // InternalEtlParser.g:14644:3: ruleSlotDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getValuesSlotDecimalParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__ValuesAssignment_4_2"


    // $ANTLR start "rule__DecimalReplacementSlot__NameAssignment_5"
    // InternalEtlParser.g:14653:1: rule__DecimalReplacementSlot__NameAssignment_5 : ( RULE_SLOTNAME_STRING ) ;
    public final void rule__DecimalReplacementSlot__NameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14657:1: ( ( RULE_SLOTNAME_STRING ) )
            // InternalEtlParser.g:14658:2: ( RULE_SLOTNAME_STRING )
            {
            // InternalEtlParser.g:14658:2: ( RULE_SLOTNAME_STRING )
            // InternalEtlParser.g:14659:3: RULE_SLOTNAME_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_SLOTNAME_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalReplacementSlotAccess().getNameSLOTNAME_STRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalReplacementSlot__NameAssignment_5"


    // $ANTLR start "rule__EtlCardinality__MinAssignment_1"
    // InternalEtlParser.g:14668:1: rule__EtlCardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__EtlCardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14672:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14673:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14673:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14674:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MinAssignment_1"


    // $ANTLR start "rule__EtlCardinality__MaxAssignment_3"
    // InternalEtlParser.g:14683:1: rule__EtlCardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__EtlCardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14687:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:14688:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:14688:2: ( ruleMaxValue )
            // InternalEtlParser.g:14689:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEtlCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EtlCardinality__MaxAssignment_3"


    // $ANTLR start "rule__ConceptReference__SlotAssignment_0"
    // InternalEtlParser.g:14698:1: rule__ConceptReference__SlotAssignment_0 : ( ruleConceptReplacementSlot ) ;
    public final void rule__ConceptReference__SlotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14702:1: ( ( ruleConceptReplacementSlot ) )
            // InternalEtlParser.g:14703:2: ( ruleConceptReplacementSlot )
            {
            // InternalEtlParser.g:14703:2: ( ruleConceptReplacementSlot )
            // InternalEtlParser.g:14704:3: ruleConceptReplacementSlot
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConceptReplacementSlot();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getSlotConceptReplacementSlotParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__SlotAssignment_0"


    // $ANTLR start "rule__ConceptReference__IdAssignment_1_0"
    // InternalEtlParser.g:14713:1: rule__ConceptReference__IdAssignment_1_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__ConceptReference__IdAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14717:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:14718:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:14718:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:14719:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__IdAssignment_1_0"


    // $ANTLR start "rule__ConceptReference__TermAssignment_1_1"
    // InternalEtlParser.g:14728:1: rule__ConceptReference__TermAssignment_1_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__ConceptReference__TermAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14732:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:14733:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:14733:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:14734:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConceptReference__TermAssignment_1_1"


    // $ANTLR start "rule__StringValue__ValueAssignment"
    // InternalEtlParser.g:14743:1: rule__StringValue__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14747:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:14748:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:14748:2: ( RULE_STRING )
            // InternalEtlParser.g:14749:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValueAssignment"


    // $ANTLR start "rule__IntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:14758:1: rule__IntegerValue__ValueAssignment_1 : ( ruleInteger ) ;
    public final void rule__IntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14762:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:14763:2: ( ruleInteger )
            {
            // InternalEtlParser.g:14763:2: ( ruleInteger )
            // InternalEtlParser.g:14764:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__DecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:14773:1: rule__DecimalValue__ValueAssignment_1 : ( ruleDecimal ) ;
    public final void rule__DecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14777:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:14778:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:14778:2: ( ruleDecimal )
            // InternalEtlParser.g:14779:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueAccess().getValueDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerValue__ValueAssignment_1"
    // InternalEtlParser.g:14788:1: rule__SlotIntegerValue__ValueAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14792:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14793:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14793:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14794:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerValueAccess().getValueNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotIntegerRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:14803:1: rule__SlotIntegerRange__MinimumAssignment_0_0 : ( ruleSlotIntegerMinimumValue ) ;
    public final void rule__SlotIntegerRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14807:1: ( ( ruleSlotIntegerMinimumValue ) )
            // InternalEtlParser.g:14808:2: ( ruleSlotIntegerMinimumValue )
            {
            // InternalEtlParser.g:14808:2: ( ruleSlotIntegerMinimumValue )
            // InternalEtlParser.g:14809:3: ruleSlotIntegerMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMinimumSlotIntegerMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:14818:1: rule__SlotIntegerRange__MaximumAssignment_0_2 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14822:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:14823:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:14823:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:14824:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotIntegerRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:14833:1: rule__SlotIntegerRange__MaximumAssignment_1_1 : ( ruleSlotIntegerMaximumValue ) ;
    public final void rule__SlotIntegerRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14837:1: ( ( ruleSlotIntegerMaximumValue ) )
            // InternalEtlParser.g:14838:2: ( ruleSlotIntegerMaximumValue )
            {
            // InternalEtlParser.g:14838:2: ( ruleSlotIntegerMaximumValue )
            // InternalEtlParser.g:14839:3: ruleSlotIntegerMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotIntegerMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerRangeAccess().getMaximumSlotIntegerMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:14848:1: rule__SlotIntegerMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotIntegerMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14852:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:14853:2: ( RULE_GT )
            {
            // InternalEtlParser.g:14853:2: ( RULE_GT )
            // InternalEtlParser.g:14854:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:14863:1: rule__SlotIntegerMinimumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14867:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14868:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14868:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14869:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMinimumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:14878:1: rule__SlotIntegerMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotIntegerMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14882:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:14883:2: ( RULE_LT )
            {
            // InternalEtlParser.g:14883:2: ( RULE_LT )
            // InternalEtlParser.g:14884:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotIntegerMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:14893:1: rule__SlotIntegerMaximumValue__ValueAssignment_2 : ( ruleNonNegativeInteger ) ;
    public final void rule__SlotIntegerMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14897:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:14898:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:14898:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:14899:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotIntegerMaximumValueAccess().getValueNonNegativeIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotIntegerMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalValue__ValueAssignment_1"
    // InternalEtlParser.g:14908:1: rule__SlotDecimalValue__ValueAssignment_1 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14912:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:14913:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:14913:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:14914:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalValueAccess().getValueNonNegativeDecimalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalValue__ValueAssignment_1"


    // $ANTLR start "rule__SlotDecimalRange__MinimumAssignment_0_0"
    // InternalEtlParser.g:14923:1: rule__SlotDecimalRange__MinimumAssignment_0_0 : ( ruleSlotDecimalMinimumValue ) ;
    public final void rule__SlotDecimalRange__MinimumAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14927:1: ( ( ruleSlotDecimalMinimumValue ) )
            // InternalEtlParser.g:14928:2: ( ruleSlotDecimalMinimumValue )
            {
            // InternalEtlParser.g:14928:2: ( ruleSlotDecimalMinimumValue )
            // InternalEtlParser.g:14929:3: ruleSlotDecimalMinimumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMinimumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMinimumSlotDecimalMinimumValueParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MinimumAssignment_0_0"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_0_2"
    // InternalEtlParser.g:14938:1: rule__SlotDecimalRange__MaximumAssignment_0_2 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14942:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:14943:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:14943:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:14944:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_0_2"


    // $ANTLR start "rule__SlotDecimalRange__MaximumAssignment_1_1"
    // InternalEtlParser.g:14953:1: rule__SlotDecimalRange__MaximumAssignment_1_1 : ( ruleSlotDecimalMaximumValue ) ;
    public final void rule__SlotDecimalRange__MaximumAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14957:1: ( ( ruleSlotDecimalMaximumValue ) )
            // InternalEtlParser.g:14958:2: ( ruleSlotDecimalMaximumValue )
            {
            // InternalEtlParser.g:14958:2: ( ruleSlotDecimalMaximumValue )
            // InternalEtlParser.g:14959:3: ruleSlotDecimalMaximumValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSlotDecimalMaximumValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalRangeAccess().getMaximumSlotDecimalMaximumValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalRange__MaximumAssignment_1_1"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:14968:1: rule__SlotDecimalMinimumValue__ExclusiveAssignment_0 : ( RULE_GT ) ;
    public final void rule__SlotDecimalMinimumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14972:1: ( ( RULE_GT ) )
            // InternalEtlParser.g:14973:2: ( RULE_GT )
            {
            // InternalEtlParser.g:14973:2: ( RULE_GT )
            // InternalEtlParser.g:14974:3: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getExclusiveGTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMinimumValue__ValueAssignment_2"
    // InternalEtlParser.g:14983:1: rule__SlotDecimalMinimumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMinimumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:14987:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:14988:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:14988:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:14989:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMinimumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMinimumValue__ValueAssignment_2"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"
    // InternalEtlParser.g:14998:1: rule__SlotDecimalMaximumValue__ExclusiveAssignment_0 : ( RULE_LT ) ;
    public final void rule__SlotDecimalMaximumValue__ExclusiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15002:1: ( ( RULE_LT ) )
            // InternalEtlParser.g:15003:2: ( RULE_LT )
            {
            // InternalEtlParser.g:15003:2: ( RULE_LT )
            // InternalEtlParser.g:15004:3: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getExclusiveLTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ExclusiveAssignment_0"


    // $ANTLR start "rule__SlotDecimalMaximumValue__ValueAssignment_2"
    // InternalEtlParser.g:15013:1: rule__SlotDecimalMaximumValue__ValueAssignment_2 : ( ruleNonNegativeDecimal ) ;
    public final void rule__SlotDecimalMaximumValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15017:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEtlParser.g:15018:2: ( ruleNonNegativeDecimal )
            {
            // InternalEtlParser.g:15018:2: ( ruleNonNegativeDecimal )
            // InternalEtlParser.g:15019:3: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSlotDecimalMaximumValueAccess().getValueNonNegativeDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SlotDecimalMaximumValue__ValueAssignment_2"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15028:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15032:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEtlParser.g:15033:2: ( ruleAndExpressionConstraint )
            {
            // InternalEtlParser.g:15033:2: ( ruleAndExpressionConstraint )
            // InternalEtlParser.g:15034:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15043:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15047:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEtlParser.g:15048:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEtlParser.g:15048:2: ( ruleExclusionExpressionConstraint )
            // InternalEtlParser.g:15049:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEtlParser.g:15058:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15062:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEtlParser.g:15063:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEtlParser.g:15063:2: ( ruleRefinedExpressionConstraint )
            // InternalEtlParser.g:15064:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEtlParser.g:15073:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15077:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:15078:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:15078:2: ( ruleEclRefinement )
            // InternalEtlParser.g:15079:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEtlParser.g:15088:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15092:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15093:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15093:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15094:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEtlParser.g:15103:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15107:1: ( ( ruleFilterConstraint ) )
            // InternalEtlParser.g:15108:2: ( ruleFilterConstraint )
            {
            // InternalEtlParser.g:15108:2: ( ruleFilterConstraint )
            // InternalEtlParser.g:15109:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15118:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15122:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15123:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15123:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15124:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15133:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15137:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15138:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15138:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15139:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15148:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15152:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15153:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15153:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15154:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15163:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15167:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15168:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15168:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15169:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15178:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15182:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15183:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15183:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15184:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15193:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15197:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15198:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15198:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15199:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15208:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15212:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15213:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15213:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15214:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15223:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15227:1: ( ( ruleEclFocusConcept ) )
            // InternalEtlParser.g:15228:2: ( ruleEclFocusConcept )
            {
            // InternalEtlParser.g:15228:2: ( ruleEclFocusConcept )
            // InternalEtlParser.g:15229:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEtlParser.g:15238:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15242:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEtlParser.g:15243:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEtlParser.g:15243:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEtlParser.g:15244:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEtlParser.g:15245:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEtlParser.g:15245:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEtlParser.g:15253:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15257:1: ( ( ruleSnomedIdentifier ) )
            // InternalEtlParser.g:15258:2: ( ruleSnomedIdentifier )
            {
            // InternalEtlParser.g:15258:2: ( ruleSnomedIdentifier )
            // InternalEtlParser.g:15259:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEtlParser.g:15268:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15272:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEtlParser.g:15273:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEtlParser.g:15273:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEtlParser.g:15274:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEtlParser.g:15283:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15287:1: ( ( ruleEclConceptReference ) )
            // InternalEtlParser.g:15288:2: ( ruleEclConceptReference )
            {
            // InternalEtlParser.g:15288:2: ( ruleEclConceptReference )
            // InternalEtlParser.g:15289:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:15298:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15302:1: ( ( ruleAndRefinement ) )
            // InternalEtlParser.g:15303:2: ( ruleAndRefinement )
            {
            // InternalEtlParser.g:15303:2: ( ruleAndRefinement )
            // InternalEtlParser.g:15304:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEtlParser.g:15313:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15317:1: ( ( ruleSubRefinement ) )
            // InternalEtlParser.g:15318:2: ( ruleSubRefinement )
            {
            // InternalEtlParser.g:15318:2: ( ruleSubRefinement )
            // InternalEtlParser.g:15319:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEtlParser.g:15328:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15332:1: ( ( ruleEclRefinement ) )
            // InternalEtlParser.g:15333:2: ( ruleEclRefinement )
            {
            // InternalEtlParser.g:15333:2: ( ruleEclRefinement )
            // InternalEtlParser.g:15334:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEtlParser.g:15343:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15347:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:15348:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:15348:2: ( ruleCardinality )
            // InternalEtlParser.g:15349:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEtlParser.g:15358:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15362:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:15363:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:15363:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:15364:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:15373:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15377:1: ( ( ruleAndAttributeSet ) )
            // InternalEtlParser.g:15378:2: ( ruleAndAttributeSet )
            {
            // InternalEtlParser.g:15378:2: ( ruleAndAttributeSet )
            // InternalEtlParser.g:15379:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEtlParser.g:15388:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15392:1: ( ( ruleSubAttributeSet ) )
            // InternalEtlParser.g:15393:2: ( ruleSubAttributeSet )
            {
            // InternalEtlParser.g:15393:2: ( ruleSubAttributeSet )
            // InternalEtlParser.g:15394:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEtlParser.g:15403:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15407:1: ( ( ruleEclAttributeSet ) )
            // InternalEtlParser.g:15408:2: ( ruleEclAttributeSet )
            {
            // InternalEtlParser.g:15408:2: ( ruleEclAttributeSet )
            // InternalEtlParser.g:15409:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEtlParser.g:15418:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15422:1: ( ( ruleCardinality ) )
            // InternalEtlParser.g:15423:2: ( ruleCardinality )
            {
            // InternalEtlParser.g:15423:2: ( ruleCardinality )
            // InternalEtlParser.g:15424:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEtlParser.g:15433:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15437:1: ( ( RULE_REVERSED ) )
            // InternalEtlParser.g:15438:2: ( RULE_REVERSED )
            {
            // InternalEtlParser.g:15438:2: ( RULE_REVERSED )
            // InternalEtlParser.g:15439:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEtlParser.g:15448:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15452:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15453:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15453:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15454:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEtlParser.g:15463:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15467:1: ( ( ruleComparison ) )
            // InternalEtlParser.g:15468:2: ( ruleComparison )
            {
            // InternalEtlParser.g:15468:2: ( ruleComparison )
            // InternalEtlParser.g:15469:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEtlParser.g:15478:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15482:1: ( ( ruleNonNegativeInteger ) )
            // InternalEtlParser.g:15483:2: ( ruleNonNegativeInteger )
            {
            // InternalEtlParser.g:15483:2: ( ruleNonNegativeInteger )
            // InternalEtlParser.g:15484:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEtlParser.g:15493:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15497:1: ( ( ruleMaxValue ) )
            // InternalEtlParser.g:15498:2: ( ruleMaxValue )
            {
            // InternalEtlParser.g:15498:2: ( ruleMaxValue )
            // InternalEtlParser.g:15499:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEtlParser.g:15508:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15512:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15513:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15513:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15514:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEtlParser.g:15523:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15527:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEtlParser.g:15528:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEtlParser.g:15528:2: ( ruleFilteredExpressionConstraint )
            // InternalEtlParser.g:15529:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15538:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15542:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15543:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15543:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15544:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:15553:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15557:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:15558:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:15558:2: ( ruleBoolean )
            // InternalEtlParser.g:15559:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15568:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15572:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15573:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15573:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15574:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEtlParser.g:15583:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15587:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15588:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15588:2: ( RULE_STRING )
            // InternalEtlParser.g:15589:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15598:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15602:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15603:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15603:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:15604:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:15613:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15617:1: ( ( ruleInteger ) )
            // InternalEtlParser.g:15618:2: ( ruleInteger )
            {
            // InternalEtlParser.g:15618:2: ( ruleInteger )
            // InternalEtlParser.g:15619:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEtlParser.g:15628:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15632:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15633:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15633:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:15634:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEtlParser.g:15643:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15647:1: ( ( ruleDecimal ) )
            // InternalEtlParser.g:15648:2: ( ruleDecimal )
            {
            // InternalEtlParser.g:15648:2: ( ruleDecimal )
            // InternalEtlParser.g:15649:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEtlParser.g:15658:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15662:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:15663:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:15663:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:15664:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:15673:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15677:1: ( ( ruleConjunctionFilter ) )
            // InternalEtlParser.g:15678:2: ( ruleConjunctionFilter )
            {
            // InternalEtlParser.g:15678:2: ( ruleConjunctionFilter )
            // InternalEtlParser.g:15679:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEtlParser.g:15688:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15692:1: ( ( rulePropertyFilter ) )
            // InternalEtlParser.g:15693:2: ( rulePropertyFilter )
            {
            // InternalEtlParser.g:15693:2: ( rulePropertyFilter )
            // InternalEtlParser.g:15694:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEtlParser.g:15703:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15707:1: ( ( ruleFilter ) )
            // InternalEtlParser.g:15708:2: ( ruleFilter )
            {
            // InternalEtlParser.g:15708:2: ( ruleFilter )
            // InternalEtlParser.g:15709:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEtlParser.g:15718:1: rule__TypedTermFilter__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15722:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15723:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15723:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15724:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"
    // InternalEtlParser.g:15733:1: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15737:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEtlParser.g:15738:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEtlParser.g:15738:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEtlParser.g:15739:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedTermFilter__TermAssignment_2"
    // InternalEtlParser.g:15748:1: rule__TypedTermFilter__TermAssignment_2 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilter__TermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15752:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:15753:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:15753:2: ( RULE_STRING )
            // InternalEtlParser.g:15754:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__TermAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEtlParser.g:15763:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15767:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15768:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15768:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15769:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_2"
    // InternalEtlParser.g:15778:1: rule__TypedTermFilterSet__TermsAssignment_2 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15782:1: ( ( ruleTypedTermFilter ) )
            // InternalEtlParser.g:15783:2: ( ruleTypedTermFilter )
            {
            // InternalEtlParser.g:15783:2: ( ruleTypedTermFilter )
            // InternalEtlParser.g:15784:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_2"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEtlParser.g:15793:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15797:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15798:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15798:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15799:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEtlParser.g:15808:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15812:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:15813:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:15813:2: ( ruleUnquotedString )
            // InternalEtlParser.g:15814:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEtlParser.g:15823:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15827:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:15828:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:15828:2: ( ruleUnquotedString )
            // InternalEtlParser.g:15829:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEtlParser.g:15838:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15842:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15843:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15843:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15844:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEtlParser.g:15853:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15857:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEtlParser.g:15858:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEtlParser.g:15858:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEtlParser.g:15859:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEtlParser.g:15860:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEtlParser.g:15860:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEtlParser.g:15868:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15872:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15873:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15873:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15874:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEtlParser.g:15883:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15887:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:15888:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:15888:2: ( ruleUnquotedString )
            // InternalEtlParser.g:15889:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEtlParser.g:15898:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15902:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:15903:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:15903:2: ( ruleUnquotedString )
            // InternalEtlParser.g:15904:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEtlParser.g:15913:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15917:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15918:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15918:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15919:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:15928:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15932:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:15933:2: ( ruleDialect )
            {
            // InternalEtlParser.g:15933:2: ( ruleDialect )
            // InternalEtlParser.g:15934:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:15943:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15947:1: ( ( ruleDialect ) )
            // InternalEtlParser.g:15948:2: ( ruleDialect )
            {
            // InternalEtlParser.g:15948:2: ( ruleDialect )
            // InternalEtlParser.g:15949:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEtlParser.g:15958:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15962:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:15963:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:15963:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:15964:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEtlParser.g:15973:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15977:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:15978:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:15978:2: ( ruleDialectAlias )
            // InternalEtlParser.g:15979:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEtlParser.g:15988:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:15992:1: ( ( ruleDialectAlias ) )
            // InternalEtlParser.g:15993:2: ( ruleDialectAlias )
            {
            // InternalEtlParser.g:15993:2: ( ruleDialectAlias )
            // InternalEtlParser.g:15994:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEtlParser.g:16003:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16007:1: ( ( ruleEclConceptReference ) )
            // InternalEtlParser.g:16008:2: ( ruleEclConceptReference )
            {
            // InternalEtlParser.g:16008:2: ( ruleEclConceptReference )
            // InternalEtlParser.g:16009:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEtlParser.g:16018:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16022:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:16023:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:16023:2: ( ruleAcceptability )
            // InternalEtlParser.g:16024:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEtlParser.g:16033:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16037:1: ( ( ruleDialectAliasValue ) )
            // InternalEtlParser.g:16038:2: ( ruleDialectAliasValue )
            {
            // InternalEtlParser.g:16038:2: ( ruleDialectAliasValue )
            // InternalEtlParser.g:16039:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_2"
    // InternalEtlParser.g:16048:1: rule__DialectAlias__AcceptabilityAssignment_2 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16052:1: ( ( ruleAcceptability ) )
            // InternalEtlParser.g:16053:2: ( ruleAcceptability )
            {
            // InternalEtlParser.g:16053:2: ( ruleAcceptability )
            // InternalEtlParser.g:16054:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_2"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEtlParser.g:16063:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16067:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEtlParser.g:16068:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEtlParser.g:16068:2: ( ruleEclConceptReferenceSet )
            // InternalEtlParser.g:16069:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEtlParser.g:16078:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleUnquotedString ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16082:1: ( ( ruleUnquotedString ) )
            // InternalEtlParser.g:16083:2: ( ruleUnquotedString )
            {
            // InternalEtlParser.g:16083:2: ( ruleUnquotedString )
            // InternalEtlParser.g:16084:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__ActiveFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16093:1: rule__ActiveFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ActiveFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16097:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16098:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16098:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16099:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_3"
    // InternalEtlParser.g:16108:1: rule__ActiveFilter__ActiveAssignment_3 : ( ruleBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16112:1: ( ( ruleBoolean ) )
            // InternalEtlParser.g:16113:2: ( ruleBoolean )
            {
            // InternalEtlParser.g:16113:2: ( ruleBoolean )
            // InternalEtlParser.g:16114:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_3"


    // $ANTLR start "rule__ModuleFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16123:1: rule__ModuleFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ModuleFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16127:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16128:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16128:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16129:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_3"
    // InternalEtlParser.g:16138:1: rule__ModuleFilter__ModuleIdAssignment_3 : ( ruleExpressionConstraint ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16142:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16143:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16143:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16144:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_3"


    // $ANTLR start "rule__SemanticTagFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16153:1: rule__SemanticTagFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__SemanticTagFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16157:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16158:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16158:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16159:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_2"
    // InternalEtlParser.g:16168:1: rule__SemanticTagFilter__OpAssignment_2 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16172:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16173:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16173:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEtlParser.g:16174:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_3"
    // InternalEtlParser.g:16183:1: rule__SemanticTagFilter__SemanticTagAssignment_3 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16187:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:16188:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:16188:2: ( RULE_STRING )
            // InternalEtlParser.g:16189:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_3"


    // $ANTLR start "rule__EffectiveTimeFilter__DomainAssignment_0_0"
    // InternalEtlParser.g:16198:1: rule__EffectiveTimeFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__EffectiveTimeFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16202:1: ( ( ruleDOMAIN ) )
            // InternalEtlParser.g:16203:2: ( ruleDOMAIN )
            {
            // InternalEtlParser.g:16203:2: ( ruleDOMAIN )
            // InternalEtlParser.g:16204:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_2"
    // InternalEtlParser.g:16213:1: rule__EffectiveTimeFilter__OpAssignment_2 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16217:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEtlParser.g:16218:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEtlParser.g:16218:2: ( ruleNUMERIC_OPERATOR )
            // InternalEtlParser.g:16219:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"
    // InternalEtlParser.g:16228:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16232:1: ( ( RULE_STRING ) )
            // InternalEtlParser.g:16233:2: ( RULE_STRING )
            {
            // InternalEtlParser.g:16233:2: ( RULE_STRING )
            // InternalEtlParser.g:16234:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16243:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16247:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16248:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16248:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16249:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16258:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16262:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16263:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16263:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16264:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEtlParser.g:16273:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16277:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16278:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16278:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16279:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEtlParser.g:16288:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEtlParser.g:16292:1: ( ( ruleExpressionConstraint ) )
            // InternalEtlParser.g:16293:2: ( ruleExpressionConstraint )
            {
            // InternalEtlParser.g:16293:2: ( ruleExpressionConstraint )
            // InternalEtlParser.g:16294:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"

    // $ANTLR start synpred1_InternalEtlParser
    public final void synpred1_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2680:5: ( rule__SnomedIdentifier__Alternatives )
        // InternalEtlParser.g:2680:5: rule__SnomedIdentifier__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEtlParser

    // $ANTLR start synpred3_InternalEtlParser
    public final void synpred3_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:2950:5: ( rule__DialectAliasValue__Alternatives )
        // InternalEtlParser.g:2950:5: rule__DialectAliasValue__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalEtlParser

    // $ANTLR start synpred33_InternalEtlParser
    public final void synpred33_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3359:2: ( ( ruleSlotIntegerRange ) )
        // InternalEtlParser.g:3359:2: ( ruleSlotIntegerRange )
        {
        // InternalEtlParser.g:3359:2: ( ruleSlotIntegerRange )
        // InternalEtlParser.g:3360:3: ruleSlotIntegerRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotIntegerAccess().getSlotIntegerRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotIntegerRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEtlParser

    // $ANTLR start synpred35_InternalEtlParser
    public final void synpred35_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3401:2: ( ( ruleSlotDecimalRange ) )
        // InternalEtlParser.g:3401:2: ( ruleSlotDecimalRange )
        {
        // InternalEtlParser.g:3401:2: ( ruleSlotDecimalRange )
        // InternalEtlParser.g:3402:3: ruleSlotDecimalRange
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSlotDecimalAccess().getSlotDecimalRangeParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSlotDecimalRange();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred35_InternalEtlParser

    // $ANTLR start synpred52_InternalEtlParser
    public final void synpred52_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3608:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3608:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3608:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3609:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalEtlParser

    // $ANTLR start synpred53_InternalEtlParser
    public final void synpred53_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3614:2: ( ( ruleEclAttributeGroup ) )
        // InternalEtlParser.g:3614:2: ( ruleEclAttributeGroup )
        {
        // InternalEtlParser.g:3614:2: ( ruleEclAttributeGroup )
        // InternalEtlParser.g:3615:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred53_InternalEtlParser

    // $ANTLR start synpred55_InternalEtlParser
    public final void synpred55_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:3656:2: ( ( ruleAttributeConstraint ) )
        // InternalEtlParser.g:3656:2: ( ruleAttributeConstraint )
        {
        // InternalEtlParser.g:3656:2: ( ruleAttributeConstraint )
        // InternalEtlParser.g:3657:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalEtlParser

    // $ANTLR start synpred160_InternalEtlParser
    public final void synpred160_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:7698:3: ( rule__SlotIntegerRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:7698:3: rule__SlotIntegerRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotIntegerRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred160_InternalEtlParser

    // $ANTLR start synpred163_InternalEtlParser
    public final void synpred163_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8049:3: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )
        // InternalEtlParser.g:8049:3: rule__SlotDecimalRange__MaximumAssignment_0_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SlotDecimalRange__MaximumAssignment_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalEtlParser

    // $ANTLR start synpred166_InternalEtlParser
    public final void synpred166_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8319:3: ( rule__OrExpressionConstraint__Group_1__0 )
        // InternalEtlParser.g:8319:3: rule__OrExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalEtlParser

    // $ANTLR start synpred167_InternalEtlParser
    public final void synpred167_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:8454:3: ( rule__AndExpressionConstraint__Group_1__0 )
        // InternalEtlParser.g:8454:3: rule__AndExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred167_InternalEtlParser

    // $ANTLR start synpred174_InternalEtlParser
    public final void synpred174_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:9784:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEtlParser.g:9784:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_InternalEtlParser

    // $ANTLR start synpred175_InternalEtlParser
    public final void synpred175_InternalEtlParser_fragment() throws RecognitionException {   
        // InternalEtlParser.g:9946:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEtlParser.g:9946:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred175_InternalEtlParser

    // Delegated rules

    public final boolean synpred167_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEtlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEtlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA85 dfa85 = new DFA85(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\1\1\40\uffff";
    static final String dfa_3s = "\1\21\1\uffff\36\0\1\uffff";
    static final String dfa_4s = "\1\105\1\uffff\36\0\1\uffff";
    static final String dfa_5s = "\1\uffff\1\2\36\uffff\1\1";
    static final String dfa_6s = "\2\uffff\1\2\1\24\1\14\1\15\1\31\1\7\1\25\1\4\1\21\1\0\1\17\1\33\1\11\1\27\1\6\1\23\1\3\1\20\1\35\1\16\1\32\1\10\1\26\1\5\1\22\1\1\1\12\1\34\1\13\1\30\1\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\3\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\2\1\3\1\34\1\35\11\uffff\1\1\2\uffff\1\1\1\36\1\37\3\uffff\2\1\1\uffff\1\4",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2950:4: ( rule__DialectAliasValue__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_11 = input.LA(1);

                         
                        int index3_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_27 = input.LA(1);

                         
                        int index3_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_27);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_2 = input.LA(1);

                         
                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA3_18 = input.LA(1);

                         
                        int index3_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_18);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA3_9 = input.LA(1);

                         
                        int index3_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA3_25 = input.LA(1);

                         
                        int index3_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_25);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA3_16 = input.LA(1);

                         
                        int index3_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA3_7 = input.LA(1);

                         
                        int index3_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA3_23 = input.LA(1);

                         
                        int index3_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_23);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA3_14 = input.LA(1);

                         
                        int index3_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_14);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA3_28 = input.LA(1);

                         
                        int index3_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_28);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA3_30 = input.LA(1);

                         
                        int index3_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_30);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA3_5 = input.LA(1);

                         
                        int index3_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_5);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA3_21 = input.LA(1);

                         
                        int index3_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA3_12 = input.LA(1);

                         
                        int index3_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_12);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA3_19 = input.LA(1);

                         
                        int index3_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_19);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA3_10 = input.LA(1);

                         
                        int index3_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_10);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA3_26 = input.LA(1);

                         
                        int index3_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_26);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA3_17 = input.LA(1);

                         
                        int index3_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_17);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA3_8 = input.LA(1);

                         
                        int index3_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_8);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA3_24 = input.LA(1);

                         
                        int index3_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA3_15 = input.LA(1);

                         
                        int index3_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_15);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA3_31 = input.LA(1);

                         
                        int index3_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA3_6 = input.LA(1);

                         
                        int index3_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_6);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA3_22 = input.LA(1);

                         
                        int index3_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_22);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA3_13 = input.LA(1);

                         
                        int index3_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_13);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA3_29 = input.LA(1);

                         
                        int index3_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA3_20 = input.LA(1);

                         
                        int index3_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEtlParser()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\21\uffff";
    static final String dfa_9s = "\1\4\1\5\2\uffff\1\75\2\73\1\5\1\4\2\73\1\75\5\5";
    static final String dfa_10s = "\1\100\1\104\2\uffff\3\76\1\5\1\100\2\76\1\110\2\76\1\24\2\76";
    static final String dfa_11s = "\2\uffff\1\1\1\2\15\uffff";
    static final String dfa_12s = "\21\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\70\uffff\2\2\1\uffff\1\3",
            "\1\10\1\4\15\uffff\1\7\50\uffff\1\6\1\5\5\uffff\1\2",
            "",
            "",
            "\1\6\1\5",
            "\1\13\1\uffff\1\12\1\11",
            "\1\13\1\uffff\1\12\1\11",
            "\1\10",
            "\1\2\70\uffff\2\2\1\uffff\1\3",
            "\1\13\1\uffff\1\12\1\11",
            "\1\13\1\uffff\1\12\1\11",
            "\1\15\1\14\11\uffff\1\16",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17",
            "\1\10\16\uffff\1\7\50\uffff\1\20\1\17"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3102:1: rule__Refinement__Alternatives_0 : ( ( ( rule__Refinement__Group_0_0__0 ) ) | ( ( rule__Refinement__GroupsAssignment_0_1 ) ) );";
        }
    }
    static final String dfa_14s = "\20\uffff";
    static final String dfa_15s = "\11\uffff\2\16\1\uffff\2\16\2\uffff";
    static final String dfa_16s = "\1\4\1\104\3\uffff\1\75\1\5\2\75\2\4\1\uffff\2\4\2\uffff";
    static final String dfa_17s = "\1\115\1\104\3\uffff\1\105\1\102\2\76\2\107\1\uffff\2\107\2\uffff";
    static final String dfa_18s = "\2\uffff\1\1\1\2\1\3\6\uffff\1\6\2\uffff\1\4\1\5";
    static final String dfa_19s = "\20\uffff}>";
    static final String[] dfa_20s = {
            "\1\1\13\uffff\1\4\54\uffff\2\2\3\uffff\1\3\12\uffff\1\5",
            "\1\6",
            "",
            "",
            "",
            "\1\12\1\11\5\uffff\1\7\1\10",
            "\1\2\2\uffff\2\2\1\uffff\3\13\6\uffff\1\2\55\uffff\1\2",
            "\1\12\1\11",
            "\1\12\1\11",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "\1\16\67\uffff\1\16\1\15\1\14\1\uffff\2\16\1\uffff\1\16\3\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "3123:1: rule__AttributeValue__Alternatives : ( ( ruleConceptReference ) | ( ( rule__AttributeValue__Group_1__0 ) ) | ( ruleStringValue ) | ( ruleIntegerValue ) | ( ruleDecimalValue ) | ( ruleConcreteValueReplacementSlot ) );";
        }
    }
    static final String dfa_21s = "\3\uffff\4\10\1\1\10\uffff";
    static final String dfa_22s = "\1\73\1\uffff\1\75\5\73\1\uffff\1\115\2\75\4\0";
    static final String dfa_23s = "\1\115\1\uffff\1\76\5\115\1\uffff\1\115\2\76\4\0";
    static final String dfa_24s = "\1\uffff\1\1\6\uffff\1\2\7\uffff";
    static final String dfa_25s = "\14\uffff\1\0\1\2\1\1\1\3}>";
    static final String[] dfa_26s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\4\1\3",
            "\1\7\1\uffff\1\6\1\5\4\uffff\1\10\10\uffff\2\10",
            "\1\7\1\uffff\1\6\1\5\4\uffff\1\10\10\uffff\2\10",
            "\1\7\1\uffff\1\6\1\5\4\uffff\1\10\10\uffff\2\10",
            "\1\7\1\uffff\1\6\1\5\4\uffff\1\10\10\uffff\2\10",
            "\1\1\7\uffff\1\1\7\uffff\1\11\1\1\1\12",
            "",
            "\1\13",
            "\1\15\1\14",
            "\1\17\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_14;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "3354:1: rule__SlotInteger__Alternatives : ( ( ruleSlotIntegerRange ) | ( ruleSlotIntegerValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_12 = input.LA(1);

                         
                        int index12_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index12_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA12_14 = input.LA(1);

                         
                        int index12_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index12_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA12_13 = input.LA(1);

                         
                        int index12_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index12_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA12_15 = input.LA(1);

                         
                        int index12_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index12_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\31\uffff";
    static final String dfa_28s = "\7\uffff\3\13\1\1\16\uffff";
    static final String dfa_29s = "\1\73\1\uffff\5\75\4\73\1\uffff\1\115\10\75\1\0\2\75\1\0";
    static final String dfa_30s = "\1\115\1\uffff\1\76\4\107\4\115\1\uffff\1\115\2\76\6\107\1\0\2\107\1\0";
    static final String dfa_31s = "\1\uffff\1\1\11\uffff\1\2\15\uffff";
    static final String dfa_32s = "\25\uffff\1\0\2\uffff\1\1}>";
    static final String[] dfa_33s = {
            "\1\1\20\uffff\1\1\1\2",
            "",
            "\1\4\1\3",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\6\1\5\10\uffff\1\7",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\12\1\uffff\1\11\1\10\4\uffff\1\13\10\uffff\2\13",
            "\1\1\7\uffff\1\1\7\uffff\1\14\1\1\1\15",
            "",
            "\1\16",
            "\1\20\1\17",
            "\1\22\1\21",
            "\1\24\1\23\10\uffff\1\25",
            "\1\24\1\23\10\uffff\1\25",
            "\1\27\1\26\10\uffff\1\30",
            "\1\27\1\26\10\uffff\1\30",
            "\1\24\1\23\10\uffff\1\25",
            "\1\24\1\23\10\uffff\1\25",
            "\1\uffff",
            "\1\27\1\26\10\uffff\1\30",
            "\1\27\1\26\10\uffff\1\30",
            "\1\uffff"
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3396:1: rule__SlotDecimal__Alternatives : ( ( ruleSlotDecimalRange ) | ( ruleSlotDecimalValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_21 = input.LA(1);

                         
                        int index14_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index14_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_24 = input.LA(1);

                         
                        int index14_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index14_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\22\uffff";
    static final String dfa_35s = "\1\22\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_36s = "\1\114\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_37s = "\2\uffff\1\1\15\uffff\1\2\1\3";
    static final String dfa_38s = "\1\uffff\1\0\15\uffff\1\1\2\uffff}>";
    static final String[] dfa_39s = {
            "\1\1\33\uffff\1\2\1\uffff\6\2\7\uffff\2\2\1\uffff\1\20\1\uffff\1\17\3\uffff\1\2\1\uffff\1\2\2\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3603:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEtlParser()) ) {s = 2;}

                        else if ( (synpred53_InternalEtlParser()) ) {s = 16;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_15 = input.LA(1);

                         
                        int index21_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEtlParser()) ) {s = 2;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index21_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\22\16\uffff\1\0\1\uffff";
    static final String dfa_41s = "\1\114\16\uffff\1\0\1\uffff";
    static final String dfa_42s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_43s = "\17\uffff\1\0\1\uffff}>";
    static final String[] dfa_44s = {
            "\1\1\33\uffff\1\1\1\uffff\6\1\7\uffff\2\1\3\uffff\1\17\3\uffff\1\1\1\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3651:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_15 = input.LA(1);

                         
                        int index23_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index23_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\14\uffff\4\21\2\uffff";
    static final String dfa_46s = "\1\66\2\20\4\115\2\uffff\3\75\4\43\2\uffff";
    static final String dfa_47s = "\1\114\6\115\2\uffff\1\105\2\76\4\107\2\uffff";
    static final String dfa_48s = "\7\uffff\1\1\1\2\7\uffff\1\4\1\3";
    static final String dfa_49s = "\22\uffff}>";
    static final String[] dfa_50s = {
            "\1\5\1\6\21\uffff\1\1\1\2\1\4\1\3",
            "\1\10\24\uffff\1\7\3\uffff\1\7\43\uffff\1\11",
            "\1\10\24\uffff\1\7\3\uffff\1\7\43\uffff\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "",
            "",
            "\1\15\1\14\5\uffff\1\12\1\13",
            "\1\15\1\14",
            "\1\15\1\14",
            "\1\21\10\uffff\2\21\13\uffff\1\21\2\uffff\1\21\1\17\1\16\2\uffff\1\21\1\uffff\1\21\3\uffff\1\20",
            "\1\21\10\uffff\2\21\13\uffff\1\21\2\uffff\1\21\1\17\1\16\2\uffff\1\21\1\uffff\1\21\3\uffff\1\20",
            "\1\21\10\uffff\2\21\13\uffff\1\21\2\uffff\1\21\1\17\1\16\2\uffff\1\21\1\uffff\1\21\3\uffff\1\20",
            "\1\21\10\uffff\2\21\13\uffff\1\21\2\uffff\1\21\1\17\1\16\2\uffff\1\21\1\uffff\1\21\3\uffff\1\20",
            "",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_34;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "3693:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_51s = "\1\25\4\uffff\2\107\11\uffff\1\27";
    static final String dfa_52s = "\1\102\4\uffff\2\107\11\uffff\1\41";
    static final String dfa_53s = "\1\uffff\1\1\1\2\1\3\1\4\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff";
    static final String[] dfa_54s = {
            "\1\16\1\12\1\15\1\11\1\6\1\10\1\14\1\4\1\2\1\13\1\5\1\4\1\7\1\3\5\uffff\1\1\1\uffff\1\3\27\uffff\1\17",
            "",
            "",
            "",
            "",
            "\1\20",
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\15\3\uffff\1\14\2\uffff\1\13\2\uffff\1\7"
    };
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_12;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "3747:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );";
        }
    }
    static final String dfa_55s = "\1\2\21\uffff";
    static final String dfa_56s = "\2\4\1\uffff\1\5\1\uffff\1\75\2\73\1\5\1\4\2\73\1\75\5\5";
    static final String dfa_57s = "\1\103\1\100\1\uffff\1\104\1\uffff\3\76\1\5\1\100\2\76\1\110\2\76\1\24\2\76";
    static final String dfa_58s = "\2\uffff\1\2\1\uffff\1\1\15\uffff";
    static final String[] dfa_59s = {
            "\1\2\67\uffff\1\1\3\uffff\1\2\2\uffff\1\2",
            "\1\3\70\uffff\2\4\1\uffff\1\2",
            "",
            "\1\11\1\5\15\uffff\1\10\50\uffff\1\7\1\6\5\uffff\1\4",
            "",
            "\1\7\1\6",
            "\1\14\1\uffff\1\13\1\12",
            "\1\14\1\uffff\1\13\1\12",
            "\1\11",
            "\1\4\70\uffff\2\4\1\uffff\1\2",
            "\1\14\1\uffff\1\13\1\12",
            "\1\14\1\uffff\1\13\1\12",
            "\1\16\1\15\11\uffff\1\17",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20",
            "\1\11\16\uffff\1\10\50\uffff\1\21\1\20"
    };
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_34;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_49;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "()* loopback of 4944:2: ( rule__Refinement__Group_0_0_1__0 )*";
        }
    }
    static final String dfa_60s = "\11\uffff";
    static final String dfa_61s = "\1\3\10\uffff";
    static final String dfa_62s = "\1\73\1\uffff\1\75\1\uffff\4\75\1\0";
    static final String dfa_63s = "\1\115\1\uffff\1\76\1\uffff\4\107\1\0";
    static final String dfa_64s = "\1\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_65s = "\10\uffff\1\0}>";
    static final String[] dfa_66s = {
            "\1\3\7\uffff\1\3\7\uffff\1\1\1\3\1\2",
            "",
            "\1\5\1\4",
            "",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\7\1\6\10\uffff\1\10",
            "\1\uffff"
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "8049:2: ( rule__SlotDecimalRange__MaximumAssignment_0_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_8 = input.LA(1);

                         
                        int index85_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred163_InternalEtlParser()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index85_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x6000000000000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x6000FFFFFFE00002L,0x0000000000000020L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x600000000000C010L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x600000000000C010L,0x0000000000000001L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x700000000000C010L,0x0000000000000001L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x700000000000C012L,0x0000000000000001L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x600000000001C010L,0x0000000000002004L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000100020L,0x0000000000000004L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x603F00000000C010L,0x0000000000001944L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000100220L,0x0000000000000004L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000000000000C010L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x10FC70080000C000L,0x0000000000001E40L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x10FC70080000C000L,0x0000000000001E48L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x10FC70080000C002L,0x0000000000001E40L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x6000000000100060L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000008L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000010002L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0800000000000000L,0x0000000000003000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0800000000000000L,0x0000000000003008L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0800000000000002L,0x0000000000003000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000002000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x6000000000000040L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x6000000000000040L,0x0000000000000100L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x6000000000000040L,0x0000000000000030L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002800L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000100000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x1000100000000002L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x603F40000004C010L,0x0000000000001945L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x600000000000C012L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000001L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x603F40000004C010L,0x0000000000001944L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00C0000000000000L,0x0000000000001E00L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000022000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00000507FFE00000L,0x0000000000000004L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000600L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x000008D000010000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000600L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000FFFFFFE00000L,0x0000000000000004L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000FFFFFFE00000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000FFFFFFE00002L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x600000000000C010L,0x0000000000000004L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x6000FFFFFFE00000L,0x0000000000000024L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x6000FFFFFFE00000L,0x0000000000000020L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x600000000002C010L,0x0000000000000004L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000020002L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000282000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00000000C2000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x000000008A000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000082800000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x6000000000000000L});
    }


}